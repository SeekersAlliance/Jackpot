{
	"id": "81060710c462cd7823dad66f88403874",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tests/ERC20Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity = 0.8.23;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract ERC20Token is ERC20, Ownable {\n    uint8 decimal;\n    constructor(uint8 _decimals, address initialOwner, string memory name)\n        ERC20(\"TestToken\", name)\n        Ownable(initialOwner)\n    {\n        _mint(msg.sender, 100000 * 10 ** _decimals);\n        decimal = _decimals;\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    function decimals() public view override returns(uint8) {\n        return decimal;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/tests/ERC20Token.sol": {
				"ERC20Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_decimals",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tests/ERC20Token.sol\":197:681  contract ERC20Token is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tests/ERC20Token.sol\":260:487  constructor(uint8 _decimals, address initialOwner, string memory name)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/tests/ERC20Token.sol\":380:392  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x54657374546f6b656e0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/tests/ERC20Token.sol\":358:362  name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/tests/ERC20Token.sol\":408:451  _mint(msg.sender, 100000 * 10 ** _decimals) */\n  tag_18\n    /* \"contracts/tests/ERC20Token.sol\":414:424  msg.sender */\n  caller\n    /* \"contracts/tests/ERC20Token.sol\":441:450  _decimals */\n  dup5\n    /* \"contracts/tests/ERC20Token.sol\":435:437  10 */\n  0x0a\n    /* \"contracts/tests/ERC20Token.sol\":435:450  10 ** _decimals */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/tests/ERC20Token.sol\":426:432  100000 */\n  0x0186a0\n    /* \"contracts/tests/ERC20Token.sol\":426:450  100000 * 10 ** _decimals */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/tests/ERC20Token.sol\":408:413  _mint */\n  shl(0x20, tag_23)\n    /* \"contracts/tests/ERC20Token.sol\":408:451  _mint(msg.sender, 100000 * 10 ** _decimals) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/tests/ERC20Token.sol\":471:480  _decimals */\n  dup3\n    /* \"contracts/tests/ERC20Token.sol\":461:468  decimal */\n  0x05\n  0x14\n    /* \"contracts/tests/ERC20Token.sol\":461:480  decimal = _decimals */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/tests/ERC20Token.sol\":260:487  constructor(uint8 _decimals, address initialOwner, string memory name)... */\n  pop\n  pop\n  pop\n    /* \"contracts/tests/ERC20Token.sol\":197:681  contract ERC20Token is ERC20, Ownable {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_27\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_28\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_28:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_29\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_30)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_35)\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_37\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_40)\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_41\n  swap2\n  swap1\n  tag_42\n  jump\t// in\ntag_41:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_43:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_44:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_45:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:420   */\ntag_46:\n    /* \"#utility.yul\":369:376   */\n  0x00\n    /* \"#utility.yul\":409:413   */\n  0xff\n    /* \"#utility.yul\":402:407   */\n  dup3\n    /* \"#utility.yul\":398:414   */\n  and\n    /* \"#utility.yul\":387:414   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:420   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":426:544   */\ntag_47:\n    /* \"#utility.yul\":497:519   */\n  tag_94\n    /* \"#utility.yul\":513:518   */\n  dup2\n    /* \"#utility.yul\":497:519   */\n  tag_46\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":490:495   */\n  dup2\n    /* \"#utility.yul\":487:520   */\n  eq\n    /* \"#utility.yul\":477:538   */\n  tag_95\n  jumpi\n    /* \"#utility.yul\":534:535   */\n  0x00\n    /* \"#utility.yul\":531:532   */\n  dup1\n    /* \"#utility.yul\":524:536   */\n  revert\n    /* \"#utility.yul\":477:538   */\ntag_95:\n    /* \"#utility.yul\":426:544   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":550:689   */\ntag_48:\n    /* \"#utility.yul\":605:610   */\n  0x00\n    /* \"#utility.yul\":636:642   */\n  dup2\n    /* \"#utility.yul\":630:643   */\n  mload\n    /* \"#utility.yul\":621:643   */\n  swap1\n  pop\n    /* \"#utility.yul\":652:683   */\n  tag_97\n    /* \"#utility.yul\":677:682   */\n  dup2\n    /* \"#utility.yul\":652:683   */\n  tag_47\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":550:689   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":695:821   */\ntag_49:\n    /* \"#utility.yul\":732:739   */\n  0x00\n    /* \"#utility.yul\":772:814   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":765:770   */\n  dup3\n    /* \"#utility.yul\":761:815   */\n  and\n    /* \"#utility.yul\":750:815   */\n  swap1\n  pop\n    /* \"#utility.yul\":695:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":827:923   */\ntag_50:\n    /* \"#utility.yul\":864:871   */\n  0x00\n    /* \"#utility.yul\":893:917   */\n  tag_100\n    /* \"#utility.yul\":911:916   */\n  dup3\n    /* \"#utility.yul\":893:917   */\n  tag_49\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":882:917   */\n  swap1\n  pop\n    /* \"#utility.yul\":827:923   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":929:1051   */\ntag_51:\n    /* \"#utility.yul\":1002:1026   */\n  tag_102\n    /* \"#utility.yul\":1020:1025   */\n  dup2\n    /* \"#utility.yul\":1002:1026   */\n  tag_50\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":995:1000   */\n  dup2\n    /* \"#utility.yul\":992:1027   */\n  eq\n    /* \"#utility.yul\":982:1045   */\n  tag_103\n  jumpi\n    /* \"#utility.yul\":1041:1042   */\n  0x00\n    /* \"#utility.yul\":1038:1039   */\n  dup1\n    /* \"#utility.yul\":1031:1043   */\n  revert\n    /* \"#utility.yul\":982:1045   */\ntag_103:\n    /* \"#utility.yul\":929:1051   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1057:1200   */\ntag_52:\n    /* \"#utility.yul\":1114:1119   */\n  0x00\n    /* \"#utility.yul\":1145:1151   */\n  dup2\n    /* \"#utility.yul\":1139:1152   */\n  mload\n    /* \"#utility.yul\":1130:1152   */\n  swap1\n  pop\n    /* \"#utility.yul\":1161:1194   */\n  tag_105\n    /* \"#utility.yul\":1188:1193   */\n  dup2\n    /* \"#utility.yul\":1161:1194   */\n  tag_51\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1057:1200   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1206:1323   */\ntag_53:\n    /* \"#utility.yul\":1315:1316   */\n  0x00\n    /* \"#utility.yul\":1312:1313   */\n  dup1\n    /* \"#utility.yul\":1305:1317   */\n  revert\n    /* \"#utility.yul\":1329:1446   */\ntag_54:\n    /* \"#utility.yul\":1438:1439   */\n  0x00\n    /* \"#utility.yul\":1435:1436   */\n  dup1\n    /* \"#utility.yul\":1428:1440   */\n  revert\n    /* \"#utility.yul\":1452:1554   */\ntag_55:\n    /* \"#utility.yul\":1493:1499   */\n  0x00\n    /* \"#utility.yul\":1544:1546   */\n  0x1f\n    /* \"#utility.yul\":1540:1547   */\n  not\n    /* \"#utility.yul\":1535:1537   */\n  0x1f\n    /* \"#utility.yul\":1528:1533   */\n  dup4\n    /* \"#utility.yul\":1524:1538   */\n  add\n    /* \"#utility.yul\":1520:1548   */\n  and\n    /* \"#utility.yul\":1510:1548   */\n  swap1\n  pop\n    /* \"#utility.yul\":1452:1554   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1560:1740   */\ntag_56:\n    /* \"#utility.yul\":1608:1685   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1605:1606   */\n  0x00\n    /* \"#utility.yul\":1598:1686   */\n  mstore\n    /* \"#utility.yul\":1705:1709   */\n  0x41\n    /* \"#utility.yul\":1702:1703   */\n  0x04\n    /* \"#utility.yul\":1695:1710   */\n  mstore\n    /* \"#utility.yul\":1729:1733   */\n  0x24\n    /* \"#utility.yul\":1726:1727   */\n  0x00\n    /* \"#utility.yul\":1719:1734   */\n  revert\n    /* \"#utility.yul\":1746:2027   */\ntag_57:\n    /* \"#utility.yul\":1829:1856   */\n  tag_111\n    /* \"#utility.yul\":1851:1855   */\n  dup3\n    /* \"#utility.yul\":1829:1856   */\n  tag_55\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1821:1827   */\n  dup2\n    /* \"#utility.yul\":1817:1857   */\n  add\n    /* \"#utility.yul\":1959:1965   */\n  dup2\n    /* \"#utility.yul\":1947:1957   */\n  dup2\n    /* \"#utility.yul\":1944:1966   */\n  lt\n    /* \"#utility.yul\":1923:1941   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1911:1921   */\n  dup3\n    /* \"#utility.yul\":1908:1942   */\n  gt\n    /* \"#utility.yul\":1905:1967   */\n  or\n    /* \"#utility.yul\":1902:1990   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":1970:1988   */\n  tag_113\n  tag_56\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":1902:1990   */\ntag_112:\n    /* \"#utility.yul\":2010:2020   */\n  dup1\n    /* \"#utility.yul\":2006:2008   */\n  0x40\n    /* \"#utility.yul\":1999:2021   */\n  mstore\n    /* \"#utility.yul\":1789:2027   */\n  pop\n    /* \"#utility.yul\":1746:2027   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2033:2162   */\ntag_58:\n    /* \"#utility.yul\":2067:2073   */\n  0x00\n    /* \"#utility.yul\":2094:2114   */\n  tag_115\n  tag_43\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2084:2114   */\n  swap1\n  pop\n    /* \"#utility.yul\":2123:2156   */\n  tag_116\n    /* \"#utility.yul\":2151:2155   */\n  dup3\n    /* \"#utility.yul\":2143:2149   */\n  dup3\n    /* \"#utility.yul\":2123:2156   */\n  tag_57\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":2033:2162   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2168:2476   */\ntag_59:\n    /* \"#utility.yul\":2230:2234   */\n  0x00\n    /* \"#utility.yul\":2320:2338   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2312:2318   */\n  dup3\n    /* \"#utility.yul\":2309:2339   */\n  gt\n    /* \"#utility.yul\":2306:2362   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":2342:2360   */\n  tag_119\n  tag_56\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2306:2362   */\ntag_118:\n    /* \"#utility.yul\":2380:2409   */\n  tag_120\n    /* \"#utility.yul\":2402:2408   */\n  dup3\n    /* \"#utility.yul\":2380:2409   */\n  tag_55\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":2372:2409   */\n  swap1\n  pop\n    /* \"#utility.yul\":2464:2468   */\n  0x20\n    /* \"#utility.yul\":2458:2462   */\n  dup2\n    /* \"#utility.yul\":2454:2469   */\n  add\n    /* \"#utility.yul\":2446:2469   */\n  swap1\n  pop\n    /* \"#utility.yul\":2168:2476   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2482:2728   */\ntag_60:\n    /* \"#utility.yul\":2563:2564   */\n  0x00\n    /* \"#utility.yul\":2573:2686   */\ntag_122:\n    /* \"#utility.yul\":2587:2593   */\n  dup4\n    /* \"#utility.yul\":2584:2585   */\n  dup2\n    /* \"#utility.yul\":2581:2594   */\n  lt\n    /* \"#utility.yul\":2573:2686   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":2672:2673   */\n  dup1\n    /* \"#utility.yul\":2667:2670   */\n  dup3\n    /* \"#utility.yul\":2663:2674   */\n  add\n    /* \"#utility.yul\":2657:2675   */\n  mload\n    /* \"#utility.yul\":2653:2654   */\n  dup2\n    /* \"#utility.yul\":2648:2651   */\n  dup5\n    /* \"#utility.yul\":2644:2655   */\n  add\n    /* \"#utility.yul\":2637:2676   */\n  mstore\n    /* \"#utility.yul\":2609:2611   */\n  0x20\n    /* \"#utility.yul\":2606:2607   */\n  dup2\n    /* \"#utility.yul\":2602:2612   */\n  add\n    /* \"#utility.yul\":2597:2612   */\n  swap1\n  pop\n    /* \"#utility.yul\":2573:2686   */\n  jump(tag_122)\ntag_124:\n    /* \"#utility.yul\":2720:2721   */\n  0x00\n    /* \"#utility.yul\":2711:2717   */\n  dup5\n    /* \"#utility.yul\":2706:2709   */\n  dup5\n    /* \"#utility.yul\":2702:2718   */\n  add\n    /* \"#utility.yul\":2695:2722   */\n  mstore\n    /* \"#utility.yul\":2544:2728   */\n  pop\n    /* \"#utility.yul\":2482:2728   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2734:3168   */\ntag_61:\n    /* \"#utility.yul\":2823:2828   */\n  0x00\n    /* \"#utility.yul\":2848:2914   */\n  tag_126\n    /* \"#utility.yul\":2864:2913   */\n  tag_127\n    /* \"#utility.yul\":2906:2912   */\n  dup5\n    /* \"#utility.yul\":2864:2913   */\n  tag_59\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":2848:2914   */\n  tag_58\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":2839:2914   */\n  swap1\n  pop\n    /* \"#utility.yul\":2937:2943   */\n  dup3\n    /* \"#utility.yul\":2930:2935   */\n  dup2\n    /* \"#utility.yul\":2923:2944   */\n  mstore\n    /* \"#utility.yul\":2975:2979   */\n  0x20\n    /* \"#utility.yul\":2968:2973   */\n  dup2\n    /* \"#utility.yul\":2964:2980   */\n  add\n    /* \"#utility.yul\":3013:3016   */\n  dup5\n    /* \"#utility.yul\":3004:3010   */\n  dup5\n    /* \"#utility.yul\":2999:3002   */\n  dup5\n    /* \"#utility.yul\":2995:3011   */\n  add\n    /* \"#utility.yul\":2992:3017   */\n  gt\n    /* \"#utility.yul\":2989:3101   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":3020:3099   */\n  tag_129\n  tag_54\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":2989:3101   */\ntag_128:\n    /* \"#utility.yul\":3110:3162   */\n  tag_130\n    /* \"#utility.yul\":3155:3161   */\n  dup5\n    /* \"#utility.yul\":3150:3153   */\n  dup3\n    /* \"#utility.yul\":3145:3148   */\n  dup6\n    /* \"#utility.yul\":3110:3162   */\n  tag_60\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2829:3168   */\n  pop\n    /* \"#utility.yul\":2734:3168   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3188:3543   */\ntag_62:\n    /* \"#utility.yul\":3255:3260   */\n  0x00\n    /* \"#utility.yul\":3304:3307   */\n  dup3\n    /* \"#utility.yul\":3297:3301   */\n  0x1f\n    /* \"#utility.yul\":3289:3295   */\n  dup4\n    /* \"#utility.yul\":3285:3302   */\n  add\n    /* \"#utility.yul\":3281:3308   */\n  slt\n    /* \"#utility.yul\":3271:3393   */\n  tag_132\n  jumpi\n    /* \"#utility.yul\":3312:3391   */\n  tag_133\n  tag_53\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3271:3393   */\ntag_132:\n    /* \"#utility.yul\":3422:3428   */\n  dup2\n    /* \"#utility.yul\":3416:3429   */\n  mload\n    /* \"#utility.yul\":3447:3537   */\n  tag_134\n    /* \"#utility.yul\":3533:3536   */\n  dup5\n    /* \"#utility.yul\":3525:3531   */\n  dup3\n    /* \"#utility.yul\":3518:3522   */\n  0x20\n    /* \"#utility.yul\":3510:3516   */\n  dup7\n    /* \"#utility.yul\":3506:3523   */\n  add\n    /* \"#utility.yul\":3447:3537   */\n  tag_61\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":3438:3537   */\n  swap2\n  pop\n    /* \"#utility.yul\":3261:3543   */\n  pop\n    /* \"#utility.yul\":3188:3543   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3549:4381   */\ntag_3:\n    /* \"#utility.yul\":3645:3651   */\n  0x00\n    /* \"#utility.yul\":3653:3659   */\n  dup1\n    /* \"#utility.yul\":3661:3667   */\n  0x00\n    /* \"#utility.yul\":3710:3712   */\n  0x60\n    /* \"#utility.yul\":3698:3707   */\n  dup5\n    /* \"#utility.yul\":3689:3696   */\n  dup7\n    /* \"#utility.yul\":3685:3708   */\n  sub\n    /* \"#utility.yul\":3681:3713   */\n  slt\n    /* \"#utility.yul\":3678:3797   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":3716:3795   */\n  tag_137\n  tag_44\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":3678:3797   */\ntag_136:\n    /* \"#utility.yul\":3836:3837   */\n  0x00\n    /* \"#utility.yul\":3861:3923   */\n  tag_138\n    /* \"#utility.yul\":3915:3922   */\n  dup7\n    /* \"#utility.yul\":3906:3912   */\n  dup3\n    /* \"#utility.yul\":3895:3904   */\n  dup8\n    /* \"#utility.yul\":3891:3913   */\n  add\n    /* \"#utility.yul\":3861:3923   */\n  tag_48\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":3851:3923   */\n  swap4\n  pop\n    /* \"#utility.yul\":3807:3933   */\n  pop\n    /* \"#utility.yul\":3972:3974   */\n  0x20\n    /* \"#utility.yul\":3998:4062   */\n  tag_139\n    /* \"#utility.yul\":4054:4061   */\n  dup7\n    /* \"#utility.yul\":4045:4051   */\n  dup3\n    /* \"#utility.yul\":4034:4043   */\n  dup8\n    /* \"#utility.yul\":4030:4052   */\n  add\n    /* \"#utility.yul\":3998:4062   */\n  tag_52\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":3988:4062   */\n  swap3\n  pop\n    /* \"#utility.yul\":3943:4072   */\n  pop\n    /* \"#utility.yul\":4132:4134   */\n  0x40\n    /* \"#utility.yul\":4121:4130   */\n  dup5\n    /* \"#utility.yul\":4117:4135   */\n  add\n    /* \"#utility.yul\":4111:4136   */\n  mload\n    /* \"#utility.yul\":4163:4181   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4155:4161   */\n  dup2\n    /* \"#utility.yul\":4152:4182   */\n  gt\n    /* \"#utility.yul\":4149:4266   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":4185:4264   */\n  tag_141\n  tag_45\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":4149:4266   */\ntag_140:\n    /* \"#utility.yul\":4290:4364   */\n  tag_142\n    /* \"#utility.yul\":4356:4363   */\n  dup7\n    /* \"#utility.yul\":4347:4353   */\n  dup3\n    /* \"#utility.yul\":4336:4345   */\n  dup8\n    /* \"#utility.yul\":4332:4354   */\n  add\n    /* \"#utility.yul\":4290:4364   */\n  tag_62\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":4280:4364   */\n  swap2\n  pop\n    /* \"#utility.yul\":4082:4374   */\n  pop\n    /* \"#utility.yul\":3549:4381   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4387:4486   */\ntag_63:\n    /* \"#utility.yul\":4439:4445   */\n  0x00\n    /* \"#utility.yul\":4473:4478   */\n  dup2\n    /* \"#utility.yul\":4467:4479   */\n  mload\n    /* \"#utility.yul\":4457:4479   */\n  swap1\n  pop\n    /* \"#utility.yul\":4387:4486   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4492:4672   */\ntag_64:\n    /* \"#utility.yul\":4540:4617   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4537:4538   */\n  0x00\n    /* \"#utility.yul\":4530:4618   */\n  mstore\n    /* \"#utility.yul\":4637:4641   */\n  0x22\n    /* \"#utility.yul\":4634:4635   */\n  0x04\n    /* \"#utility.yul\":4627:4642   */\n  mstore\n    /* \"#utility.yul\":4661:4665   */\n  0x24\n    /* \"#utility.yul\":4658:4659   */\n  0x00\n    /* \"#utility.yul\":4651:4666   */\n  revert\n    /* \"#utility.yul\":4678:4998   */\ntag_65:\n    /* \"#utility.yul\":4722:4728   */\n  0x00\n    /* \"#utility.yul\":4759:4760   */\n  0x02\n    /* \"#utility.yul\":4753:4757   */\n  dup3\n    /* \"#utility.yul\":4749:4761   */\n  div\n    /* \"#utility.yul\":4739:4761   */\n  swap1\n  pop\n    /* \"#utility.yul\":4806:4807   */\n  0x01\n    /* \"#utility.yul\":4800:4804   */\n  dup3\n    /* \"#utility.yul\":4796:4808   */\n  and\n    /* \"#utility.yul\":4827:4845   */\n  dup1\n    /* \"#utility.yul\":4817:4898   */\n  tag_146\n  jumpi\n    /* \"#utility.yul\":4883:4887   */\n  0x7f\n    /* \"#utility.yul\":4875:4881   */\n  dup3\n    /* \"#utility.yul\":4871:4888   */\n  and\n    /* \"#utility.yul\":4861:4888   */\n  swap2\n  pop\n    /* \"#utility.yul\":4817:4898   */\ntag_146:\n    /* \"#utility.yul\":4945:4947   */\n  0x20\n    /* \"#utility.yul\":4937:4943   */\n  dup3\n    /* \"#utility.yul\":4934:4948   */\n  lt\n    /* \"#utility.yul\":4914:4932   */\n  dup2\n    /* \"#utility.yul\":4911:4949   */\n  sub\n    /* \"#utility.yul\":4908:4992   */\n  tag_147\n  jumpi\n    /* \"#utility.yul\":4964:4982   */\n  tag_148\n  tag_64\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4908:4992   */\ntag_147:\n    /* \"#utility.yul\":4729:4998   */\n  pop\n    /* \"#utility.yul\":4678:4998   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5004:5145   */\ntag_66:\n    /* \"#utility.yul\":5053:5057   */\n  0x00\n    /* \"#utility.yul\":5076:5079   */\n  dup2\n    /* \"#utility.yul\":5068:5079   */\n  swap1\n  pop\n    /* \"#utility.yul\":5099:5102   */\n  dup2\n    /* \"#utility.yul\":5096:5097   */\n  0x00\n    /* \"#utility.yul\":5089:5103   */\n  mstore\n    /* \"#utility.yul\":5133:5137   */\n  0x20\n    /* \"#utility.yul\":5130:5131   */\n  0x00\n    /* \"#utility.yul\":5120:5138   */\n  keccak256\n    /* \"#utility.yul\":5112:5138   */\n  swap1\n  pop\n    /* \"#utility.yul\":5004:5145   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5151:5244   */\ntag_67:\n    /* \"#utility.yul\":5188:5194   */\n  0x00\n    /* \"#utility.yul\":5235:5237   */\n  0x20\n    /* \"#utility.yul\":5230:5232   */\n  0x1f\n    /* \"#utility.yul\":5223:5228   */\n  dup4\n    /* \"#utility.yul\":5219:5233   */\n  add\n    /* \"#utility.yul\":5215:5238   */\n  div\n    /* \"#utility.yul\":5205:5238   */\n  swap1\n  pop\n    /* \"#utility.yul\":5151:5244   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5250:5357   */\ntag_68:\n    /* \"#utility.yul\":5294:5302   */\n  0x00\n    /* \"#utility.yul\":5344:5349   */\n  dup3\n    /* \"#utility.yul\":5338:5342   */\n  dup3\n    /* \"#utility.yul\":5334:5350   */\n  shl\n    /* \"#utility.yul\":5313:5350   */\n  swap1\n  pop\n    /* \"#utility.yul\":5250:5357   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5363:5756   */\ntag_69:\n    /* \"#utility.yul\":5432:5438   */\n  0x00\n    /* \"#utility.yul\":5482:5483   */\n  0x08\n    /* \"#utility.yul\":5470:5480   */\n  dup4\n    /* \"#utility.yul\":5466:5484   */\n  mul\n    /* \"#utility.yul\":5505:5602   */\n  tag_153\n    /* \"#utility.yul\":5535:5601   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5524:5533   */\n  dup3\n    /* \"#utility.yul\":5505:5602   */\n  tag_68\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5623:5662   */\n  tag_154\n    /* \"#utility.yul\":5653:5661   */\n  dup7\n    /* \"#utility.yul\":5642:5651   */\n  dup4\n    /* \"#utility.yul\":5623:5662   */\n  tag_68\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5611:5662   */\n  swap6\n  pop\n    /* \"#utility.yul\":5695:5699   */\n  dup1\n    /* \"#utility.yul\":5691:5700   */\n  not\n    /* \"#utility.yul\":5684:5689   */\n  dup5\n    /* \"#utility.yul\":5680:5701   */\n  and\n    /* \"#utility.yul\":5671:5701   */\n  swap4\n  pop\n    /* \"#utility.yul\":5744:5748   */\n  dup1\n    /* \"#utility.yul\":5734:5742   */\n  dup7\n    /* \"#utility.yul\":5730:5749   */\n  and\n    /* \"#utility.yul\":5723:5728   */\n  dup5\n    /* \"#utility.yul\":5720:5750   */\n  or\n    /* \"#utility.yul\":5710:5750   */\n  swap3\n  pop\n    /* \"#utility.yul\":5439:5756   */\n  pop\n  pop\n    /* \"#utility.yul\":5363:5756   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5762:5839   */\ntag_70:\n    /* \"#utility.yul\":5799:5806   */\n  0x00\n    /* \"#utility.yul\":5828:5833   */\n  dup2\n    /* \"#utility.yul\":5817:5833   */\n  swap1\n  pop\n    /* \"#utility.yul\":5762:5839   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5845:5905   */\ntag_71:\n    /* \"#utility.yul\":5873:5876   */\n  0x00\n    /* \"#utility.yul\":5894:5899   */\n  dup2\n    /* \"#utility.yul\":5887:5899   */\n  swap1\n  pop\n    /* \"#utility.yul\":5845:5905   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5911:6053   */\ntag_72:\n    /* \"#utility.yul\":5961:5970   */\n  0x00\n    /* \"#utility.yul\":5994:6047   */\n  tag_158\n    /* \"#utility.yul\":6012:6046   */\n  tag_159\n    /* \"#utility.yul\":6021:6045   */\n  tag_160\n    /* \"#utility.yul\":6039:6044   */\n  dup5\n    /* \"#utility.yul\":6021:6045   */\n  tag_70\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6012:6046   */\n  tag_71\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":5994:6047   */\n  tag_70\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":5981:6047   */\n  swap1\n  pop\n    /* \"#utility.yul\":5911:6053   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6059:6134   */\ntag_73:\n    /* \"#utility.yul\":6102:6105   */\n  0x00\n    /* \"#utility.yul\":6123:6128   */\n  dup2\n    /* \"#utility.yul\":6116:6128   */\n  swap1\n  pop\n    /* \"#utility.yul\":6059:6134   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6140:6409   */\ntag_74:\n    /* \"#utility.yul\":6250:6289   */\n  tag_163\n    /* \"#utility.yul\":6281:6288   */\n  dup4\n    /* \"#utility.yul\":6250:6289   */\n  tag_72\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":6311:6402   */\n  tag_164\n    /* \"#utility.yul\":6360:6401   */\n  tag_165\n    /* \"#utility.yul\":6384:6400   */\n  dup3\n    /* \"#utility.yul\":6360:6401   */\n  tag_73\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6352:6358   */\n  dup5\n    /* \"#utility.yul\":6345:6349   */\n  dup5\n    /* \"#utility.yul\":6339:6350   */\n  sload\n    /* \"#utility.yul\":6311:6402   */\n  tag_69\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":6305:6309   */\n  dup3\n    /* \"#utility.yul\":6298:6403   */\n  sstore\n    /* \"#utility.yul\":6216:6409   */\n  pop\n    /* \"#utility.yul\":6140:6409   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6415:6488   */\ntag_75:\n    /* \"#utility.yul\":6460:6463   */\n  0x00\n    /* \"#utility.yul\":6415:6488   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6494:6683   */\ntag_76:\n    /* \"#utility.yul\":6571:6603   */\n  tag_168\n  tag_75\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6612:6677   */\n  tag_169\n    /* \"#utility.yul\":6670:6676   */\n  dup2\n    /* \"#utility.yul\":6662:6668   */\n  dup5\n    /* \"#utility.yul\":6656:6660   */\n  dup5\n    /* \"#utility.yul\":6612:6677   */\n  tag_74\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6547:6683   */\n  pop\n    /* \"#utility.yul\":6494:6683   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6689:6875   */\ntag_77:\n    /* \"#utility.yul\":6749:6869   */\ntag_171:\n    /* \"#utility.yul\":6766:6769   */\n  dup2\n    /* \"#utility.yul\":6759:6764   */\n  dup2\n    /* \"#utility.yul\":6756:6770   */\n  lt\n    /* \"#utility.yul\":6749:6869   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":6820:6859   */\n  tag_174\n    /* \"#utility.yul\":6857:6858   */\n  0x00\n    /* \"#utility.yul\":6850:6855   */\n  dup3\n    /* \"#utility.yul\":6820:6859   */\n  tag_76\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6793:6794   */\n  0x01\n    /* \"#utility.yul\":6786:6791   */\n  dup2\n    /* \"#utility.yul\":6782:6795   */\n  add\n    /* \"#utility.yul\":6773:6795   */\n  swap1\n  pop\n    /* \"#utility.yul\":6749:6869   */\n  jump(tag_171)\ntag_173:\n    /* \"#utility.yul\":6689:6875   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6881:7424   */\ntag_78:\n    /* \"#utility.yul\":6982:6984   */\n  0x1f\n    /* \"#utility.yul\":6977:6980   */\n  dup3\n    /* \"#utility.yul\":6974:6985   */\n  gt\n    /* \"#utility.yul\":6971:7417   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":7016:7054   */\n  tag_177\n    /* \"#utility.yul\":7048:7053   */\n  dup2\n    /* \"#utility.yul\":7016:7054   */\n  tag_66\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":7100:7129   */\n  tag_178\n    /* \"#utility.yul\":7118:7128   */\n  dup5\n    /* \"#utility.yul\":7100:7129   */\n  tag_67\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":7090:7098   */\n  dup2\n    /* \"#utility.yul\":7086:7130   */\n  add\n    /* \"#utility.yul\":7283:7285   */\n  0x20\n    /* \"#utility.yul\":7271:7281   */\n  dup6\n    /* \"#utility.yul\":7268:7286   */\n  lt\n    /* \"#utility.yul\":7265:7314   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":7304:7312   */\n  dup2\n    /* \"#utility.yul\":7289:7312   */\n  swap1\n  pop\n    /* \"#utility.yul\":7265:7314   */\ntag_179:\n    /* \"#utility.yul\":7327:7407   */\n  tag_180\n    /* \"#utility.yul\":7383:7405   */\n  tag_181\n    /* \"#utility.yul\":7401:7404   */\n  dup6\n    /* \"#utility.yul\":7383:7405   */\n  tag_67\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7373:7381   */\n  dup4\n    /* \"#utility.yul\":7369:7406   */\n  add\n    /* \"#utility.yul\":7356:7367   */\n  dup3\n    /* \"#utility.yul\":7327:7407   */\n  tag_77\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":6986:7417   */\n  pop\n  pop\n    /* \"#utility.yul\":6971:7417   */\ntag_176:\n    /* \"#utility.yul\":6881:7424   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7430:7547   */\ntag_79:\n    /* \"#utility.yul\":7484:7492   */\n  0x00\n    /* \"#utility.yul\":7534:7539   */\n  dup3\n    /* \"#utility.yul\":7528:7532   */\n  dup3\n    /* \"#utility.yul\":7524:7540   */\n  shr\n    /* \"#utility.yul\":7503:7540   */\n  swap1\n  pop\n    /* \"#utility.yul\":7430:7547   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7553:7722   */\ntag_80:\n    /* \"#utility.yul\":7597:7603   */\n  0x00\n    /* \"#utility.yul\":7630:7681   */\n  tag_184\n    /* \"#utility.yul\":7678:7679   */\n  0x00\n    /* \"#utility.yul\":7674:7680   */\n  not\n    /* \"#utility.yul\":7666:7671   */\n  dup5\n    /* \"#utility.yul\":7663:7664   */\n  0x08\n    /* \"#utility.yul\":7659:7672   */\n  mul\n    /* \"#utility.yul\":7630:7681   */\n  tag_79\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7626:7682   */\n  not\n    /* \"#utility.yul\":7711:7715   */\n  dup1\n    /* \"#utility.yul\":7705:7709   */\n  dup4\n    /* \"#utility.yul\":7701:7716   */\n  and\n    /* \"#utility.yul\":7691:7716   */\n  swap2\n  pop\n    /* \"#utility.yul\":7604:7722   */\n  pop\n    /* \"#utility.yul\":7553:7722   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7727:8022   */\ntag_81:\n    /* \"#utility.yul\":7803:7807   */\n  0x00\n    /* \"#utility.yul\":7949:7978   */\n  tag_186\n    /* \"#utility.yul\":7974:7977   */\n  dup4\n    /* \"#utility.yul\":7968:7972   */\n  dup4\n    /* \"#utility.yul\":7949:7978   */\n  tag_80\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7941:7978   */\n  swap2\n  pop\n    /* \"#utility.yul\":8011:8014   */\n  dup3\n    /* \"#utility.yul\":8008:8009   */\n  0x02\n    /* \"#utility.yul\":8004:8015   */\n  mul\n    /* \"#utility.yul\":7998:8002   */\n  dup3\n    /* \"#utility.yul\":7995:8016   */\n  or\n    /* \"#utility.yul\":7987:8016   */\n  swap1\n  pop\n    /* \"#utility.yul\":7727:8022   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8027:9422   */\ntag_9:\n    /* \"#utility.yul\":8144:8181   */\n  tag_188\n    /* \"#utility.yul\":8177:8180   */\n  dup3\n    /* \"#utility.yul\":8144:8181   */\n  tag_63\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":8246:8264   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8238:8244   */\n  dup2\n    /* \"#utility.yul\":8235:8265   */\n  gt\n    /* \"#utility.yul\":8232:8288   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":8268:8286   */\n  tag_190\n  tag_56\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":8232:8288   */\ntag_189:\n    /* \"#utility.yul\":8312:8350   */\n  tag_191\n    /* \"#utility.yul\":8344:8348   */\n  dup3\n    /* \"#utility.yul\":8338:8349   */\n  sload\n    /* \"#utility.yul\":8312:8350   */\n  tag_65\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":8397:8464   */\n  tag_192\n    /* \"#utility.yul\":8457:8463   */\n  dup3\n    /* \"#utility.yul\":8449:8455   */\n  dup3\n    /* \"#utility.yul\":8443:8447   */\n  dup6\n    /* \"#utility.yul\":8397:8464   */\n  tag_78\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":8491:8492   */\n  0x00\n    /* \"#utility.yul\":8515:8519   */\n  0x20\n    /* \"#utility.yul\":8502:8519   */\n  swap1\n  pop\n    /* \"#utility.yul\":8547:8549   */\n  0x1f\n    /* \"#utility.yul\":8539:8545   */\n  dup4\n    /* \"#utility.yul\":8536:8550   */\n  gt\n    /* \"#utility.yul\":8564:8565   */\n  0x01\n    /* \"#utility.yul\":8559:9177   */\n  dup2\n  eq\n  tag_194\n  jumpi\n    /* \"#utility.yul\":9221:9222   */\n  0x00\n    /* \"#utility.yul\":9238:9244   */\n  dup5\n    /* \"#utility.yul\":9235:9312   */\n  iszero\n  tag_195\n  jumpi\n    /* \"#utility.yul\":9287:9296   */\n  dup3\n    /* \"#utility.yul\":9282:9285   */\n  dup8\n    /* \"#utility.yul\":9278:9297   */\n  add\n    /* \"#utility.yul\":9272:9298   */\n  mload\n    /* \"#utility.yul\":9263:9298   */\n  swap1\n  pop\n    /* \"#utility.yul\":9235:9312   */\ntag_195:\n    /* \"#utility.yul\":9338:9405   */\n  tag_196\n    /* \"#utility.yul\":9398:9404   */\n  dup6\n    /* \"#utility.yul\":9391:9396   */\n  dup3\n    /* \"#utility.yul\":9338:9405   */\n  tag_81\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9332:9336   */\n  dup7\n    /* \"#utility.yul\":9325:9406   */\n  sstore\n    /* \"#utility.yul\":9194:9416   */\n  pop\n    /* \"#utility.yul\":8529:9416   */\n  jump(tag_193)\n    /* \"#utility.yul\":8559:9177   */\ntag_194:\n    /* \"#utility.yul\":8611:8615   */\n  0x1f\n    /* \"#utility.yul\":8607:8616   */\n  not\n    /* \"#utility.yul\":8599:8605   */\n  dup5\n    /* \"#utility.yul\":8595:8617   */\n  and\n    /* \"#utility.yul\":8645:8682   */\n  tag_197\n    /* \"#utility.yul\":8677:8681   */\n  dup7\n    /* \"#utility.yul\":8645:8682   */\n  tag_66\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":8704:8705   */\n  0x00\n    /* \"#utility.yul\":8718:8926   */\ntag_198:\n    /* \"#utility.yul\":8732:8739   */\n  dup3\n    /* \"#utility.yul\":8729:8730   */\n  dup2\n    /* \"#utility.yul\":8726:8740   */\n  lt\n    /* \"#utility.yul\":8718:8926   */\n  iszero\n  tag_200\n  jumpi\n    /* \"#utility.yul\":8811:8820   */\n  dup5\n    /* \"#utility.yul\":8806:8809   */\n  dup10\n    /* \"#utility.yul\":8802:8821   */\n  add\n    /* \"#utility.yul\":8796:8822   */\n  mload\n    /* \"#utility.yul\":8788:8794   */\n  dup3\n    /* \"#utility.yul\":8781:8823   */\n  sstore\n    /* \"#utility.yul\":8862:8863   */\n  0x01\n    /* \"#utility.yul\":8854:8860   */\n  dup3\n    /* \"#utility.yul\":8850:8864   */\n  add\n    /* \"#utility.yul\":8840:8864   */\n  swap2\n  pop\n    /* \"#utility.yul\":8909:8911   */\n  0x20\n    /* \"#utility.yul\":8898:8907   */\n  dup6\n    /* \"#utility.yul\":8894:8912   */\n  add\n    /* \"#utility.yul\":8881:8912   */\n  swap5\n  pop\n    /* \"#utility.yul\":8755:8759   */\n  0x20\n    /* \"#utility.yul\":8752:8753   */\n  dup2\n    /* \"#utility.yul\":8748:8760   */\n  add\n    /* \"#utility.yul\":8743:8760   */\n  swap1\n  pop\n    /* \"#utility.yul\":8718:8926   */\n  jump(tag_198)\ntag_200:\n    /* \"#utility.yul\":8954:8960   */\n  dup7\n    /* \"#utility.yul\":8945:8952   */\n  dup4\n    /* \"#utility.yul\":8942:8961   */\n  lt\n    /* \"#utility.yul\":8939:9118   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":9012:9021   */\n  dup5\n    /* \"#utility.yul\":9007:9010   */\n  dup10\n    /* \"#utility.yul\":9003:9022   */\n  add\n    /* \"#utility.yul\":8997:9023   */\n  mload\n    /* \"#utility.yul\":9055:9103   */\n  tag_202\n    /* \"#utility.yul\":9097:9101   */\n  0x1f\n    /* \"#utility.yul\":9089:9095   */\n  dup10\n    /* \"#utility.yul\":9085:9102   */\n  and\n    /* \"#utility.yul\":9074:9083   */\n  dup3\n    /* \"#utility.yul\":9055:9103   */\n  tag_80\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":9047:9053   */\n  dup4\n    /* \"#utility.yul\":9040:9104   */\n  sstore\n    /* \"#utility.yul\":8962:9118   */\n  pop\n    /* \"#utility.yul\":8939:9118   */\ntag_201:\n    /* \"#utility.yul\":9164:9165   */\n  0x01\n    /* \"#utility.yul\":9160:9161   */\n  0x02\n    /* \"#utility.yul\":9152:9158   */\n  dup9\n    /* \"#utility.yul\":9148:9162   */\n  mul\n    /* \"#utility.yul\":9144:9166   */\n  add\n    /* \"#utility.yul\":9138:9142   */\n  dup9\n    /* \"#utility.yul\":9131:9167   */\n  sstore\n    /* \"#utility.yul\":8566:9177   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8529:9416   */\ntag_193:\n  pop\n    /* \"#utility.yul\":8119:9422   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8027:9422   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9428:9546   */\ntag_82:\n    /* \"#utility.yul\":9515:9539   */\n  tag_204\n    /* \"#utility.yul\":9533:9538   */\n  dup2\n    /* \"#utility.yul\":9515:9539   */\n  tag_50\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":9510:9513   */\n  dup3\n    /* \"#utility.yul\":9503:9540   */\n  mstore\n    /* \"#utility.yul\":9428:9546   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9552:9774   */\ntag_14:\n    /* \"#utility.yul\":9645:9649   */\n  0x00\n    /* \"#utility.yul\":9683:9685   */\n  0x20\n    /* \"#utility.yul\":9672:9681   */\n  dup3\n    /* \"#utility.yul\":9668:9686   */\n  add\n    /* \"#utility.yul\":9660:9686   */\n  swap1\n  pop\n    /* \"#utility.yul\":9696:9767   */\n  tag_206\n    /* \"#utility.yul\":9764:9765   */\n  0x00\n    /* \"#utility.yul\":9753:9762   */\n  dup4\n    /* \"#utility.yul\":9749:9766   */\n  add\n    /* \"#utility.yul\":9740:9746   */\n  dup5\n    /* \"#utility.yul\":9696:9767   */\n  tag_82\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":9552:9774   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9780:9960   */\ntag_83:\n    /* \"#utility.yul\":9828:9905   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9825:9826   */\n  0x00\n    /* \"#utility.yul\":9818:9906   */\n  mstore\n    /* \"#utility.yul\":9925:9929   */\n  0x11\n    /* \"#utility.yul\":9922:9923   */\n  0x04\n    /* \"#utility.yul\":9915:9930   */\n  mstore\n    /* \"#utility.yul\":9949:9953   */\n  0x24\n    /* \"#utility.yul\":9946:9947   */\n  0x00\n    /* \"#utility.yul\":9939:9954   */\n  revert\n    /* \"#utility.yul\":9966:10068   */\ntag_84:\n    /* \"#utility.yul\":10008:10016   */\n  0x00\n    /* \"#utility.yul\":10055:10060   */\n  dup2\n    /* \"#utility.yul\":10052:10053   */\n  0x01\n    /* \"#utility.yul\":10048:10061   */\n  shr\n    /* \"#utility.yul\":10027:10061   */\n  swap1\n  pop\n    /* \"#utility.yul\":9966:10068   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10074:10922   */\ntag_85:\n    /* \"#utility.yul\":10135:10140   */\n  0x00\n    /* \"#utility.yul\":10142:10146   */\n  dup1\n    /* \"#utility.yul\":10166:10172   */\n  dup3\n    /* \"#utility.yul\":10157:10172   */\n  swap2\n  pop\n    /* \"#utility.yul\":10190:10195   */\n  dup4\n    /* \"#utility.yul\":10181:10195   */\n  swap1\n  pop\n    /* \"#utility.yul\":10204:10916   */\ntag_210:\n    /* \"#utility.yul\":10225:10226   */\n  0x01\n    /* \"#utility.yul\":10215:10223   */\n  dup6\n    /* \"#utility.yul\":10212:10227   */\n  gt\n    /* \"#utility.yul\":10204:10916   */\n  iszero\n  tag_212\n  jumpi\n    /* \"#utility.yul\":10320:10324   */\n  dup1\n    /* \"#utility.yul\":10315:10318   */\n  dup7\n    /* \"#utility.yul\":10311:10325   */\n  div\n    /* \"#utility.yul\":10305:10309   */\n  dup2\n    /* \"#utility.yul\":10302:10326   */\n  gt\n    /* \"#utility.yul\":10299:10349   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":10329:10347   */\n  tag_214\n  tag_83\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":10299:10349   */\ntag_213:\n    /* \"#utility.yul\":10379:10380   */\n  0x01\n    /* \"#utility.yul\":10369:10377   */\n  dup6\n    /* \"#utility.yul\":10365:10381   */\n  and\n    /* \"#utility.yul\":10362:10813   */\n  iszero\n  tag_215\n  jumpi\n    /* \"#utility.yul\":10794:10798   */\n  dup1\n    /* \"#utility.yul\":10787:10792   */\n  dup3\n    /* \"#utility.yul\":10783:10799   */\n  mul\n    /* \"#utility.yul\":10774:10799   */\n  swap2\n  pop\n    /* \"#utility.yul\":10362:10813   */\ntag_215:\n    /* \"#utility.yul\":10844:10848   */\n  dup1\n    /* \"#utility.yul\":10838:10842   */\n  dup2\n    /* \"#utility.yul\":10834:10849   */\n  mul\n    /* \"#utility.yul\":10826:10849   */\n  swap1\n  pop\n    /* \"#utility.yul\":10874:10906   */\n  tag_216\n    /* \"#utility.yul\":10897:10905   */\n  dup6\n    /* \"#utility.yul\":10874:10906   */\n  tag_84\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":10862:10906   */\n  swap5\n  pop\n    /* \"#utility.yul\":10204:10916   */\n  jump(tag_210)\ntag_212:\n    /* \"#utility.yul\":10074:10922   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10928:12001   */\ntag_86:\n    /* \"#utility.yul\":10982:10987   */\n  0x00\n    /* \"#utility.yul\":11173:11181   */\n  dup3\n    /* \"#utility.yul\":11163:11203   */\n  tag_218\n  jumpi\n    /* \"#utility.yul\":11194:11195   */\n  0x01\n    /* \"#utility.yul\":11185:11195   */\n  swap1\n  pop\n    /* \"#utility.yul\":11196:11201   */\n  jump(tag_217)\n    /* \"#utility.yul\":11163:11203   */\ntag_218:\n    /* \"#utility.yul\":11222:11226   */\n  dup2\n    /* \"#utility.yul\":11212:11248   */\n  tag_219\n  jumpi\n    /* \"#utility.yul\":11239:11240   */\n  0x00\n    /* \"#utility.yul\":11230:11240   */\n  swap1\n  pop\n    /* \"#utility.yul\":11241:11246   */\n  jump(tag_217)\n    /* \"#utility.yul\":11212:11248   */\ntag_219:\n    /* \"#utility.yul\":11308:11312   */\n  dup2\n    /* \"#utility.yul\":11356:11357   */\n  0x01\n    /* \"#utility.yul\":11351:11378   */\n  dup2\n  eq\n  tag_221\n  jumpi\n    /* \"#utility.yul\":11392:11393   */\n  0x02\n    /* \"#utility.yul\":11387:11578   */\n  dup2\n  eq\n  tag_222\n  jumpi\n    /* \"#utility.yul\":11301:11578   */\n  jump(tag_220)\n    /* \"#utility.yul\":11351:11378   */\ntag_221:\n    /* \"#utility.yul\":11369:11370   */\n  0x01\n    /* \"#utility.yul\":11360:11370   */\n  swap2\n  pop\n    /* \"#utility.yul\":11371:11376   */\n  pop\n  jump(tag_217)\n    /* \"#utility.yul\":11387:11578   */\ntag_222:\n    /* \"#utility.yul\":11432:11435   */\n  0xff\n    /* \"#utility.yul\":11422:11430   */\n  dup5\n    /* \"#utility.yul\":11419:11436   */\n  gt\n    /* \"#utility.yul\":11416:11459   */\n  iszero\n  tag_223\n  jumpi\n    /* \"#utility.yul\":11439:11457   */\n  tag_224\n  tag_83\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":11416:11459   */\ntag_223:\n    /* \"#utility.yul\":11488:11496   */\n  dup4\n    /* \"#utility.yul\":11485:11486   */\n  0x02\n    /* \"#utility.yul\":11481:11497   */\n  exp\n    /* \"#utility.yul\":11472:11497   */\n  swap2\n  pop\n    /* \"#utility.yul\":11523:11526   */\n  dup5\n    /* \"#utility.yul\":11516:11521   */\n  dup3\n    /* \"#utility.yul\":11513:11527   */\n  gt\n    /* \"#utility.yul\":11510:11550   */\n  iszero\n  tag_225\n  jumpi\n    /* \"#utility.yul\":11530:11548   */\n  tag_226\n  tag_83\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":11510:11550   */\ntag_225:\n    /* \"#utility.yul\":11563:11568   */\n  pop\n  jump(tag_217)\n    /* \"#utility.yul\":11301:11578   */\ntag_220:\n  pop\n    /* \"#utility.yul\":11687:11689   */\n  0x20\n    /* \"#utility.yul\":11677:11685   */\n  dup4\n    /* \"#utility.yul\":11674:11690   */\n  lt\n    /* \"#utility.yul\":11668:11671   */\n  0x0133\n    /* \"#utility.yul\":11662:11666   */\n  dup4\n    /* \"#utility.yul\":11659:11672   */\n  lt\n    /* \"#utility.yul\":11655:11691   */\n  and\n    /* \"#utility.yul\":11637:11639   */\n  0x4e\n    /* \"#utility.yul\":11627:11635   */\n  dup5\n    /* \"#utility.yul\":11624:11640   */\n  lt\n    /* \"#utility.yul\":11619:11621   */\n  0x0b\n    /* \"#utility.yul\":11613:11617   */\n  dup5\n    /* \"#utility.yul\":11610:11622   */\n  lt\n    /* \"#utility.yul\":11606:11641   */\n  and\n    /* \"#utility.yul\":11590:11701   */\n  or\n    /* \"#utility.yul\":11587:11833   */\n  iszero\n  tag_227\n  jumpi\n    /* \"#utility.yul\":11743:11751   */\n  dup3\n    /* \"#utility.yul\":11737:11741   */\n  dup3\n    /* \"#utility.yul\":11733:11752   */\n  exp\n    /* \"#utility.yul\":11724:11752   */\n  swap1\n  pop\n    /* \"#utility.yul\":11778:11781   */\n  dup4\n    /* \"#utility.yul\":11771:11776   */\n  dup2\n    /* \"#utility.yul\":11768:11782   */\n  gt\n    /* \"#utility.yul\":11765:11805   */\n  iszero\n  tag_228\n  jumpi\n    /* \"#utility.yul\":11785:11803   */\n  tag_229\n  tag_83\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":11765:11805   */\ntag_228:\n    /* \"#utility.yul\":11818:11823   */\n  jump(tag_217)\n    /* \"#utility.yul\":11587:11833   */\ntag_227:\n    /* \"#utility.yul\":11858:11900   */\n  tag_230\n    /* \"#utility.yul\":11896:11899   */\n  dup5\n    /* \"#utility.yul\":11886:11894   */\n  dup5\n    /* \"#utility.yul\":11880:11884   */\n  dup5\n    /* \"#utility.yul\":11877:11878   */\n  0x01\n    /* \"#utility.yul\":11858:11900   */\n  tag_85\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":11843:11900   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":11932:11936   */\n  dup2\n    /* \"#utility.yul\":11927:11930   */\n  dup5\n    /* \"#utility.yul\":11923:11937   */\n  div\n    /* \"#utility.yul\":11916:11921   */\n  dup2\n    /* \"#utility.yul\":11913:11938   */\n  gt\n    /* \"#utility.yul\":11910:11961   */\n  iszero\n  tag_231\n  jumpi\n    /* \"#utility.yul\":11941:11959   */\n  tag_232\n  tag_83\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":11910:11961   */\ntag_231:\n    /* \"#utility.yul\":11990:11994   */\n  dup2\n    /* \"#utility.yul\":11983:11988   */\n  dup2\n    /* \"#utility.yul\":11979:11995   */\n  mul\n    /* \"#utility.yul\":11970:11995   */\n  swap1\n  pop\n    /* \"#utility.yul\":10928:12001   */\ntag_217:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12007:12288   */\ntag_20:\n    /* \"#utility.yul\":12065:12070   */\n  0x00\n    /* \"#utility.yul\":12089:12112   */\n  tag_234\n    /* \"#utility.yul\":12107:12111   */\n  dup3\n    /* \"#utility.yul\":12089:12112   */\n  tag_70\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":12081:12112   */\n  swap2\n  pop\n    /* \"#utility.yul\":12133:12158   */\n  tag_235\n    /* \"#utility.yul\":12149:12157   */\n  dup4\n    /* \"#utility.yul\":12133:12158   */\n  tag_46\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":12121:12158   */\n  swap3\n  pop\n    /* \"#utility.yul\":12177:12281   */\n  tag_236\n    /* \"#utility.yul\":12214:12280   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":12204:12212   */\n  dup5\n    /* \"#utility.yul\":12198:12202   */\n  dup5\n    /* \"#utility.yul\":12177:12281   */\n  tag_86\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":12168:12281   */\n  swap1\n  pop\n    /* \"#utility.yul\":12007:12288   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12294:12704   */\ntag_22:\n    /* \"#utility.yul\":12334:12341   */\n  0x00\n    /* \"#utility.yul\":12357:12377   */\n  tag_238\n    /* \"#utility.yul\":12375:12376   */\n  dup3\n    /* \"#utility.yul\":12357:12377   */\n  tag_70\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":12352:12377   */\n  swap2\n  pop\n    /* \"#utility.yul\":12391:12411   */\n  tag_239\n    /* \"#utility.yul\":12409:12410   */\n  dup4\n    /* \"#utility.yul\":12391:12411   */\n  tag_70\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":12386:12411   */\n  swap3\n  pop\n    /* \"#utility.yul\":12446:12447   */\n  dup3\n    /* \"#utility.yul\":12443:12444   */\n  dup3\n    /* \"#utility.yul\":12439:12448   */\n  mul\n    /* \"#utility.yul\":12468:12498   */\n  tag_240\n    /* \"#utility.yul\":12486:12497   */\n  dup2\n    /* \"#utility.yul\":12468:12498   */\n  tag_70\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":12457:12498   */\n  swap2\n  pop\n    /* \"#utility.yul\":12647:12648   */\n  dup3\n    /* \"#utility.yul\":12638:12645   */\n  dup3\n    /* \"#utility.yul\":12634:12649   */\n  div\n    /* \"#utility.yul\":12631:12632   */\n  dup5\n    /* \"#utility.yul\":12628:12650   */\n  eq\n    /* \"#utility.yul\":12608:12609   */\n  dup4\n    /* \"#utility.yul\":12601:12610   */\n  iszero\n    /* \"#utility.yul\":12581:12664   */\n  or\n    /* \"#utility.yul\":12558:12697   */\n  tag_241\n  jumpi\n    /* \"#utility.yul\":12677:12695   */\n  tag_242\n  tag_83\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":12558:12697   */\ntag_241:\n    /* \"#utility.yul\":12342:12704   */\n  pop\n    /* \"#utility.yul\":12294:12704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12710:12901   */\ntag_34:\n    /* \"#utility.yul\":12750:12753   */\n  0x00\n    /* \"#utility.yul\":12769:12789   */\n  tag_244\n    /* \"#utility.yul\":12787:12788   */\n  dup3\n    /* \"#utility.yul\":12769:12789   */\n  tag_70\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":12764:12789   */\n  swap2\n  pop\n    /* \"#utility.yul\":12803:12823   */\n  tag_245\n    /* \"#utility.yul\":12821:12822   */\n  dup4\n    /* \"#utility.yul\":12803:12823   */\n  tag_70\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":12798:12823   */\n  swap3\n  pop\n    /* \"#utility.yul\":12846:12847   */\n  dup3\n    /* \"#utility.yul\":12843:12844   */\n  dup3\n    /* \"#utility.yul\":12839:12848   */\n  add\n    /* \"#utility.yul\":12832:12848   */\n  swap1\n  pop\n    /* \"#utility.yul\":12867:12870   */\n  dup1\n    /* \"#utility.yul\":12864:12865   */\n  dup3\n    /* \"#utility.yul\":12861:12871   */\n  gt\n    /* \"#utility.yul\":12858:12894   */\n  iszero\n  tag_246\n  jumpi\n    /* \"#utility.yul\":12874:12892   */\n  tag_247\n  tag_83\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":12858:12894   */\ntag_246:\n    /* \"#utility.yul\":12710:12901   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12907:13025   */\ntag_87:\n    /* \"#utility.yul\":12994:13018   */\n  tag_249\n    /* \"#utility.yul\":13012:13017   */\n  dup2\n    /* \"#utility.yul\":12994:13018   */\n  tag_70\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":12989:12992   */\n  dup3\n    /* \"#utility.yul\":12982:13019   */\n  mstore\n    /* \"#utility.yul\":12907:13025   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13031:13473   */\ntag_38:\n    /* \"#utility.yul\":13180:13184   */\n  0x00\n    /* \"#utility.yul\":13218:13220   */\n  0x60\n    /* \"#utility.yul\":13207:13216   */\n  dup3\n    /* \"#utility.yul\":13203:13221   */\n  add\n    /* \"#utility.yul\":13195:13221   */\n  swap1\n  pop\n    /* \"#utility.yul\":13231:13302   */\n  tag_251\n    /* \"#utility.yul\":13299:13300   */\n  0x00\n    /* \"#utility.yul\":13288:13297   */\n  dup4\n    /* \"#utility.yul\":13284:13301   */\n  add\n    /* \"#utility.yul\":13275:13281   */\n  dup7\n    /* \"#utility.yul\":13231:13302   */\n  tag_82\n  jump\t// in\ntag_251:\n    /* \"#utility.yul\":13312:13384   */\n  tag_252\n    /* \"#utility.yul\":13380:13382   */\n  0x20\n    /* \"#utility.yul\":13369:13378   */\n  dup4\n    /* \"#utility.yul\":13365:13383   */\n  add\n    /* \"#utility.yul\":13356:13362   */\n  dup6\n    /* \"#utility.yul\":13312:13384   */\n  tag_87\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":13394:13466   */\n  tag_253\n    /* \"#utility.yul\":13462:13464   */\n  0x40\n    /* \"#utility.yul\":13451:13460   */\n  dup4\n    /* \"#utility.yul\":13447:13465   */\n  add\n    /* \"#utility.yul\":13438:13444   */\n  dup5\n    /* \"#utility.yul\":13394:13466   */\n  tag_87\n  jump\t// in\ntag_253:\n    /* \"#utility.yul\":13031:13473   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13479:13701   */\ntag_42:\n    /* \"#utility.yul\":13572:13576   */\n  0x00\n    /* \"#utility.yul\":13610:13612   */\n  0x20\n    /* \"#utility.yul\":13599:13608   */\n  dup3\n    /* \"#utility.yul\":13595:13613   */\n  add\n    /* \"#utility.yul\":13587:13613   */\n  swap1\n  pop\n    /* \"#utility.yul\":13623:13694   */\n  tag_255\n    /* \"#utility.yul\":13691:13692   */\n  0x00\n    /* \"#utility.yul\":13680:13689   */\n  dup4\n    /* \"#utility.yul\":13676:13693   */\n  add\n    /* \"#utility.yul\":13667:13673   */\n  dup5\n    /* \"#utility.yul\":13623:13694   */\n  tag_87\n  jump\t// in\ntag_255:\n    /* \"#utility.yul\":13479:13701   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/tests/ERC20Token.sol\":197:681  contract ERC20Token is ERC20, Ownable {... */\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tests/ERC20Token.sol\":197:681  contract ERC20Token is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tests/ERC20Token.sol\":592:679  function decimals() public view override returns(uint8) {... */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tests/ERC20Token.sol\":493:586  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_73\n      swap1\n      tag_72\n      jump\t// in\n    tag_73:\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_75\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_74)\n    tag_75:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_76:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_76\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tests/ERC20Token.sol\":592:679  function decimals() public view override returns(uint8) {... */\n    tag_38:\n        /* \"contracts/tests/ERC20Token.sol\":641:646  uint8 */\n      0x00\n        /* \"contracts/tests/ERC20Token.sol\":665:672  decimal */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tests/ERC20Token.sol\":658:672  return decimal */\n      swap1\n      pop\n        /* \"contracts/tests/ERC20Token.sol\":592:679  function decimals() public view override returns(uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/tests/ERC20Token.sol\":493:586  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"contracts/tests/ERC20Token.sol\":562:579  _mint(to, amount) */\n      tag_94\n        /* \"contracts/tests/ERC20Token.sol\":568:570  to */\n      dup3\n        /* \"contracts/tests/ERC20Token.sol\":572:578  amount */\n      dup3\n        /* \"contracts/tests/ERC20Token.sol\":562:567  _mint */\n      tag_95\n        /* \"contracts/tests/ERC20Token.sol\":562:579  _mint(to, amount) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/tests/ERC20Token.sol\":493:586  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_72\n      jump\t// in\n    tag_104:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_72\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_106)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_159)\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_163)\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_165:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_166:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_167:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_192:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_192)\n    tag_194:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_168:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_169:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_197\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_165\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":818:889   */\n      tag_198\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_166\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_199\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_167\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":988:1017   */\n      tag_200\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_168\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_21:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_202\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_169\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_171:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_173:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_174:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_208\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_173\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_175:\n        /* \"#utility.yul\":1983:2007   */\n      tag_210\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_174\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_211:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_176:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_213\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_175\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_177:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_178:\n        /* \"#utility.yul\":2339:2363   */\n      tag_216\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_177\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_217:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_179:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_219\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_178\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_24:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_222\n      tag_171\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2632:2751   */\n    tag_221:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_223\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_176\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_224\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_179\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_180:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_181:\n        /* \"#utility.yul\":3196:3217   */\n      tag_227\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_180\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_27:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_229\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_181\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_182:\n        /* \"#utility.yul\":3533:3557   */\n      tag_231\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_177\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_31:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_233\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_182\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_34:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_236\n      tag_171\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3908:4027   */\n    tag_235:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_237\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_176\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_238\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_176\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_239\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_179\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_183:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_184:\n        /* \"#utility.yul\":4598:4620   */\n      tag_242\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_183\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_40:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_244\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_184\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_46:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_247\n      tag_171\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4929:5048   */\n    tag_246:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_248\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_176\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5306   */\n    tag_185:\n        /* \"#utility.yul\":5275:5299   */\n      tag_250\n        /* \"#utility.yul\":5293:5298   */\n      dup2\n        /* \"#utility.yul\":5275:5299   */\n      tag_174\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5263:5300   */\n      mstore\n        /* \"#utility.yul\":5188:5306   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5312:5534   */\n    tag_54:\n        /* \"#utility.yul\":5405:5409   */\n      0x00\n        /* \"#utility.yul\":5443:5445   */\n      0x20\n        /* \"#utility.yul\":5432:5441   */\n      dup3\n        /* \"#utility.yul\":5428:5446   */\n      add\n        /* \"#utility.yul\":5420:5446   */\n      swap1\n      pop\n        /* \"#utility.yul\":5456:5527   */\n      tag_252\n        /* \"#utility.yul\":5524:5525   */\n      0x00\n        /* \"#utility.yul\":5513:5522   */\n      dup4\n        /* \"#utility.yul\":5509:5526   */\n      add\n        /* \"#utility.yul\":5500:5506   */\n      dup5\n        /* \"#utility.yul\":5456:5527   */\n      tag_185\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5312:5534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:6014   */\n    tag_64:\n        /* \"#utility.yul\":5608:5614   */\n      0x00\n        /* \"#utility.yul\":5616:5622   */\n      dup1\n        /* \"#utility.yul\":5665:5667   */\n      0x40\n        /* \"#utility.yul\":5653:5662   */\n      dup4\n        /* \"#utility.yul\":5644:5651   */\n      dup6\n        /* \"#utility.yul\":5640:5663   */\n      sub\n        /* \"#utility.yul\":5636:5668   */\n      slt\n        /* \"#utility.yul\":5633:5752   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":5671:5750   */\n      tag_255\n      tag_171\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5633:5752   */\n    tag_254:\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5816:5869   */\n      tag_256\n        /* \"#utility.yul\":5861:5868   */\n      dup6\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5841:5850   */\n      dup7\n        /* \"#utility.yul\":5837:5859   */\n      add\n        /* \"#utility.yul\":5816:5869   */\n      tag_176\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":5806:5869   */\n      swap3\n      pop\n        /* \"#utility.yul\":5762:5879   */\n      pop\n        /* \"#utility.yul\":5918:5920   */\n      0x20\n        /* \"#utility.yul\":5944:5997   */\n      tag_257\n        /* \"#utility.yul\":5989:5996   */\n      dup6\n        /* \"#utility.yul\":5980:5986   */\n      dup3\n        /* \"#utility.yul\":5969:5978   */\n      dup7\n        /* \"#utility.yul\":5965:5987   */\n      add\n        /* \"#utility.yul\":5944:5997   */\n      tag_176\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5934:5997   */\n      swap2\n      pop\n        /* \"#utility.yul\":5889:6007   */\n      pop\n        /* \"#utility.yul\":5540:6014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6200   */\n    tag_186:\n        /* \"#utility.yul\":6068:6145   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6058:6146   */\n      mstore\n        /* \"#utility.yul\":6165:6169   */\n      0x22\n        /* \"#utility.yul\":6162:6163   */\n      0x04\n        /* \"#utility.yul\":6155:6170   */\n      mstore\n        /* \"#utility.yul\":6189:6193   */\n      0x24\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6179:6194   */\n      revert\n        /* \"#utility.yul\":6206:6526   */\n    tag_72:\n        /* \"#utility.yul\":6250:6256   */\n      0x00\n        /* \"#utility.yul\":6287:6288   */\n      0x02\n        /* \"#utility.yul\":6281:6285   */\n      dup3\n        /* \"#utility.yul\":6277:6289   */\n      div\n        /* \"#utility.yul\":6267:6289   */\n      swap1\n      pop\n        /* \"#utility.yul\":6334:6335   */\n      0x01\n        /* \"#utility.yul\":6328:6332   */\n      dup3\n        /* \"#utility.yul\":6324:6336   */\n      and\n        /* \"#utility.yul\":6355:6373   */\n      dup1\n        /* \"#utility.yul\":6345:6426   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":6411:6415   */\n      0x7f\n        /* \"#utility.yul\":6403:6409   */\n      dup3\n        /* \"#utility.yul\":6399:6416   */\n      and\n        /* \"#utility.yul\":6389:6416   */\n      swap2\n      pop\n        /* \"#utility.yul\":6345:6426   */\n    tag_260:\n        /* \"#utility.yul\":6473:6475   */\n      0x20\n        /* \"#utility.yul\":6465:6471   */\n      dup3\n        /* \"#utility.yul\":6462:6476   */\n      lt\n        /* \"#utility.yul\":6442:6460   */\n      dup2\n        /* \"#utility.yul\":6439:6477   */\n      sub\n        /* \"#utility.yul\":6436:6520   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":6492:6510   */\n      tag_262\n      tag_186\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6436:6520   */\n    tag_261:\n        /* \"#utility.yul\":6257:6526   */\n      pop\n        /* \"#utility.yul\":6206:6526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:6974   */\n    tag_128:\n        /* \"#utility.yul\":6681:6685   */\n      0x00\n        /* \"#utility.yul\":6719:6721   */\n      0x60\n        /* \"#utility.yul\":6708:6717   */\n      dup3\n        /* \"#utility.yul\":6704:6722   */\n      add\n        /* \"#utility.yul\":6696:6722   */\n      swap1\n      pop\n        /* \"#utility.yul\":6732:6803   */\n      tag_264\n        /* \"#utility.yul\":6800:6801   */\n      0x00\n        /* \"#utility.yul\":6789:6798   */\n      dup4\n        /* \"#utility.yul\":6785:6802   */\n      add\n        /* \"#utility.yul\":6776:6782   */\n      dup7\n        /* \"#utility.yul\":6732:6803   */\n      tag_185\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":6813:6885   */\n      tag_265\n        /* \"#utility.yul\":6881:6883   */\n      0x20\n        /* \"#utility.yul\":6870:6879   */\n      dup4\n        /* \"#utility.yul\":6866:6884   */\n      add\n        /* \"#utility.yul\":6857:6863   */\n      dup6\n        /* \"#utility.yul\":6813:6885   */\n      tag_182\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":6895:6967   */\n      tag_266\n        /* \"#utility.yul\":6963:6965   */\n      0x40\n        /* \"#utility.yul\":6952:6961   */\n      dup4\n        /* \"#utility.yul\":6948:6966   */\n      add\n        /* \"#utility.yul\":6939:6945   */\n      dup5\n        /* \"#utility.yul\":6895:6967   */\n      tag_182\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6532:6974   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7160   */\n    tag_187:\n        /* \"#utility.yul\":7028:7105   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7025:7026   */\n      0x00\n        /* \"#utility.yul\":7018:7106   */\n      mstore\n        /* \"#utility.yul\":7125:7129   */\n      0x11\n        /* \"#utility.yul\":7122:7123   */\n      0x04\n        /* \"#utility.yul\":7115:7130   */\n      mstore\n        /* \"#utility.yul\":7149:7153   */\n      0x24\n        /* \"#utility.yul\":7146:7147   */\n      0x00\n        /* \"#utility.yul\":7139:7154   */\n      revert\n        /* \"#utility.yul\":7166:7357   */\n    tag_158:\n        /* \"#utility.yul\":7206:7209   */\n      0x00\n        /* \"#utility.yul\":7225:7245   */\n      tag_269\n        /* \"#utility.yul\":7243:7244   */\n      dup3\n        /* \"#utility.yul\":7225:7245   */\n      tag_177\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":7220:7245   */\n      swap2\n      pop\n        /* \"#utility.yul\":7259:7279   */\n      tag_270\n        /* \"#utility.yul\":7277:7278   */\n      dup4\n        /* \"#utility.yul\":7259:7279   */\n      tag_177\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":7254:7279   */\n      swap3\n      pop\n        /* \"#utility.yul\":7302:7303   */\n      dup3\n        /* \"#utility.yul\":7299:7300   */\n      dup3\n        /* \"#utility.yul\":7295:7304   */\n      add\n        /* \"#utility.yul\":7288:7304   */\n      swap1\n      pop\n        /* \"#utility.yul\":7323:7326   */\n      dup1\n        /* \"#utility.yul\":7320:7321   */\n      dup3\n        /* \"#utility.yul\":7317:7327   */\n      gt\n        /* \"#utility.yul\":7314:7350   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":7330:7348   */\n      tag_272\n      tag_187\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":7314:7350   */\n    tag_271:\n        /* \"#utility.yul\":7166:7357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220469c0e0fe235b1f375b0b66f027dd659f5282f0daf7ba353c2c79b392fa5419b64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_976": {
									"entryPoint": null,
									"id": 976,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 566,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 368,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 707,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1707,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 1326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8t_addresst_string_memory_ptr_fromMemory": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2880,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2971,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2388,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2820,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1277,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2117,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2273,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 1300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2316,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13704:7",
										"nodeType": "YulBlock",
										"src": "0:13704:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "377:43:7",
													"nodeType": "YulBlock",
													"src": "377:43:7",
													"statements": [
														{
															"nativeSrc": "387:27:7",
															"nodeType": "YulAssignment",
															"src": "387:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "402:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "402:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "409:4:7",
																		"nodeType": "YulLiteral",
																		"src": "409:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "398:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:7"
																},
																"nativeSrc": "398:16:7",
																"nodeType": "YulFunctionCall",
																"src": "398:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "387:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "387:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "334:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "359:5:7",
														"nodeType": "YulTypedName",
														"src": "359:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "369:7:7",
														"nodeType": "YulTypedName",
														"src": "369:7:7",
														"type": ""
													}
												],
												"src": "334:86:7"
											},
											{
												"body": {
													"nativeSrc": "467:77:7",
													"nodeType": "YulBlock",
													"src": "467:77:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "522:16:7",
																"nodeType": "YulBlock",
																"src": "522:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "531:1:7",
																					"nodeType": "YulLiteral",
																					"src": "531:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "534:1:7",
																					"nodeType": "YulLiteral",
																					"src": "534:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "524:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:7"
																			},
																			"nativeSrc": "524:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "524:12:7"
																		},
																		"nativeSrc": "524:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "524:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "490:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "490:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "513:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "513:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "497:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "497:15:7"
																				},
																				"nativeSrc": "497:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "497:22:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "487:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "487:2:7"
																		},
																		"nativeSrc": "487:33:7",
																		"nodeType": "YulFunctionCall",
																		"src": "487:33:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "480:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:7"
																},
																"nativeSrc": "480:41:7",
																"nodeType": "YulFunctionCall",
																"src": "480:41:7"
															},
															"nativeSrc": "477:61:7",
															"nodeType": "YulIf",
															"src": "477:61:7"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "426:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "460:5:7",
														"nodeType": "YulTypedName",
														"src": "460:5:7",
														"type": ""
													}
												],
												"src": "426:118:7"
											},
											{
												"body": {
													"nativeSrc": "611:78:7",
													"nodeType": "YulBlock",
													"src": "611:78:7",
													"statements": [
														{
															"nativeSrc": "621:22:7",
															"nodeType": "YulAssignment",
															"src": "621:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "636:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "636:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "630:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "630:5:7"
																},
																"nativeSrc": "630:13:7",
																"nodeType": "YulFunctionCall",
																"src": "630:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "621:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "621:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "677:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "677:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "652:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "652:24:7"
																},
																"nativeSrc": "652:31:7",
																"nodeType": "YulFunctionCall",
																"src": "652:31:7"
															},
															"nativeSrc": "652:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "652:31:7"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "550:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "589:6:7",
														"nodeType": "YulTypedName",
														"src": "589:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "597:3:7",
														"nodeType": "YulTypedName",
														"src": "597:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "605:5:7",
														"nodeType": "YulTypedName",
														"src": "605:5:7",
														"type": ""
													}
												],
												"src": "550:139:7"
											},
											{
												"body": {
													"nativeSrc": "740:81:7",
													"nodeType": "YulBlock",
													"src": "740:81:7",
													"statements": [
														{
															"nativeSrc": "750:65:7",
															"nodeType": "YulAssignment",
															"src": "750:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "765:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "765:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "772:42:7",
																		"nodeType": "YulLiteral",
																		"src": "772:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "761:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "761:3:7"
																},
																"nativeSrc": "761:54:7",
																"nodeType": "YulFunctionCall",
																"src": "761:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "750:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "750:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "695:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "722:5:7",
														"nodeType": "YulTypedName",
														"src": "722:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "732:7:7",
														"nodeType": "YulTypedName",
														"src": "732:7:7",
														"type": ""
													}
												],
												"src": "695:126:7"
											},
											{
												"body": {
													"nativeSrc": "872:51:7",
													"nodeType": "YulBlock",
													"src": "872:51:7",
													"statements": [
														{
															"nativeSrc": "882:35:7",
															"nodeType": "YulAssignment",
															"src": "882:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "911:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "911:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "893:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "893:17:7"
																},
																"nativeSrc": "893:24:7",
																"nodeType": "YulFunctionCall",
																"src": "893:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "882:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "882:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "827:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "854:5:7",
														"nodeType": "YulTypedName",
														"src": "854:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "864:7:7",
														"nodeType": "YulTypedName",
														"src": "864:7:7",
														"type": ""
													}
												],
												"src": "827:96:7"
											},
											{
												"body": {
													"nativeSrc": "972:79:7",
													"nodeType": "YulBlock",
													"src": "972:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1029:16:7",
																"nodeType": "YulBlock",
																"src": "1029:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1038:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1038:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1041:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1041:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1031:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1031:6:7"
																			},
																			"nativeSrc": "1031:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1031:12:7"
																		},
																		"nativeSrc": "1031:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1031:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "995:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "995:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1020:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1020:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1002:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1002:17:7"
																				},
																				"nativeSrc": "1002:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1002:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "992:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "992:2:7"
																		},
																		"nativeSrc": "992:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "992:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "985:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "985:6:7"
																},
																"nativeSrc": "985:43:7",
																"nodeType": "YulFunctionCall",
																"src": "985:43:7"
															},
															"nativeSrc": "982:63:7",
															"nodeType": "YulIf",
															"src": "982:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "929:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "965:5:7",
														"nodeType": "YulTypedName",
														"src": "965:5:7",
														"type": ""
													}
												],
												"src": "929:122:7"
											},
											{
												"body": {
													"nativeSrc": "1120:80:7",
													"nodeType": "YulBlock",
													"src": "1120:80:7",
													"statements": [
														{
															"nativeSrc": "1130:22:7",
															"nodeType": "YulAssignment",
															"src": "1130:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1145:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1145:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1139:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1139:5:7"
																},
																"nativeSrc": "1139:13:7",
																"nodeType": "YulFunctionCall",
																"src": "1139:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1130:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1130:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1188:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1188:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1161:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1161:26:7"
																},
																"nativeSrc": "1161:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1161:33:7"
															},
															"nativeSrc": "1161:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1161:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1057:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1098:6:7",
														"nodeType": "YulTypedName",
														"src": "1098:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1106:3:7",
														"nodeType": "YulTypedName",
														"src": "1106:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1114:5:7",
														"nodeType": "YulTypedName",
														"src": "1114:5:7",
														"type": ""
													}
												],
												"src": "1057:143:7"
											},
											{
												"body": {
													"nativeSrc": "1295:28:7",
													"nodeType": "YulBlock",
													"src": "1295:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1312:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1312:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1315:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1315:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1305:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1305:6:7"
																},
																"nativeSrc": "1305:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1305:12:7"
															},
															"nativeSrc": "1305:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1305:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1206:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1206:117:7"
											},
											{
												"body": {
													"nativeSrc": "1418:28:7",
													"nodeType": "YulBlock",
													"src": "1418:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1435:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1435:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1438:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1438:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1428:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:7"
																},
																"nativeSrc": "1428:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1428:12:7"
															},
															"nativeSrc": "1428:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1428:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1329:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1329:117:7"
											},
											{
												"body": {
													"nativeSrc": "1500:54:7",
													"nodeType": "YulBlock",
													"src": "1500:54:7",
													"statements": [
														{
															"nativeSrc": "1510:38:7",
															"nodeType": "YulAssignment",
															"src": "1510:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1528:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1528:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1535:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1535:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1524:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1524:3:7"
																		},
																		"nativeSrc": "1524:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1524:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1544:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1544:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1540:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1540:3:7"
																		},
																		"nativeSrc": "1540:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1540:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1520:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1520:3:7"
																},
																"nativeSrc": "1520:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1520:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1510:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1510:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1452:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1483:5:7",
														"nodeType": "YulTypedName",
														"src": "1483:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1493:6:7",
														"nodeType": "YulTypedName",
														"src": "1493:6:7",
														"type": ""
													}
												],
												"src": "1452:102:7"
											},
											{
												"body": {
													"nativeSrc": "1588:152:7",
													"nodeType": "YulBlock",
													"src": "1588:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1605:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1608:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1598:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:7"
																},
																"nativeSrc": "1598:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1598:88:7"
															},
															"nativeSrc": "1598:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1598:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1702:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1702:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1705:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1705:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1695:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1695:6:7"
																},
																"nativeSrc": "1695:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1695:15:7"
															},
															"nativeSrc": "1695:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1695:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1726:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1726:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1729:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1729:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1719:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:7"
																},
																"nativeSrc": "1719:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1719:15:7"
															},
															"nativeSrc": "1719:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1719:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1560:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1560:180:7"
											},
											{
												"body": {
													"nativeSrc": "1789:238:7",
													"nodeType": "YulBlock",
													"src": "1789:238:7",
													"statements": [
														{
															"nativeSrc": "1799:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1799:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1821:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1821:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1851:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1851:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1829:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1829:21:7"
																		},
																		"nativeSrc": "1829:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1829:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1817:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1817:3:7"
																},
																"nativeSrc": "1817:40:7",
																"nodeType": "YulFunctionCall",
																"src": "1817:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1803:10:7",
																	"nodeType": "YulTypedName",
																	"src": "1803:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1968:22:7",
																"nodeType": "YulBlock",
																"src": "1968:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1970:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1970:16:7"
																			},
																			"nativeSrc": "1970:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1970:18:7"
																		},
																		"nativeSrc": "1970:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1970:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1911:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1911:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1923:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1923:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1908:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1908:2:7"
																		},
																		"nativeSrc": "1908:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1908:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1947:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1947:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1959:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1959:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1944:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1944:2:7"
																		},
																		"nativeSrc": "1944:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1944:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1905:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1905:2:7"
																},
																"nativeSrc": "1905:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1905:62:7"
															},
															"nativeSrc": "1902:88:7",
															"nodeType": "YulIf",
															"src": "1902:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2006:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2006:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2010:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2010:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1999:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1999:6:7"
																},
																"nativeSrc": "1999:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1999:22:7"
															},
															"nativeSrc": "1999:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1999:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1746:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1775:6:7",
														"nodeType": "YulTypedName",
														"src": "1775:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1783:4:7",
														"nodeType": "YulTypedName",
														"src": "1783:4:7",
														"type": ""
													}
												],
												"src": "1746:281:7"
											},
											{
												"body": {
													"nativeSrc": "2074:88:7",
													"nodeType": "YulBlock",
													"src": "2074:88:7",
													"statements": [
														{
															"nativeSrc": "2084:30:7",
															"nodeType": "YulAssignment",
															"src": "2084:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "2094:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2094:18:7"
																},
																"nativeSrc": "2094:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2094:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2084:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2084:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2143:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2143:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "2151:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2151:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "2123:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "2123:19:7"
																},
																"nativeSrc": "2123:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2123:33:7"
															},
															"nativeSrc": "2123:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2123:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2033:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2058:4:7",
														"nodeType": "YulTypedName",
														"src": "2058:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2067:6:7",
														"nodeType": "YulTypedName",
														"src": "2067:6:7",
														"type": ""
													}
												],
												"src": "2033:129:7"
											},
											{
												"body": {
													"nativeSrc": "2235:241:7",
													"nodeType": "YulBlock",
													"src": "2235:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2340:22:7",
																"nodeType": "YulBlock",
																"src": "2340:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2342:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2342:16:7"
																			},
																			"nativeSrc": "2342:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2342:18:7"
																		},
																		"nativeSrc": "2342:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2342:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2312:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2312:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2320:18:7",
																		"nodeType": "YulLiteral",
																		"src": "2320:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2309:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2309:2:7"
																},
																"nativeSrc": "2309:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2309:30:7"
															},
															"nativeSrc": "2306:56:7",
															"nodeType": "YulIf",
															"src": "2306:56:7"
														},
														{
															"nativeSrc": "2372:37:7",
															"nodeType": "YulAssignment",
															"src": "2372:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2402:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2402:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2380:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "2380:21:7"
																},
																"nativeSrc": "2380:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2380:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2372:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2372:4:7"
																}
															]
														},
														{
															"nativeSrc": "2446:23:7",
															"nodeType": "YulAssignment",
															"src": "2446:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2458:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2458:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2464:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2464:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2454:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2454:3:7"
																},
																"nativeSrc": "2454:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2454:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2446:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2446:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "2168:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2219:6:7",
														"nodeType": "YulTypedName",
														"src": "2219:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2230:4:7",
														"nodeType": "YulTypedName",
														"src": "2230:4:7",
														"type": ""
													}
												],
												"src": "2168:308:7"
											},
											{
												"body": {
													"nativeSrc": "2544:184:7",
													"nodeType": "YulBlock",
													"src": "2544:184:7",
													"statements": [
														{
															"nativeSrc": "2554:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2554:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2563:1:7",
																"nodeType": "YulLiteral",
																"src": "2563:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2558:1:7",
																	"nodeType": "YulTypedName",
																	"src": "2558:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2623:63:7",
																"nodeType": "YulBlock",
																"src": "2623:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "2648:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2648:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2653:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "2653:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2644:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2644:3:7"
																					},
																					"nativeSrc": "2644:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2644:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "2667:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2667:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "2672:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "2672:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2663:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2663:3:7"
																							},
																							"nativeSrc": "2663:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2663:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2657:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2657:5:7"
																					},
																					"nativeSrc": "2657:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2657:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2637:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2637:6:7"
																			},
																			"nativeSrc": "2637:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2637:39:7"
																		},
																		"nativeSrc": "2637:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2637:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2584:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2584:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2587:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2587:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2581:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2581:2:7"
																},
																"nativeSrc": "2581:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2581:13:7"
															},
															"nativeSrc": "2573:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2595:19:7",
																"nodeType": "YulBlock",
																"src": "2595:19:7",
																"statements": [
																	{
																		"nativeSrc": "2597:15:7",
																		"nodeType": "YulAssignment",
																		"src": "2597:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2606:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "2606:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2609:2:7",
																					"nodeType": "YulLiteral",
																					"src": "2609:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2602:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2602:3:7"
																			},
																			"nativeSrc": "2602:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2602:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2597:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2597:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2577:3:7",
																"nodeType": "YulBlock",
																"src": "2577:3:7",
																"statements": []
															},
															"src": "2573:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2706:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2706:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2711:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2711:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2702:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2702:3:7"
																		},
																		"nativeSrc": "2702:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2702:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2720:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2720:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2695:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2695:6:7"
																},
																"nativeSrc": "2695:27:7",
																"nodeType": "YulFunctionCall",
																"src": "2695:27:7"
															},
															"nativeSrc": "2695:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "2695:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2482:246:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2526:3:7",
														"nodeType": "YulTypedName",
														"src": "2526:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2531:3:7",
														"nodeType": "YulTypedName",
														"src": "2531:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2536:6:7",
														"nodeType": "YulTypedName",
														"src": "2536:6:7",
														"type": ""
													}
												],
												"src": "2482:246:7"
											},
											{
												"body": {
													"nativeSrc": "2829:339:7",
													"nodeType": "YulBlock",
													"src": "2829:339:7",
													"statements": [
														{
															"nativeSrc": "2839:75:7",
															"nodeType": "YulAssignment",
															"src": "2839:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2906:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2906:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2864:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "2864:41:7"
																		},
																		"nativeSrc": "2864:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2864:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2848:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "2848:15:7"
																},
																"nativeSrc": "2848:66:7",
																"nodeType": "YulFunctionCall",
																"src": "2848:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2839:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2839:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2930:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2930:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2937:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2937:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2923:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2923:6:7"
																},
																"nativeSrc": "2923:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2923:21:7"
															},
															"nativeSrc": "2923:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2923:21:7"
														},
														{
															"nativeSrc": "2953:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2953:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2968:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2968:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2975:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2975:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2964:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:3:7"
																},
																"nativeSrc": "2964:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2964:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2957:3:7",
																	"nodeType": "YulTypedName",
																	"src": "2957:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3018:83:7",
																"nodeType": "YulBlock",
																"src": "3018:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "3020:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3020:77:7"
																			},
																			"nativeSrc": "3020:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3020:79:7"
																		},
																		"nativeSrc": "3020:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3020:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2999:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2999:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3004:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3004:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2995:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2995:3:7"
																		},
																		"nativeSrc": "2995:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2995:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3013:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3013:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2992:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2992:2:7"
																},
																"nativeSrc": "2992:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2992:25:7"
															},
															"nativeSrc": "2989:112:7",
															"nodeType": "YulIf",
															"src": "2989:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3145:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3145:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "3150:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3150:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3155:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3110:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "3110:34:7"
																},
																"nativeSrc": "3110:52:7",
																"nodeType": "YulFunctionCall",
																"src": "3110:52:7"
															},
															"nativeSrc": "3110:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "3110:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2734:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2802:3:7",
														"nodeType": "YulTypedName",
														"src": "2802:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2807:6:7",
														"nodeType": "YulTypedName",
														"src": "2807:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2815:3:7",
														"nodeType": "YulTypedName",
														"src": "2815:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2823:5:7",
														"nodeType": "YulTypedName",
														"src": "2823:5:7",
														"type": ""
													}
												],
												"src": "2734:434:7"
											},
											{
												"body": {
													"nativeSrc": "3261:282:7",
													"nodeType": "YulBlock",
													"src": "3261:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3310:83:7",
																"nodeType": "YulBlock",
																"src": "3310:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3312:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:77:7"
																			},
																			"nativeSrc": "3312:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3312:79:7"
																		},
																		"nativeSrc": "3312:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3312:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3289:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3289:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3297:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3297:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3285:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3285:3:7"
																				},
																				"nativeSrc": "3285:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3285:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3304:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3304:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3281:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3281:3:7"
																		},
																		"nativeSrc": "3281:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3281:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3274:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3274:6:7"
																},
																"nativeSrc": "3274:35:7",
																"nodeType": "YulFunctionCall",
																"src": "3274:35:7"
															},
															"nativeSrc": "3271:122:7",
															"nodeType": "YulIf",
															"src": "3271:122:7"
														},
														{
															"nativeSrc": "3402:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3402:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3422:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3422:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3416:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3416:5:7"
																},
																"nativeSrc": "3416:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3416:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3406:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3406:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3438:99:7",
															"nodeType": "YulAssignment",
															"src": "3438:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3510:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3510:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3518:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3518:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3506:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3506:3:7"
																		},
																		"nativeSrc": "3506:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3506:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3525:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3525:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3533:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "3447:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "3447:58:7"
																},
																"nativeSrc": "3447:90:7",
																"nodeType": "YulFunctionCall",
																"src": "3447:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3438:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3438:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "3188:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3239:6:7",
														"nodeType": "YulTypedName",
														"src": "3239:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3247:3:7",
														"nodeType": "YulTypedName",
														"src": "3247:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3255:5:7",
														"nodeType": "YulTypedName",
														"src": "3255:5:7",
														"type": ""
													}
												],
												"src": "3188:355:7"
											},
											{
												"body": {
													"nativeSrc": "3668:713:7",
													"nodeType": "YulBlock",
													"src": "3668:713:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3714:83:7",
																"nodeType": "YulBlock",
																"src": "3714:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3716:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3716:77:7"
																			},
																			"nativeSrc": "3716:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3716:79:7"
																		},
																		"nativeSrc": "3716:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3716:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3689:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3689:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3698:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3698:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3685:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3685:3:7"
																		},
																		"nativeSrc": "3685:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3685:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3710:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3710:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3681:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3681:3:7"
																},
																"nativeSrc": "3681:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3681:32:7"
															},
															"nativeSrc": "3678:119:7",
															"nodeType": "YulIf",
															"src": "3678:119:7"
														},
														{
															"nativeSrc": "3807:126:7",
															"nodeType": "YulBlock",
															"src": "3807:126:7",
															"statements": [
																{
																	"nativeSrc": "3822:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3822:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3836:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3836:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3826:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3826:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3851:72:7",
																	"nodeType": "YulAssignment",
																	"src": "3851:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3895:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3895:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3906:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3906:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3891:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3891:3:7"
																				},
																				"nativeSrc": "3891:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3891:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3915:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3915:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "3861:29:7",
																			"nodeType": "YulIdentifier",
																			"src": "3861:29:7"
																		},
																		"nativeSrc": "3861:62:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3861:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3851:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3851:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3943:129:7",
															"nodeType": "YulBlock",
															"src": "3943:129:7",
															"statements": [
																{
																	"nativeSrc": "3958:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3958:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3972:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3972:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3962:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3962:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3988:74:7",
																	"nodeType": "YulAssignment",
																	"src": "3988:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4034:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4034:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4045:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4030:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4030:3:7"
																				},
																				"nativeSrc": "4030:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4030:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4054:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4054:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3998:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "3998:31:7"
																		},
																		"nativeSrc": "3998:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3998:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3988:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3988:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4082:292:7",
															"nodeType": "YulBlock",
															"src": "4082:292:7",
															"statements": [
																{
																	"nativeSrc": "4097:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4097:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4121:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4121:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4132:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4132:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4117:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4117:3:7"
																				},
																				"nativeSrc": "4117:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4117:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4111:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4111:5:7"
																		},
																		"nativeSrc": "4111:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4111:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4101:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4101:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4183:83:7",
																		"nodeType": "YulBlock",
																		"src": "4183:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4185:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "4185:77:7"
																					},
																					"nativeSrc": "4185:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4185:79:7"
																				},
																				"nativeSrc": "4185:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4185:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4155:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4155:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4163:18:7",
																				"nodeType": "YulLiteral",
																				"src": "4163:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4152:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4152:2:7"
																		},
																		"nativeSrc": "4152:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4152:30:7"
																	},
																	"nativeSrc": "4149:117:7",
																	"nodeType": "YulIf",
																	"src": "4149:117:7"
																},
																{
																	"nativeSrc": "4280:84:7",
																	"nodeType": "YulAssignment",
																	"src": "4280:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4336:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4336:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4347:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4347:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4332:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4332:3:7"
																				},
																				"nativeSrc": "4332:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4332:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4356:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4356:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4290:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "4290:41:7"
																		},
																		"nativeSrc": "4290:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4290:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4280:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4280:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8t_addresst_string_memory_ptr_fromMemory",
												"nativeSrc": "3549:832:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3622:9:7",
														"nodeType": "YulTypedName",
														"src": "3622:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3633:7:7",
														"nodeType": "YulTypedName",
														"src": "3633:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3645:6:7",
														"nodeType": "YulTypedName",
														"src": "3645:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3653:6:7",
														"nodeType": "YulTypedName",
														"src": "3653:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3661:6:7",
														"nodeType": "YulTypedName",
														"src": "3661:6:7",
														"type": ""
													}
												],
												"src": "3549:832:7"
											},
											{
												"body": {
													"nativeSrc": "4446:40:7",
													"nodeType": "YulBlock",
													"src": "4446:40:7",
													"statements": [
														{
															"nativeSrc": "4457:22:7",
															"nodeType": "YulAssignment",
															"src": "4457:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4473:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4473:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4467:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4467:5:7"
																},
																"nativeSrc": "4467:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4467:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4457:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4387:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4429:5:7",
														"nodeType": "YulTypedName",
														"src": "4429:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4439:6:7",
														"nodeType": "YulTypedName",
														"src": "4439:6:7",
														"type": ""
													}
												],
												"src": "4387:99:7"
											},
											{
												"body": {
													"nativeSrc": "4520:152:7",
													"nodeType": "YulBlock",
													"src": "4520:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4537:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4537:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4540:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4540:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4530:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4530:6:7"
																},
																"nativeSrc": "4530:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4530:88:7"
															},
															"nativeSrc": "4530:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4530:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4634:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4634:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4637:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4637:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4627:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4627:6:7"
																},
																"nativeSrc": "4627:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4627:15:7"
															},
															"nativeSrc": "4627:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4627:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4658:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4658:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4661:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4661:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4651:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4651:6:7"
																},
																"nativeSrc": "4651:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4651:15:7"
															},
															"nativeSrc": "4651:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4651:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4492:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4492:180:7"
											},
											{
												"body": {
													"nativeSrc": "4729:269:7",
													"nodeType": "YulBlock",
													"src": "4729:269:7",
													"statements": [
														{
															"nativeSrc": "4739:22:7",
															"nodeType": "YulAssignment",
															"src": "4739:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4753:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4753:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4759:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4759:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4749:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4749:3:7"
																},
																"nativeSrc": "4749:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4749:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4739:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4739:6:7"
																}
															]
														},
														{
															"nativeSrc": "4770:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4770:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4800:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4800:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4806:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4806:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4796:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4796:3:7"
																},
																"nativeSrc": "4796:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4796:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4774:18:7",
																	"nodeType": "YulTypedName",
																	"src": "4774:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4847:51:7",
																"nodeType": "YulBlock",
																"src": "4847:51:7",
																"statements": [
																	{
																		"nativeSrc": "4861:27:7",
																		"nodeType": "YulAssignment",
																		"src": "4861:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4875:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4875:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4883:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4883:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4871:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4871:3:7"
																			},
																			"nativeSrc": "4871:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4871:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4861:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4861:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4827:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4827:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4820:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4820:6:7"
																},
																"nativeSrc": "4820:26:7",
																"nodeType": "YulFunctionCall",
																"src": "4820:26:7"
															},
															"nativeSrc": "4817:81:7",
															"nodeType": "YulIf",
															"src": "4817:81:7"
														},
														{
															"body": {
																"nativeSrc": "4950:42:7",
																"nodeType": "YulBlock",
																"src": "4950:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4964:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4964:16:7"
																			},
																			"nativeSrc": "4964:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4964:18:7"
																		},
																		"nativeSrc": "4964:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4964:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4914:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4914:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4937:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4937:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4945:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4945:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4934:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4934:2:7"
																		},
																		"nativeSrc": "4934:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4934:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4911:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4911:2:7"
																},
																"nativeSrc": "4911:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4911:38:7"
															},
															"nativeSrc": "4908:84:7",
															"nodeType": "YulIf",
															"src": "4908:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4678:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4713:4:7",
														"nodeType": "YulTypedName",
														"src": "4713:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4722:6:7",
														"nodeType": "YulTypedName",
														"src": "4722:6:7",
														"type": ""
													}
												],
												"src": "4678:320:7"
											},
											{
												"body": {
													"nativeSrc": "5058:87:7",
													"nodeType": "YulBlock",
													"src": "5058:87:7",
													"statements": [
														{
															"nativeSrc": "5068:11:7",
															"nodeType": "YulAssignment",
															"src": "5068:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "5076:3:7",
																"nodeType": "YulIdentifier",
																"src": "5076:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5068:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5068:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5096:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5096:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5099:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5099:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5089:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5089:6:7"
																},
																"nativeSrc": "5089:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5089:14:7"
															},
															"nativeSrc": "5089:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "5089:14:7"
														},
														{
															"nativeSrc": "5112:26:7",
															"nodeType": "YulAssignment",
															"src": "5112:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5130:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5130:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5133:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5133:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5120:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5120:9:7"
																},
																"nativeSrc": "5120:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5120:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5112:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5112:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5004:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5045:3:7",
														"nodeType": "YulTypedName",
														"src": "5045:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5053:4:7",
														"nodeType": "YulTypedName",
														"src": "5053:4:7",
														"type": ""
													}
												],
												"src": "5004:141:7"
											},
											{
												"body": {
													"nativeSrc": "5195:49:7",
													"nodeType": "YulBlock",
													"src": "5195:49:7",
													"statements": [
														{
															"nativeSrc": "5205:33:7",
															"nodeType": "YulAssignment",
															"src": "5205:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5223:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5223:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5230:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5230:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5219:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:7"
																		},
																		"nativeSrc": "5219:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5219:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5235:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5235:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5215:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5215:3:7"
																},
																"nativeSrc": "5215:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5215:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5205:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5205:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5151:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5178:5:7",
														"nodeType": "YulTypedName",
														"src": "5178:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5188:6:7",
														"nodeType": "YulTypedName",
														"src": "5188:6:7",
														"type": ""
													}
												],
												"src": "5151:93:7"
											},
											{
												"body": {
													"nativeSrc": "5303:54:7",
													"nodeType": "YulBlock",
													"src": "5303:54:7",
													"statements": [
														{
															"nativeSrc": "5313:37:7",
															"nodeType": "YulAssignment",
															"src": "5313:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5338:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5338:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5344:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5344:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5334:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5334:3:7"
																},
																"nativeSrc": "5334:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5334:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5313:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5313:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5250:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5278:4:7",
														"nodeType": "YulTypedName",
														"src": "5278:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5284:5:7",
														"nodeType": "YulTypedName",
														"src": "5284:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5294:8:7",
														"nodeType": "YulTypedName",
														"src": "5294:8:7",
														"type": ""
													}
												],
												"src": "5250:107:7"
											},
											{
												"body": {
													"nativeSrc": "5439:317:7",
													"nodeType": "YulBlock",
													"src": "5439:317:7",
													"statements": [
														{
															"nativeSrc": "5449:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5449:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5470:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5470:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5482:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5482:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5466:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5466:3:7"
																},
																"nativeSrc": "5466:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5466:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5453:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5453:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5493:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5493:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5524:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5524:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5535:66:7",
																		"nodeType": "YulLiteral",
																		"src": "5535:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5505:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5505:18:7"
																},
																"nativeSrc": "5505:97:7",
																"nodeType": "YulFunctionCall",
																"src": "5505:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5497:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5497:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5611:51:7",
															"nodeType": "YulAssignment",
															"src": "5611:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5642:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5653:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5653:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5623:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5623:18:7"
																},
																"nativeSrc": "5623:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5623:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5611:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5611:8:7"
																}
															]
														},
														{
															"nativeSrc": "5671:30:7",
															"nodeType": "YulAssignment",
															"src": "5671:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5684:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5684:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5695:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5695:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5691:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5691:3:7"
																		},
																		"nativeSrc": "5691:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5691:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5680:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5680:3:7"
																},
																"nativeSrc": "5680:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5680:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5671:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5671:5:7"
																}
															]
														},
														{
															"nativeSrc": "5710:40:7",
															"nodeType": "YulAssignment",
															"src": "5710:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5723:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5723:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5734:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5734:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5744:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5744:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5730:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5730:3:7"
																		},
																		"nativeSrc": "5730:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5730:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5720:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5720:2:7"
																},
																"nativeSrc": "5720:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5720:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5710:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5710:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5363:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5400:5:7",
														"nodeType": "YulTypedName",
														"src": "5400:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5407:10:7",
														"nodeType": "YulTypedName",
														"src": "5407:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5419:8:7",
														"nodeType": "YulTypedName",
														"src": "5419:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5432:6:7",
														"nodeType": "YulTypedName",
														"src": "5432:6:7",
														"type": ""
													}
												],
												"src": "5363:393:7"
											},
											{
												"body": {
													"nativeSrc": "5807:32:7",
													"nodeType": "YulBlock",
													"src": "5807:32:7",
													"statements": [
														{
															"nativeSrc": "5817:16:7",
															"nodeType": "YulAssignment",
															"src": "5817:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "5828:5:7",
																"nodeType": "YulIdentifier",
																"src": "5828:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5817:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5817:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5762:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5789:5:7",
														"nodeType": "YulTypedName",
														"src": "5789:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5799:7:7",
														"nodeType": "YulTypedName",
														"src": "5799:7:7",
														"type": ""
													}
												],
												"src": "5762:77:7"
											},
											{
												"body": {
													"nativeSrc": "5877:28:7",
													"nodeType": "YulBlock",
													"src": "5877:28:7",
													"statements": [
														{
															"nativeSrc": "5887:12:7",
															"nodeType": "YulAssignment",
															"src": "5887:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5894:5:7",
																"nodeType": "YulIdentifier",
																"src": "5894:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5887:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5887:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5845:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5863:5:7",
														"nodeType": "YulTypedName",
														"src": "5863:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5873:3:7",
														"nodeType": "YulTypedName",
														"src": "5873:3:7",
														"type": ""
													}
												],
												"src": "5845:60:7"
											},
											{
												"body": {
													"nativeSrc": "5971:82:7",
													"nodeType": "YulBlock",
													"src": "5971:82:7",
													"statements": [
														{
															"nativeSrc": "5981:66:7",
															"nodeType": "YulAssignment",
															"src": "5981:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6039:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6039:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6021:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "6021:17:7"
																				},
																				"nativeSrc": "6021:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6021:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6012:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "6012:8:7"
																		},
																		"nativeSrc": "6012:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6012:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5994:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5994:17:7"
																},
																"nativeSrc": "5994:53:7",
																"nodeType": "YulFunctionCall",
																"src": "5994:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5981:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5981:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5911:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5951:5:7",
														"nodeType": "YulTypedName",
														"src": "5951:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5961:9:7",
														"nodeType": "YulTypedName",
														"src": "5961:9:7",
														"type": ""
													}
												],
												"src": "5911:142:7"
											},
											{
												"body": {
													"nativeSrc": "6106:28:7",
													"nodeType": "YulBlock",
													"src": "6106:28:7",
													"statements": [
														{
															"nativeSrc": "6116:12:7",
															"nodeType": "YulAssignment",
															"src": "6116:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6123:5:7",
																"nodeType": "YulIdentifier",
																"src": "6123:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6116:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6116:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6059:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6092:5:7",
														"nodeType": "YulTypedName",
														"src": "6092:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6102:3:7",
														"nodeType": "YulTypedName",
														"src": "6102:3:7",
														"type": ""
													}
												],
												"src": "6059:75:7"
											},
											{
												"body": {
													"nativeSrc": "6216:193:7",
													"nodeType": "YulBlock",
													"src": "6216:193:7",
													"statements": [
														{
															"nativeSrc": "6226:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6226:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6281:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "6281:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6250:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6250:30:7"
																},
																"nativeSrc": "6250:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6250:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6230:16:7",
																	"nodeType": "YulTypedName",
																	"src": "6230:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6305:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6305:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6345:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6345:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6339:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6339:5:7"
																				},
																				"nativeSrc": "6339:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6339:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6352:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6352:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6384:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "6384:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6360:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "6360:23:7"
																				},
																				"nativeSrc": "6360:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6360:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6311:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "6311:27:7"
																		},
																		"nativeSrc": "6311:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6311:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6298:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6298:6:7"
																},
																"nativeSrc": "6298:105:7",
																"nodeType": "YulFunctionCall",
																"src": "6298:105:7"
															},
															"nativeSrc": "6298:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "6298:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6140:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6193:4:7",
														"nodeType": "YulTypedName",
														"src": "6193:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6199:6:7",
														"nodeType": "YulTypedName",
														"src": "6199:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6207:7:7",
														"nodeType": "YulTypedName",
														"src": "6207:7:7",
														"type": ""
													}
												],
												"src": "6140:269:7"
											},
											{
												"body": {
													"nativeSrc": "6464:24:7",
													"nodeType": "YulBlock",
													"src": "6464:24:7",
													"statements": [
														{
															"nativeSrc": "6474:8:7",
															"nodeType": "YulAssignment",
															"src": "6474:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6481:1:7",
																"nodeType": "YulLiteral",
																"src": "6481:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6474:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6474:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6415:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6460:3:7",
														"nodeType": "YulTypedName",
														"src": "6460:3:7",
														"type": ""
													}
												],
												"src": "6415:73:7"
											},
											{
												"body": {
													"nativeSrc": "6547:136:7",
													"nodeType": "YulBlock",
													"src": "6547:136:7",
													"statements": [
														{
															"nativeSrc": "6557:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6557:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6571:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6571:30:7"
																},
																"nativeSrc": "6571:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6571:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6561:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6561:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6656:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6656:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6662:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6662:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6670:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6670:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6612:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6612:43:7"
																},
																"nativeSrc": "6612:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6612:65:7"
															},
															"nativeSrc": "6612:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6612:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6494:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6533:4:7",
														"nodeType": "YulTypedName",
														"src": "6533:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6539:6:7",
														"nodeType": "YulTypedName",
														"src": "6539:6:7",
														"type": ""
													}
												],
												"src": "6494:189:7"
											},
											{
												"body": {
													"nativeSrc": "6739:136:7",
													"nodeType": "YulBlock",
													"src": "6739:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6806:63:7",
																"nodeType": "YulBlock",
																"src": "6806:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6850:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6850:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6857:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6857:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6820:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "6820:29:7"
																			},
																			"nativeSrc": "6820:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6820:39:7"
																		},
																		"nativeSrc": "6820:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6820:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6759:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6759:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6766:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6766:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6756:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6756:2:7"
																},
																"nativeSrc": "6756:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6756:14:7"
															},
															"nativeSrc": "6749:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6771:26:7",
																"nodeType": "YulBlock",
																"src": "6771:26:7",
																"statements": [
																	{
																		"nativeSrc": "6773:22:7",
																		"nodeType": "YulAssignment",
																		"src": "6773:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6786:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6786:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6793:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6793:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6782:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6782:3:7"
																			},
																			"nativeSrc": "6782:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6782:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6773:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6773:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6753:2:7",
																"nodeType": "YulBlock",
																"src": "6753:2:7",
																"statements": []
															},
															"src": "6749:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6689:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6727:5:7",
														"nodeType": "YulTypedName",
														"src": "6727:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6734:3:7",
														"nodeType": "YulTypedName",
														"src": "6734:3:7",
														"type": ""
													}
												],
												"src": "6689:186:7"
											},
											{
												"body": {
													"nativeSrc": "6960:464:7",
													"nodeType": "YulBlock",
													"src": "6960:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6986:431:7",
																"nodeType": "YulBlock",
																"src": "6986:431:7",
																"statements": [
																	{
																		"nativeSrc": "7000:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7000:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7048:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7048:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7016:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "7016:31:7"
																			},
																			"nativeSrc": "7016:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7016:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7004:8:7",
																				"nodeType": "YulTypedName",
																				"src": "7004:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7067:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7067:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7090:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7090:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7118:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "7118:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7100:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "7100:17:7"
																					},
																					"nativeSrc": "7100:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7100:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7086:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7086:3:7"
																			},
																			"nativeSrc": "7086:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7086:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7071:11:7",
																				"nodeType": "YulTypedName",
																				"src": "7071:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7287:27:7",
																			"nodeType": "YulBlock",
																			"src": "7287:27:7",
																			"statements": [
																				{
																					"nativeSrc": "7289:23:7",
																					"nodeType": "YulAssignment",
																					"src": "7289:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7304:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7304:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7289:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "7289:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7271:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "7271:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7283:2:7",
																					"nodeType": "YulLiteral",
																					"src": "7283:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7268:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7268:2:7"
																			},
																			"nativeSrc": "7268:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7268:18:7"
																		},
																		"nativeSrc": "7265:49:7",
																		"nodeType": "YulIf",
																		"src": "7265:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7356:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "7356:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7373:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7373:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7401:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7401:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7383:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "7383:17:7"
																							},
																							"nativeSrc": "7383:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7383:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7369:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7369:3:7"
																					},
																					"nativeSrc": "7369:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7369:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7327:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "7327:28:7"
																			},
																			"nativeSrc": "7327:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7327:80:7"
																		},
																		"nativeSrc": "7327:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7327:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6977:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6977:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6982:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6982:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6974:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6974:2:7"
																},
																"nativeSrc": "6974:11:7",
																"nodeType": "YulFunctionCall",
																"src": "6974:11:7"
															},
															"nativeSrc": "6971:446:7",
															"nodeType": "YulIf",
															"src": "6971:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6881:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6936:5:7",
														"nodeType": "YulTypedName",
														"src": "6936:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6943:3:7",
														"nodeType": "YulTypedName",
														"src": "6943:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6948:10:7",
														"nodeType": "YulTypedName",
														"src": "6948:10:7",
														"type": ""
													}
												],
												"src": "6881:543:7"
											},
											{
												"body": {
													"nativeSrc": "7493:54:7",
													"nodeType": "YulBlock",
													"src": "7493:54:7",
													"statements": [
														{
															"nativeSrc": "7503:37:7",
															"nodeType": "YulAssignment",
															"src": "7503:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7528:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7528:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7534:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7534:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7524:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7524:3:7"
																},
																"nativeSrc": "7524:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7524:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7503:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7503:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7430:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7468:4:7",
														"nodeType": "YulTypedName",
														"src": "7468:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7474:5:7",
														"nodeType": "YulTypedName",
														"src": "7474:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7484:8:7",
														"nodeType": "YulTypedName",
														"src": "7484:8:7",
														"type": ""
													}
												],
												"src": "7430:117:7"
											},
											{
												"body": {
													"nativeSrc": "7604:118:7",
													"nodeType": "YulBlock",
													"src": "7604:118:7",
													"statements": [
														{
															"nativeSrc": "7614:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7614:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7663:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7663:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7666:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7666:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7659:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7659:3:7"
																				},
																				"nativeSrc": "7659:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7659:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7678:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7678:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7674:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7674:3:7"
																				},
																				"nativeSrc": "7674:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7674:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7630:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7630:28:7"
																		},
																		"nativeSrc": "7630:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7630:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7626:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7626:3:7"
																},
																"nativeSrc": "7626:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7626:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7618:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7618:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7691:25:7",
															"nodeType": "YulAssignment",
															"src": "7691:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7705:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7705:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7711:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7711:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7701:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7701:3:7"
																},
																"nativeSrc": "7701:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7701:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7691:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7691:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7553:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7581:4:7",
														"nodeType": "YulTypedName",
														"src": "7581:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7587:5:7",
														"nodeType": "YulTypedName",
														"src": "7587:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7597:6:7",
														"nodeType": "YulTypedName",
														"src": "7597:6:7",
														"type": ""
													}
												],
												"src": "7553:169:7"
											},
											{
												"body": {
													"nativeSrc": "7808:214:7",
													"nodeType": "YulBlock",
													"src": "7808:214:7",
													"statements": [
														{
															"nativeSrc": "7941:37:7",
															"nodeType": "YulAssignment",
															"src": "7941:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7968:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7968:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7974:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7974:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7949:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7949:18:7"
																},
																"nativeSrc": "7949:29:7",
																"nodeType": "YulFunctionCall",
																"src": "7949:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7941:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7941:4:7"
																}
															]
														},
														{
															"nativeSrc": "7987:29:7",
															"nodeType": "YulAssignment",
															"src": "7987:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7998:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7998:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8008:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8008:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8011:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8011:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8004:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8004:3:7"
																		},
																		"nativeSrc": "8004:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8004:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7995:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7995:2:7"
																},
																"nativeSrc": "7995:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7995:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7987:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7987:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7727:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7789:4:7",
														"nodeType": "YulTypedName",
														"src": "7789:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7795:3:7",
														"nodeType": "YulTypedName",
														"src": "7795:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7803:4:7",
														"nodeType": "YulTypedName",
														"src": "7803:4:7",
														"type": ""
													}
												],
												"src": "7727:295:7"
											},
											{
												"body": {
													"nativeSrc": "8119:1303:7",
													"nodeType": "YulBlock",
													"src": "8119:1303:7",
													"statements": [
														{
															"nativeSrc": "8130:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8130:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8177:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8177:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8144:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "8144:32:7"
																},
																"nativeSrc": "8144:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8144:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8134:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8134:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8266:22:7",
																"nodeType": "YulBlock",
																"src": "8266:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8268:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8268:16:7"
																			},
																			"nativeSrc": "8268:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8268:18:7"
																		},
																		"nativeSrc": "8268:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8268:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8238:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8238:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8246:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8246:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8235:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8235:2:7"
																},
																"nativeSrc": "8235:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8235:30:7"
															},
															"nativeSrc": "8232:56:7",
															"nodeType": "YulIf",
															"src": "8232:56:7"
														},
														{
															"nativeSrc": "8298:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8298:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8344:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8344:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8338:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8338:5:7"
																		},
																		"nativeSrc": "8338:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8338:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8312:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "8312:25:7"
																},
																"nativeSrc": "8312:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8312:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8302:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8302:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8443:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8443:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8449:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8449:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8457:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8457:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8397:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "8397:45:7"
																},
																"nativeSrc": "8397:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8397:67:7"
															},
															"nativeSrc": "8397:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "8397:67:7"
														},
														{
															"nativeSrc": "8474:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8474:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8491:1:7",
																"nodeType": "YulLiteral",
																"src": "8491:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8478:9:7",
																	"nodeType": "YulTypedName",
																	"src": "8478:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8502:17:7",
															"nodeType": "YulAssignment",
															"src": "8502:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8515:4:7",
																"nodeType": "YulLiteral",
																"src": "8515:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8502:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "8502:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8566:611:7",
																		"nodeType": "YulBlock",
																		"src": "8566:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8580:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8580:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8599:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8599:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8611:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8611:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8607:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8607:3:7"
																							},
																							"nativeSrc": "8607:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8607:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8595:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8595:3:7"
																					},
																					"nativeSrc": "8595:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8595:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8584:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8584:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8631:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8631:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8677:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8677:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8645:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8645:31:7"
																					},
																					"nativeSrc": "8645:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8645:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8635:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8635:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8695:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8695:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8704:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8704:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8699:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8699:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8763:163:7",
																					"nodeType": "YulBlock",
																					"src": "8763:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8788:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8788:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8806:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "8806:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8811:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "8811:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8802:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8802:3:7"
																												},
																												"nativeSrc": "8802:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8802:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8796:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "8796:5:7"
																										},
																										"nativeSrc": "8796:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8796:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8781:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8781:6:7"
																								},
																								"nativeSrc": "8781:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8781:42:7"
																							},
																							"nativeSrc": "8781:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8781:42:7"
																						},
																						{
																							"nativeSrc": "8840:24:7",
																							"nodeType": "YulAssignment",
																							"src": "8840:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8854:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8854:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8862:1:7",
																										"nodeType": "YulLiteral",
																										"src": "8862:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8850:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8850:3:7"
																								},
																								"nativeSrc": "8850:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8850:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8840:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8840:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8881:31:7",
																							"nodeType": "YulAssignment",
																							"src": "8881:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8898:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "8898:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8909:2:7",
																										"nodeType": "YulLiteral",
																										"src": "8909:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8894:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8894:3:7"
																								},
																								"nativeSrc": "8894:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8894:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8881:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "8881:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8729:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8729:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8732:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8732:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8726:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8726:2:7"
																					},
																					"nativeSrc": "8726:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8726:14:7"
																				},
																				"nativeSrc": "8718:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8741:21:7",
																					"nodeType": "YulBlock",
																					"src": "8741:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8743:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8743:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8752:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "8752:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8755:4:7",
																										"nodeType": "YulLiteral",
																										"src": "8755:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8748:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8748:3:7"
																								},
																								"nativeSrc": "8748:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8748:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8743:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8743:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8722:3:7",
																					"nodeType": "YulBlock",
																					"src": "8722:3:7",
																					"statements": []
																				},
																				"src": "8718:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "8962:156:7",
																					"nodeType": "YulBlock",
																					"src": "8962:156:7",
																					"statements": [
																						{
																							"nativeSrc": "8980:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8980:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9007:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9007:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9012:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9012:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9003:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9003:3:7"
																										},
																										"nativeSrc": "9003:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9003:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8997:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8997:5:7"
																								},
																								"nativeSrc": "8997:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8997:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8984:9:7",
																									"nodeType": "YulTypedName",
																									"src": "8984:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9047:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9047:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9074:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9074:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9089:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "9089:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9097:4:7",
																														"nodeType": "YulLiteral",
																														"src": "9097:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9085:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "9085:3:7"
																												},
																												"nativeSrc": "9085:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "9085:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9055:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "9055:18:7"
																										},
																										"nativeSrc": "9055:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9055:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9040:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9040:6:7"
																								},
																								"nativeSrc": "9040:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9040:64:7"
																							},
																							"nativeSrc": "9040:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "9040:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8945:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8945:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8954:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8954:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8942:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8942:2:7"
																					},
																					"nativeSrc": "8942:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8942:19:7"
																				},
																				"nativeSrc": "8939:179:7",
																				"nodeType": "YulIf",
																				"src": "8939:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9138:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9152:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "9152:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9160:1:7",
																											"nodeType": "YulLiteral",
																											"src": "9160:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9148:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "9148:3:7"
																									},
																									"nativeSrc": "9148:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "9148:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9164:1:7",
																									"nodeType": "YulLiteral",
																									"src": "9164:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9144:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "9144:3:7"
																							},
																							"nativeSrc": "9144:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9144:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9131:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9131:6:7"
																					},
																					"nativeSrc": "9131:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9131:36:7"
																				},
																				"nativeSrc": "9131:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9131:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8559:618:7",
																	"nodeType": "YulCase",
																	"src": "8559:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8564:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8564:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9194:222:7",
																		"nodeType": "YulBlock",
																		"src": "9194:222:7",
																		"statements": [
																			{
																				"nativeSrc": "9208:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9208:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9221:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9221:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9212:5:7",
																						"nodeType": "YulTypedName",
																						"src": "9212:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9245:67:7",
																					"nodeType": "YulBlock",
																					"src": "9245:67:7",
																					"statements": [
																						{
																							"nativeSrc": "9263:35:7",
																							"nodeType": "YulAssignment",
																							"src": "9263:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9282:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9282:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9287:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9287:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9278:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9278:3:7"
																										},
																										"nativeSrc": "9278:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9278:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9272:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9272:5:7"
																								},
																								"nativeSrc": "9272:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9272:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9263:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9263:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9238:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9238:6:7"
																				},
																				"nativeSrc": "9235:77:7",
																				"nodeType": "YulIf",
																				"src": "9235:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9332:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9332:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9391:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9391:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9398:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9398:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9338:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "9338:52:7"
																							},
																							"nativeSrc": "9338:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9338:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9325:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9325:6:7"
																					},
																					"nativeSrc": "9325:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9325:81:7"
																				},
																				"nativeSrc": "9325:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9325:81:7"
																			}
																		]
																	},
																	"nativeSrc": "9186:230:7",
																	"nodeType": "YulCase",
																	"src": "9186:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8539:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8539:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8547:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8547:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8536:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8536:2:7"
																},
																"nativeSrc": "8536:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8536:14:7"
															},
															"nativeSrc": "8529:887:7",
															"nodeType": "YulSwitch",
															"src": "8529:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8027:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8108:4:7",
														"nodeType": "YulTypedName",
														"src": "8108:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8114:3:7",
														"nodeType": "YulTypedName",
														"src": "8114:3:7",
														"type": ""
													}
												],
												"src": "8027:1395:7"
											},
											{
												"body": {
													"nativeSrc": "9493:53:7",
													"nodeType": "YulBlock",
													"src": "9493:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9510:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9510:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9533:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9533:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9515:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9515:17:7"
																		},
																		"nativeSrc": "9515:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9515:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9503:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9503:6:7"
																},
																"nativeSrc": "9503:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9503:37:7"
															},
															"nativeSrc": "9503:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9503:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9428:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9481:5:7",
														"nodeType": "YulTypedName",
														"src": "9481:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9488:3:7",
														"nodeType": "YulTypedName",
														"src": "9488:3:7",
														"type": ""
													}
												],
												"src": "9428:118:7"
											},
											{
												"body": {
													"nativeSrc": "9650:124:7",
													"nodeType": "YulBlock",
													"src": "9650:124:7",
													"statements": [
														{
															"nativeSrc": "9660:26:7",
															"nodeType": "YulAssignment",
															"src": "9660:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9672:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9672:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9683:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9683:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9668:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9668:3:7"
																},
																"nativeSrc": "9668:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9668:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9660:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9660:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9740:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9740:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9753:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9753:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9764:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9764:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9749:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9749:3:7"
																		},
																		"nativeSrc": "9749:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9749:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9696:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9696:43:7"
																},
																"nativeSrc": "9696:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9696:71:7"
															},
															"nativeSrc": "9696:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9696:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9552:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9622:9:7",
														"nodeType": "YulTypedName",
														"src": "9622:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9634:6:7",
														"nodeType": "YulTypedName",
														"src": "9634:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9645:4:7",
														"nodeType": "YulTypedName",
														"src": "9645:4:7",
														"type": ""
													}
												],
												"src": "9552:222:7"
											},
											{
												"body": {
													"nativeSrc": "9808:152:7",
													"nodeType": "YulBlock",
													"src": "9808:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9825:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9825:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9828:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9828:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9818:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9818:6:7"
																},
																"nativeSrc": "9818:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9818:88:7"
															},
															"nativeSrc": "9818:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9818:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9922:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9922:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9925:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9925:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9915:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9915:6:7"
																},
																"nativeSrc": "9915:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9915:15:7"
															},
															"nativeSrc": "9915:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9915:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9946:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9946:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9949:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9949:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9939:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9939:6:7"
																},
																"nativeSrc": "9939:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9939:15:7"
															},
															"nativeSrc": "9939:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9939:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9780:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9780:180:7"
											},
											{
												"body": {
													"nativeSrc": "10017:51:7",
													"nodeType": "YulBlock",
													"src": "10017:51:7",
													"statements": [
														{
															"nativeSrc": "10027:34:7",
															"nodeType": "YulAssignment",
															"src": "10027:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10052:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10052:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "10055:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "10055:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "10048:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10048:3:7"
																},
																"nativeSrc": "10048:13:7",
																"nodeType": "YulFunctionCall",
																"src": "10048:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "10027:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "10027:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "9966:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9998:5:7",
														"nodeType": "YulTypedName",
														"src": "9998:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "10008:8:7",
														"nodeType": "YulTypedName",
														"src": "10008:8:7",
														"type": ""
													}
												],
												"src": "9966:102:7"
											},
											{
												"body": {
													"nativeSrc": "10147:775:7",
													"nodeType": "YulBlock",
													"src": "10147:775:7",
													"statements": [
														{
															"nativeSrc": "10157:15:7",
															"nodeType": "YulAssignment",
															"src": "10157:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "10166:6:7",
																"nodeType": "YulIdentifier",
																"src": "10166:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10157:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "10157:5:7"
																}
															]
														},
														{
															"nativeSrc": "10181:14:7",
															"nodeType": "YulAssignment",
															"src": "10181:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "10190:5:7",
																"nodeType": "YulIdentifier",
																"src": "10190:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10181:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10181:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10239:677:7",
																"nodeType": "YulBlock",
																"src": "10239:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "10327:22:7",
																			"nodeType": "YulBlock",
																			"src": "10327:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "10329:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "10329:16:7"
																						},
																						"nativeSrc": "10329:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10329:18:7"
																					},
																					"nativeSrc": "10329:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "10329:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10305:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "10305:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "10315:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10315:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "10320:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "10320:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "10311:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10311:3:7"
																					},
																					"nativeSrc": "10311:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10311:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10302:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "10302:2:7"
																			},
																			"nativeSrc": "10302:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10302:24:7"
																		},
																		"nativeSrc": "10299:50:7",
																		"nodeType": "YulIf",
																		"src": "10299:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "10394:419:7",
																			"nodeType": "YulBlock",
																			"src": "10394:419:7",
																			"statements": [
																				{
																					"nativeSrc": "10774:25:7",
																					"nodeType": "YulAssignment",
																					"src": "10774:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "10787:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "10787:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "10794:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "10794:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "10783:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10783:3:7"
																						},
																						"nativeSrc": "10783:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10783:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "10774:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "10774:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10369:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "10369:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10379:1:7",
																					"nodeType": "YulLiteral",
																					"src": "10379:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10365:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "10365:3:7"
																			},
																			"nativeSrc": "10365:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10365:16:7"
																		},
																		"nativeSrc": "10362:451:7",
																		"nodeType": "YulIf",
																		"src": "10362:451:7"
																	},
																	{
																		"nativeSrc": "10826:23:7",
																		"nodeType": "YulAssignment",
																		"src": "10826:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10838:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "10838:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "10844:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "10844:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "10834:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "10834:3:7"
																			},
																			"nativeSrc": "10834:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10834:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "10826:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10826:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10862:44:7",
																		"nodeType": "YulAssignment",
																		"src": "10862:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10897:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "10897:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "10874:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "10874:22:7"
																			},
																			"nativeSrc": "10874:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10874:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "10862:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "10862:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10215:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "10215:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10225:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10225:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10212:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10212:2:7"
																},
																"nativeSrc": "10212:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10212:15:7"
															},
															"nativeSrc": "10204:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10228:2:7",
																"nodeType": "YulBlock",
																"src": "10228:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "10208:3:7",
																"nodeType": "YulBlock",
																"src": "10208:3:7",
																"statements": []
															},
															"src": "10204:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "10074:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "10102:6:7",
														"nodeType": "YulTypedName",
														"src": "10102:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "10110:5:7",
														"nodeType": "YulTypedName",
														"src": "10110:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10117:8:7",
														"nodeType": "YulTypedName",
														"src": "10117:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10127:3:7",
														"nodeType": "YulTypedName",
														"src": "10127:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10135:5:7",
														"nodeType": "YulTypedName",
														"src": "10135:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "10142:4:7",
														"nodeType": "YulTypedName",
														"src": "10142:4:7",
														"type": ""
													}
												],
												"src": "10074:848:7"
											},
											{
												"body": {
													"nativeSrc": "10988:1013:7",
													"nodeType": "YulBlock",
													"src": "10988:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "11183:20:7",
																"nodeType": "YulBlock",
																"src": "11183:20:7",
																"statements": [
																	{
																		"nativeSrc": "11185:10:7",
																		"nodeType": "YulAssignment",
																		"src": "11185:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11194:1:7",
																			"nodeType": "YulLiteral",
																			"src": "11194:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11185:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11185:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11196:5:7",
																		"nodeType": "YulLeave",
																		"src": "11196:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11173:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "11173:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11166:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11166:6:7"
																},
																"nativeSrc": "11166:16:7",
																"nodeType": "YulFunctionCall",
																"src": "11166:16:7"
															},
															"nativeSrc": "11163:40:7",
															"nodeType": "YulIf",
															"src": "11163:40:7"
														},
														{
															"body": {
																"nativeSrc": "11228:20:7",
																"nodeType": "YulBlock",
																"src": "11228:20:7",
																"statements": [
																	{
																		"nativeSrc": "11230:10:7",
																		"nodeType": "YulAssignment",
																		"src": "11230:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11239:1:7",
																			"nodeType": "YulLiteral",
																			"src": "11239:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11230:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11230:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11241:5:7",
																		"nodeType": "YulLeave",
																		"src": "11241:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11222:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11222:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11215:6:7"
																},
																"nativeSrc": "11215:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11215:12:7"
															},
															"nativeSrc": "11212:36:7",
															"nodeType": "YulIf",
															"src": "11212:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "11358:20:7",
																		"nodeType": "YulBlock",
																		"src": "11358:20:7",
																		"statements": [
																			{
																				"nativeSrc": "11360:10:7",
																				"nodeType": "YulAssignment",
																				"src": "11360:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11369:1:7",
																					"nodeType": "YulLiteral",
																					"src": "11369:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11360:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11360:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "11371:5:7",
																				"nodeType": "YulLeave",
																				"src": "11371:5:7"
																			}
																		]
																	},
																	"nativeSrc": "11351:27:7",
																	"nodeType": "YulCase",
																	"src": "11351:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11356:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11356:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11402:176:7",
																		"nodeType": "YulBlock",
																		"src": "11402:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "11437:22:7",
																					"nodeType": "YulBlock",
																					"src": "11437:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11439:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "11439:16:7"
																								},
																								"nativeSrc": "11439:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "11439:18:7"
																							},
																							"nativeSrc": "11439:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "11439:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "11422:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "11422:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11432:3:7",
																							"nodeType": "YulLiteral",
																							"src": "11432:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11419:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "11419:2:7"
																					},
																					"nativeSrc": "11419:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "11419:17:7"
																				},
																				"nativeSrc": "11416:43:7",
																				"nodeType": "YulIf",
																				"src": "11416:43:7"
																			},
																			{
																				"nativeSrc": "11472:25:7",
																				"nodeType": "YulAssignment",
																				"src": "11472:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11485:1:7",
																							"nodeType": "YulLiteral",
																							"src": "11485:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "11488:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "11488:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "11481:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11481:3:7"
																					},
																					"nativeSrc": "11481:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "11481:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11472:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11472:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11528:22:7",
																					"nodeType": "YulBlock",
																					"src": "11528:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11530:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "11530:16:7"
																								},
																								"nativeSrc": "11530:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "11530:18:7"
																							},
																							"nativeSrc": "11530:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "11530:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "11516:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "11516:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "11523:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "11523:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11513:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "11513:2:7"
																					},
																					"nativeSrc": "11513:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "11513:14:7"
																				},
																				"nativeSrc": "11510:40:7",
																				"nodeType": "YulIf",
																				"src": "11510:40:7"
																			},
																			{
																				"nativeSrc": "11563:5:7",
																				"nodeType": "YulLeave",
																				"src": "11563:5:7"
																			}
																		]
																	},
																	"nativeSrc": "11387:191:7",
																	"nodeType": "YulCase",
																	"src": "11387:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11392:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11392:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "11308:4:7",
																"nodeType": "YulIdentifier",
																"src": "11308:4:7"
															},
															"nativeSrc": "11301:277:7",
															"nodeType": "YulSwitch",
															"src": "11301:277:7"
														},
														{
															"body": {
																"nativeSrc": "11710:123:7",
																"nodeType": "YulBlock",
																"src": "11710:123:7",
																"statements": [
																	{
																		"nativeSrc": "11724:28:7",
																		"nodeType": "YulAssignment",
																		"src": "11724:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11737:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "11737:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "11743:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "11743:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "11733:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "11733:3:7"
																			},
																			"nativeSrc": "11733:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11733:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11724:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11724:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11783:22:7",
																			"nodeType": "YulBlock",
																			"src": "11783:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11785:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "11785:16:7"
																						},
																						"nativeSrc": "11785:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11785:18:7"
																					},
																					"nativeSrc": "11785:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "11785:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "11771:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "11771:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "11778:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11778:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11768:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "11768:2:7"
																			},
																			"nativeSrc": "11768:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11768:14:7"
																		},
																		"nativeSrc": "11765:40:7",
																		"nodeType": "YulIf",
																		"src": "11765:40:7"
																	},
																	{
																		"nativeSrc": "11818:5:7",
																		"nodeType": "YulLeave",
																		"src": "11818:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11613:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "11613:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11619:2:7",
																						"nodeType": "YulLiteral",
																						"src": "11619:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11610:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "11610:2:7"
																				},
																				"nativeSrc": "11610:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11610:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11627:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "11627:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11637:2:7",
																						"nodeType": "YulLiteral",
																						"src": "11637:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11624:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "11624:2:7"
																				},
																				"nativeSrc": "11624:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11624:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11606:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11606:3:7"
																		},
																		"nativeSrc": "11606:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11606:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11662:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "11662:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11668:3:7",
																						"nodeType": "YulLiteral",
																						"src": "11668:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11659:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "11659:2:7"
																				},
																				"nativeSrc": "11659:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11659:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11677:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "11677:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11687:2:7",
																						"nodeType": "YulLiteral",
																						"src": "11687:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11674:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "11674:2:7"
																				},
																				"nativeSrc": "11674:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11674:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11655:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11655:3:7"
																		},
																		"nativeSrc": "11655:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11655:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11590:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11590:2:7"
																},
																"nativeSrc": "11590:111:7",
																"nodeType": "YulFunctionCall",
																"src": "11590:111:7"
															},
															"nativeSrc": "11587:246:7",
															"nodeType": "YulIf",
															"src": "11587:246:7"
														},
														{
															"nativeSrc": "11843:57:7",
															"nodeType": "YulAssignment",
															"src": "11843:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11877:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11877:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11880:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11880:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11886:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "11886:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "11896:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11896:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "11858:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "11858:18:7"
																},
																"nativeSrc": "11858:42:7",
																"nodeType": "YulFunctionCall",
																"src": "11858:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11843:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11843:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "11850:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11850:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11939:22:7",
																"nodeType": "YulBlock",
																"src": "11939:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11941:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11941:16:7"
																			},
																			"nativeSrc": "11941:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11941:18:7"
																		},
																		"nativeSrc": "11941:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11941:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11916:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11916:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "11927:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "11927:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "11932:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11932:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "11923:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11923:3:7"
																		},
																		"nativeSrc": "11923:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11923:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11913:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11913:2:7"
																},
																"nativeSrc": "11913:25:7",
																"nodeType": "YulFunctionCall",
																"src": "11913:25:7"
															},
															"nativeSrc": "11910:51:7",
															"nodeType": "YulIf",
															"src": "11910:51:7"
														},
														{
															"nativeSrc": "11970:25:7",
															"nodeType": "YulAssignment",
															"src": "11970:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11983:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11983:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11990:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11990:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11979:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11979:3:7"
																},
																"nativeSrc": "11979:16:7",
																"nodeType": "YulFunctionCall",
																"src": "11979:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11970:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11970:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "10928:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10958:4:7",
														"nodeType": "YulTypedName",
														"src": "10958:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10964:8:7",
														"nodeType": "YulTypedName",
														"src": "10964:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10974:3:7",
														"nodeType": "YulTypedName",
														"src": "10974:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10982:5:7",
														"nodeType": "YulTypedName",
														"src": "10982:5:7",
														"type": ""
													}
												],
												"src": "10928:1073:7"
											},
											{
												"body": {
													"nativeSrc": "12071:217:7",
													"nodeType": "YulBlock",
													"src": "12071:217:7",
													"statements": [
														{
															"nativeSrc": "12081:31:7",
															"nodeType": "YulAssignment",
															"src": "12081:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12107:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12107:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12089:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12089:17:7"
																},
																"nativeSrc": "12089:23:7",
																"nodeType": "YulFunctionCall",
																"src": "12089:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "12081:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12081:4:7"
																}
															]
														},
														{
															"nativeSrc": "12121:37:7",
															"nodeType": "YulAssignment",
															"src": "12121:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "12149:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "12149:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "12133:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "12133:15:7"
																},
																"nativeSrc": "12133:25:7",
																"nodeType": "YulFunctionCall",
																"src": "12133:25:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "12121:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "12121:8:7"
																}
															]
														},
														{
															"nativeSrc": "12168:113:7",
															"nodeType": "YulAssignment",
															"src": "12168:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12198:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12198:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "12204:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "12204:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12214:66:7",
																		"nodeType": "YulLiteral",
																		"src": "12214:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "12177:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "12177:20:7"
																},
																"nativeSrc": "12177:104:7",
																"nodeType": "YulFunctionCall",
																"src": "12177:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "12168:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "12168:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "12007:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "12046:4:7",
														"nodeType": "YulTypedName",
														"src": "12046:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "12052:8:7",
														"nodeType": "YulTypedName",
														"src": "12052:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "12065:5:7",
														"nodeType": "YulTypedName",
														"src": "12065:5:7",
														"type": ""
													}
												],
												"src": "12007:281:7"
											},
											{
												"body": {
													"nativeSrc": "12342:362:7",
													"nodeType": "YulBlock",
													"src": "12342:362:7",
													"statements": [
														{
															"nativeSrc": "12352:25:7",
															"nodeType": "YulAssignment",
															"src": "12352:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12375:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12375:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12357:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12357:17:7"
																},
																"nativeSrc": "12357:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12357:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12352:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12352:1:7"
																}
															]
														},
														{
															"nativeSrc": "12386:25:7",
															"nodeType": "YulAssignment",
															"src": "12386:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12409:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12409:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12391:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12391:17:7"
																},
																"nativeSrc": "12391:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12391:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12386:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12386:1:7"
																}
															]
														},
														{
															"nativeSrc": "12420:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12420:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12443:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12443:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12446:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12446:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12439:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12439:3:7"
																},
																"nativeSrc": "12439:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12439:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12424:11:7",
																	"nodeType": "YulTypedName",
																	"src": "12424:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12457:41:7",
															"nodeType": "YulAssignment",
															"src": "12457:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12486:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "12486:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12468:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12468:17:7"
																},
																"nativeSrc": "12468:30:7",
																"nodeType": "YulFunctionCall",
																"src": "12468:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12457:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "12457:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12675:22:7",
																"nodeType": "YulBlock",
																"src": "12675:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12677:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12677:16:7"
																			},
																			"nativeSrc": "12677:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12677:18:7"
																		},
																		"nativeSrc": "12677:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12677:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12608:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "12608:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12601:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "12601:6:7"
																				},
																				"nativeSrc": "12601:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12601:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12631:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "12631:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12638:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "12638:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12647:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "12647:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12634:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "12634:3:7"
																						},
																						"nativeSrc": "12634:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "12634:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12628:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "12628:2:7"
																				},
																				"nativeSrc": "12628:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12628:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12581:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "12581:2:7"
																		},
																		"nativeSrc": "12581:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12581:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12561:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12561:6:7"
																},
																"nativeSrc": "12561:113:7",
																"nodeType": "YulFunctionCall",
																"src": "12561:113:7"
															},
															"nativeSrc": "12558:139:7",
															"nodeType": "YulIf",
															"src": "12558:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12294:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12325:1:7",
														"nodeType": "YulTypedName",
														"src": "12325:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12328:1:7",
														"nodeType": "YulTypedName",
														"src": "12328:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12334:7:7",
														"nodeType": "YulTypedName",
														"src": "12334:7:7",
														"type": ""
													}
												],
												"src": "12294:410:7"
											},
											{
												"body": {
													"nativeSrc": "12754:147:7",
													"nodeType": "YulBlock",
													"src": "12754:147:7",
													"statements": [
														{
															"nativeSrc": "12764:25:7",
															"nodeType": "YulAssignment",
															"src": "12764:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12787:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12787:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12769:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12769:17:7"
																},
																"nativeSrc": "12769:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12769:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12764:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12764:1:7"
																}
															]
														},
														{
															"nativeSrc": "12798:25:7",
															"nodeType": "YulAssignment",
															"src": "12798:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12821:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12821:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12803:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12803:17:7"
																},
																"nativeSrc": "12803:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12803:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12798:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12798:1:7"
																}
															]
														},
														{
															"nativeSrc": "12832:16:7",
															"nodeType": "YulAssignment",
															"src": "12832:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12843:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12843:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12846:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12846:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12839:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12839:3:7"
																},
																"nativeSrc": "12839:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12839:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12832:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12832:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12872:22:7",
																"nodeType": "YulBlock",
																"src": "12872:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12874:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12874:16:7"
																			},
																			"nativeSrc": "12874:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12874:18:7"
																		},
																		"nativeSrc": "12874:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12874:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12864:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12864:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12867:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12867:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12861:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12861:2:7"
																},
																"nativeSrc": "12861:10:7",
																"nodeType": "YulFunctionCall",
																"src": "12861:10:7"
															},
															"nativeSrc": "12858:36:7",
															"nodeType": "YulIf",
															"src": "12858:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12710:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12741:1:7",
														"nodeType": "YulTypedName",
														"src": "12741:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12744:1:7",
														"nodeType": "YulTypedName",
														"src": "12744:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12750:3:7",
														"nodeType": "YulTypedName",
														"src": "12750:3:7",
														"type": ""
													}
												],
												"src": "12710:191:7"
											},
											{
												"body": {
													"nativeSrc": "12972:53:7",
													"nodeType": "YulBlock",
													"src": "12972:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12989:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12989:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13012:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "13012:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12994:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "12994:17:7"
																		},
																		"nativeSrc": "12994:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12994:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12982:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12982:6:7"
																},
																"nativeSrc": "12982:37:7",
																"nodeType": "YulFunctionCall",
																"src": "12982:37:7"
															},
															"nativeSrc": "12982:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "12982:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "12907:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12960:5:7",
														"nodeType": "YulTypedName",
														"src": "12960:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12967:3:7",
														"nodeType": "YulTypedName",
														"src": "12967:3:7",
														"type": ""
													}
												],
												"src": "12907:118:7"
											},
											{
												"body": {
													"nativeSrc": "13185:288:7",
													"nodeType": "YulBlock",
													"src": "13185:288:7",
													"statements": [
														{
															"nativeSrc": "13195:26:7",
															"nodeType": "YulAssignment",
															"src": "13195:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13207:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13207:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13218:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13218:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13203:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13203:3:7"
																},
																"nativeSrc": "13203:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13203:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13195:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13195:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13275:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13275:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13288:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13288:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13299:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13299:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13284:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13284:3:7"
																		},
																		"nativeSrc": "13284:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13284:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13231:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13231:43:7"
																},
																"nativeSrc": "13231:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13231:71:7"
															},
															"nativeSrc": "13231:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13231:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13356:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13356:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13369:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13369:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13380:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13380:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13365:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13365:3:7"
																		},
																		"nativeSrc": "13365:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13365:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13312:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13312:43:7"
																},
																"nativeSrc": "13312:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13312:72:7"
															},
															"nativeSrc": "13312:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13312:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13438:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13438:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13451:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13451:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13462:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13462:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13447:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13447:3:7"
																		},
																		"nativeSrc": "13447:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13447:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13394:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13394:43:7"
																},
																"nativeSrc": "13394:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13394:72:7"
															},
															"nativeSrc": "13394:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13394:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13031:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13141:9:7",
														"nodeType": "YulTypedName",
														"src": "13141:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13153:6:7",
														"nodeType": "YulTypedName",
														"src": "13153:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13161:6:7",
														"nodeType": "YulTypedName",
														"src": "13161:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13169:6:7",
														"nodeType": "YulTypedName",
														"src": "13169:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13180:4:7",
														"nodeType": "YulTypedName",
														"src": "13180:4:7",
														"type": ""
													}
												],
												"src": "13031:442:7"
											},
											{
												"body": {
													"nativeSrc": "13577:124:7",
													"nodeType": "YulBlock",
													"src": "13577:124:7",
													"statements": [
														{
															"nativeSrc": "13587:26:7",
															"nodeType": "YulAssignment",
															"src": "13587:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13599:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13599:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13610:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13610:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13595:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13595:3:7"
																},
																"nativeSrc": "13595:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13595:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13587:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13587:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13667:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13667:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13680:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13680:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13691:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13691:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13676:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13676:3:7"
																		},
																		"nativeSrc": "13676:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13676:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13623:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13623:43:7"
																},
																"nativeSrc": "13623:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13623:71:7"
															},
															"nativeSrc": "13623:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13623:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13479:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13549:9:7",
														"nodeType": "YulTypedName",
														"src": "13549:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13561:6:7",
														"nodeType": "YulTypedName",
														"src": "13561:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13572:4:7",
														"nodeType": "YulTypedName",
														"src": "13572:4:7",
														"type": ""
													}
												],
												"src": "13479:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint8t_addresst_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001f8138038062001f81833981810160405281019062000037919062000729565b816040518060400160405280600981526020017f54657374546f6b656e0000000000000000000000000000000000000000000000815250828160039081620000809190620009ef565b508060049081620000929190620009ef565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200010a5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000101919062000ae7565b60405180910390fd5b6200011b816200017060201b60201c565b506200014c3384600a62000130919062000c87565b620186a062000140919062000cd8565b6200023660201b60201c565b82600560146101000a81548160ff021916908360ff16021790555050505062000dc9565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002ab5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620002a2919062000ae7565b60405180910390fd5b620002bf60008383620002c360201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620003195780600260008282546200030c919062000d23565b92505081905550620003ef565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015620003a8578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200039f9392919062000d6f565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200043a578060026000828254039250508190555062000487565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620004e6919062000dac565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600060ff82169050919050565b6200051f8162000507565b81146200052b57600080fd5b50565b6000815190506200053f8162000514565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005728262000545565b9050919050565b620005848162000565565b81146200059057600080fd5b50565b600081519050620005a48162000579565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620005ff82620005b4565b810181811067ffffffffffffffff82111715620006215762000620620005c5565b5b80604052505050565b600062000636620004f3565b9050620006448282620005f4565b919050565b600067ffffffffffffffff821115620006675762000666620005c5565b5b6200067282620005b4565b9050602081019050919050565b60005b838110156200069f57808201518184015260208101905062000682565b60008484015250505050565b6000620006c2620006bc8462000649565b6200062a565b905082815260208101848484011115620006e157620006e0620005af565b5b620006ee8482856200067f565b509392505050565b600082601f8301126200070e576200070d620005aa565b5b815162000720848260208601620006ab565b91505092915050565b600080600060608486031215620007455762000744620004fd565b5b600062000755868287016200052e565b9350506020620007688682870162000593565b925050604084015167ffffffffffffffff8111156200078c576200078b62000502565b5b6200079a86828701620006f6565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620007f757607f821691505b6020821081036200080d576200080c620007af565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620008777fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000838565b62000883868362000838565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620008d0620008ca620008c4846200089b565b620008a5565b6200089b565b9050919050565b6000819050919050565b620008ec83620008af565b62000904620008fb82620008d7565b84845462000845565b825550505050565b600090565b6200091b6200090c565b62000928818484620008e1565b505050565b5b8181101562000950576200094460008262000911565b6001810190506200092e565b5050565b601f8211156200099f57620009698162000813565b620009748462000828565b8101602085101562000984578190505b6200099c620009938562000828565b8301826200092d565b50505b505050565b600082821c905092915050565b6000620009c460001984600802620009a4565b1980831691505092915050565b6000620009df8383620009b1565b9150826002028217905092915050565b620009fa82620007a4565b67ffffffffffffffff81111562000a165762000a15620005c5565b5b62000a228254620007de565b62000a2f82828562000954565b600060209050601f83116001811462000a67576000841562000a52578287015190505b62000a5e8582620009d1565b86555062000ace565b601f19841662000a778662000813565b60005b8281101562000aa15784890151825560018201915060208501945060208101905062000a7a565b8683101562000ac1578489015162000abd601f891682620009b1565b8355505b6001600288020188555050505b505050505050565b62000ae18162000565565b82525050565b600060208201905062000afe600083018462000ad6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111562000b925780860481111562000b6a5762000b6962000b04565b5b600185161562000b7a5780820291505b808102905062000b8a8562000b33565b945062000b4a565b94509492505050565b60008262000bad576001905062000c80565b8162000bbd576000905062000c80565b816001811462000bd6576002811462000be15762000c17565b600191505062000c80565b60ff84111562000bf65762000bf562000b04565b5b8360020a91508482111562000c105762000c0f62000b04565b5b5062000c80565b5060208310610133831016604e8410600b841016171562000c515782820a90508381111562000c4b5762000c4a62000b04565b5b62000c80565b62000c60848484600162000b40565b9250905081840481111562000c7a5762000c7962000b04565b5b81810290505b9392505050565b600062000c94826200089b565b915062000ca18362000507565b925062000cd07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000b9b565b905092915050565b600062000ce5826200089b565b915062000cf2836200089b565b925082820262000d02816200089b565b9150828204841483151762000d1c5762000d1b62000b04565b5b5092915050565b600062000d30826200089b565b915062000d3d836200089b565b925082820190508082111562000d585762000d5762000b04565b5b92915050565b62000d69816200089b565b82525050565b600060608201905062000d86600083018662000ad6565b62000d95602083018562000d5e565b62000da4604083018462000d5e565b949350505050565b600060208201905062000dc3600083018462000d5e565b92915050565b6111a88062000dd96000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610202578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b806370a08231146101aa578063715018a6146101da5780638da5cb5b146101e4576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc61029c565b6040516100e99190610dfc565b60405180910390f35b61010c60048036038101906101079190610eb7565b61032e565b6040516101199190610f12565b60405180910390f35b61012a610351565b6040516101379190610f3c565b60405180910390f35b61015a60048036038101906101559190610f57565b61035b565b6040516101679190610f12565b60405180910390f35b61017861038a565b6040516101859190610fc6565b60405180910390f35b6101a860048036038101906101a39190610eb7565b6103a1565b005b6101c460048036038101906101bf9190610fe1565b6103b7565b6040516101d19190610f3c565b60405180910390f35b6101e26103ff565b005b6101ec610413565b6040516101f9919061101d565b60405180910390f35b61020a61043d565b6040516102179190610dfc565b60405180910390f35b61023a60048036038101906102359190610eb7565b6104cf565b6040516102479190610f12565b60405180910390f35b61026a60048036038101906102659190611038565b6104f2565b6040516102779190610f3c565b60405180910390f35b61029a60048036038101906102959190610fe1565b610579565b005b6060600380546102ab906110a7565b80601f01602080910402602001604051908101604052809291908181526020018280546102d7906110a7565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000806103396105ff565b9050610346818585610607565b600191505092915050565b6000600254905090565b6000806103666105ff565b9050610373858285610619565b61037e8585856106ad565b60019150509392505050565b6000600560149054906101000a900460ff16905090565b6103a96107a1565b6103b38282610828565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104076107a1565b61041160006108aa565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461044c906110a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610478906110a7565b80156104c55780601f1061049a576101008083540402835291602001916104c5565b820191906000526020600020905b8154815290600101906020018083116104a857829003601f168201915b5050505050905090565b6000806104da6105ff565b90506104e78185856106ad565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6105816107a1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105f35760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105ea919061101d565b60405180910390fd5b6105fc816108aa565b50565b600033905090565b6106148383836001610970565b505050565b600061062584846104f2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106a75781811015610697578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161068e939291906110d8565b60405180910390fd5b6106a684848484036000610970565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361071f5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610716919061101d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107915760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610788919061101d565b60405180910390fd5b61079c838383610b47565b505050565b6107a96105ff565b73ffffffffffffffffffffffffffffffffffffffff166107c7610413565b73ffffffffffffffffffffffffffffffffffffffff1614610826576107ea6105ff565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161081d919061101d565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361089a5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610891919061101d565b60405180910390fd5b6108a660008383610b47565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109e25760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109d9919061101d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a545760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a4b919061101d565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b41578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b389190610f3c565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b99578060026000828254610b8d919061113e565b92505081905550610c6c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c25578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c1c939291906110d8565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cb55780600260008282540392505081905550610d02565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d5f9190610f3c565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610da6578082015181840152602081019050610d8b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dce82610d6c565b610dd88185610d77565b9350610de8818560208601610d88565b610df181610db2565b840191505092915050565b60006020820190508181036000830152610e168184610dc3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4e82610e23565b9050919050565b610e5e81610e43565b8114610e6957600080fd5b50565b600081359050610e7b81610e55565b92915050565b6000819050919050565b610e9481610e81565b8114610e9f57600080fd5b50565b600081359050610eb181610e8b565b92915050565b60008060408385031215610ece57610ecd610e1e565b5b6000610edc85828601610e6c565b9250506020610eed85828601610ea2565b9150509250929050565b60008115159050919050565b610f0c81610ef7565b82525050565b6000602082019050610f276000830184610f03565b92915050565b610f3681610e81565b82525050565b6000602082019050610f516000830184610f2d565b92915050565b600080600060608486031215610f7057610f6f610e1e565b5b6000610f7e86828701610e6c565b9350506020610f8f86828701610e6c565b9250506040610fa086828701610ea2565b9150509250925092565b600060ff82169050919050565b610fc081610faa565b82525050565b6000602082019050610fdb6000830184610fb7565b92915050565b600060208284031215610ff757610ff6610e1e565b5b600061100584828501610e6c565b91505092915050565b61101781610e43565b82525050565b6000602082019050611032600083018461100e565b92915050565b6000806040838503121561104f5761104e610e1e565b5b600061105d85828601610e6c565b925050602061106e85828601610e6c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110bf57607f821691505b6020821081036110d2576110d1611078565b5b50919050565b60006060820190506110ed600083018661100e565b6110fa6020830185610f2d565b6111076040830184610f2d565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061114982610e81565b915061115483610e81565b925082820190508082111561116c5761116b61110f565b5b9291505056fea2646970667358221220469c0e0fe235b1f375b0b66f027dd659f5282f0daf7ba353c2c79b392fa5419b64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F81 CODESIZE SUB DUP1 PUSH3 0x1F81 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x729 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54657374546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x80 SWAP2 SWAP1 PUSH3 0x9EF JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x92 SWAP2 SWAP1 PUSH3 0x9EF JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x10A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x101 SWAP2 SWAP1 PUSH3 0xAE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x11B DUP2 PUSH3 0x170 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x14C CALLER DUP5 PUSH1 0xA PUSH3 0x130 SWAP2 SWAP1 PUSH3 0xC87 JUMP JUMPDEST PUSH3 0x186A0 PUSH3 0x140 SWAP2 SWAP1 PUSH3 0xCD8 JUMP JUMPDEST PUSH3 0x236 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0xDC9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2AB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2A2 SWAP2 SWAP1 PUSH3 0xAE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2BF PUSH1 0x0 DUP4 DUP4 PUSH3 0x2C3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x319 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x30C SWAP2 SWAP1 PUSH3 0xD23 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x3EF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x3A8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x39F SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xD6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x43A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x487 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x4E6 SWAP2 SWAP1 PUSH3 0xDAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x51F DUP2 PUSH3 0x507 JUMP JUMPDEST DUP2 EQ PUSH3 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x53F DUP2 PUSH3 0x514 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x572 DUP3 PUSH3 0x545 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x584 DUP2 PUSH3 0x565 JUMP JUMPDEST DUP2 EQ PUSH3 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5A4 DUP2 PUSH3 0x579 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x5FF DUP3 PUSH3 0x5B4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x621 JUMPI PUSH3 0x620 PUSH3 0x5C5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x636 PUSH3 0x4F3 JUMP JUMPDEST SWAP1 POP PUSH3 0x644 DUP3 DUP3 PUSH3 0x5F4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x667 JUMPI PUSH3 0x666 PUSH3 0x5C5 JUMP JUMPDEST JUMPDEST PUSH3 0x672 DUP3 PUSH3 0x5B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x69F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x682 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6C2 PUSH3 0x6BC DUP5 PUSH3 0x649 JUMP JUMPDEST PUSH3 0x62A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x6E1 JUMPI PUSH3 0x6E0 PUSH3 0x5AF JUMP JUMPDEST JUMPDEST PUSH3 0x6EE DUP5 DUP3 DUP6 PUSH3 0x67F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x70E JUMPI PUSH3 0x70D PUSH3 0x5AA JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x720 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x6AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x745 JUMPI PUSH3 0x744 PUSH3 0x4FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x755 DUP7 DUP3 DUP8 ADD PUSH3 0x52E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x768 DUP7 DUP3 DUP8 ADD PUSH3 0x593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x78C JUMPI PUSH3 0x78B PUSH3 0x502 JUMP JUMPDEST JUMPDEST PUSH3 0x79A DUP7 DUP3 DUP8 ADD PUSH3 0x6F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x7F7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x80D JUMPI PUSH3 0x80C PUSH3 0x7AF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x877 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x838 JUMP JUMPDEST PUSH3 0x883 DUP7 DUP4 PUSH3 0x838 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8D0 PUSH3 0x8CA PUSH3 0x8C4 DUP5 PUSH3 0x89B JUMP JUMPDEST PUSH3 0x8A5 JUMP JUMPDEST PUSH3 0x89B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x8EC DUP4 PUSH3 0x8AF JUMP JUMPDEST PUSH3 0x904 PUSH3 0x8FB DUP3 PUSH3 0x8D7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x845 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x91B PUSH3 0x90C JUMP JUMPDEST PUSH3 0x928 DUP2 DUP5 DUP5 PUSH3 0x8E1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x950 JUMPI PUSH3 0x944 PUSH1 0x0 DUP3 PUSH3 0x911 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x92E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x99F JUMPI PUSH3 0x969 DUP2 PUSH3 0x813 JUMP JUMPDEST PUSH3 0x974 DUP5 PUSH3 0x828 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x984 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x99C PUSH3 0x993 DUP6 PUSH3 0x828 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x92D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9C4 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x9A4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9DF DUP4 DUP4 PUSH3 0x9B1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x9FA DUP3 PUSH3 0x7A4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xA16 JUMPI PUSH3 0xA15 PUSH3 0x5C5 JUMP JUMPDEST JUMPDEST PUSH3 0xA22 DUP3 SLOAD PUSH3 0x7DE JUMP JUMPDEST PUSH3 0xA2F DUP3 DUP3 DUP6 PUSH3 0x954 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xA67 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xA52 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xA5E DUP6 DUP3 PUSH3 0x9D1 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xACE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xA77 DUP7 PUSH3 0x813 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xAA1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA7A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xAC1 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xABD PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x9B1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xAE1 DUP2 PUSH3 0x565 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xAFE PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xAD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0xB92 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0xB6A JUMPI PUSH3 0xB69 PUSH3 0xB04 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0xB7A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0xB8A DUP6 PUSH3 0xB33 JUMP JUMPDEST SWAP5 POP PUSH3 0xB4A JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0xBAD JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xC80 JUMP JUMPDEST DUP2 PUSH3 0xBBD JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0xC80 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0xBD6 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xBE1 JUMPI PUSH3 0xC17 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xC80 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xBF6 JUMPI PUSH3 0xBF5 PUSH3 0xB04 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xC10 JUMPI PUSH3 0xC0F PUSH3 0xB04 JUMP JUMPDEST JUMPDEST POP PUSH3 0xC80 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xC51 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xC4B JUMPI PUSH3 0xC4A PUSH3 0xB04 JUMP JUMPDEST JUMPDEST PUSH3 0xC80 JUMP JUMPDEST PUSH3 0xC60 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0xB40 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xC7A JUMPI PUSH3 0xC79 PUSH3 0xB04 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC94 DUP3 PUSH3 0x89B JUMP JUMPDEST SWAP2 POP PUSH3 0xCA1 DUP4 PUSH3 0x507 JUMP JUMPDEST SWAP3 POP PUSH3 0xCD0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0xB9B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCE5 DUP3 PUSH3 0x89B JUMP JUMPDEST SWAP2 POP PUSH3 0xCF2 DUP4 PUSH3 0x89B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xD02 DUP2 PUSH3 0x89B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xD1C JUMPI PUSH3 0xD1B PUSH3 0xB04 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD30 DUP3 PUSH3 0x89B JUMP JUMPDEST SWAP2 POP PUSH3 0xD3D DUP4 PUSH3 0x89B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xD58 JUMPI PUSH3 0xD57 PUSH3 0xB04 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xD69 DUP2 PUSH3 0x89B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xD86 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0xAD6 JUMP JUMPDEST PUSH3 0xD95 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xD5E JUMP JUMPDEST PUSH3 0xDA4 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xD5E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xDC3 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xD5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11A8 DUP1 PUSH3 0xDD9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x3FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x5FF JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x5FF JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3A9 PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x3B3 DUP3 DUP3 PUSH2 0x828 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x407 PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x411 PUSH1 0x0 PUSH2 0x8AA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x44C SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x478 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4DA PUSH2 0x5FF JUMP JUMPDEST SWAP1 POP PUSH2 0x4E7 DUP2 DUP6 DUP6 PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x581 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5F3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5FC DUP2 PUSH2 0x8AA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x614 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x970 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x625 DUP5 DUP5 PUSH2 0x4F2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x6A7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x697 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6A6 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x970 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x71F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x791 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x788 SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x79C DUP4 DUP4 DUP4 PUSH2 0xB47 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7A9 PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7C7 PUSH2 0x413 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x826 JUMPI PUSH2 0x7EA PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x891 SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A6 PUSH1 0x0 DUP4 DUP4 PUSH2 0xB47 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA54 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4B SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB41 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB99 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x113E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC25 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB5 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD02 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD5F SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDA6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP3 PUSH2 0xD6C JUMP JUMPDEST PUSH2 0xDD8 DUP2 DUP6 PUSH2 0xD77 JUMP JUMPDEST SWAP4 POP PUSH2 0xDE8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD88 JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0xDB2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE16 DUP2 DUP5 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4E DUP3 PUSH2 0xE23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5E DUP2 PUSH2 0xE43 JUMP JUMPDEST DUP2 EQ PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE7B DUP2 PUSH2 0xE55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE94 DUP2 PUSH2 0xE81 JUMP JUMPDEST DUP2 EQ PUSH2 0xE9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB1 DUP2 PUSH2 0xE8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xE1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEDC DUP6 DUP3 DUP7 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEED DUP6 DUP3 DUP7 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0C DUP2 PUSH2 0xEF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF36 DUP2 PUSH2 0xE81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF70 JUMPI PUSH2 0xF6F PUSH2 0xE1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF7E DUP7 DUP3 DUP8 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF8F DUP7 DUP3 DUP8 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFA0 DUP7 DUP3 DUP8 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC0 DUP2 PUSH2 0xFAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFDB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF7 JUMPI PUSH2 0xFF6 PUSH2 0xE1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1005 DUP5 DUP3 DUP6 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1017 DUP2 PUSH2 0xE43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1032 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x100E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x104F JUMPI PUSH2 0x104E PUSH2 0xE1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x105D DUP6 DUP3 DUP7 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x106E DUP6 DUP3 DUP7 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10BF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10D2 JUMPI PUSH2 0x10D1 PUSH2 0x1078 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10ED PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x100E JUMP JUMPDEST PUSH2 0x10FA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x1107 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF2D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1149 DUP3 PUSH2 0xE81 JUMP JUMPDEST SWAP2 POP PUSH2 0x1154 DUP4 PUSH2 0xE81 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x116C JUMPI PUSH2 0x116B PUSH2 0x110F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID SWAP13 0xE 0xF 0xE2 CALLDATALOAD 0xB1 RETURN PUSH22 0xB0B66F027DD659F5282F0DAF7BA353C2C79B392FA541 SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "197:484:6:-:0;;;260:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;380:12;1896:113:2;;;;;;;;;;;;;;;;;358:4:6;1970:5:2;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;408:43:6::2;414:10;441:9;435:2;:15;;;;:::i;:::-;426:6;:24;;;;:::i;:::-;408:5;;;:43;;:::i;:::-;471:9;461:7;;:19;;;;;;;;;;;;;;;;;;260:227:::0;;;197:484;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:86;369:7;409:4;402:5;398:16;387:27;;334:86;;;:::o;426:118::-;497:22;513:5;497:22;:::i;:::-;490:5;487:33;477:61;;534:1;531;524:12;477:61;426:118;:::o;550:139::-;605:5;636:6;630:13;621:22;;652:31;677:5;652:31;:::i;:::-;550:139;;;;:::o;695:126::-;732:7;772:42;765:5;761:54;750:65;;695:126;;;:::o;827:96::-;864:7;893:24;911:5;893:24;:::i;:::-;882:35;;827:96;;;:::o;929:122::-;1002:24;1020:5;1002:24;:::i;:::-;995:5;992:35;982:63;;1041:1;1038;1031:12;982:63;929:122;:::o;1057:143::-;1114:5;1145:6;1139:13;1130:22;;1161:33;1188:5;1161:33;:::i;:::-;1057:143;;;;:::o;1206:117::-;1315:1;1312;1305:12;1329:117;1438:1;1435;1428:12;1452:102;1493:6;1544:2;1540:7;1535:2;1528:5;1524:14;1520:28;1510:38;;1452:102;;;:::o;1560:180::-;1608:77;1605:1;1598:88;1705:4;1702:1;1695:15;1729:4;1726:1;1719:15;1746:281;1829:27;1851:4;1829:27;:::i;:::-;1821:6;1817:40;1959:6;1947:10;1944:22;1923:18;1911:10;1908:34;1905:62;1902:88;;;1970:18;;:::i;:::-;1902:88;2010:10;2006:2;1999:22;1789:238;1746:281;;:::o;2033:129::-;2067:6;2094:20;;:::i;:::-;2084:30;;2123:33;2151:4;2143:6;2123:33;:::i;:::-;2033:129;;;:::o;2168:308::-;2230:4;2320:18;2312:6;2309:30;2306:56;;;2342:18;;:::i;:::-;2306:56;2380:29;2402:6;2380:29;:::i;:::-;2372:37;;2464:4;2458;2454:15;2446:23;;2168:308;;;:::o;2482:246::-;2563:1;2573:113;2587:6;2584:1;2581:13;2573:113;;;2672:1;2667:3;2663:11;2657:18;2653:1;2648:3;2644:11;2637:39;2609:2;2606:1;2602:10;2597:15;;2573:113;;;2720:1;2711:6;2706:3;2702:16;2695:27;2544:184;2482:246;;;:::o;2734:434::-;2823:5;2848:66;2864:49;2906:6;2864:49;:::i;:::-;2848:66;:::i;:::-;2839:75;;2937:6;2930:5;2923:21;2975:4;2968:5;2964:16;3013:3;3004:6;2999:3;2995:16;2992:25;2989:112;;;3020:79;;:::i;:::-;2989:112;3110:52;3155:6;3150:3;3145;3110:52;:::i;:::-;2829:339;2734:434;;;;;:::o;3188:355::-;3255:5;3304:3;3297:4;3289:6;3285:17;3281:27;3271:122;;3312:79;;:::i;:::-;3271:122;3422:6;3416:13;3447:90;3533:3;3525:6;3518:4;3510:6;3506:17;3447:90;:::i;:::-;3438:99;;3261:282;3188:355;;;;:::o;3549:832::-;3645:6;3653;3661;3710:2;3698:9;3689:7;3685:23;3681:32;3678:119;;;3716:79;;:::i;:::-;3678:119;3836:1;3861:62;3915:7;3906:6;3895:9;3891:22;3861:62;:::i;:::-;3851:72;;3807:126;3972:2;3998:64;4054:7;4045:6;4034:9;4030:22;3998:64;:::i;:::-;3988:74;;3943:129;4132:2;4121:9;4117:18;4111:25;4163:18;4155:6;4152:30;4149:117;;;4185:79;;:::i;:::-;4149:117;4290:74;4356:7;4347:6;4336:9;4332:22;4290:74;:::i;:::-;4280:84;;4082:292;3549:832;;;;;:::o;4387:99::-;4439:6;4473:5;4467:12;4457:22;;4387:99;;;:::o;4492:180::-;4540:77;4537:1;4530:88;4637:4;4634:1;4627:15;4661:4;4658:1;4651:15;4678:320;4722:6;4759:1;4753:4;4749:12;4739:22;;4806:1;4800:4;4796:12;4827:18;4817:81;;4883:4;4875:6;4871:17;4861:27;;4817:81;4945:2;4937:6;4934:14;4914:18;4911:38;4908:84;;4964:18;;:::i;:::-;4908:84;4729:269;4678:320;;;:::o;5004:141::-;5053:4;5076:3;5068:11;;5099:3;5096:1;5089:14;5133:4;5130:1;5120:18;5112:26;;5004:141;;;:::o;5151:93::-;5188:6;5235:2;5230;5223:5;5219:14;5215:23;5205:33;;5151:93;;;:::o;5250:107::-;5294:8;5344:5;5338:4;5334:16;5313:37;;5250:107;;;;:::o;5363:393::-;5432:6;5482:1;5470:10;5466:18;5505:97;5535:66;5524:9;5505:97;:::i;:::-;5623:39;5653:8;5642:9;5623:39;:::i;:::-;5611:51;;5695:4;5691:9;5684:5;5680:21;5671:30;;5744:4;5734:8;5730:19;5723:5;5720:30;5710:40;;5439:317;;5363:393;;;;;:::o;5762:77::-;5799:7;5828:5;5817:16;;5762:77;;;:::o;5845:60::-;5873:3;5894:5;5887:12;;5845:60;;;:::o;5911:142::-;5961:9;5994:53;6012:34;6021:24;6039:5;6021:24;:::i;:::-;6012:34;:::i;:::-;5994:53;:::i;:::-;5981:66;;5911:142;;;:::o;6059:75::-;6102:3;6123:5;6116:12;;6059:75;;;:::o;6140:269::-;6250:39;6281:7;6250:39;:::i;:::-;6311:91;6360:41;6384:16;6360:41;:::i;:::-;6352:6;6345:4;6339:11;6311:91;:::i;:::-;6305:4;6298:105;6216:193;6140:269;;;:::o;6415:73::-;6460:3;6415:73;:::o;6494:189::-;6571:32;;:::i;:::-;6612:65;6670:6;6662;6656:4;6612:65;:::i;:::-;6547:136;6494:189;;:::o;6689:186::-;6749:120;6766:3;6759:5;6756:14;6749:120;;;6820:39;6857:1;6850:5;6820:39;:::i;:::-;6793:1;6786:5;6782:13;6773:22;;6749:120;;;6689:186;;:::o;6881:543::-;6982:2;6977:3;6974:11;6971:446;;;7016:38;7048:5;7016:38;:::i;:::-;7100:29;7118:10;7100:29;:::i;:::-;7090:8;7086:44;7283:2;7271:10;7268:18;7265:49;;;7304:8;7289:23;;7265:49;7327:80;7383:22;7401:3;7383:22;:::i;:::-;7373:8;7369:37;7356:11;7327:80;:::i;:::-;6986:431;;6971:446;6881:543;;;:::o;7430:117::-;7484:8;7534:5;7528:4;7524:16;7503:37;;7430:117;;;;:::o;7553:169::-;7597:6;7630:51;7678:1;7674:6;7666:5;7663:1;7659:13;7630:51;:::i;:::-;7626:56;7711:4;7705;7701:15;7691:25;;7604:118;7553:169;;;;:::o;7727:295::-;7803:4;7949:29;7974:3;7968:4;7949:29;:::i;:::-;7941:37;;8011:3;8008:1;8004:11;7998:4;7995:21;7987:29;;7727:295;;;;:::o;8027:1395::-;8144:37;8177:3;8144:37;:::i;:::-;8246:18;8238:6;8235:30;8232:56;;;8268:18;;:::i;:::-;8232:56;8312:38;8344:4;8338:11;8312:38;:::i;:::-;8397:67;8457:6;8449;8443:4;8397:67;:::i;:::-;8491:1;8515:4;8502:17;;8547:2;8539:6;8536:14;8564:1;8559:618;;;;9221:1;9238:6;9235:77;;;9287:9;9282:3;9278:19;9272:26;9263:35;;9235:77;9338:67;9398:6;9391:5;9338:67;:::i;:::-;9332:4;9325:81;9194:222;8529:887;;8559:618;8611:4;8607:9;8599:6;8595:22;8645:37;8677:4;8645:37;:::i;:::-;8704:1;8718:208;8732:7;8729:1;8726:14;8718:208;;;8811:9;8806:3;8802:19;8796:26;8788:6;8781:42;8862:1;8854:6;8850:14;8840:24;;8909:2;8898:9;8894:18;8881:31;;8755:4;8752:1;8748:12;8743:17;;8718:208;;;8954:6;8945:7;8942:19;8939:179;;;9012:9;9007:3;9003:19;8997:26;9055:48;9097:4;9089:6;9085:17;9074:9;9055:48;:::i;:::-;9047:6;9040:64;8962:156;8939:179;9164:1;9160;9152:6;9148:14;9144:22;9138:4;9131:36;8566:611;;;8529:887;;8119:1303;;;8027:1395;;:::o;9428:118::-;9515:24;9533:5;9515:24;:::i;:::-;9510:3;9503:37;9428:118;;:::o;9552:222::-;9645:4;9683:2;9672:9;9668:18;9660:26;;9696:71;9764:1;9753:9;9749:17;9740:6;9696:71;:::i;:::-;9552:222;;;;:::o;9780:180::-;9828:77;9825:1;9818:88;9925:4;9922:1;9915:15;9949:4;9946:1;9939:15;9966:102;10008:8;10055:5;10052:1;10048:13;10027:34;;9966:102;;;:::o;10074:848::-;10135:5;10142:4;10166:6;10157:15;;10190:5;10181:14;;10204:712;10225:1;10215:8;10212:15;10204:712;;;10320:4;10315:3;10311:14;10305:4;10302:24;10299:50;;;10329:18;;:::i;:::-;10299:50;10379:1;10369:8;10365:16;10362:451;;;10794:4;10787:5;10783:16;10774:25;;10362:451;10844:4;10838;10834:15;10826:23;;10874:32;10897:8;10874:32;:::i;:::-;10862:44;;10204:712;;;10074:848;;;;;;;:::o;10928:1073::-;10982:5;11173:8;11163:40;;11194:1;11185:10;;11196:5;;11163:40;11222:4;11212:36;;11239:1;11230:10;;11241:5;;11212:36;11308:4;11356:1;11351:27;;;;11392:1;11387:191;;;;11301:277;;11351:27;11369:1;11360:10;;11371:5;;;11387:191;11432:3;11422:8;11419:17;11416:43;;;11439:18;;:::i;:::-;11416:43;11488:8;11485:1;11481:16;11472:25;;11523:3;11516:5;11513:14;11510:40;;;11530:18;;:::i;:::-;11510:40;11563:5;;;11301:277;;11687:2;11677:8;11674:16;11668:3;11662:4;11659:13;11655:36;11637:2;11627:8;11624:16;11619:2;11613:4;11610:12;11606:35;11590:111;11587:246;;;11743:8;11737:4;11733:19;11724:28;;11778:3;11771:5;11768:14;11765:40;;;11785:18;;:::i;:::-;11765:40;11818:5;;11587:246;11858:42;11896:3;11886:8;11880:4;11877:1;11858:42;:::i;:::-;11843:57;;;;11932:4;11927:3;11923:14;11916:5;11913:25;11910:51;;;11941:18;;:::i;:::-;11910:51;11990:4;11983:5;11979:16;11970:25;;10928:1073;;;;;;:::o;12007:281::-;12065:5;12089:23;12107:4;12089:23;:::i;:::-;12081:31;;12133:25;12149:8;12133:25;:::i;:::-;12121:37;;12177:104;12214:66;12204:8;12198:4;12177:104;:::i;:::-;12168:113;;12007:281;;;;:::o;12294:410::-;12334:7;12357:20;12375:1;12357:20;:::i;:::-;12352:25;;12391:20;12409:1;12391:20;:::i;:::-;12386:25;;12446:1;12443;12439:9;12468:30;12486:11;12468:30;:::i;:::-;12457:41;;12647:1;12638:7;12634:15;12631:1;12628:22;12608:1;12601:9;12581:83;12558:139;;12677:18;;:::i;:::-;12558:139;12342:362;12294:410;;;;:::o;12710:191::-;12750:3;12769:20;12787:1;12769:20;:::i;:::-;12764:25;;12803:20;12821:1;12803:20;:::i;:::-;12798:25;;12846:1;12843;12839:9;12832:16;;12867:3;12864:1;12861:10;12858:36;;;12874:18;;:::i;:::-;12858:36;12710:191;;;;:::o;12907:118::-;12994:24;13012:5;12994:24;:::i;:::-;12989:3;12982:37;12907:118;;:::o;13031:442::-;13180:4;13218:2;13207:9;13203:18;13195:26;;13231:71;13299:1;13288:9;13284:17;13275:6;13231:71;:::i;:::-;13312:72;13380:2;13369:9;13365:18;13356:6;13312:72;:::i;:::-;13394;13462:2;13451:9;13447:18;13438:6;13394:72;:::i;:::-;13031:442;;;;;;:::o;13479:222::-;13572:4;13610:2;13599:9;13595:18;13587:26;;13623:71;13691:1;13680:9;13676:17;13667:6;13623:71;:::i;:::-;13479:222;;;;:::o;197:484:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1543,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2416,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1953,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2088,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 1535,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1561,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2218,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1709,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 2887,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1266,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 814,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 951,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_1000": {
									"entryPoint": 906,
									"id": 1000,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_991": {
									"entryPoint": 929,
									"id": 991,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 668,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1043,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1023,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1085,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 849,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 859,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1401,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1231,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3464,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4367,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4216,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3614,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7360:7",
										"nodeType": "YulBlock",
										"src": "0:7360:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:184:7",
													"nodeType": "YulBlock",
													"src": "349:184:7",
													"statements": [
														{
															"nativeSrc": "359:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:7",
																"nodeType": "YulLiteral",
																"src": "368:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:7",
																	"nodeType": "YulTypedName",
																	"src": "363:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:7",
																"nodeType": "YulBlock",
																"src": "428:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:7"
																					},
																					"nativeSrc": "449:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:7"
																							},
																							"nativeSrc": "468:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:7"
																					},
																					"nativeSrc": "462:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:7"
																			},
																			"nativeSrc": "442:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:7"
																		},
																		"nativeSrc": "442:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:7"
																},
																"nativeSrc": "386:13:7",
																"nodeType": "YulFunctionCall",
																"src": "386:13:7"
															},
															"nativeSrc": "378:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:7",
																"nodeType": "YulBlock",
																"src": "400:19:7",
																"statements": [
																	{
																		"nativeSrc": "402:15:7",
																		"nodeType": "YulAssignment",
																		"src": "402:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:7",
																					"nodeType": "YulLiteral",
																					"src": "414:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:7"
																			},
																			"nativeSrc": "407:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:7",
																"nodeType": "YulBlock",
																"src": "382:3:7",
																"statements": []
															},
															"src": "378:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:7"
																		},
																		"nativeSrc": "507:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:7",
																		"nodeType": "YulLiteral",
																		"src": "525:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:7"
																},
																"nativeSrc": "500:27:7",
																"nodeType": "YulFunctionCall",
																"src": "500:27:7"
															},
															"nativeSrc": "500:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:246:7"
											},
											{
												"body": {
													"nativeSrc": "587:54:7",
													"nodeType": "YulBlock",
													"src": "587:54:7",
													"statements": [
														{
															"nativeSrc": "597:38:7",
															"nodeType": "YulAssignment",
															"src": "597:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:7",
																				"nodeType": "YulLiteral",
																				"src": "622:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:7"
																		},
																		"nativeSrc": "611:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:7",
																				"nodeType": "YulLiteral",
																				"src": "631:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:7"
																		},
																		"nativeSrc": "627:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:7"
																},
																"nativeSrc": "607:28:7",
																"nodeType": "YulFunctionCall",
																"src": "607:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:7",
														"nodeType": "YulTypedName",
														"src": "570:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:7",
														"nodeType": "YulTypedName",
														"src": "580:6:7",
														"type": ""
													}
												],
												"src": "539:102:7"
											},
											{
												"body": {
													"nativeSrc": "739:285:7",
													"nodeType": "YulBlock",
													"src": "739:285:7",
													"statements": [
														{
															"nativeSrc": "749:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:7"
																},
																"nativeSrc": "763:39:7",
																"nodeType": "YulFunctionCall",
																"src": "763:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:7",
																	"nodeType": "YulTypedName",
																	"src": "753:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:7",
															"nodeType": "YulAssignment",
															"src": "811:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:7"
																},
																"nativeSrc": "818:71:7",
																"nodeType": "YulFunctionCall",
																"src": "818:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:7",
																				"nodeType": "YulLiteral",
																				"src": "944:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:7"
																		},
																		"nativeSrc": "933:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:7"
																},
																"nativeSrc": "898:65:7",
																"nodeType": "YulFunctionCall",
																"src": "898:65:7"
															},
															"nativeSrc": "898:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:7"
														},
														{
															"nativeSrc": "972:46:7",
															"nodeType": "YulAssignment",
															"src": "972:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:7"
																		},
																		"nativeSrc": "988:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:7"
																},
																"nativeSrc": "979:39:7",
																"nodeType": "YulFunctionCall",
																"src": "979:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:7",
														"nodeType": "YulTypedName",
														"src": "720:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:7",
														"nodeType": "YulTypedName",
														"src": "727:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:7",
														"nodeType": "YulTypedName",
														"src": "735:3:7",
														"type": ""
													}
												],
												"src": "647:377:7"
											},
											{
												"body": {
													"nativeSrc": "1148:195:7",
													"nodeType": "YulBlock",
													"src": "1148:195:7",
													"statements": [
														{
															"nativeSrc": "1158:26:7",
															"nodeType": "YulAssignment",
															"src": "1158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:7"
																},
																"nativeSrc": "1166:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:7"
																		},
																		"nativeSrc": "1201:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:7"
																		},
																		"nativeSrc": "1220:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:7"
																},
																"nativeSrc": "1194:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:7"
															},
															"nativeSrc": "1194:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:7"
														},
														{
															"nativeSrc": "1250:86:7",
															"nodeType": "YulAssignment",
															"src": "1250:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:7"
																},
																"nativeSrc": "1258:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:7",
														"nodeType": "YulTypedName",
														"src": "1120:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:7",
														"nodeType": "YulTypedName",
														"src": "1132:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:7",
														"nodeType": "YulTypedName",
														"src": "1143:4:7",
														"type": ""
													}
												],
												"src": "1030:313:7"
											},
											{
												"body": {
													"nativeSrc": "1389:35:7",
													"nodeType": "YulBlock",
													"src": "1389:35:7",
													"statements": [
														{
															"nativeSrc": "1399:19:7",
															"nodeType": "YulAssignment",
															"src": "1399:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:7"
																},
																"nativeSrc": "1409:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:7",
														"nodeType": "YulTypedName",
														"src": "1382:6:7",
														"type": ""
													}
												],
												"src": "1349:75:7"
											},
											{
												"body": {
													"nativeSrc": "1519:28:7",
													"nodeType": "YulBlock",
													"src": "1519:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:7"
																},
																"nativeSrc": "1529:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:7"
															},
															"nativeSrc": "1529:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:7"
											},
											{
												"body": {
													"nativeSrc": "1642:28:7",
													"nodeType": "YulBlock",
													"src": "1642:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:7"
																},
																"nativeSrc": "1652:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:7"
															},
															"nativeSrc": "1652:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:7"
											},
											{
												"body": {
													"nativeSrc": "1721:81:7",
													"nodeType": "YulBlock",
													"src": "1721:81:7",
													"statements": [
														{
															"nativeSrc": "1731:65:7",
															"nodeType": "YulAssignment",
															"src": "1731:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:7"
																},
																"nativeSrc": "1742:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:7",
														"nodeType": "YulTypedName",
														"src": "1703:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:7",
														"nodeType": "YulTypedName",
														"src": "1713:7:7",
														"type": ""
													}
												],
												"src": "1676:126:7"
											},
											{
												"body": {
													"nativeSrc": "1853:51:7",
													"nodeType": "YulBlock",
													"src": "1853:51:7",
													"statements": [
														{
															"nativeSrc": "1863:35:7",
															"nodeType": "YulAssignment",
															"src": "1863:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:7"
																},
																"nativeSrc": "1874:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:7",
														"nodeType": "YulTypedName",
														"src": "1835:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:7",
														"nodeType": "YulTypedName",
														"src": "1845:7:7",
														"type": ""
													}
												],
												"src": "1808:96:7"
											},
											{
												"body": {
													"nativeSrc": "1953:79:7",
													"nodeType": "YulBlock",
													"src": "1953:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:7",
																"nodeType": "YulBlock",
																"src": "2010:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:7"
																			},
																			"nativeSrc": "2012:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:7"
																		},
																		"nativeSrc": "2012:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:7"
																				},
																				"nativeSrc": "1983:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:7"
																		},
																		"nativeSrc": "1973:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:7"
																},
																"nativeSrc": "1966:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:7"
															},
															"nativeSrc": "1963:63:7",
															"nodeType": "YulIf",
															"src": "1963:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:7",
														"nodeType": "YulTypedName",
														"src": "1946:5:7",
														"type": ""
													}
												],
												"src": "1910:122:7"
											},
											{
												"body": {
													"nativeSrc": "2090:87:7",
													"nodeType": "YulBlock",
													"src": "2090:87:7",
													"statements": [
														{
															"nativeSrc": "2100:29:7",
															"nodeType": "YulAssignment",
															"src": "2100:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:7"
																},
																"nativeSrc": "2109:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:7"
																},
																"nativeSrc": "2138:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:7"
															},
															"nativeSrc": "2138:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:7",
														"nodeType": "YulTypedName",
														"src": "2068:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:7",
														"nodeType": "YulTypedName",
														"src": "2076:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:7",
														"nodeType": "YulTypedName",
														"src": "2084:5:7",
														"type": ""
													}
												],
												"src": "2038:139:7"
											},
											{
												"body": {
													"nativeSrc": "2228:32:7",
													"nodeType": "YulBlock",
													"src": "2228:32:7",
													"statements": [
														{
															"nativeSrc": "2238:16:7",
															"nodeType": "YulAssignment",
															"src": "2238:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:7",
																"nodeType": "YulIdentifier",
																"src": "2249:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:7",
														"nodeType": "YulTypedName",
														"src": "2210:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:7",
														"nodeType": "YulTypedName",
														"src": "2220:7:7",
														"type": ""
													}
												],
												"src": "2183:77:7"
											},
											{
												"body": {
													"nativeSrc": "2309:79:7",
													"nodeType": "YulBlock",
													"src": "2309:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:7",
																"nodeType": "YulBlock",
																"src": "2366:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:7"
																			},
																			"nativeSrc": "2368:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:7"
																		},
																		"nativeSrc": "2368:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:7"
																				},
																				"nativeSrc": "2339:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:7"
																		},
																		"nativeSrc": "2329:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:7"
																},
																"nativeSrc": "2322:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:7"
															},
															"nativeSrc": "2319:63:7",
															"nodeType": "YulIf",
															"src": "2319:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:7",
														"nodeType": "YulTypedName",
														"src": "2302:5:7",
														"type": ""
													}
												],
												"src": "2266:122:7"
											},
											{
												"body": {
													"nativeSrc": "2446:87:7",
													"nodeType": "YulBlock",
													"src": "2446:87:7",
													"statements": [
														{
															"nativeSrc": "2456:29:7",
															"nodeType": "YulAssignment",
															"src": "2456:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:7"
																},
																"nativeSrc": "2465:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:7"
																},
																"nativeSrc": "2494:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:7"
															},
															"nativeSrc": "2494:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:7",
														"nodeType": "YulTypedName",
														"src": "2424:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:7",
														"nodeType": "YulTypedName",
														"src": "2432:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:7",
														"nodeType": "YulTypedName",
														"src": "2440:5:7",
														"type": ""
													}
												],
												"src": "2394:139:7"
											},
											{
												"body": {
													"nativeSrc": "2622:391:7",
													"nodeType": "YulBlock",
													"src": "2622:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:7",
																"nodeType": "YulBlock",
																"src": "2668:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:7"
																			},
																			"nativeSrc": "2670:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:7"
																		},
																		"nativeSrc": "2670:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:7"
																		},
																		"nativeSrc": "2639:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:7"
																},
																"nativeSrc": "2635:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:7"
															},
															"nativeSrc": "2632:119:7",
															"nodeType": "YulIf",
															"src": "2632:119:7"
														},
														{
															"nativeSrc": "2761:117:7",
															"nodeType": "YulBlock",
															"src": "2761:117:7",
															"statements": [
																{
																	"nativeSrc": "2776:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:7"
																				},
																				"nativeSrc": "2836:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:7"
																		},
																		"nativeSrc": "2815:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:7",
															"nodeType": "YulBlock",
															"src": "2888:118:7",
															"statements": [
																{
																	"nativeSrc": "2903:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:7"
																				},
																				"nativeSrc": "2964:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:7"
																		},
																		"nativeSrc": "2943:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:7",
														"nodeType": "YulTypedName",
														"src": "2584:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:7",
														"nodeType": "YulTypedName",
														"src": "2595:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:7",
														"nodeType": "YulTypedName",
														"src": "2607:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:7",
														"nodeType": "YulTypedName",
														"src": "2615:6:7",
														"type": ""
													}
												],
												"src": "2539:474:7"
											},
											{
												"body": {
													"nativeSrc": "3061:48:7",
													"nodeType": "YulBlock",
													"src": "3061:48:7",
													"statements": [
														{
															"nativeSrc": "3071:32:7",
															"nodeType": "YulAssignment",
															"src": "3071:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:7"
																		},
																		"nativeSrc": "3089:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:7"
																},
																"nativeSrc": "3082:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:7",
														"nodeType": "YulTypedName",
														"src": "3043:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:7",
														"nodeType": "YulTypedName",
														"src": "3053:7:7",
														"type": ""
													}
												],
												"src": "3019:90:7"
											},
											{
												"body": {
													"nativeSrc": "3174:50:7",
													"nodeType": "YulBlock",
													"src": "3174:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:7"
																		},
																		"nativeSrc": "3196:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:7"
																},
																"nativeSrc": "3184:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:7"
															},
															"nativeSrc": "3184:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:7",
														"nodeType": "YulTypedName",
														"src": "3162:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:7",
														"nodeType": "YulTypedName",
														"src": "3169:3:7",
														"type": ""
													}
												],
												"src": "3115:109:7"
											},
											{
												"body": {
													"nativeSrc": "3322:118:7",
													"nodeType": "YulBlock",
													"src": "3322:118:7",
													"statements": [
														{
															"nativeSrc": "3332:26:7",
															"nodeType": "YulAssignment",
															"src": "3332:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:7"
																},
																"nativeSrc": "3340:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:7"
																		},
																		"nativeSrc": "3415:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:7"
																},
																"nativeSrc": "3368:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:7"
															},
															"nativeSrc": "3368:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:7",
														"nodeType": "YulTypedName",
														"src": "3294:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:7",
														"nodeType": "YulTypedName",
														"src": "3306:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:7",
														"nodeType": "YulTypedName",
														"src": "3317:4:7",
														"type": ""
													}
												],
												"src": "3230:210:7"
											},
											{
												"body": {
													"nativeSrc": "3511:53:7",
													"nodeType": "YulBlock",
													"src": "3511:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:7"
																		},
																		"nativeSrc": "3533:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:7"
																},
																"nativeSrc": "3521:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:7"
															},
															"nativeSrc": "3521:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:7",
														"nodeType": "YulTypedName",
														"src": "3499:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:7",
														"nodeType": "YulTypedName",
														"src": "3506:3:7",
														"type": ""
													}
												],
												"src": "3446:118:7"
											},
											{
												"body": {
													"nativeSrc": "3668:124:7",
													"nodeType": "YulBlock",
													"src": "3668:124:7",
													"statements": [
														{
															"nativeSrc": "3678:26:7",
															"nodeType": "YulAssignment",
															"src": "3678:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:7"
																},
																"nativeSrc": "3686:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:7"
																		},
																		"nativeSrc": "3767:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:7"
																},
																"nativeSrc": "3714:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:7"
															},
															"nativeSrc": "3714:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:7",
														"nodeType": "YulTypedName",
														"src": "3640:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:7",
														"nodeType": "YulTypedName",
														"src": "3652:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:7",
														"nodeType": "YulTypedName",
														"src": "3663:4:7",
														"type": ""
													}
												],
												"src": "3570:222:7"
											},
											{
												"body": {
													"nativeSrc": "3898:519:7",
													"nodeType": "YulBlock",
													"src": "3898:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:7",
																"nodeType": "YulBlock",
																"src": "3944:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:7"
																			},
																			"nativeSrc": "3946:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:7"
																		},
																		"nativeSrc": "3946:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:7"
																		},
																		"nativeSrc": "3915:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:7"
																},
																"nativeSrc": "3911:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:7"
															},
															"nativeSrc": "3908:119:7",
															"nodeType": "YulIf",
															"src": "3908:119:7"
														},
														{
															"nativeSrc": "4037:117:7",
															"nodeType": "YulBlock",
															"src": "4037:117:7",
															"statements": [
																{
																	"nativeSrc": "4052:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:7"
																				},
																				"nativeSrc": "4112:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:7"
																		},
																		"nativeSrc": "4091:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:7",
															"nodeType": "YulBlock",
															"src": "4164:118:7",
															"statements": [
																{
																	"nativeSrc": "4179:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:7"
																				},
																				"nativeSrc": "4240:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:7"
																		},
																		"nativeSrc": "4219:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:7",
															"nodeType": "YulBlock",
															"src": "4292:118:7",
															"statements": [
																{
																	"nativeSrc": "4307:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:7"
																				},
																				"nativeSrc": "4368:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:7"
																		},
																		"nativeSrc": "4347:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:7",
														"nodeType": "YulTypedName",
														"src": "3852:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:7",
														"nodeType": "YulTypedName",
														"src": "3863:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:7",
														"nodeType": "YulTypedName",
														"src": "3875:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:7",
														"nodeType": "YulTypedName",
														"src": "3883:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:7",
														"nodeType": "YulTypedName",
														"src": "3891:6:7",
														"type": ""
													}
												],
												"src": "3798:619:7"
											},
											{
												"body": {
													"nativeSrc": "4466:43:7",
													"nodeType": "YulBlock",
													"src": "4466:43:7",
													"statements": [
														{
															"nativeSrc": "4476:27:7",
															"nodeType": "YulAssignment",
															"src": "4476:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:7"
																},
																"nativeSrc": "4487:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:7",
														"nodeType": "YulTypedName",
														"src": "4448:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:7",
														"nodeType": "YulTypedName",
														"src": "4458:7:7",
														"type": ""
													}
												],
												"src": "4423:86:7"
											},
											{
												"body": {
													"nativeSrc": "4576:51:7",
													"nodeType": "YulBlock",
													"src": "4576:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:7"
																		},
																		"nativeSrc": "4598:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:7"
																},
																"nativeSrc": "4586:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:7"
															},
															"nativeSrc": "4586:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:7",
														"nodeType": "YulTypedName",
														"src": "4564:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:7",
														"nodeType": "YulTypedName",
														"src": "4571:3:7",
														"type": ""
													}
												],
												"src": "4515:112:7"
											},
											{
												"body": {
													"nativeSrc": "4727:120:7",
													"nodeType": "YulBlock",
													"src": "4727:120:7",
													"statements": [
														{
															"nativeSrc": "4737:26:7",
															"nodeType": "YulAssignment",
															"src": "4737:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:7"
																},
																"nativeSrc": "4745:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:7"
																		},
																		"nativeSrc": "4822:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:7"
																},
																"nativeSrc": "4773:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:7"
															},
															"nativeSrc": "4773:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:7",
														"nodeType": "YulTypedName",
														"src": "4699:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:7",
														"nodeType": "YulTypedName",
														"src": "4711:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:7",
														"nodeType": "YulTypedName",
														"src": "4722:4:7",
														"type": ""
													}
												],
												"src": "4633:214:7"
											},
											{
												"body": {
													"nativeSrc": "4919:263:7",
													"nodeType": "YulBlock",
													"src": "4919:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:7",
																"nodeType": "YulBlock",
																"src": "4965:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:7"
																			},
																			"nativeSrc": "4967:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:7"
																		},
																		"nativeSrc": "4967:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:7"
																		},
																		"nativeSrc": "4936:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:7"
																},
																"nativeSrc": "4932:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:7"
															},
															"nativeSrc": "4929:119:7",
															"nodeType": "YulIf",
															"src": "4929:119:7"
														},
														{
															"nativeSrc": "5058:117:7",
															"nodeType": "YulBlock",
															"src": "5058:117:7",
															"statements": [
																{
																	"nativeSrc": "5073:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:7"
																				},
																				"nativeSrc": "5133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:7"
																		},
																		"nativeSrc": "5112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4853:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:7",
														"nodeType": "YulTypedName",
														"src": "4889:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:7",
														"nodeType": "YulTypedName",
														"src": "4900:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:7",
														"nodeType": "YulTypedName",
														"src": "4912:6:7",
														"type": ""
													}
												],
												"src": "4853:329:7"
											},
											{
												"body": {
													"nativeSrc": "5253:53:7",
													"nodeType": "YulBlock",
													"src": "5253:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5270:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5293:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5293:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5275:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5275:17:7"
																		},
																		"nativeSrc": "5275:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5275:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5263:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:7"
																},
																"nativeSrc": "5263:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5263:37:7"
															},
															"nativeSrc": "5263:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5263:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5188:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5241:5:7",
														"nodeType": "YulTypedName",
														"src": "5241:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5248:3:7",
														"nodeType": "YulTypedName",
														"src": "5248:3:7",
														"type": ""
													}
												],
												"src": "5188:118:7"
											},
											{
												"body": {
													"nativeSrc": "5410:124:7",
													"nodeType": "YulBlock",
													"src": "5410:124:7",
													"statements": [
														{
															"nativeSrc": "5420:26:7",
															"nodeType": "YulAssignment",
															"src": "5420:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5432:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5432:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5443:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5443:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5428:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:7"
																},
																"nativeSrc": "5428:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5428:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5420:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5420:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5500:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5500:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5513:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5524:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5509:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:7"
																		},
																		"nativeSrc": "5509:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5456:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5456:43:7"
																},
																"nativeSrc": "5456:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5456:71:7"
															},
															"nativeSrc": "5456:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5456:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5312:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5382:9:7",
														"nodeType": "YulTypedName",
														"src": "5382:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5394:6:7",
														"nodeType": "YulTypedName",
														"src": "5394:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5405:4:7",
														"nodeType": "YulTypedName",
														"src": "5405:4:7",
														"type": ""
													}
												],
												"src": "5312:222:7"
											},
											{
												"body": {
													"nativeSrc": "5623:391:7",
													"nodeType": "YulBlock",
													"src": "5623:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5669:83:7",
																"nodeType": "YulBlock",
																"src": "5669:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5671:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5671:77:7"
																			},
																			"nativeSrc": "5671:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5671:79:7"
																		},
																		"nativeSrc": "5671:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5671:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5644:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5644:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5653:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5640:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:7"
																		},
																		"nativeSrc": "5640:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5640:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5665:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5665:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5636:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5636:3:7"
																},
																"nativeSrc": "5636:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5636:32:7"
															},
															"nativeSrc": "5633:119:7",
															"nodeType": "YulIf",
															"src": "5633:119:7"
														},
														{
															"nativeSrc": "5762:117:7",
															"nodeType": "YulBlock",
															"src": "5762:117:7",
															"statements": [
																{
																	"nativeSrc": "5777:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5777:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5791:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5791:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5781:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5781:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5806:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5806:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5841:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5841:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5852:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5852:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5837:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5837:3:7"
																				},
																				"nativeSrc": "5837:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5837:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5861:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5861:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5816:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5816:20:7"
																		},
																		"nativeSrc": "5816:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5816:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5806:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5806:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5889:118:7",
															"nodeType": "YulBlock",
															"src": "5889:118:7",
															"statements": [
																{
																	"nativeSrc": "5904:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5904:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5918:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5918:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5908:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5908:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5934:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5934:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5969:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5969:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5980:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5980:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5965:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5965:3:7"
																				},
																				"nativeSrc": "5965:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5965:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5989:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5989:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5944:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5944:20:7"
																		},
																		"nativeSrc": "5944:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5944:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5934:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5934:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5540:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5585:9:7",
														"nodeType": "YulTypedName",
														"src": "5585:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5596:7:7",
														"nodeType": "YulTypedName",
														"src": "5596:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5608:6:7",
														"nodeType": "YulTypedName",
														"src": "5608:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5616:6:7",
														"nodeType": "YulTypedName",
														"src": "5616:6:7",
														"type": ""
													}
												],
												"src": "5540:474:7"
											},
											{
												"body": {
													"nativeSrc": "6048:152:7",
													"nodeType": "YulBlock",
													"src": "6048:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6065:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6065:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6068:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6068:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6058:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:7"
																},
																"nativeSrc": "6058:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6058:88:7"
															},
															"nativeSrc": "6058:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6058:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6162:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6162:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6165:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6165:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6155:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:7"
																},
																"nativeSrc": "6155:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6155:15:7"
															},
															"nativeSrc": "6155:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6155:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6186:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6186:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6189:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6189:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6179:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:7"
																},
																"nativeSrc": "6179:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6179:15:7"
															},
															"nativeSrc": "6179:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6179:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6020:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6020:180:7"
											},
											{
												"body": {
													"nativeSrc": "6257:269:7",
													"nodeType": "YulBlock",
													"src": "6257:269:7",
													"statements": [
														{
															"nativeSrc": "6267:22:7",
															"nodeType": "YulAssignment",
															"src": "6267:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6281:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6281:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6287:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6287:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6277:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6277:3:7"
																},
																"nativeSrc": "6277:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6277:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6267:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:7"
																}
															]
														},
														{
															"nativeSrc": "6298:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6298:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6328:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6328:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6334:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6334:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6324:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:7"
																},
																"nativeSrc": "6324:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6324:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6302:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6302:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6375:51:7",
																"nodeType": "YulBlock",
																"src": "6375:51:7",
																"statements": [
																	{
																		"nativeSrc": "6389:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6389:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6403:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6403:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6411:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6411:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6399:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6399:3:7"
																			},
																			"nativeSrc": "6399:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6399:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6389:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6389:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6355:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6355:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6348:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:7"
																},
																"nativeSrc": "6348:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6348:26:7"
															},
															"nativeSrc": "6345:81:7",
															"nodeType": "YulIf",
															"src": "6345:81:7"
														},
														{
															"body": {
																"nativeSrc": "6478:42:7",
																"nodeType": "YulBlock",
																"src": "6478:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6492:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6492:16:7"
																			},
																			"nativeSrc": "6492:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6492:18:7"
																		},
																		"nativeSrc": "6492:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6492:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6442:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6442:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6465:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6465:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6473:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6473:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6462:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6462:2:7"
																		},
																		"nativeSrc": "6462:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6462:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6439:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6439:2:7"
																},
																"nativeSrc": "6439:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6439:38:7"
															},
															"nativeSrc": "6436:84:7",
															"nodeType": "YulIf",
															"src": "6436:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6206:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6241:4:7",
														"nodeType": "YulTypedName",
														"src": "6241:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6250:6:7",
														"nodeType": "YulTypedName",
														"src": "6250:6:7",
														"type": ""
													}
												],
												"src": "6206:320:7"
											},
											{
												"body": {
													"nativeSrc": "6686:288:7",
													"nodeType": "YulBlock",
													"src": "6686:288:7",
													"statements": [
														{
															"nativeSrc": "6696:26:7",
															"nodeType": "YulAssignment",
															"src": "6696:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6708:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6708:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6719:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6719:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6704:3:7"
																},
																"nativeSrc": "6704:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6704:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6696:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6696:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6776:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6776:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6789:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6789:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6800:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6800:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6785:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6785:3:7"
																		},
																		"nativeSrc": "6785:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6785:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6732:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6732:43:7"
																},
																"nativeSrc": "6732:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6732:71:7"
															},
															"nativeSrc": "6732:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6732:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6857:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6857:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6870:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6870:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6881:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6881:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6866:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6866:3:7"
																		},
																		"nativeSrc": "6866:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6866:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6813:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6813:43:7"
																},
																"nativeSrc": "6813:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6813:72:7"
															},
															"nativeSrc": "6813:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6813:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6939:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6939:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6952:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6952:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6963:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6963:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6948:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6948:3:7"
																		},
																		"nativeSrc": "6948:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6948:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6895:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6895:43:7"
																},
																"nativeSrc": "6895:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6895:72:7"
															},
															"nativeSrc": "6895:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6895:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6532:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6642:9:7",
														"nodeType": "YulTypedName",
														"src": "6642:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6654:6:7",
														"nodeType": "YulTypedName",
														"src": "6654:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6662:6:7",
														"nodeType": "YulTypedName",
														"src": "6662:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6670:6:7",
														"nodeType": "YulTypedName",
														"src": "6670:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6681:4:7",
														"nodeType": "YulTypedName",
														"src": "6681:4:7",
														"type": ""
													}
												],
												"src": "6532:442:7"
											},
											{
												"body": {
													"nativeSrc": "7008:152:7",
													"nodeType": "YulBlock",
													"src": "7008:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7025:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7025:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7028:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7028:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7018:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:7"
																},
																"nativeSrc": "7018:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7018:88:7"
															},
															"nativeSrc": "7018:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7018:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7122:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7122:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7125:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7125:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7115:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:7"
																},
																"nativeSrc": "7115:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7115:15:7"
															},
															"nativeSrc": "7115:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7115:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7146:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7146:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7149:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7149:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7139:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7139:6:7"
																},
																"nativeSrc": "7139:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7139:15:7"
															},
															"nativeSrc": "7139:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7139:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6980:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6980:180:7"
											},
											{
												"body": {
													"nativeSrc": "7210:147:7",
													"nodeType": "YulBlock",
													"src": "7210:147:7",
													"statements": [
														{
															"nativeSrc": "7220:25:7",
															"nodeType": "YulAssignment",
															"src": "7220:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7243:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7243:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7225:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7225:17:7"
																},
																"nativeSrc": "7225:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7225:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7220:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7220:1:7"
																}
															]
														},
														{
															"nativeSrc": "7254:25:7",
															"nodeType": "YulAssignment",
															"src": "7254:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7277:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7277:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7259:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7259:17:7"
																},
																"nativeSrc": "7259:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7259:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7254:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7254:1:7"
																}
															]
														},
														{
															"nativeSrc": "7288:16:7",
															"nodeType": "YulAssignment",
															"src": "7288:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7299:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7299:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7302:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7302:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7295:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7295:3:7"
																},
																"nativeSrc": "7295:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7295:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7288:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7288:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7328:22:7",
																"nodeType": "YulBlock",
																"src": "7328:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7330:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7330:16:7"
																			},
																			"nativeSrc": "7330:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7330:18:7"
																		},
																		"nativeSrc": "7330:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7330:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7320:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7320:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7323:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7323:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7317:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7317:2:7"
																},
																"nativeSrc": "7317:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7317:10:7"
															},
															"nativeSrc": "7314:36:7",
															"nodeType": "YulIf",
															"src": "7314:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7166:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7197:1:7",
														"nodeType": "YulTypedName",
														"src": "7197:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7200:1:7",
														"nodeType": "YulTypedName",
														"src": "7200:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7206:3:7",
														"nodeType": "YulTypedName",
														"src": "7206:3:7",
														"type": ""
													}
												],
												"src": "7166:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610202578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b806370a08231146101aa578063715018a6146101da5780638da5cb5b146101e4576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc61029c565b6040516100e99190610dfc565b60405180910390f35b61010c60048036038101906101079190610eb7565b61032e565b6040516101199190610f12565b60405180910390f35b61012a610351565b6040516101379190610f3c565b60405180910390f35b61015a60048036038101906101559190610f57565b61035b565b6040516101679190610f12565b60405180910390f35b61017861038a565b6040516101859190610fc6565b60405180910390f35b6101a860048036038101906101a39190610eb7565b6103a1565b005b6101c460048036038101906101bf9190610fe1565b6103b7565b6040516101d19190610f3c565b60405180910390f35b6101e26103ff565b005b6101ec610413565b6040516101f9919061101d565b60405180910390f35b61020a61043d565b6040516102179190610dfc565b60405180910390f35b61023a60048036038101906102359190610eb7565b6104cf565b6040516102479190610f12565b60405180910390f35b61026a60048036038101906102659190611038565b6104f2565b6040516102779190610f3c565b60405180910390f35b61029a60048036038101906102959190610fe1565b610579565b005b6060600380546102ab906110a7565b80601f01602080910402602001604051908101604052809291908181526020018280546102d7906110a7565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000806103396105ff565b9050610346818585610607565b600191505092915050565b6000600254905090565b6000806103666105ff565b9050610373858285610619565b61037e8585856106ad565b60019150509392505050565b6000600560149054906101000a900460ff16905090565b6103a96107a1565b6103b38282610828565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104076107a1565b61041160006108aa565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461044c906110a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610478906110a7565b80156104c55780601f1061049a576101008083540402835291602001916104c5565b820191906000526020600020905b8154815290600101906020018083116104a857829003601f168201915b5050505050905090565b6000806104da6105ff565b90506104e78185856106ad565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6105816107a1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105f35760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105ea919061101d565b60405180910390fd5b6105fc816108aa565b50565b600033905090565b6106148383836001610970565b505050565b600061062584846104f2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106a75781811015610697578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161068e939291906110d8565b60405180910390fd5b6106a684848484036000610970565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361071f5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610716919061101d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107915760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610788919061101d565b60405180910390fd5b61079c838383610b47565b505050565b6107a96105ff565b73ffffffffffffffffffffffffffffffffffffffff166107c7610413565b73ffffffffffffffffffffffffffffffffffffffff1614610826576107ea6105ff565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161081d919061101d565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361089a5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610891919061101d565b60405180910390fd5b6108a660008383610b47565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109e25760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109d9919061101d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a545760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a4b919061101d565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b41578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b389190610f3c565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b99578060026000828254610b8d919061113e565b92505081905550610c6c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c25578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c1c939291906110d8565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cb55780600260008282540392505081905550610d02565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d5f9190610f3c565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610da6578082015181840152602081019050610d8b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dce82610d6c565b610dd88185610d77565b9350610de8818560208601610d88565b610df181610db2565b840191505092915050565b60006020820190508181036000830152610e168184610dc3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4e82610e23565b9050919050565b610e5e81610e43565b8114610e6957600080fd5b50565b600081359050610e7b81610e55565b92915050565b6000819050919050565b610e9481610e81565b8114610e9f57600080fd5b50565b600081359050610eb181610e8b565b92915050565b60008060408385031215610ece57610ecd610e1e565b5b6000610edc85828601610e6c565b9250506020610eed85828601610ea2565b9150509250929050565b60008115159050919050565b610f0c81610ef7565b82525050565b6000602082019050610f276000830184610f03565b92915050565b610f3681610e81565b82525050565b6000602082019050610f516000830184610f2d565b92915050565b600080600060608486031215610f7057610f6f610e1e565b5b6000610f7e86828701610e6c565b9350506020610f8f86828701610e6c565b9250506040610fa086828701610ea2565b9150509250925092565b600060ff82169050919050565b610fc081610faa565b82525050565b6000602082019050610fdb6000830184610fb7565b92915050565b600060208284031215610ff757610ff6610e1e565b5b600061100584828501610e6c565b91505092915050565b61101781610e43565b82525050565b6000602082019050611032600083018461100e565b92915050565b6000806040838503121561104f5761104e610e1e565b5b600061105d85828601610e6c565b925050602061106e85828601610e6c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110bf57607f821691505b6020821081036110d2576110d1611078565b5b50919050565b60006060820190506110ed600083018661100e565b6110fa6020830185610f2d565b6111076040830184610f2d565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061114982610e81565b915061115483610e81565b925082820190508082111561116c5761116b61110f565b5b9291505056fea2646970667358221220469c0e0fe235b1f375b0b66f027dd659f5282f0daf7ba353c2c79b392fa5419b64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x3FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x5FF JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x5FF JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3A9 PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x3B3 DUP3 DUP3 PUSH2 0x828 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x407 PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x411 PUSH1 0x0 PUSH2 0x8AA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x44C SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x478 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4DA PUSH2 0x5FF JUMP JUMPDEST SWAP1 POP PUSH2 0x4E7 DUP2 DUP6 DUP6 PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x581 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5F3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5FC DUP2 PUSH2 0x8AA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x614 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x970 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x625 DUP5 DUP5 PUSH2 0x4F2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x6A7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x697 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6A6 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x970 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x71F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x791 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x788 SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x79C DUP4 DUP4 DUP4 PUSH2 0xB47 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7A9 PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7C7 PUSH2 0x413 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x826 JUMPI PUSH2 0x7EA PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x891 SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A6 PUSH1 0x0 DUP4 DUP4 PUSH2 0xB47 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA54 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4B SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB41 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB99 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x113E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC25 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB5 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD02 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD5F SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDA6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP3 PUSH2 0xD6C JUMP JUMPDEST PUSH2 0xDD8 DUP2 DUP6 PUSH2 0xD77 JUMP JUMPDEST SWAP4 POP PUSH2 0xDE8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD88 JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0xDB2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE16 DUP2 DUP5 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4E DUP3 PUSH2 0xE23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5E DUP2 PUSH2 0xE43 JUMP JUMPDEST DUP2 EQ PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE7B DUP2 PUSH2 0xE55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE94 DUP2 PUSH2 0xE81 JUMP JUMPDEST DUP2 EQ PUSH2 0xE9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB1 DUP2 PUSH2 0xE8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xE1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEDC DUP6 DUP3 DUP7 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEED DUP6 DUP3 DUP7 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0C DUP2 PUSH2 0xEF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF36 DUP2 PUSH2 0xE81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF70 JUMPI PUSH2 0xF6F PUSH2 0xE1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF7E DUP7 DUP3 DUP8 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF8F DUP7 DUP3 DUP8 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFA0 DUP7 DUP3 DUP8 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC0 DUP2 PUSH2 0xFAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFDB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF7 JUMPI PUSH2 0xFF6 PUSH2 0xE1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1005 DUP5 DUP3 DUP6 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1017 DUP2 PUSH2 0xE43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1032 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x100E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x104F JUMPI PUSH2 0x104E PUSH2 0xE1E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x105D DUP6 DUP3 DUP7 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x106E DUP6 DUP3 DUP7 ADD PUSH2 0xE6C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10BF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10D2 JUMPI PUSH2 0x10D1 PUSH2 0x1078 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10ED PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x100E JUMP JUMPDEST PUSH2 0x10FA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x1107 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF2D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1149 DUP3 PUSH2 0xE81 JUMP JUMPDEST SWAP2 POP PUSH2 0x1154 DUP4 PUSH2 0xE81 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x116C JUMPI PUSH2 0x116B PUSH2 0x110F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID SWAP13 0xE 0xF 0xE2 CALLDATALOAD 0xB1 RETURN PUSH22 0xB0B66F027DD659F5282F0DAF7BA353C2C79B392FA541 SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "197:484:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;592:87:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;493:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;592:87:6:-;641:5;665:7;;;;;;;;;;;658:14;;592:87;:::o;493:93::-;1531:13:0;:11;:13::i;:::-;562:17:6::1;568:2;572:6;562:5;:17::i;:::-;493:93:::0;;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:180::-;6068:77;6065:1;6058:88;6165:4;6162:1;6155:15;6189:4;6186:1;6179:15;6206:320;6250:6;6287:1;6281:4;6277:12;6267:22;;6334:1;6328:4;6324:12;6355:18;6345:81;;6411:4;6403:6;6399:17;6389:27;;6345:81;6473:2;6465:6;6462:14;6442:18;6439:38;6436:84;;6492:18;;:::i;:::-;6436:84;6257:269;6206:320;;;:::o;6532:442::-;6681:4;6719:2;6708:9;6704:18;6696:26;;6732:71;6800:1;6789:9;6785:17;6776:6;6732:71;:::i;:::-;6813:72;6881:2;6870:9;6866:18;6857:6;6813:72;:::i;:::-;6895;6963:2;6952:9;6948:18;6939:6;6895:72;:::i;:::-;6532:442;;;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "904000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2864",
								"decimals()": "2618",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2589",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 197,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 197,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 197,
									"end": 681,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 487,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 487,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 260,
									"end": 487,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 260,
									"end": 487,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 260,
									"end": 487,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 260,
									"end": 487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 260,
									"end": 487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 380,
									"end": 392,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "54657374546F6B656E0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 358,
									"end": 362,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 408,
									"end": 451,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 414,
									"end": 424,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 441,
									"end": 450,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 435,
									"end": 437,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 435,
									"end": 450,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 435,
									"end": 450,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 435,
									"end": 450,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 435,
									"end": 450,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 450,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 435,
									"end": 450,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 435,
									"end": 450,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 426,
									"end": 432,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "186A0"
								},
								{
									"begin": 426,
									"end": 450,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 426,
									"end": 450,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 426,
									"end": 450,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 426,
									"end": 450,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 426,
									"end": 450,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 426,
									"end": 450,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 426,
									"end": 450,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 408,
									"end": 413,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 408,
									"end": 413,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 408,
									"end": 413,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 408,
									"end": 451,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 408,
									"end": 451,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 408,
									"end": 451,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 408,
									"end": 451,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 408,
									"end": 451,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 471,
									"end": 480,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 461,
									"end": 468,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 461,
									"end": 468,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 461,
									"end": 480,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 260,
									"end": 487,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 197,
									"end": 681,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 197,
									"end": 681,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 420,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 334,
									"end": 420,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 369,
									"end": 376,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 413,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 402,
									"end": 407,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 398,
									"end": 414,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 387,
									"end": 414,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 387,
									"end": 414,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 420,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 420,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 420,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 420,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 426,
									"end": 544,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 426,
									"end": 544,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 497,
									"end": 519,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 513,
									"end": 518,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 497,
									"end": 519,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 497,
									"end": 519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 497,
									"end": 519,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 497,
									"end": 519,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 490,
									"end": 495,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 487,
									"end": 520,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 477,
									"end": 538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 477,
									"end": 538,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 534,
									"end": 535,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 531,
									"end": 532,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 524,
									"end": 536,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 477,
									"end": 538,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 477,
									"end": 538,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 426,
									"end": 544,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 426,
									"end": 544,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 550,
									"end": 689,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 550,
									"end": 689,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 605,
									"end": 610,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 636,
									"end": 642,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 630,
									"end": 643,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 621,
									"end": 643,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 621,
									"end": 643,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 652,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 677,
									"end": 682,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 652,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 652,
									"end": 683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 652,
									"end": 683,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 652,
									"end": 683,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 550,
									"end": 689,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 550,
									"end": 689,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 550,
									"end": 689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 550,
									"end": 689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 550,
									"end": 689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 695,
									"end": 821,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 695,
									"end": 821,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 732,
									"end": 739,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 772,
									"end": 814,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 765,
									"end": 770,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 761,
									"end": 815,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 750,
									"end": 815,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 750,
									"end": 815,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 695,
									"end": 821,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 695,
									"end": 821,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 695,
									"end": 821,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 695,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 827,
									"end": 923,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 827,
									"end": 923,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 864,
									"end": 871,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 893,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 893,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 893,
									"end": 917,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 893,
									"end": 917,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 893,
									"end": 917,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 882,
									"end": 917,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 882,
									"end": 917,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 827,
									"end": 923,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 827,
									"end": 923,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 827,
									"end": 923,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 827,
									"end": 923,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 929,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 929,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1002,
									"end": 1026,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 1020,
									"end": 1025,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1002,
									"end": 1026,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1002,
									"end": 1026,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1002,
									"end": 1026,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 1002,
									"end": 1026,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 995,
									"end": 1000,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 992,
									"end": 1027,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 982,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 982,
									"end": 1045,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1041,
									"end": 1042,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1038,
									"end": 1039,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1031,
									"end": 1043,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 982,
									"end": 1045,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 982,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 929,
									"end": 1051,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 929,
									"end": 1051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1057,
									"end": 1200,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1057,
									"end": 1200,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1114,
									"end": 1119,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1145,
									"end": 1151,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1139,
									"end": 1152,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1152,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1152,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1194,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1188,
									"end": 1193,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1194,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1161,
									"end": 1194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1194,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1161,
									"end": 1194,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1057,
									"end": 1200,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1057,
									"end": 1200,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1057,
									"end": 1200,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1057,
									"end": 1200,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1057,
									"end": 1200,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1206,
									"end": 1323,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1206,
									"end": 1323,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1315,
									"end": 1316,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1312,
									"end": 1313,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1305,
									"end": 1317,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1446,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1329,
									"end": 1446,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1439,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1435,
									"end": 1436,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1428,
									"end": 1440,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1452,
									"end": 1554,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1452,
									"end": 1554,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1493,
									"end": 1499,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1544,
									"end": 1546,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1540,
									"end": 1547,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1535,
									"end": 1537,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1528,
									"end": 1533,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1524,
									"end": 1538,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1548,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1510,
									"end": 1548,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1510,
									"end": 1548,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1452,
									"end": 1554,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1452,
									"end": 1554,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1452,
									"end": 1554,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1452,
									"end": 1554,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1740,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1560,
									"end": 1740,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1685,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1605,
									"end": 1606,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 1686,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1705,
									"end": 1709,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1702,
									"end": 1703,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1695,
									"end": 1710,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 1733,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1726,
									"end": 1727,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1719,
									"end": 1734,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 2027,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1746,
									"end": 2027,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1829,
									"end": 1856,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 1851,
									"end": 1855,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1829,
									"end": 1856,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1829,
									"end": 1856,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1829,
									"end": 1856,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 1829,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1827,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1817,
									"end": 1857,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1959,
									"end": 1965,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1957,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1944,
									"end": 1966,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1923,
									"end": 1941,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1911,
									"end": 1921,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1942,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1905,
									"end": 1967,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1902,
									"end": 1990,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1902,
									"end": 1990,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 1902,
									"end": 1990,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1970,
									"end": 1988,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1902,
									"end": 1990,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 1902,
									"end": 1990,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2020,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2006,
									"end": 2008,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1999,
									"end": 2021,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1789,
									"end": 2027,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 2027,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 2027,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 2027,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2162,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2033,
									"end": 2162,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2094,
									"end": 2114,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 2094,
									"end": 2114,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2094,
									"end": 2114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2094,
									"end": 2114,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 2094,
									"end": 2114,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2084,
									"end": 2114,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2084,
									"end": 2114,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2123,
									"end": 2156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2143,
									"end": 2149,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2123,
									"end": 2156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2123,
									"end": 2156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2123,
									"end": 2156,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 2123,
									"end": 2156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2162,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2162,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2162,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2162,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2168,
									"end": 2476,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2168,
									"end": 2476,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2230,
									"end": 2234,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2320,
									"end": 2338,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2312,
									"end": 2318,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2309,
									"end": 2339,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2306,
									"end": 2362,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2306,
									"end": 2362,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 2306,
									"end": 2362,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2342,
									"end": 2360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 2342,
									"end": 2360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2342,
									"end": 2360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2342,
									"end": 2360,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 2342,
									"end": 2360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2306,
									"end": 2362,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 2306,
									"end": 2362,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2380,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 2402,
									"end": 2408,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2380,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2380,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2380,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 2380,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2409,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2409,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2464,
									"end": 2468,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2458,
									"end": 2462,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2454,
									"end": 2469,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2446,
									"end": 2469,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2446,
									"end": 2469,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2168,
									"end": 2476,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2168,
									"end": 2476,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2168,
									"end": 2476,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2168,
									"end": 2476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2482,
									"end": 2728,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2482,
									"end": 2728,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2564,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2587,
									"end": 2593,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2584,
									"end": 2585,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2581,
									"end": 2594,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2672,
									"end": 2673,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2667,
									"end": 2670,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2663,
									"end": 2674,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2657,
									"end": 2675,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2653,
									"end": 2654,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2648,
									"end": 2651,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2644,
									"end": 2655,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2637,
									"end": 2676,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2609,
									"end": 2611,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2606,
									"end": 2607,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2612,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2597,
									"end": 2612,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2597,
									"end": 2612,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 2573,
									"end": 2686,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2720,
									"end": 2721,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2711,
									"end": 2717,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2706,
									"end": 2709,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2702,
									"end": 2718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2722,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2544,
									"end": 2728,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2482,
									"end": 2728,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2482,
									"end": 2728,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2482,
									"end": 2728,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2482,
									"end": 2728,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2734,
									"end": 3168,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2734,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2823,
									"end": 2828,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2848,
									"end": 2914,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 2864,
									"end": 2913,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 2906,
									"end": 2912,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2864,
									"end": 2913,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2864,
									"end": 2913,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2864,
									"end": 2913,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 2864,
									"end": 2913,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2848,
									"end": 2914,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2848,
									"end": 2914,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2848,
									"end": 2914,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 2848,
									"end": 2914,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2839,
									"end": 2914,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2839,
									"end": 2914,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 2943,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 2935,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2923,
									"end": 2944,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2975,
									"end": 2979,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2968,
									"end": 2973,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2964,
									"end": 2980,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3013,
									"end": 3016,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2999,
									"end": 3002,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2995,
									"end": 3011,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2992,
									"end": 3017,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2989,
									"end": 3101,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2989,
									"end": 3101,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 2989,
									"end": 3101,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3020,
									"end": 3099,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 3020,
									"end": 3099,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3020,
									"end": 3099,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3020,
									"end": 3099,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 3020,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2989,
									"end": 3101,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 2989,
									"end": 3101,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3162,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 3155,
									"end": 3161,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3150,
									"end": 3153,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3145,
									"end": 3148,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3162,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3110,
									"end": 3162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3162,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 3110,
									"end": 3162,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2829,
									"end": 3168,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2734,
									"end": 3168,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2734,
									"end": 3168,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2734,
									"end": 3168,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2734,
									"end": 3168,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2734,
									"end": 3168,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2734,
									"end": 3168,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3543,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3188,
									"end": 3543,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3260,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3304,
									"end": 3307,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3301,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3289,
									"end": 3295,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3285,
									"end": 3302,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3281,
									"end": 3308,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3271,
									"end": 3393,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 3271,
									"end": 3393,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3312,
									"end": 3391,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 3312,
									"end": 3391,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 3312,
									"end": 3391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3312,
									"end": 3391,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 3312,
									"end": 3391,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3271,
									"end": 3393,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 3271,
									"end": 3393,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3422,
									"end": 3428,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3416,
									"end": 3429,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3447,
									"end": 3537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 3533,
									"end": 3536,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3525,
									"end": 3531,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3518,
									"end": 3522,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3510,
									"end": 3516,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3506,
									"end": 3523,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3447,
									"end": 3537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3447,
									"end": 3537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3447,
									"end": 3537,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 3447,
									"end": 3537,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3438,
									"end": 3537,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3438,
									"end": 3537,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3543,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3543,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3543,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3543,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3543,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3543,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3549,
									"end": 4381,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3549,
									"end": 4381,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3645,
									"end": 3651,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3653,
									"end": 3659,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3661,
									"end": 3667,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3710,
									"end": 3712,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3698,
									"end": 3707,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3689,
									"end": 3696,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3685,
									"end": 3708,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3681,
									"end": 3713,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3678,
									"end": 3797,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3678,
									"end": 3797,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 3678,
									"end": 3797,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3716,
									"end": 3795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 3716,
									"end": 3795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3716,
									"end": 3795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3716,
									"end": 3795,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 3716,
									"end": 3795,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3678,
									"end": 3797,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 3678,
									"end": 3797,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3836,
									"end": 3837,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3861,
									"end": 3923,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 3915,
									"end": 3922,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 3912,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3895,
									"end": 3904,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3891,
									"end": 3913,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3861,
									"end": 3923,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3861,
									"end": 3923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3861,
									"end": 3923,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 3861,
									"end": 3923,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3851,
									"end": 3923,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3851,
									"end": 3923,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3807,
									"end": 3933,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3998,
									"end": 4062,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 4054,
									"end": 4061,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4045,
									"end": 4051,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4034,
									"end": 4043,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4030,
									"end": 4052,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3998,
									"end": 4062,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3998,
									"end": 4062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3998,
									"end": 4062,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 3998,
									"end": 4062,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4062,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4072,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4132,
									"end": 4134,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4121,
									"end": 4130,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4117,
									"end": 4135,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4111,
									"end": 4136,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4163,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4155,
									"end": 4161,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4152,
									"end": 4182,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4149,
									"end": 4266,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4149,
									"end": 4266,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 4149,
									"end": 4266,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4185,
									"end": 4264,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 4185,
									"end": 4264,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 4185,
									"end": 4264,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4185,
									"end": 4264,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 4185,
									"end": 4264,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4149,
									"end": 4266,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 4149,
									"end": 4266,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4290,
									"end": 4364,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 4356,
									"end": 4363,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4347,
									"end": 4353,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4336,
									"end": 4345,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4332,
									"end": 4354,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4290,
									"end": 4364,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 4290,
									"end": 4364,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4290,
									"end": 4364,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 4290,
									"end": 4364,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4280,
									"end": 4364,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4280,
									"end": 4364,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4082,
									"end": 4374,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3549,
									"end": 4381,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3549,
									"end": 4381,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3549,
									"end": 4381,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3549,
									"end": 4381,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3549,
									"end": 4381,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3549,
									"end": 4381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4387,
									"end": 4486,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 4387,
									"end": 4486,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4439,
									"end": 4445,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4473,
									"end": 4478,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4467,
									"end": 4479,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4457,
									"end": 4479,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4457,
									"end": 4479,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4387,
									"end": 4486,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4387,
									"end": 4486,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4387,
									"end": 4486,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4387,
									"end": 4486,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4492,
									"end": 4672,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4492,
									"end": 4672,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4540,
									"end": 4617,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4537,
									"end": 4538,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4530,
									"end": 4618,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4637,
									"end": 4641,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4634,
									"end": 4635,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4627,
									"end": 4642,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4661,
									"end": 4665,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4658,
									"end": 4659,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4651,
									"end": 4666,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4678,
									"end": 4998,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 4678,
									"end": 4998,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4722,
									"end": 4728,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4759,
									"end": 4760,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4753,
									"end": 4757,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4749,
									"end": 4761,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4739,
									"end": 4761,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4739,
									"end": 4761,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4806,
									"end": 4807,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4800,
									"end": 4804,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4796,
									"end": 4808,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4827,
									"end": 4845,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4817,
									"end": 4898,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 4817,
									"end": 4898,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4883,
									"end": 4887,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 4875,
									"end": 4881,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4871,
									"end": 4888,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4888,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4888,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4817,
									"end": 4898,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 4817,
									"end": 4898,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4945,
									"end": 4947,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4937,
									"end": 4943,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4934,
									"end": 4948,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4914,
									"end": 4932,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4911,
									"end": 4949,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4908,
									"end": 4992,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 4908,
									"end": 4992,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4964,
									"end": 4982,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 4964,
									"end": 4982,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4964,
									"end": 4982,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4964,
									"end": 4982,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 4964,
									"end": 4982,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4908,
									"end": 4992,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 4908,
									"end": 4992,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4729,
									"end": 4998,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4678,
									"end": 4998,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4678,
									"end": 4998,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4678,
									"end": 4998,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4678,
									"end": 4998,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5004,
									"end": 5145,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 5004,
									"end": 5145,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5053,
									"end": 5057,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5076,
									"end": 5079,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5068,
									"end": 5079,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5068,
									"end": 5079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5099,
									"end": 5102,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5096,
									"end": 5097,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5089,
									"end": 5103,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5133,
									"end": 5137,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5130,
									"end": 5131,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5120,
									"end": 5138,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 5112,
									"end": 5138,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5112,
									"end": 5138,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5004,
									"end": 5145,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5004,
									"end": 5145,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5004,
									"end": 5145,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5004,
									"end": 5145,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5151,
									"end": 5244,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 5151,
									"end": 5244,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5188,
									"end": 5194,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5235,
									"end": 5237,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5230,
									"end": 5232,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5223,
									"end": 5228,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5219,
									"end": 5233,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5215,
									"end": 5238,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5205,
									"end": 5238,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5205,
									"end": 5238,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5151,
									"end": 5244,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5151,
									"end": 5244,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5151,
									"end": 5244,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5151,
									"end": 5244,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5250,
									"end": 5357,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 5250,
									"end": 5357,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5294,
									"end": 5302,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5344,
									"end": 5349,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5338,
									"end": 5342,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5334,
									"end": 5350,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 5313,
									"end": 5350,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5313,
									"end": 5350,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5250,
									"end": 5357,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5250,
									"end": 5357,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5250,
									"end": 5357,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5250,
									"end": 5357,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5250,
									"end": 5357,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5363,
									"end": 5756,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 5363,
									"end": 5756,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5438,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5482,
									"end": 5483,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5470,
									"end": 5480,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5466,
									"end": 5484,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5505,
									"end": 5602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 5535,
									"end": 5601,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5524,
									"end": 5533,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5505,
									"end": 5602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 5505,
									"end": 5602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5505,
									"end": 5602,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 5505,
									"end": 5602,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5623,
									"end": 5662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 5653,
									"end": 5661,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5642,
									"end": 5651,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5623,
									"end": 5662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 5623,
									"end": 5662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5623,
									"end": 5662,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 5623,
									"end": 5662,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5611,
									"end": 5662,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5611,
									"end": 5662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5695,
									"end": 5699,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5691,
									"end": 5700,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5684,
									"end": 5689,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5680,
									"end": 5701,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5671,
									"end": 5701,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5671,
									"end": 5701,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5744,
									"end": 5748,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5734,
									"end": 5742,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5730,
									"end": 5749,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5723,
									"end": 5728,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5720,
									"end": 5750,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5710,
									"end": 5750,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5710,
									"end": 5750,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5439,
									"end": 5756,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5439,
									"end": 5756,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5363,
									"end": 5756,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5363,
									"end": 5756,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5363,
									"end": 5756,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5363,
									"end": 5756,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5363,
									"end": 5756,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5363,
									"end": 5756,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5762,
									"end": 5839,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 5762,
									"end": 5839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5799,
									"end": 5806,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5828,
									"end": 5833,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5817,
									"end": 5833,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5817,
									"end": 5833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5762,
									"end": 5839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5762,
									"end": 5839,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5762,
									"end": 5839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5762,
									"end": 5839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5845,
									"end": 5905,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 5845,
									"end": 5905,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5873,
									"end": 5876,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5894,
									"end": 5899,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5887,
									"end": 5899,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5887,
									"end": 5899,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5845,
									"end": 5905,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5845,
									"end": 5905,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5845,
									"end": 5905,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5845,
									"end": 5905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5911,
									"end": 6053,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 5911,
									"end": 6053,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5961,
									"end": 5970,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5994,
									"end": 6047,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6012,
									"end": 6046,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6021,
									"end": 6045,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 6039,
									"end": 6044,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6021,
									"end": 6045,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6021,
									"end": 6045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6021,
									"end": 6045,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 6021,
									"end": 6045,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6012,
									"end": 6046,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 6012,
									"end": 6046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6012,
									"end": 6046,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6012,
									"end": 6046,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5994,
									"end": 6047,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 5994,
									"end": 6047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5994,
									"end": 6047,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 5994,
									"end": 6047,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5981,
									"end": 6047,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5981,
									"end": 6047,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5911,
									"end": 6053,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5911,
									"end": 6053,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5911,
									"end": 6053,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5911,
									"end": 6053,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6059,
									"end": 6134,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 6059,
									"end": 6134,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6102,
									"end": 6105,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6123,
									"end": 6128,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6116,
									"end": 6128,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6116,
									"end": 6128,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6059,
									"end": 6134,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6059,
									"end": 6134,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6059,
									"end": 6134,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6059,
									"end": 6134,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6140,
									"end": 6409,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 6140,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6250,
									"end": 6289,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6281,
									"end": 6288,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6250,
									"end": 6289,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 6250,
									"end": 6289,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6250,
									"end": 6289,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6250,
									"end": 6289,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6311,
									"end": 6402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 6360,
									"end": 6401,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 6384,
									"end": 6400,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6360,
									"end": 6401,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 6360,
									"end": 6401,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6360,
									"end": 6401,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 6360,
									"end": 6401,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6352,
									"end": 6358,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6345,
									"end": 6349,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6339,
									"end": 6350,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6311,
									"end": 6402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6311,
									"end": 6402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6311,
									"end": 6402,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 6311,
									"end": 6402,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6305,
									"end": 6309,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6298,
									"end": 6403,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6216,
									"end": 6409,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6140,
									"end": 6409,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6140,
									"end": 6409,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6140,
									"end": 6409,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6140,
									"end": 6409,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6415,
									"end": 6488,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 6415,
									"end": 6488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6460,
									"end": 6463,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6415,
									"end": 6488,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6415,
									"end": 6488,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6494,
									"end": 6683,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 6494,
									"end": 6683,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6571,
									"end": 6603,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 6571,
									"end": 6603,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 6571,
									"end": 6603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6571,
									"end": 6603,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 6571,
									"end": 6603,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6612,
									"end": 6677,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 6670,
									"end": 6676,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6662,
									"end": 6668,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6656,
									"end": 6660,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6612,
									"end": 6677,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 6612,
									"end": 6677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6612,
									"end": 6677,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 6612,
									"end": 6677,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6547,
									"end": 6683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6494,
									"end": 6683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6494,
									"end": 6683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6494,
									"end": 6683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6689,
									"end": 6875,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 6689,
									"end": 6875,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6749,
									"end": 6869,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 6749,
									"end": 6869,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6766,
									"end": 6769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6759,
									"end": 6764,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6756,
									"end": 6770,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6749,
									"end": 6869,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6749,
									"end": 6869,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 6749,
									"end": 6869,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6820,
									"end": 6859,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 6857,
									"end": 6858,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6850,
									"end": 6855,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6820,
									"end": 6859,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 6820,
									"end": 6859,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6820,
									"end": 6859,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 6820,
									"end": 6859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6793,
									"end": 6794,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6786,
									"end": 6791,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6782,
									"end": 6795,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6773,
									"end": 6795,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6773,
									"end": 6795,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6749,
									"end": 6869,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 6749,
									"end": 6869,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6749,
									"end": 6869,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 6749,
									"end": 6869,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6689,
									"end": 6875,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6689,
									"end": 6875,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6689,
									"end": 6875,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6881,
									"end": 7424,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 6881,
									"end": 7424,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6982,
									"end": 6984,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6977,
									"end": 6980,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6974,
									"end": 6985,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6971,
									"end": 7417,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6971,
									"end": 7417,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 6971,
									"end": 7417,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7016,
									"end": 7054,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 7048,
									"end": 7053,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7016,
									"end": 7054,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 7016,
									"end": 7054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7016,
									"end": 7054,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 7016,
									"end": 7054,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 7118,
									"end": 7128,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7100,
									"end": 7129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7090,
									"end": 7098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7086,
									"end": 7130,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7283,
									"end": 7285,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7271,
									"end": 7281,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7268,
									"end": 7286,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7314,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7314,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 7265,
									"end": 7314,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7304,
									"end": 7312,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7289,
									"end": 7312,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7289,
									"end": 7312,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7314,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 7265,
									"end": 7314,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7327,
									"end": 7407,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 7383,
									"end": 7405,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 7401,
									"end": 7404,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7383,
									"end": 7405,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7383,
									"end": 7405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7383,
									"end": 7405,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 7383,
									"end": 7405,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7373,
									"end": 7381,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7369,
									"end": 7406,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7356,
									"end": 7367,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7327,
									"end": 7407,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 7327,
									"end": 7407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7327,
									"end": 7407,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 7327,
									"end": 7407,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6986,
									"end": 7417,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6986,
									"end": 7417,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6971,
									"end": 7417,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 6971,
									"end": 7417,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6881,
									"end": 7424,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6881,
									"end": 7424,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6881,
									"end": 7424,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6881,
									"end": 7424,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7430,
									"end": 7547,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 7430,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7484,
									"end": 7492,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7534,
									"end": 7539,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7528,
									"end": 7532,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7524,
									"end": 7540,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7503,
									"end": 7540,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7503,
									"end": 7540,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7430,
									"end": 7547,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7430,
									"end": 7547,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7430,
									"end": 7547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7430,
									"end": 7547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7430,
									"end": 7547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7553,
									"end": 7722,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 7553,
									"end": 7722,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7597,
									"end": 7603,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7630,
									"end": 7681,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 7678,
									"end": 7679,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7674,
									"end": 7680,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7666,
									"end": 7671,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7663,
									"end": 7664,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7659,
									"end": 7672,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7630,
									"end": 7681,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 7630,
									"end": 7681,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7630,
									"end": 7681,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 7630,
									"end": 7681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7626,
									"end": 7682,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7711,
									"end": 7715,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7705,
									"end": 7709,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7701,
									"end": 7716,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7691,
									"end": 7716,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7691,
									"end": 7716,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7604,
									"end": 7722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7553,
									"end": 7722,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7553,
									"end": 7722,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7553,
									"end": 7722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7553,
									"end": 7722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7553,
									"end": 7722,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7727,
									"end": 8022,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 7727,
									"end": 8022,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7803,
									"end": 7807,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7949,
									"end": 7978,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 7974,
									"end": 7977,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7968,
									"end": 7972,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7949,
									"end": 7978,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 7949,
									"end": 7978,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7949,
									"end": 7978,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 7949,
									"end": 7978,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7941,
									"end": 7978,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7941,
									"end": 7978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8011,
									"end": 8014,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8008,
									"end": 8009,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8004,
									"end": 8015,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7998,
									"end": 8002,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7995,
									"end": 8016,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7987,
									"end": 8016,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7987,
									"end": 8016,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7727,
									"end": 8022,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7727,
									"end": 8022,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7727,
									"end": 8022,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7727,
									"end": 8022,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7727,
									"end": 8022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8027,
									"end": 9422,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 8027,
									"end": 9422,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8144,
									"end": 8181,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 8177,
									"end": 8180,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8144,
									"end": 8181,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 8144,
									"end": 8181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8144,
									"end": 8181,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 8144,
									"end": 8181,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8246,
									"end": 8264,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8235,
									"end": 8265,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8232,
									"end": 8288,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8232,
									"end": 8288,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 8232,
									"end": 8288,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8268,
									"end": 8286,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 8268,
									"end": 8286,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 8268,
									"end": 8286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8268,
									"end": 8286,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 8268,
									"end": 8286,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8232,
									"end": 8288,
									"name": "tag",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 8232,
									"end": 8288,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8312,
									"end": 8350,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 8344,
									"end": 8348,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8338,
									"end": 8349,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 8312,
									"end": 8350,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 8312,
									"end": 8350,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8312,
									"end": 8350,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 8312,
									"end": 8350,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8397,
									"end": 8464,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 8457,
									"end": 8463,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8449,
									"end": 8455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8443,
									"end": 8447,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8397,
									"end": 8464,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 8397,
									"end": 8464,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8397,
									"end": 8464,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 8397,
									"end": 8464,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8491,
									"end": 8492,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8515,
									"end": 8519,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8502,
									"end": 8519,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8502,
									"end": 8519,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8547,
									"end": 8549,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8539,
									"end": 8545,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8536,
									"end": 8550,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8564,
									"end": 8565,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8559,
									"end": 9177,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8559,
									"end": 9177,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8559,
									"end": 9177,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 8559,
									"end": 9177,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9221,
									"end": 9222,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9238,
									"end": 9244,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9235,
									"end": 9312,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9235,
									"end": 9312,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9235,
									"end": 9312,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9287,
									"end": 9296,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9282,
									"end": 9285,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 9278,
									"end": 9297,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9272,
									"end": 9298,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9263,
									"end": 9298,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9263,
									"end": 9298,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9235,
									"end": 9312,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9235,
									"end": 9312,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9338,
									"end": 9405,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9398,
									"end": 9404,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9391,
									"end": 9396,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9338,
									"end": 9405,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 9338,
									"end": 9405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9338,
									"end": 9405,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9338,
									"end": 9405,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9332,
									"end": 9336,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9325,
									"end": 9406,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9194,
									"end": 9416,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8529,
									"end": 9416,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 8529,
									"end": 9416,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8559,
									"end": 9177,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 8559,
									"end": 9177,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8611,
									"end": 8615,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8607,
									"end": 8616,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8599,
									"end": 8605,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8595,
									"end": 8617,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 8682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 8677,
									"end": 8681,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 8682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 8645,
									"end": 8682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 8682,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 8645,
									"end": 8682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8704,
									"end": 8705,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8718,
									"end": 8926,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 8718,
									"end": 8926,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8732,
									"end": 8739,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8729,
									"end": 8730,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8726,
									"end": 8740,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8718,
									"end": 8926,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8718,
									"end": 8926,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 8718,
									"end": 8926,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8811,
									"end": 8820,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8806,
									"end": 8809,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8802,
									"end": 8821,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8796,
									"end": 8822,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8788,
									"end": 8794,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8781,
									"end": 8823,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8862,
									"end": 8863,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8854,
									"end": 8860,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8850,
									"end": 8864,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8840,
									"end": 8864,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8840,
									"end": 8864,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8909,
									"end": 8911,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8898,
									"end": 8907,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8894,
									"end": 8912,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8881,
									"end": 8912,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8881,
									"end": 8912,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8755,
									"end": 8759,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8752,
									"end": 8753,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8748,
									"end": 8760,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8743,
									"end": 8760,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8743,
									"end": 8760,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8718,
									"end": 8926,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 8718,
									"end": 8926,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8718,
									"end": 8926,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 8718,
									"end": 8926,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8954,
									"end": 8960,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8945,
									"end": 8952,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8942,
									"end": 8961,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8939,
									"end": 9118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8939,
									"end": 9118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 8939,
									"end": 9118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9021,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9007,
									"end": 9010,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9003,
									"end": 9022,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8997,
									"end": 9023,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9055,
									"end": 9103,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 9097,
									"end": 9101,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 9089,
									"end": 9095,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9085,
									"end": 9102,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9074,
									"end": 9083,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9055,
									"end": 9103,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 9055,
									"end": 9103,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9055,
									"end": 9103,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 9055,
									"end": 9103,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9047,
									"end": 9053,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9040,
									"end": 9104,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8962,
									"end": 9118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8939,
									"end": 9118,
									"name": "tag",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 8939,
									"end": 9118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9164,
									"end": 9165,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9160,
									"end": 9161,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 9152,
									"end": 9158,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9148,
									"end": 9162,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9144,
									"end": 9166,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9138,
									"end": 9142,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9131,
									"end": 9167,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8566,
									"end": 9177,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8566,
									"end": 9177,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8566,
									"end": 9177,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8529,
									"end": 9416,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 8529,
									"end": 9416,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8529,
									"end": 9416,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8119,
									"end": 9422,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8119,
									"end": 9422,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8119,
									"end": 9422,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8027,
									"end": 9422,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8027,
									"end": 9422,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8027,
									"end": 9422,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9428,
									"end": 9546,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 9428,
									"end": 9546,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9515,
									"end": 9539,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 9533,
									"end": 9538,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9515,
									"end": 9539,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 9515,
									"end": 9539,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9515,
									"end": 9539,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 9515,
									"end": 9539,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9510,
									"end": 9513,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9503,
									"end": 9540,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9428,
									"end": 9546,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9428,
									"end": 9546,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9428,
									"end": 9546,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9552,
									"end": 9774,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 9552,
									"end": 9774,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9645,
									"end": 9649,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9683,
									"end": 9685,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9672,
									"end": 9681,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9668,
									"end": 9686,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9660,
									"end": 9686,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9660,
									"end": 9686,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9696,
									"end": 9767,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 9764,
									"end": 9765,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9753,
									"end": 9762,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9749,
									"end": 9766,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9740,
									"end": 9746,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9696,
									"end": 9767,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 9696,
									"end": 9767,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9696,
									"end": 9767,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 9696,
									"end": 9767,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9552,
									"end": 9774,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9552,
									"end": 9774,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9552,
									"end": 9774,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9552,
									"end": 9774,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9552,
									"end": 9774,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9780,
									"end": 9960,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 9780,
									"end": 9960,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9828,
									"end": 9905,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9825,
									"end": 9826,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9818,
									"end": 9906,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9925,
									"end": 9929,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 9922,
									"end": 9923,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 9915,
									"end": 9930,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9949,
									"end": 9953,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 9946,
									"end": 9947,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9939,
									"end": 9954,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 9966,
									"end": 10068,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 9966,
									"end": 10068,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10008,
									"end": 10016,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10055,
									"end": 10060,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10052,
									"end": 10053,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 10048,
									"end": 10061,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 10027,
									"end": 10061,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10027,
									"end": 10061,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9966,
									"end": 10068,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9966,
									"end": 10068,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9966,
									"end": 10068,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9966,
									"end": 10068,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10074,
									"end": 10922,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 10074,
									"end": 10922,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10135,
									"end": 10140,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10142,
									"end": 10146,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10166,
									"end": 10172,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10157,
									"end": 10172,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10157,
									"end": 10172,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10190,
									"end": 10195,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10181,
									"end": 10195,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10181,
									"end": 10195,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10204,
									"end": 10916,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10204,
									"end": 10916,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10225,
									"end": 10226,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 10215,
									"end": 10223,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10212,
									"end": 10227,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10204,
									"end": 10916,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10204,
									"end": 10916,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10204,
									"end": 10916,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10320,
									"end": 10324,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10315,
									"end": 10318,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 10311,
									"end": 10325,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 10305,
									"end": 10309,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10302,
									"end": 10326,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10299,
									"end": 10349,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10299,
									"end": 10349,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 10299,
									"end": 10349,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10329,
									"end": 10347,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 10329,
									"end": 10347,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 10329,
									"end": 10347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10329,
									"end": 10347,
									"name": "tag",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 10329,
									"end": 10347,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10299,
									"end": 10349,
									"name": "tag",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 10299,
									"end": 10349,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10379,
									"end": 10380,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 10369,
									"end": 10377,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10365,
									"end": 10381,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 10362,
									"end": 10813,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10362,
									"end": 10813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 10362,
									"end": 10813,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10794,
									"end": 10798,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10787,
									"end": 10792,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10783,
									"end": 10799,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 10774,
									"end": 10799,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10774,
									"end": 10799,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10362,
									"end": 10813,
									"name": "tag",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 10362,
									"end": 10813,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10844,
									"end": 10848,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10838,
									"end": 10842,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10834,
									"end": 10849,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 10826,
									"end": 10849,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10826,
									"end": 10849,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10874,
									"end": 10906,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 10897,
									"end": 10905,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10874,
									"end": 10906,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 10874,
									"end": 10906,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10874,
									"end": 10906,
									"name": "tag",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 10874,
									"end": 10906,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10862,
									"end": 10906,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10862,
									"end": 10906,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10204,
									"end": 10916,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10204,
									"end": 10916,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10204,
									"end": 10916,
									"name": "tag",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10204,
									"end": 10916,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10074,
									"end": 10922,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10074,
									"end": 10922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10074,
									"end": 10922,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10074,
									"end": 10922,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10074,
									"end": 10922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10074,
									"end": 10922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10074,
									"end": 10922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10074,
									"end": 10922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10928,
									"end": 12001,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 10928,
									"end": 12001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10982,
									"end": 10987,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11173,
									"end": 11181,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11163,
									"end": 11203,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 11163,
									"end": 11203,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11194,
									"end": 11195,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 11185,
									"end": 11195,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11185,
									"end": 11195,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11196,
									"end": 11201,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 11196,
									"end": 11201,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11163,
									"end": 11203,
									"name": "tag",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 11163,
									"end": 11203,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11222,
									"end": 11226,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11212,
									"end": 11248,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 11212,
									"end": 11248,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11239,
									"end": 11240,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11230,
									"end": 11240,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11230,
									"end": 11240,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11241,
									"end": 11246,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 11241,
									"end": 11246,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11212,
									"end": 11248,
									"name": "tag",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 11212,
									"end": 11248,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11308,
									"end": 11312,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11356,
									"end": 11357,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 11351,
									"end": 11378,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11351,
									"end": 11378,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 11351,
									"end": 11378,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 11351,
									"end": 11378,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11392,
									"end": 11393,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 11387,
									"end": 11578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11387,
									"end": 11578,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 11387,
									"end": 11578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 11387,
									"end": 11578,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11301,
									"end": 11578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 11301,
									"end": 11578,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11351,
									"end": 11378,
									"name": "tag",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 11351,
									"end": 11378,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11369,
									"end": 11370,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 11360,
									"end": 11370,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11360,
									"end": 11370,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11371,
									"end": 11376,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11371,
									"end": 11376,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 11371,
									"end": 11376,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11387,
									"end": 11578,
									"name": "tag",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 11387,
									"end": 11578,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11432,
									"end": 11435,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 11422,
									"end": 11430,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11419,
									"end": 11436,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11416,
									"end": 11459,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11416,
									"end": 11459,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 11416,
									"end": 11459,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11439,
									"end": 11457,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 11439,
									"end": 11457,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 11439,
									"end": 11457,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11439,
									"end": 11457,
									"name": "tag",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 11439,
									"end": 11457,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11416,
									"end": 11459,
									"name": "tag",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 11416,
									"end": 11459,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11488,
									"end": 11496,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11485,
									"end": 11486,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 11481,
									"end": 11497,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 11472,
									"end": 11497,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11472,
									"end": 11497,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11523,
									"end": 11526,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11516,
									"end": 11521,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11513,
									"end": 11527,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11510,
									"end": 11550,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11510,
									"end": 11550,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 11510,
									"end": 11550,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11530,
									"end": 11548,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 11530,
									"end": 11548,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 11530,
									"end": 11548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11530,
									"end": 11548,
									"name": "tag",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 11530,
									"end": 11548,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11510,
									"end": 11550,
									"name": "tag",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 11510,
									"end": 11550,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11563,
									"end": 11568,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11563,
									"end": 11568,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 11563,
									"end": 11568,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11301,
									"end": 11578,
									"name": "tag",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 11301,
									"end": 11578,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11301,
									"end": 11578,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11687,
									"end": 11689,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11677,
									"end": 11685,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11674,
									"end": 11690,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 11668,
									"end": 11671,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 11662,
									"end": 11666,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11659,
									"end": 11672,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 11655,
									"end": 11691,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 11637,
									"end": 11639,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 11627,
									"end": 11635,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11624,
									"end": 11640,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 11619,
									"end": 11621,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 11613,
									"end": 11617,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11610,
									"end": 11622,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 11606,
									"end": 11641,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 11590,
									"end": 11701,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 11587,
									"end": 11833,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11587,
									"end": 11833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 11587,
									"end": 11833,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11743,
									"end": 11751,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11737,
									"end": 11741,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11733,
									"end": 11752,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 11724,
									"end": 11752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11724,
									"end": 11752,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11778,
									"end": 11781,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11771,
									"end": 11776,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11768,
									"end": 11782,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11765,
									"end": 11805,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11765,
									"end": 11805,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 11765,
									"end": 11805,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11785,
									"end": 11803,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "229"
								},
								{
									"begin": 11785,
									"end": 11803,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 11785,
									"end": 11803,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11785,
									"end": 11803,
									"name": "tag",
									"source": 7,
									"value": "229"
								},
								{
									"begin": 11785,
									"end": 11803,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11765,
									"end": 11805,
									"name": "tag",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 11765,
									"end": 11805,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11818,
									"end": 11823,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 11818,
									"end": 11823,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11587,
									"end": 11833,
									"name": "tag",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 11587,
									"end": 11833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11858,
									"end": 11900,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 11896,
									"end": 11899,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11886,
									"end": 11894,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11880,
									"end": 11884,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11877,
									"end": 11878,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 11858,
									"end": 11900,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 11858,
									"end": 11900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11858,
									"end": 11900,
									"name": "tag",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 11858,
									"end": 11900,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11843,
									"end": 11900,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11843,
									"end": 11900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11843,
									"end": 11900,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11843,
									"end": 11900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11932,
									"end": 11936,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11927,
									"end": 11930,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11923,
									"end": 11937,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 11916,
									"end": 11921,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11913,
									"end": 11938,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11910,
									"end": 11961,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11910,
									"end": 11961,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "231"
								},
								{
									"begin": 11910,
									"end": 11961,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11941,
									"end": 11959,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "232"
								},
								{
									"begin": 11941,
									"end": 11959,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 11941,
									"end": 11959,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11941,
									"end": 11959,
									"name": "tag",
									"source": 7,
									"value": "232"
								},
								{
									"begin": 11941,
									"end": 11959,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11910,
									"end": 11961,
									"name": "tag",
									"source": 7,
									"value": "231"
								},
								{
									"begin": 11910,
									"end": 11961,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11990,
									"end": 11994,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11983,
									"end": 11988,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11979,
									"end": 11995,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 11970,
									"end": 11995,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11970,
									"end": 11995,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10928,
									"end": 12001,
									"name": "tag",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 10928,
									"end": 12001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10928,
									"end": 12001,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 10928,
									"end": 12001,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10928,
									"end": 12001,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10928,
									"end": 12001,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10928,
									"end": 12001,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10928,
									"end": 12001,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12007,
									"end": 12288,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 12007,
									"end": 12288,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12065,
									"end": 12070,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12089,
									"end": 12112,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "234"
								},
								{
									"begin": 12107,
									"end": 12111,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12089,
									"end": 12112,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 12089,
									"end": 12112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12089,
									"end": 12112,
									"name": "tag",
									"source": 7,
									"value": "234"
								},
								{
									"begin": 12089,
									"end": 12112,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12081,
									"end": 12112,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12081,
									"end": 12112,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12133,
									"end": 12158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "235"
								},
								{
									"begin": 12149,
									"end": 12157,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12133,
									"end": 12158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 12133,
									"end": 12158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12133,
									"end": 12158,
									"name": "tag",
									"source": 7,
									"value": "235"
								},
								{
									"begin": 12133,
									"end": 12158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12121,
									"end": 12158,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12121,
									"end": 12158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12177,
									"end": 12281,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "236"
								},
								{
									"begin": 12214,
									"end": 12280,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12204,
									"end": 12212,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 12198,
									"end": 12202,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 12177,
									"end": 12281,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 12177,
									"end": 12281,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12177,
									"end": 12281,
									"name": "tag",
									"source": 7,
									"value": "236"
								},
								{
									"begin": 12177,
									"end": 12281,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12168,
									"end": 12281,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12168,
									"end": 12281,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12007,
									"end": 12288,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12007,
									"end": 12288,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12007,
									"end": 12288,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12007,
									"end": 12288,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12007,
									"end": 12288,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12294,
									"end": 12704,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 12294,
									"end": 12704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12334,
									"end": 12341,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12357,
									"end": 12377,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "238"
								},
								{
									"begin": 12375,
									"end": 12376,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12357,
									"end": 12377,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 12357,
									"end": 12377,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12357,
									"end": 12377,
									"name": "tag",
									"source": 7,
									"value": "238"
								},
								{
									"begin": 12357,
									"end": 12377,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12352,
									"end": 12377,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12352,
									"end": 12377,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12391,
									"end": 12411,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 12409,
									"end": 12410,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12391,
									"end": 12411,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 12391,
									"end": 12411,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12391,
									"end": 12411,
									"name": "tag",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 12391,
									"end": 12411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12386,
									"end": 12411,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12386,
									"end": 12411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12446,
									"end": 12447,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12443,
									"end": 12444,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12439,
									"end": 12448,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 12468,
									"end": 12498,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "240"
								},
								{
									"begin": 12486,
									"end": 12497,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12468,
									"end": 12498,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 12468,
									"end": 12498,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12468,
									"end": 12498,
									"name": "tag",
									"source": 7,
									"value": "240"
								},
								{
									"begin": 12468,
									"end": 12498,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12457,
									"end": 12498,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12457,
									"end": 12498,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12647,
									"end": 12648,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12638,
									"end": 12645,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12634,
									"end": 12649,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 12631,
									"end": 12632,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 12628,
									"end": 12650,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 12608,
									"end": 12609,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12601,
									"end": 12610,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 12581,
									"end": 12664,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 12558,
									"end": 12697,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "241"
								},
								{
									"begin": 12558,
									"end": 12697,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 12677,
									"end": 12695,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "242"
								},
								{
									"begin": 12677,
									"end": 12695,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 12677,
									"end": 12695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12677,
									"end": 12695,
									"name": "tag",
									"source": 7,
									"value": "242"
								},
								{
									"begin": 12677,
									"end": 12695,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12558,
									"end": 12697,
									"name": "tag",
									"source": 7,
									"value": "241"
								},
								{
									"begin": 12558,
									"end": 12697,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12342,
									"end": 12704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12294,
									"end": 12704,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12294,
									"end": 12704,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12294,
									"end": 12704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12294,
									"end": 12704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12294,
									"end": 12704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12710,
									"end": 12901,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 12710,
									"end": 12901,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12750,
									"end": 12753,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12769,
									"end": 12789,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "244"
								},
								{
									"begin": 12787,
									"end": 12788,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12769,
									"end": 12789,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 12769,
									"end": 12789,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12769,
									"end": 12789,
									"name": "tag",
									"source": 7,
									"value": "244"
								},
								{
									"begin": 12769,
									"end": 12789,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12764,
									"end": 12789,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12764,
									"end": 12789,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12803,
									"end": 12823,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "245"
								},
								{
									"begin": 12821,
									"end": 12822,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12803,
									"end": 12823,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 12803,
									"end": 12823,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12803,
									"end": 12823,
									"name": "tag",
									"source": 7,
									"value": "245"
								},
								{
									"begin": 12803,
									"end": 12823,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12798,
									"end": 12823,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12798,
									"end": 12823,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12846,
									"end": 12847,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12843,
									"end": 12844,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12839,
									"end": 12848,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12832,
									"end": 12848,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12832,
									"end": 12848,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12867,
									"end": 12870,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 12864,
									"end": 12865,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12861,
									"end": 12871,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 12858,
									"end": 12894,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 12858,
									"end": 12894,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "246"
								},
								{
									"begin": 12858,
									"end": 12894,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 12874,
									"end": 12892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "247"
								},
								{
									"begin": 12874,
									"end": 12892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 12874,
									"end": 12892,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12874,
									"end": 12892,
									"name": "tag",
									"source": 7,
									"value": "247"
								},
								{
									"begin": 12874,
									"end": 12892,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12858,
									"end": 12894,
									"name": "tag",
									"source": 7,
									"value": "246"
								},
								{
									"begin": 12858,
									"end": 12894,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12710,
									"end": 12901,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12710,
									"end": 12901,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12710,
									"end": 12901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12710,
									"end": 12901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12710,
									"end": 12901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12907,
									"end": 13025,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 12907,
									"end": 13025,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12994,
									"end": 13018,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "249"
								},
								{
									"begin": 13012,
									"end": 13017,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12994,
									"end": 13018,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 12994,
									"end": 13018,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12994,
									"end": 13018,
									"name": "tag",
									"source": 7,
									"value": "249"
								},
								{
									"begin": 12994,
									"end": 13018,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12989,
									"end": 12992,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12982,
									"end": 13019,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 12907,
									"end": 13025,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12907,
									"end": 13025,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12907,
									"end": 13025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13031,
									"end": 13473,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 13031,
									"end": 13473,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13180,
									"end": 13184,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13218,
									"end": 13220,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 13207,
									"end": 13216,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13203,
									"end": 13221,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13195,
									"end": 13221,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13195,
									"end": 13221,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13231,
									"end": 13302,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "251"
								},
								{
									"begin": 13299,
									"end": 13300,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13288,
									"end": 13297,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13284,
									"end": 13301,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13275,
									"end": 13281,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 13231,
									"end": 13302,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 13231,
									"end": 13302,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13231,
									"end": 13302,
									"name": "tag",
									"source": 7,
									"value": "251"
								},
								{
									"begin": 13231,
									"end": 13302,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13312,
									"end": 13384,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "252"
								},
								{
									"begin": 13380,
									"end": 13382,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 13369,
									"end": 13378,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13365,
									"end": 13383,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13356,
									"end": 13362,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 13312,
									"end": 13384,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 13312,
									"end": 13384,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13312,
									"end": 13384,
									"name": "tag",
									"source": 7,
									"value": "252"
								},
								{
									"begin": 13312,
									"end": 13384,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13394,
									"end": 13466,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "253"
								},
								{
									"begin": 13462,
									"end": 13464,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 13451,
									"end": 13460,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13447,
									"end": 13465,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13438,
									"end": 13444,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13394,
									"end": 13466,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 13394,
									"end": 13466,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13394,
									"end": 13466,
									"name": "tag",
									"source": 7,
									"value": "253"
								},
								{
									"begin": 13394,
									"end": 13466,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13031,
									"end": 13473,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 13031,
									"end": 13473,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 13031,
									"end": 13473,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13031,
									"end": 13473,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13031,
									"end": 13473,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13031,
									"end": 13473,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13031,
									"end": 13473,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13479,
									"end": 13701,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 13479,
									"end": 13701,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13572,
									"end": 13576,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13610,
									"end": 13612,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 13599,
									"end": 13608,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13595,
									"end": 13613,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13587,
									"end": 13613,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13587,
									"end": 13613,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13623,
									"end": 13694,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "255"
								},
								{
									"begin": 13691,
									"end": 13692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13680,
									"end": 13689,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13676,
									"end": 13693,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13667,
									"end": 13673,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13623,
									"end": 13694,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 13623,
									"end": 13694,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13623,
									"end": 13694,
									"name": "tag",
									"source": 7,
									"value": "255"
								},
								{
									"begin": 13623,
									"end": 13694,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13479,
									"end": 13701,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13479,
									"end": 13701,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13479,
									"end": 13701,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13479,
									"end": 13701,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13479,
									"end": 13701,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 197,
									"end": 681,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 197,
									"end": 681,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 681,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 197,
									"end": 681,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 197,
									"end": 681,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 197,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 681,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 197,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 681,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220469c0e0fe235b1f375b0b66f027dd659f5282f0daf7ba353c2c79b392fa5419b64736f6c63430008170033",
									".code": [
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 681,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 197,
											"end": 681,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 592,
											"end": 679,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 592,
											"end": 679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 592,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 592,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 592,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 679,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 592,
											"end": 679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 592,
											"end": 679,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 679,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 592,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 592,
											"end": 679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 592,
											"end": 679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 592,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 679,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 592,
											"end": 679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 592,
											"end": 679,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 679,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 592,
											"end": 679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 592,
											"end": 679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 592,
											"end": 679,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 592,
											"end": 679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 592,
											"end": 679,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 493,
											"end": 586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 493,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 493,
											"end": 586,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 493,
											"end": 586,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 493,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 493,
											"end": 586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 493,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 493,
											"end": 586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 592,
											"end": 679,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 592,
											"end": 679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 672,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 665,
											"end": 672,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 665,
											"end": 672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 672,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 665,
											"end": 672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 672,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 665,
											"end": 672,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 665,
											"end": 672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 672,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 665,
											"end": 672,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 665,
											"end": 672,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 658,
											"end": 672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 658,
											"end": 672,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 592,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 493,
											"end": 586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 562,
											"end": 579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 568,
											"end": 570,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 572,
											"end": 578,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 562,
											"end": 567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 562,
											"end": 579,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 562,
											"end": 579,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 562,
											"end": 579,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 493,
											"end": 586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5293,
											"end": 5298,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5275,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5300,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5405,
											"end": 5409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5445,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 5456,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5644,
											"end": 5651,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5663,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5668,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 5671,
											"end": 5750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 5861,
											"end": 5868,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5850,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5816,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5920,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 5989,
											"end": 5996,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 5987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5944,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6068,
											"end": 6145,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6058,
											"end": 6146,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6165,
											"end": 6169,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6155,
											"end": 6170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6193,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6281,
											"end": 6285,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6289,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6328,
											"end": 6332,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6403,
											"end": 6409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6399,
											"end": 6416,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6473,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6465,
											"end": 6471,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6476,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 6492,
											"end": 6510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6257,
											"end": 6526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6719,
											"end": 6721,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6708,
											"end": 6717,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6722,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6789,
											"end": 6798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6776,
											"end": 6782,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6732,
											"end": 6803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 6881,
											"end": 6883,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6870,
											"end": 6879,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6857,
											"end": 6863,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 6813,
											"end": 6885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6952,
											"end": 6961,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6945,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 6895,
											"end": 6967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7106,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7125,
											"end": 7129,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7122,
											"end": 7123,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7115,
											"end": 7130,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7146,
											"end": 7147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7154,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7206,
											"end": 7209,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 7243,
											"end": 7244,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 7225,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 7259,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7302,
											"end": 7303,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7299,
											"end": 7300,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7304,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7323,
											"end": 7326,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7320,
											"end": 7321,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7317,
											"end": 7327,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/tests/ERC20Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tests/ERC20Token.sol\":\"ERC20Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/tests/ERC20Token.sol\":{\"keccak256\":\"0x75b1e727c7042d02987dbcb8b2e66123d3e13235681024c22facc271ffa13920\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3c6258f2be93707cf42bc88c2d18f8bb660c1eaeb320948e52ecce50a40e3c\",\"dweb:/ipfs/QmX9T6qmDgQ4LWyKMPPshTWbsMMpSnwjJUm1PLu19idUbh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/tests/ERC20Token.sol:ERC20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/tests/ERC20Token.sol:ERC20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/tests/ERC20Token.sol:ERC20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/tests/ERC20Token.sol:ERC20Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/tests/ERC20Token.sol:ERC20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/tests/ERC20Token.sol:ERC20Token",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 945,
								"contract": "contracts/tests/ERC20Token.sol:ERC20Token",
								"label": "decimal",
								"offset": 20,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/tests/ERC20Token.sol": {
				"ast": {
					"absolutePath": "contracts/tests/ERC20Token.sol",
					"exportedSymbols": {
						"ERC20": [
							799
						],
						"ERC20Token": [
							1001
						],
						"Ownable": [
							147
						]
					},
					"id": 1002,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1002,
							"sourceUnit": 800,
							"src": "59:68:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 936,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "67:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1002,
							"sourceUnit": 148,
							"src": "128:67:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 938,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "136:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 940,
										"name": "ERC20",
										"nameLocations": [
											"220:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "220:5:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "220:5:6"
								},
								{
									"baseName": {
										"id": 942,
										"name": "Ownable",
										"nameLocations": [
											"227:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "227:7:6"
									},
									"id": 943,
									"nodeType": "InheritanceSpecifier",
									"src": "227:7:6"
								}
							],
							"canonicalName": "ERC20Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1001,
							"linearizedBaseContracts": [
								1001,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20Token",
							"nameLocation": "206:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 945,
									"mutability": "mutable",
									"name": "decimal",
									"nameLocation": "247:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1001,
									"src": "241:13:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 944,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "241:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "398:89:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 962,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "414:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "418:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "414:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030303030",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "426:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000_by_1",
																	"typeString": "int_const 100000"
																},
																"value": "100000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "435:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 966,
																	"name": "_decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "441:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "435:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "426:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 961,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "408:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "408:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "408:43:6"
											},
											{
												"expression": {
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 971,
														"name": "decimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "461:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 972,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "471:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "461:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "461:19:6"
											}
										]
									},
									"id": 976,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "54657374546f6b656e",
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "345:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_98773c0a77836a29a7c5f4ab1a66bf2cd547cb12bf15ba74f84f027b91334da5",
														"typeString": "literal_string \"TestToken\""
													},
													"value": "TestToken"
												},
												{
													"id": 955,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 951,
													"src": "358:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 956,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 953,
												"name": "ERC20",
												"nameLocations": [
													"339:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "339:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "339:24:6"
										},
										{
											"arguments": [
												{
													"id": 958,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 949,
													"src": "380:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 959,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 957,
												"name": "Ownable",
												"nameLocations": [
													"372:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "372:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "372:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "_decimals",
												"nameLocation": "278:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "272:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 946,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "272:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "297:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "289:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "325:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "311:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 950,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "311:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "271:59:6"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "398:0:6"
									},
									"scope": 1001,
									"src": "260:227:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "552:34:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 986,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "568:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 987,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "572:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 985,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "562:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "562:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "562:17:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 983,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 982,
												"name": "onlyOwner",
												"nameLocations": [
													"542:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "542:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "542:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "502:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "515:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "507:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "527:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "519:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "506:28:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "552:0:6"
									},
									"scope": 1001,
									"src": "493:93:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "648:31:6",
										"statements": [
											{
												"expression": {
													"id": 997,
													"name": "decimal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 945,
													"src": "665:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 996,
												"id": 998,
												"nodeType": "Return",
												"src": "658:14:6"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "601:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 993,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "624:8:6"
									},
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:2:6"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "641:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 994,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "641:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:7:6"
									},
									"scope": 1001,
									"src": "592:87:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1002,
							"src": "197:484:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "32:650:6"
				},
				"id": 6
			}
		}
	}
}