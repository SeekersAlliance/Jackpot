{
	"compiler": {
		"version": "0.8.23+commit.f704f362"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"name": "DrawableNotEnough",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"name": "DrawingPoolExisted",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"name": "DrwaingPoolNotExist",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "EmptyIDs",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "HasRoleAlready",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "LengthNotMatch",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NoPendingRequest",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "RequestAlreadyFulfilled",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "RequestNotExist",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "RequestNotFulfilled",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "TokenExisted",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "TokenNotExist",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"name": "UnitPoolExisted",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"name": "UnitPoolNotExist",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroAmount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "requester",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					}
				],
				"name": "RequestCompleted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "randomWords",
						"type": "uint256[]"
					}
				],
				"name": "RequestFulfilled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_requester",
						"type": "address"
					}
				],
				"name": "RequestSent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "drawingPoolID",
						"type": "uint32"
					}
				],
				"name": "SetDrawingPool",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint32[]",
						"name": "maxAmounts",
						"type": "uint32[]"
					}
				],
				"name": "SetTokenMaxAmount",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					}
				],
				"name": "SetTokenPool",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "unitPoolID",
						"type": "uint32"
					}
				],
				"name": "SetUnitPool",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "execRequestBatch",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_requestId",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "_randomWords",
						"type": "uint256[]"
					}
				],
				"name": "fulfillRandomWords",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getExistedDrawingPool",
				"outputs": [
					{
						"internalType": "uint32[]",
						"name": "drawingPools",
						"type": "uint32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getExistedUnitPool",
				"outputs": [
					{
						"internalType": "uint32[]",
						"name": "unitPools",
						"type": "uint32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLastRequestId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_poolID",
						"type": "uint32"
					}
				],
				"name": "getPoolInfo",
				"outputs": [
					{
						"internalType": "uint32[]",
						"name": "unitPools",
						"type": "uint32[]"
					},
					{
						"internalType": "uint32[]",
						"name": "probs",
						"type": "uint32[]"
					},
					{
						"internalType": "uint32[]",
						"name": "accumulatedProbs",
						"type": "uint32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_requestId",
						"type": "uint256"
					}
				],
				"name": "getRequestInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "exists",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "fulfilled",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "completed",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "requestSender",
								"type": "address"
							},
							{
								"internalType": "uint32[]",
								"name": "poolsID",
								"type": "uint32[]"
							},
							{
								"internalType": "uint32[]",
								"name": "amounts",
								"type": "uint32[]"
							},
							{
								"internalType": "uint256[]",
								"name": "randomWords",
								"type": "uint256[]"
							}
						],
						"internalType": "struct IHierarchicalDrawing.RequestInfo",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getReuqestQueue",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "queue",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "getTokenInfo",
				"outputs": [
					{
						"internalType": "bool",
						"name": "existed",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "maxAmount",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "remaining",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTokenMaxAmounts",
				"outputs": [
					{
						"internalType": "uint32[]",
						"name": "maxAmounts",
						"type": "uint32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTokenPoolInfo",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTokenRemainings",
				"outputs": [
					{
						"internalType": "uint32[]",
						"name": "remainings",
						"type": "uint32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_unitID",
						"type": "uint32"
					}
				],
				"name": "getUnitPoolInfo",
				"outputs": [
					{
						"internalType": "uint32[]",
						"name": "probs",
						"type": "uint32[]"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "nums",
								"type": "uint256"
							},
							{
								"internalType": "uint256[]",
								"name": "result",
								"type": "uint256[]"
							}
						],
						"internalType": "struct PackedArray.PackedArray32",
						"name": "tree",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pendingRequestNum",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "pending",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "uint32[]",
						"name": "_poolsID",
						"type": "uint32[]"
					},
					{
						"internalType": "uint32[]",
						"name": "_drawAmounts",
						"type": "uint32[]"
					}
				],
				"name": "sendRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_poolID",
						"type": "uint32"
					},
					{
						"internalType": "uint32[]",
						"name": "_unitIDs",
						"type": "uint32[]"
					},
					{
						"internalType": "uint32[]",
						"name": "_probs",
						"type": "uint32[]"
					}
				],
				"name": "setDrawingPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32[]",
						"name": "_maxAmounts",
						"type": "uint32[]"
					}
				],
				"name": "setTokenMaxAmount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_ids",
						"type": "uint256[]"
					}
				],
				"name": "setTokenPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_unitID",
						"type": "uint32"
					},
					{
						"internalType": "uint32[]",
						"name": "_probs",
						"type": "uint32[]"
					}
				],
				"name": "setUnitPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"sendRequest(address,uint32[],uint32[])": {
					"details": "player can call this function to request the draw.",
					"params": {
						"_drawAmounts": "array of the draw amount ",
						"_poolsID": "array of drawing pool IDs"
					}
				},
				"setDrawingPool(uint32,uint32[],uint32[])": {
					"params": {
						"_poolID": "drawing pool ID",
						"_probs": "array of probabilites corresponding to unit pools",
						"_unitIDs": "array of the unit pool IDs"
					}
				},
				"setTokenMaxAmount(uint32[])": {
					"details": "If the amount sets as 2**32-1, it means there is no limit on the quantity, max amount will be 2**256-1.",
					"params": {
						"_maxAmounts": "max amount of token ID"
					}
				},
				"setTokenPool(uint256[])": {
					"details": "Token IDs should not be duplicated.",
					"params": {
						"_ids": "array of token ID"
					}
				},
				"setUnitPool(uint32,uint32[])": {
					"details": "if some tokens should not draw from this unit pool, just set the probability as 0.",
					"params": {
						"_probs": "array of probabilites corresponding to token IDs",
						"_unitID": "uint pool ID"
					}
				}
			},
			"title": "Interface of HierarchicalDrawing.sol",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getTokenPoolInfo()": {
					"notice": "get user drawable amount"
				},
				"sendRequest(address,uint32[],uint32[])": {
					"notice": "send request"
				},
				"setDrawingPool(uint32,uint32[],uint32[])": {
					"notice": "set drawing poolOnly manager role can call this function"
				},
				"setTokenMaxAmount(uint32[])": {
					"notice": "set token max amountOnly manager role can call this function"
				},
				"setTokenPool(uint256[])": {
					"notice": "set token poolOnly manager role can call this function"
				},
				"setUnitPool(uint32,uint32[])": {
					"notice": "set unit poolOnly manager role can call this function"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/interfaces/IHierarchicalDrawing.sol": "IHierarchicalDrawing"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/interfaces/IHierarchicalDrawing.sol": {
			"keccak256": "0x305e4bd9753e34c9296c0f13b45afbd40d793c30f5bcb5b6abdcda1bb748c38c",
			"license": "MIT",
			"urls": [
				"bzz-raw://546f81a34e810eea4a3d80e0e640c8fa81c4b3a2b2d66aae17c292a26e7454fc",
				"dweb:/ipfs/Qmc2SziYqHV4YsWGWZ3KkYKu8qCutXoNBUb1WsRm5pYrup"
			]
		},
		"contracts/interfaces/IVRFManager.sol": {
			"keccak256": "0x37cda41be2c2003af70203ac615d3eca517d468d143f4de6f385b8d66d10f8be",
			"license": "MIT",
			"urls": [
				"bzz-raw://8625bfce9c7b8c77a3421de660488ba5083435ff3545c914beae99e8034f1e3d",
				"dweb:/ipfs/QmYHhpkb8qwxZaqEH1AxXM5nZu6UNdWQFKAtxWsixji6mC"
			]
		},
		"contracts/libraries/PackedArray.sol": {
			"keccak256": "0x6efabbb6ace5c0269dcc0cf276ddf1c9f54b311dacc42fb1e9d1f8bc5d883445",
			"license": "MIT",
			"urls": [
				"bzz-raw://aef39a2e4ffce7326d00b8b0478e1b79f1791b51156ea1a4207f04f017347440",
				"dweb:/ipfs/QmNmv3nhLqJbZA9oaMvcf2xP18Rws9mKvvPgq4cAyfBcLN"
			]
		}
	},
	"version": 1
}