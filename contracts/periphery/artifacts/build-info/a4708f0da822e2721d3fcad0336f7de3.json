{
	"id": "a4708f0da822e2721d3fcad0336f7de3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/periphery/Fomo3d.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity = 0.8.23;\r\n\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"../interfaces/IFomo3d.sol\";\r\nimport \"./Register.sol\";\r\n\r\n/** \r\n * @title \r\n * @author SeekersAlliance\r\n * @notice\r\n */\r\n\r\ncontract Fomo3d is IFomo3d{\r\n\r\n    ERC20 public paymentToken;\r\n    Register public register;\r\n\r\n    mapping (address => uint256) public amount;\r\n    mapping (address => uint256) public mask;\r\n    mapping (address => uint256) public unclaim;\r\n    mapping (address => uint256) public claimed;\r\n    mapping (uint32 => HistoryInfo) public historyInfo;\r\n\r\n    uint32 public historyNonce;\r\n    uint256 public totalAmount;\r\n    uint256 public totalValue;\r\n    uint256 public valuePerAmount;\r\n    uint32 public decimal;\r\n    uint256 public price;\r\n    \r\n\r\n    constructor(\r\n        address _basePaymentToken,\r\n        address _register,\r\n        uint256 _price\r\n    ){\r\n        paymentToken = ERC20(_basePaymentToken);\r\n        decimal = paymentToken.decimals();\r\n        historyNonce = 0;\r\n        // This _price is part of the price of a pack which is distributed to the fomo3d\r\n        price = _price;\r\n        register = Register(_register);\r\n    }\r\n\r\n    // @inheritdoc IFomo3d\r\n    function deposit(address _user, uint256 _value, uint256 _amount) external override{\r\n        register.checkRole(register.MARKET(), msg.sender);\r\n        if(_user == address(0)) revert InvalidAddress();\r\n        if(_value == 0) revert InvalidValue();\r\n        if(_amount == 0) revert InvalidAmount();\r\n        \r\n        unclaim[_user] += (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal);\r\n        totalValue += _value;\r\n        mask[_user] = valuePerAmount;\r\n        amount[_user] += _amount;\r\n        totalAmount += _amount;\r\n        valuePerAmount += (_value*(10**decimal)/totalAmount);\r\n        historyInfo[historyNonce] = HistoryInfo(_user, uint256(_value), uint256(_amount));\r\n        historyNonce++;\r\n        emit Fomo3dDeposit(_user, _value, _amount);\r\n    }\r\n    \r\n    // @inheritdoc IFomo3d\r\n    function claim() external{\r\n        address _user = msg.sender;\r\n        if(_user == address(0)) revert InvalidAddress();\r\n        uint256 _value = _getUnclaim(_user);\r\n        paymentToken.transfer(_user, _value);\r\n        claimed[_user] += _value;\r\n        emit Fomo3dClaim(_user, _value);\r\n    }\r\n\r\n    // @inheritdoc IFomo3d\r\n    function getPredict(address _user, uint256 _amount) external view returns (uint256 value){\r\n        if(_user == address(0)) revert InvalidAddress();\r\n        uint256 userAmount = amount[_user] + _amount;\r\n        if(totalAmount+_amount == 0) return 0;\r\n        uint256 ratio = (userAmount*(10**decimal))/(totalAmount+_amount);\r\n        return  (ratio * (price/10))/ (10**decimal);\r\n    }\r\n    // @inheritdoc IFomo3d\r\n    function getUnclaim(address _user) external view returns (uint256 value){\r\n        return _getUnclaim(_user);\r\n    }\r\n    // @inheritdoc IFomo3d\r\n    function getClaimed(address _user) external view returns (uint256 value){\r\n        return claimed[_user];\r\n    }\r\n    // @inheritdoc IFomo3d\r\n    function getTotalProfit(address _user) external view returns (uint256 value){\r\n        return claimed[_user] + _getUnclaim(_user);\r\n    }\r\n    // @inheritdoc IFomo3d\r\n    function getCurrentHistoryNonce() external view returns (uint32 nonce){\r\n        if(historyNonce == 0) return 0;\r\n        return historyNonce-1;\r\n    }\r\n    // @inheritdoc IFomo3d\r\n    function getHistory(uint32 _nonce) external view returns (HistoryInfo memory){\r\n        return historyInfo[_nonce];\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    function _getUnclaim(address _user) internal view returns (uint256 value){\r\n        return unclaim[_user] + (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal) - claimed[_user];\r\n    }\r\n\r\n}\r\n    "
			},
			"contracts/periphery/Register.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity = 0.8.23;\r\n\r\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\ncontract Register is AccessControl{\r\n    // ROLES\r\n    bytes32 public constant FOMO3D = keccak256(\"FOMO3D\");\r\n    bytes32 public constant JACKPOT = keccak256(\"JACKPOT\");\r\n    bytes32 public constant MARKET = keccak256(\"MARKET\");\r\n    bytes32 public constant PRIZE_ITEMS = keccak256(\"PRIZE_ITEMS\");\r\n    bytes32 public constant REFERRAL = keccak256(\"REFERRAL\");\r\n    bytes32 public constant VRF = keccak256(\"VRF\");\r\n    bytes32 public constant TOKEN = keccak256(\"TOKEN\");\r\n    bytes32 public constant DRAW = keccak256(\"DRAW\");\r\n\r\n    mapping (bytes32 => address) public currentContract;\r\n\r\n    constructor(address _initialAdmin) {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, _initialAdmin);\r\n    }\r\n\r\n    function grantRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)){\r\n        _grantRole(role, account);\r\n        currentContract[role] = account;\r\n    }\r\n    \r\n    function checkRole(bytes32 _role, address _account) public view {\r\n        require(hasRole(_role, _account), \"Register: INVALID_ROLE\");\r\n    }\r\n    function getContract(bytes32 _role) public view returns (address){\r\n        return currentContract[_role];\r\n    }\r\n\r\n    \r\n    \r\n}"
			},
			"contracts/interfaces/IFomo3d.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity = 0.8.23;\r\n\r\n\r\n/**\r\n * @title Interface of Fomo3d.sol\r\n */\r\n\r\ninterface IFomo3d {\r\n    // Events\r\n    event Fomo3dDeposit(address indexed user, uint256 value, uint256 amount);\r\n    event Fomo3dClaim(address indexed user, uint256 value);\r\n\r\n\r\n    // Errors\r\n    error InvalidAddress();\r\n    error InvalidValue();\r\n    error InvalidAmount();\r\n    error InsufficientAllowance();\r\n    error InsufficientBalance();\r\n\r\n    struct HistoryInfo {\r\n        address user;\r\n        uint256 value;\r\n        uint256 amount;\r\n    }\r\n\r\n    /** \r\n     * @notice Deposit from the user\r\n     * @notice Only the admin role can call this function\r\n     * @param _user The user address\r\n     * @param _value The value of the deposit\r\n     * @param _amount The amount of the deposit\r\n     */\r\n    function deposit(address _user, uint256 _value, uint256 _amount) external;\r\n\r\n    /**\r\n     * @notice Withdraw all the value from the unclaim part\r\n     */\r\n    function claim() external;\r\n\r\n    /**\r\n     * @notice Return how much the user can get when he put more amount here\r\n     * @param _user The user address\r\n     * @param _amount The amount of user put more here\r\n     */\r\n    function getPredict(address _user, uint256 _amount) external view returns (uint256 value);\r\n\r\n    /**\r\n     * @notice get user info\r\n     * @param _user The user address\r\n     */\r\n    function getUnclaim(address _user) external view returns (uint256 value);\r\n    function getClaimed(address _user) external view returns (uint256 value);\r\n    function getTotalProfit(address _user) external view returns (uint256 value);\r\n\r\n    /**\r\n     * @notice get history current nonce. (The nonce of the last history)\r\n     */\r\n    function getCurrentHistoryNonce() external view returns (uint32 nonce);\r\n    /**\r\n     * @notice get history info with nonce\r\n     * @param _nonce The nonce of the history\r\n     */\r\n    function getHistory(uint32 _nonce) external view returns (HistoryInfo memory);\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IFomo3d.sol": {
				"IFomo3d": {
					"abi": [
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidValue",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Fomo3dClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Fomo3dDeposit",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getClaimed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentHistoryNonce",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_nonce",
									"type": "uint32"
								}
							],
							"name": "getHistory",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "user",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct IFomo3d.HistoryInfo",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "getPredict",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getTotalProfit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUnclaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"deposit(address,uint256,uint256)": {
								"params": {
									"_amount": "The amount of the deposit",
									"_user": "The user address",
									"_value": "The value of the deposit"
								}
							},
							"getHistory(uint32)": {
								"params": {
									"_nonce": "The nonce of the history"
								}
							},
							"getPredict(address,uint256)": {
								"params": {
									"_amount": "The amount of user put more here",
									"_user": "The user address"
								}
							},
							"getUnclaim(address)": {
								"params": {
									"_user": "The user address"
								}
							}
						},
						"title": "Interface of Fomo3d.sol",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claim()": "4e71d92d",
							"deposit(address,uint256,uint256)": "0efe6a8b",
							"getClaimed(address)": "eb46260e",
							"getCurrentHistoryNonce()": "6d1c6041",
							"getHistory(uint32)": "07040e91",
							"getPredict(address,uint256)": "13da0777",
							"getTotalProfit(address)": "8233fbcb",
							"getUnclaim(address)": "480a4262"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidValue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Fomo3dClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Fomo3dDeposit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentHistoryNonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_nonce\",\"type\":\"uint32\"}],\"name\":\"getHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IFomo3d.HistoryInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getPredict\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTotalProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUnclaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256,uint256)\":{\"params\":{\"_amount\":\"The amount of the deposit\",\"_user\":\"The user address\",\"_value\":\"The value of the deposit\"}},\"getHistory(uint32)\":{\"params\":{\"_nonce\":\"The nonce of the history\"}},\"getPredict(address,uint256)\":{\"params\":{\"_amount\":\"The amount of user put more here\",\"_user\":\"The user address\"}},\"getUnclaim(address)\":{\"params\":{\"_user\":\"The user address\"}}},\"title\":\"Interface of Fomo3d.sol\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim()\":{\"notice\":\"Withdraw all the value from the unclaim part\"},\"deposit(address,uint256,uint256)\":{\"notice\":\"Deposit from the userOnly the admin role can call this function\"},\"getCurrentHistoryNonce()\":{\"notice\":\"get history current nonce. (The nonce of the last history)\"},\"getHistory(uint32)\":{\"notice\":\"get history info with nonce\"},\"getPredict(address,uint256)\":{\"notice\":\"Return how much the user can get when he put more amount here\"},\"getUnclaim(address)\":{\"notice\":\"get user info\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFomo3d.sol\":\"IFomo3d\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFomo3d.sol\":{\"keccak256\":\"0x3c9e6589f4aa0815d22c9a81a9c52529c8968fc6e484394b71aaf6fc712196de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13048dc3e05f45ad0626dc2974dd482965b988c839ec54792ad2cb38ed88ba0c\",\"dweb:/ipfs/QmSQD4HZLYYkg59EER3tkqiFtsLDid6rcRE3xxBRWJGEiR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claim()": {
								"notice": "Withdraw all the value from the unclaim part"
							},
							"deposit(address,uint256,uint256)": {
								"notice": "Deposit from the userOnly the admin role can call this function"
							},
							"getCurrentHistoryNonce()": {
								"notice": "get history current nonce. (The nonce of the last history)"
							},
							"getHistory(uint32)": {
								"notice": "get history info with nonce"
							},
							"getPredict(address,uint256)": {
								"notice": "Return how much the user can get when he put more amount here"
							},
							"getUnclaim(address)": {
								"notice": "get user info"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/periphery/Fomo3d.sol": {
				"Fomo3d": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_basePaymentToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_register",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidValue",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Fomo3dClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Fomo3dDeposit",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "amount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimal",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getClaimed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentHistoryNonce",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_nonce",
									"type": "uint32"
								}
							],
							"name": "getHistory",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "user",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct IFomo3d.HistoryInfo",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "getPredict",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getTotalProfit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUnclaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "historyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "historyNonce",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "mask",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paymentToken",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "register",
							"outputs": [
								{
									"internalType": "contract Register",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "unclaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "valuePerAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "SeekersAlliance",
						"kind": "dev",
						"methods": {
							"deposit(address,uint256,uint256)": {
								"params": {
									"_amount": "The amount of the deposit",
									"_user": "The user address",
									"_value": "The value of the deposit"
								}
							},
							"getHistory(uint32)": {
								"params": {
									"_nonce": "The nonce of the history"
								}
							},
							"getPredict(address,uint256)": {
								"params": {
									"_amount": "The amount of user put more here",
									"_user": "The user address"
								}
							},
							"getUnclaim(address)": {
								"params": {
									"_user": "The user address"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/periphery/Fomo3d.sol\":262:3801  contract Fomo3d is IFomo3d{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/periphery/Fomo3d.sol\":814:1206  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/periphery/Fomo3d.sol\":953:970  _basePaymentToken */\n  dup3\n    /* \"contracts/periphery/Fomo3d.sol\":932:944  paymentToken */\n  0x00\n  dup1\n    /* \"contracts/periphery/Fomo3d.sol\":932:971  paymentToken = ERC20(_basePaymentToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/periphery/Fomo3d.sol\":992:1004  paymentToken */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/periphery/Fomo3d.sol\":992:1013  paymentToken.decimals */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x313ce567\n    /* \"contracts/periphery/Fomo3d.sol\":992:1015  paymentToken.decimals() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_7\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_7:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n    /* \"contracts/periphery/Fomo3d.sol\":982:1015  decimal = paymentToken.decimals() */\n  0xff\n  and\n    /* \"contracts/periphery/Fomo3d.sol\":982:989  decimal */\n  0x0b\n  0x00\n    /* \"contracts/periphery/Fomo3d.sol\":982:1015  decimal = paymentToken.decimals() */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/periphery/Fomo3d.sol\":1041:1042  0 */\n  0x00\n    /* \"contracts/periphery/Fomo3d.sol\":1026:1038  historyNonce */\n  0x07\n  0x00\n    /* \"contracts/periphery/Fomo3d.sol\":1026:1042  historyNonce = 0 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/periphery/Fomo3d.sol\":1151:1157  _price */\n  dup1\n    /* \"contracts/periphery/Fomo3d.sol\":1143:1148  price */\n  0x0c\n    /* \"contracts/periphery/Fomo3d.sol\":1143:1157  price = _price */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/periphery/Fomo3d.sol\":1188:1197  _register */\n  dup2\n    /* \"contracts/periphery/Fomo3d.sol\":1168:1176  register */\n  0x01\n  0x00\n    /* \"contracts/periphery/Fomo3d.sol\":1168:1198  register = Register(_register) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/periphery/Fomo3d.sol\":814:1206  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/periphery/Fomo3d.sol\":262:3801  contract Fomo3d is IFomo3d{... */\n  jump(tag_10)\n    /* \"#utility.yul\":88:205   */\ntag_12:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_14:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_15:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_30\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_14\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_16:\n    /* \"#utility.yul\":641:665   */\n  tag_32\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_15\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_33:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_17:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_35\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_16\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_18:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_19:\n    /* \"#utility.yul\":1001:1025   */\n  tag_38\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_39:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_20:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_41\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_19\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_44\n  tag_12\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1326:1445   */\ntag_43:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_45\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_17\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_46\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_17\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_47\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_20\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1960   */\ntag_21:\n    /* \"#utility.yul\":1909:1916   */\n  0x00\n    /* \"#utility.yul\":1949:1953   */\n  0xff\n    /* \"#utility.yul\":1942:1947   */\n  dup3\n    /* \"#utility.yul\":1938:1954   */\n  and\n    /* \"#utility.yul\":1927:1954   */\n  swap1\n  pop\n    /* \"#utility.yul\":1874:1960   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1966:2084   */\ntag_22:\n    /* \"#utility.yul\":2037:2059   */\n  tag_50\n    /* \"#utility.yul\":2053:2058   */\n  dup2\n    /* \"#utility.yul\":2037:2059   */\n  tag_21\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2030:2035   */\n  dup2\n    /* \"#utility.yul\":2027:2060   */\n  eq\n    /* \"#utility.yul\":2017:2078   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2074:2075   */\n  0x00\n    /* \"#utility.yul\":2071:2072   */\n  dup1\n    /* \"#utility.yul\":2064:2076   */\n  revert\n    /* \"#utility.yul\":2017:2078   */\ntag_51:\n    /* \"#utility.yul\":1966:2084   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2090:2229   */\ntag_23:\n    /* \"#utility.yul\":2145:2150   */\n  0x00\n    /* \"#utility.yul\":2176:2182   */\n  dup2\n    /* \"#utility.yul\":2170:2183   */\n  mload\n    /* \"#utility.yul\":2161:2183   */\n  swap1\n  pop\n    /* \"#utility.yul\":2192:2223   */\n  tag_53\n    /* \"#utility.yul\":2217:2222   */\n  dup2\n    /* \"#utility.yul\":2192:2223   */\n  tag_22\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2090:2229   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2235:2582   */\ntag_9:\n    /* \"#utility.yul\":2303:2309   */\n  0x00\n    /* \"#utility.yul\":2352:2354   */\n  0x20\n    /* \"#utility.yul\":2340:2349   */\n  dup3\n    /* \"#utility.yul\":2331:2338   */\n  dup5\n    /* \"#utility.yul\":2327:2350   */\n  sub\n    /* \"#utility.yul\":2323:2355   */\n  slt\n    /* \"#utility.yul\":2320:2439   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2358:2437   */\n  tag_56\n  tag_12\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2320:2439   */\ntag_55:\n    /* \"#utility.yul\":2478:2479   */\n  0x00\n    /* \"#utility.yul\":2503:2565   */\n  tag_57\n    /* \"#utility.yul\":2557:2564   */\n  dup5\n    /* \"#utility.yul\":2548:2554   */\n  dup3\n    /* \"#utility.yul\":2537:2546   */\n  dup6\n    /* \"#utility.yul\":2533:2555   */\n  add\n    /* \"#utility.yul\":2503:2565   */\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2493:2565   */\n  swap2\n  pop\n    /* \"#utility.yul\":2449:2575   */\n  pop\n    /* \"#utility.yul\":2235:2582   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/periphery/Fomo3d.sol\":262:3801  contract Fomo3d is IFomo3d{... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/periphery/Fomo3d.sol\":262:3801  contract Fomo3d is IFomo3d{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x76809ce3\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xc884ef83\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xc884ef83\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xcdf033f3\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd4c3eea0\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xeb46260e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xeeda71d5\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf54f0a8d\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x76809ce3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7a19a488\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8233fbcb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa035b1fe\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb9f0bf66\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x1aa3a008\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x1aa3a008\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3013ce29\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x480a4262\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6d1c6041\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x07040e91\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0efe6a8b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1161e582\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x13da0777\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1a39d8ef\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/periphery/Fomo3d.sol\":3465:3587  function getHistory(uint32 _nonce) external view returns (HistoryInfo memory){... */\n    tag_3:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":1242:2018  function deposit(address _user, uint256 _value, uint256 _amount) external override{... */\n    tag_4:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/periphery/Fomo3d.sol\":458:501  mapping (address => uint256) public unclaim */\n    tag_5:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":2392:2779  function getPredict(address _user, uint256 _amount) external view returns (uint256 value){... */\n    tag_6:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":650:676  uint256 public totalAmount */\n    tag_7:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":329:353  Register public register */\n    tag_8:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":297:322  ERC20 public paymentToken */\n    tag_9:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":2813:2929  function getUnclaim(address _user) external view returns (uint256 value){... */\n    tag_10:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":2058:2356  function claim() external{... */\n    tag_11:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/periphery/Fomo3d.sol\":3280:3431  function getCurrentHistoryNonce() external view returns (uint32 nonce){... */\n    tag_12:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":751:772  uint32 public decimal */\n    tag_13:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":715:744  uint256 public valuePerAmount */\n    tag_14:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":3109:3246  function getTotalProfit(address _user) external view returns (uint256 value){... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":779:799  uint256 public price */\n    tag_16:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":362:404  mapping (address => uint256) public amount */\n    tag_17:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":508:551  mapping (address => uint256) public claimed */\n    tag_18:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":617:643  uint32 public historyNonce */\n    tag_19:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":683:708  uint256 public totalValue */\n    tag_20:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":2963:3075  function getClaimed(address _user) external view returns (uint256 value){... */\n    tag_21:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":411:451  mapping (address => uint256) public mask */\n    tag_22:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":558:608  mapping (uint32 => HistoryInfo) public historyInfo */\n    tag_23:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d.sol\":3465:3587  function getHistory(uint32 _nonce) external view returns (HistoryInfo memory){... */\n    tag_30:\n        /* \"contracts/periphery/Fomo3d.sol\":3523:3541  HistoryInfo memory */\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"contracts/periphery/Fomo3d.sol\":3560:3571  historyInfo */\n      0x06\n        /* \"contracts/periphery/Fomo3d.sol\":3560:3579  historyInfo[_nonce] */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":3572:3578  _nonce */\n      dup4\n        /* \"contracts/periphery/Fomo3d.sol\":3560:3579  historyInfo[_nonce] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/periphery/Fomo3d.sol\":3553:3579  return historyInfo[_nonce] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":3465:3587  function getHistory(uint32 _nonce) external view returns (HistoryInfo memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":1242:2018  function deposit(address _user, uint256 _value, uint256 _amount) external override{... */\n    tag_36:\n        /* \"contracts/periphery/Fomo3d.sol\":1335:1343  register */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d.sol\":1335:1353  register.checkRole */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x12d9a6ad\n        /* \"contracts/periphery/Fomo3d.sol\":1354:1362  register */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d.sol\":1354:1369  register.MARKET */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf46f16c2\n        /* \"contracts/periphery/Fomo3d.sol\":1354:1371  register.MARKET() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"contracts/periphery/Fomo3d.sol\":1373:1383  msg.sender */\n      caller\n        /* \"contracts/periphery/Fomo3d.sol\":1335:1384  register.checkRole(register.MARKET(), msg.sender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":1415:1416  0 */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":1398:1417  _user == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d.sol\":1398:1403  _user */\n      dup4\n        /* \"contracts/periphery/Fomo3d.sol\":1398:1417  _user == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/periphery/Fomo3d.sol\":1395:1442  if(_user == address(0)) revert InvalidAddress() */\n      tag_122\n      jumpi\n        /* \"contracts/periphery/Fomo3d.sol\":1426:1442  InvalidAddress() */\n      mload(0x40)\n      0xe6c4247b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/periphery/Fomo3d.sol\":1395:1442  if(_user == address(0)) revert InvalidAddress() */\n    tag_122:\n        /* \"contracts/periphery/Fomo3d.sol\":1466:1467  0 */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":1456:1462  _value */\n      dup3\n        /* \"contracts/periphery/Fomo3d.sol\":1456:1467  _value == 0 */\n      sub\n        /* \"contracts/periphery/Fomo3d.sol\":1453:1490  if(_value == 0) revert InvalidValue() */\n      tag_123\n      jumpi\n        /* \"contracts/periphery/Fomo3d.sol\":1476:1490  InvalidValue() */\n      mload(0x40)\n      0xaa7feadc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/periphery/Fomo3d.sol\":1453:1490  if(_value == 0) revert InvalidValue() */\n    tag_123:\n        /* \"contracts/periphery/Fomo3d.sol\":1515:1516  0 */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":1504:1511  _amount */\n      dup2\n        /* \"contracts/periphery/Fomo3d.sol\":1504:1516  _amount == 0 */\n      sub\n        /* \"contracts/periphery/Fomo3d.sol\":1501:1540  if(_amount == 0) revert InvalidAmount() */\n      tag_124\n      jumpi\n        /* \"contracts/periphery/Fomo3d.sol\":1525:1540  InvalidAmount() */\n      mload(0x40)\n      0x2c5211c600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/periphery/Fomo3d.sol\":1501:1540  if(_amount == 0) revert InvalidAmount() */\n    tag_124:\n        /* \"contracts/periphery/Fomo3d.sol\":1631:1638  decimal */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d.sol\":1627:1629  10 */\n      0x0a\n        /* \"contracts/periphery/Fomo3d.sol\":1627:1638  10**decimal */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"contracts/periphery/Fomo3d.sol\":1612:1616  mask */\n      0x03\n        /* \"contracts/periphery/Fomo3d.sol\":1612:1623  mask[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":1617:1622  _user */\n      dup6\n        /* \"contracts/periphery/Fomo3d.sol\":1612:1623  mask[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d.sol\":1597:1611  valuePerAmount */\n      sload(0x0a)\n        /* \"contracts/periphery/Fomo3d.sol\":1597:1623  valuePerAmount-mask[_user] */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"contracts/periphery/Fomo3d.sol\":1580:1586  amount */\n      0x02\n        /* \"contracts/periphery/Fomo3d.sol\":1580:1593  amount[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":1587:1592  _user */\n      dup7\n        /* \"contracts/periphery/Fomo3d.sol\":1580:1593  amount[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d.sol\":1580:1624  amount[_user] * (valuePerAmount-mask[_user]) */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"contracts/periphery/Fomo3d.sol\":1579:1639  (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal) */\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"contracts/periphery/Fomo3d.sol\":1561:1568  unclaim */\n      0x04\n        /* \"contracts/periphery/Fomo3d.sol\":1561:1575  unclaim[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":1569:1574  _user */\n      dup6\n        /* \"contracts/periphery/Fomo3d.sol\":1561:1575  unclaim[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":1561:1639  unclaim[_user] += (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal) */\n      dup3\n      dup3\n      sload\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":1664:1670  _value */\n      dup2\n        /* \"contracts/periphery/Fomo3d.sol\":1650:1660  totalValue */\n      0x09\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":1650:1670  totalValue += _value */\n      dup3\n      dup3\n      sload\n      tag_135\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":1695:1709  valuePerAmount */\n      sload(0x0a)\n        /* \"contracts/periphery/Fomo3d.sol\":1681:1685  mask */\n      0x03\n        /* \"contracts/periphery/Fomo3d.sol\":1681:1692  mask[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":1686:1691  _user */\n      dup6\n        /* \"contracts/periphery/Fomo3d.sol\":1681:1692  mask[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/periphery/Fomo3d.sol\":1681:1709  mask[_user] = valuePerAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":1737:1744  _amount */\n      dup1\n        /* \"contracts/periphery/Fomo3d.sol\":1720:1726  amount */\n      0x02\n        /* \"contracts/periphery/Fomo3d.sol\":1720:1733  amount[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":1727:1732  _user */\n      dup6\n        /* \"contracts/periphery/Fomo3d.sol\":1720:1733  amount[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":1720:1744  amount[_user] += _amount */\n      dup3\n      dup3\n      sload\n      tag_136\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_136:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":1770:1777  _amount */\n      dup1\n        /* \"contracts/periphery/Fomo3d.sol\":1755:1766  totalAmount */\n      0x08\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":1755:1777  totalAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_137\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":1828:1839  totalAmount */\n      sload(0x08)\n        /* \"contracts/periphery/Fomo3d.sol\":1819:1826  decimal */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d.sol\":1815:1817  10 */\n      0x0a\n        /* \"contracts/periphery/Fomo3d.sol\":1815:1826  10**decimal */\n      tag_138\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_138:\n        /* \"contracts/periphery/Fomo3d.sol\":1807:1813  _value */\n      dup4\n        /* \"contracts/periphery/Fomo3d.sol\":1807:1827  _value*(10**decimal) */\n      tag_139\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_139:\n        /* \"contracts/periphery/Fomo3d.sol\":1807:1839  _value*(10**decimal)/totalAmount */\n      tag_140\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_140:\n        /* \"contracts/periphery/Fomo3d.sol\":1788:1802  valuePerAmount */\n      0x0a\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":1788:1840  valuePerAmount += (_value*(10**decimal)/totalAmount) */\n      dup3\n      dup3\n      sload\n      tag_141\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_141:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":1879:1932  HistoryInfo(_user, uint256(_value), uint256(_amount)) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/periphery/Fomo3d.sol\":1891:1896  _user */\n      dup5\n        /* \"contracts/periphery/Fomo3d.sol\":1879:1932  HistoryInfo(_user, uint256(_value), uint256(_amount)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/periphery/Fomo3d.sol\":1906:1912  _value */\n      dup4\n        /* \"contracts/periphery/Fomo3d.sol\":1879:1932  HistoryInfo(_user, uint256(_value), uint256(_amount)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/periphery/Fomo3d.sol\":1923:1930  _amount */\n      dup3\n        /* \"contracts/periphery/Fomo3d.sol\":1879:1932  HistoryInfo(_user, uint256(_value), uint256(_amount)) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":1851:1862  historyInfo */\n      0x06\n        /* \"contracts/periphery/Fomo3d.sol\":1851:1876  historyInfo[historyNonce] */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":1863:1875  historyNonce */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d.sol\":1851:1876  historyInfo[historyNonce] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/periphery/Fomo3d.sol\":1851:1932  historyInfo[historyNonce] = HistoryInfo(_user, uint256(_value), uint256(_amount)) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":1943:1955  historyNonce */\n      0x07\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":1943:1957  historyNonce++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":1987:1992  _user */\n      dup3\n        /* \"contracts/periphery/Fomo3d.sol\":1973:2010  Fomo3dDeposit(_user, _value, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f0d29b5d4cebe99e2c93ffec39876a8b37c77ba767270f4f489daede43aea4e\n        /* \"contracts/periphery/Fomo3d.sol\":1994:2000  _value */\n      dup4\n        /* \"contracts/periphery/Fomo3d.sol\":2002:2009  _amount */\n      dup4\n        /* \"contracts/periphery/Fomo3d.sol\":1973:2010  Fomo3dDeposit(_user, _value, _amount) */\n      mload(0x40)\n      tag_144\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/periphery/Fomo3d.sol\":1242:2018  function deposit(address _user, uint256 _value, uint256 _amount) external override{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":458:501  mapping (address => uint256) public unclaim */\n    tag_40:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":2392:2779  function getPredict(address _user, uint256 _amount) external view returns (uint256 value){... */\n    tag_46:\n        /* \"contracts/periphery/Fomo3d.sol\":2467:2480  uint256 value */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":2512:2513  0 */\n      dup1\n        /* \"contracts/periphery/Fomo3d.sol\":2495:2514  _user == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d.sol\":2495:2500  _user */\n      dup4\n        /* \"contracts/periphery/Fomo3d.sol\":2495:2514  _user == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/periphery/Fomo3d.sol\":2492:2539  if(_user == address(0)) revert InvalidAddress() */\n      tag_147\n      jumpi\n        /* \"contracts/periphery/Fomo3d.sol\":2523:2539  InvalidAddress() */\n      mload(0x40)\n      0xe6c4247b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/periphery/Fomo3d.sol\":2492:2539  if(_user == address(0)) revert InvalidAddress() */\n    tag_147:\n        /* \"contracts/periphery/Fomo3d.sol\":2550:2568  uint256 userAmount */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":2587:2594  _amount */\n      dup3\n        /* \"contracts/periphery/Fomo3d.sol\":2571:2577  amount */\n      0x02\n        /* \"contracts/periphery/Fomo3d.sol\":2571:2584  amount[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":2578:2583  _user */\n      dup7\n        /* \"contracts/periphery/Fomo3d.sol\":2571:2584  amount[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d.sol\":2571:2594  amount[_user] + _amount */\n      tag_148\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_148:\n        /* \"contracts/periphery/Fomo3d.sol\":2550:2594  uint256 userAmount = amount[_user] + _amount */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":2631:2632  0 */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":2620:2627  _amount */\n      dup4\n        /* \"contracts/periphery/Fomo3d.sol\":2608:2619  totalAmount */\n      sload(0x08)\n        /* \"contracts/periphery/Fomo3d.sol\":2608:2627  totalAmount+_amount */\n      tag_149\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_149:\n        /* \"contracts/periphery/Fomo3d.sol\":2608:2632  totalAmount+_amount == 0 */\n      sub\n        /* \"contracts/periphery/Fomo3d.sol\":2605:2642  if(totalAmount+_amount == 0) return 0 */\n      tag_150\n      jumpi\n        /* \"contracts/periphery/Fomo3d.sol\":2641:2642  0 */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":2634:2642  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_146)\n        /* \"contracts/periphery/Fomo3d.sol\":2605:2642  if(totalAmount+_amount == 0) return 0 */\n    tag_150:\n        /* \"contracts/periphery/Fomo3d.sol\":2653:2666  uint256 ratio */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":2709:2716  _amount */\n      dup4\n        /* \"contracts/periphery/Fomo3d.sol\":2697:2708  totalAmount */\n      sload(0x08)\n        /* \"contracts/periphery/Fomo3d.sol\":2697:2716  totalAmount+_amount */\n      tag_151\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_151:\n        /* \"contracts/periphery/Fomo3d.sol\":2686:2693  decimal */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d.sol\":2682:2684  10 */\n      0x0a\n        /* \"contracts/periphery/Fomo3d.sol\":2682:2693  10**decimal */\n      tag_152\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_152:\n        /* \"contracts/periphery/Fomo3d.sol\":2670:2680  userAmount */\n      dup4\n        /* \"contracts/periphery/Fomo3d.sol\":2670:2694  userAmount*(10**decimal) */\n      tag_153\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_153:\n        /* \"contracts/periphery/Fomo3d.sol\":2669:2717  (userAmount*(10**decimal))/(totalAmount+_amount) */\n      tag_154\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_154:\n        /* \"contracts/periphery/Fomo3d.sol\":2653:2717  uint256 ratio = (userAmount*(10**decimal))/(totalAmount+_amount) */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":2763:2770  decimal */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d.sol\":2759:2761  10 */\n      0x0a\n        /* \"contracts/periphery/Fomo3d.sol\":2759:2770  10**decimal */\n      tag_155\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_155:\n        /* \"contracts/periphery/Fomo3d.sol\":2752:2754  10 */\n      0x0a\n        /* \"contracts/periphery/Fomo3d.sol\":2746:2751  price */\n      sload(0x0c)\n        /* \"contracts/periphery/Fomo3d.sol\":2746:2754  price/10 */\n      tag_156\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_156:\n        /* \"contracts/periphery/Fomo3d.sol\":2737:2742  ratio */\n      dup3\n        /* \"contracts/periphery/Fomo3d.sol\":2737:2755  ratio * (price/10) */\n      tag_157\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_157:\n        /* \"contracts/periphery/Fomo3d.sol\":2736:2771  (ratio * (price/10))/ (10**decimal) */\n      tag_158\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_158:\n        /* \"contracts/periphery/Fomo3d.sol\":2728:2771  return  (ratio * (price/10))/ (10**decimal) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":2392:2779  function getPredict(address _user, uint256 _amount) external view returns (uint256 value){... */\n    tag_146:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":650:676  uint256 public totalAmount */\n    tag_49:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":329:353  Register public register */\n    tag_52:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":297:322  ERC20 public paymentToken */\n    tag_56:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":2813:2929  function getUnclaim(address _user) external view returns (uint256 value){... */\n    tag_61:\n        /* \"contracts/periphery/Fomo3d.sol\":2871:2884  uint256 value */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":2903:2921  _getUnclaim(_user) */\n      tag_160\n        /* \"contracts/periphery/Fomo3d.sol\":2915:2920  _user */\n      dup3\n        /* \"contracts/periphery/Fomo3d.sol\":2903:2914  _getUnclaim */\n      tag_161\n        /* \"contracts/periphery/Fomo3d.sol\":2903:2921  _getUnclaim(_user) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/periphery/Fomo3d.sol\":2896:2921  return _getUnclaim(_user) */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":2813:2929  function getUnclaim(address _user) external view returns (uint256 value){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":2058:2356  function claim() external{... */\n    tag_64:\n        /* \"contracts/periphery/Fomo3d.sol\":2094:2107  address _user */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":2110:2120  msg.sender */\n      caller\n        /* \"contracts/periphery/Fomo3d.sol\":2094:2120  address _user = msg.sender */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":2151:2152  0 */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":2134:2153  _user == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d.sol\":2134:2139  _user */\n      dup2\n        /* \"contracts/periphery/Fomo3d.sol\":2134:2153  _user == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/periphery/Fomo3d.sol\":2131:2178  if(_user == address(0)) revert InvalidAddress() */\n      tag_163\n      jumpi\n        /* \"contracts/periphery/Fomo3d.sol\":2162:2178  InvalidAddress() */\n      mload(0x40)\n      0xe6c4247b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/periphery/Fomo3d.sol\":2131:2178  if(_user == address(0)) revert InvalidAddress() */\n    tag_163:\n        /* \"contracts/periphery/Fomo3d.sol\":2189:2203  uint256 _value */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":2206:2224  _getUnclaim(_user) */\n      tag_164\n        /* \"contracts/periphery/Fomo3d.sol\":2218:2223  _user */\n      dup3\n        /* \"contracts/periphery/Fomo3d.sol\":2206:2217  _getUnclaim */\n      tag_161\n        /* \"contracts/periphery/Fomo3d.sol\":2206:2224  _getUnclaim(_user) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/periphery/Fomo3d.sol\":2189:2224  uint256 _value = _getUnclaim(_user) */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":2235:2247  paymentToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d.sol\":2235:2256  paymentToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/periphery/Fomo3d.sol\":2257:2262  _user */\n      dup4\n        /* \"contracts/periphery/Fomo3d.sol\":2264:2270  _value */\n      dup4\n        /* \"contracts/periphery/Fomo3d.sol\":2235:2271  paymentToken.transfer(_user, _value) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":2300:2306  _value */\n      dup1\n        /* \"contracts/periphery/Fomo3d.sol\":2282:2289  claimed */\n      0x05\n        /* \"contracts/periphery/Fomo3d.sol\":2282:2296  claimed[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":2290:2295  _user */\n      dup5\n        /* \"contracts/periphery/Fomo3d.sol\":2282:2296  claimed[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":2282:2306  claimed[_user] += _value */\n      dup3\n      dup3\n      sload\n      tag_171\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_171:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":2334:2339  _user */\n      dup2\n        /* \"contracts/periphery/Fomo3d.sol\":2322:2348  Fomo3dClaim(_user, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3488c34059d2e654b3b166b5ec4ee17bbd37297b906d39c704104a7dc2459b31\n        /* \"contracts/periphery/Fomo3d.sol\":2341:2347  _value */\n      dup3\n        /* \"contracts/periphery/Fomo3d.sol\":2322:2348  Fomo3dClaim(_user, _value) */\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/periphery/Fomo3d.sol\":2083:2356  {... */\n      pop\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":2058:2356  function claim() external{... */\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":3280:3431  function getCurrentHistoryNonce() external view returns (uint32 nonce){... */\n    tag_66:\n        /* \"contracts/periphery/Fomo3d.sol\":3337:3349  uint32 nonce */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":3380:3381  0 */\n      dup1\n        /* \"contracts/periphery/Fomo3d.sol\":3364:3376  historyNonce */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d.sol\":3364:3381  historyNonce == 0 */\n      0xffffffff\n      and\n      sub\n        /* \"contracts/periphery/Fomo3d.sol\":3361:3391  if(historyNonce == 0) return 0 */\n      tag_174\n      jumpi\n        /* \"contracts/periphery/Fomo3d.sol\":3390:3391  0 */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":3383:3391  return 0 */\n      swap1\n      pop\n      jump(tag_173)\n        /* \"contracts/periphery/Fomo3d.sol\":3361:3391  if(historyNonce == 0) return 0 */\n    tag_174:\n        /* \"contracts/periphery/Fomo3d.sol\":3422:3423  1 */\n      0x01\n        /* \"contracts/periphery/Fomo3d.sol\":3409:3421  historyNonce */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d.sol\":3409:3423  historyNonce-1 */\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"contracts/periphery/Fomo3d.sol\":3402:3423  return historyNonce-1 */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":3280:3431  function getCurrentHistoryNonce() external view returns (uint32 nonce){... */\n    tag_173:\n      swap1\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":751:772  uint32 public decimal */\n    tag_70:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":715:744  uint256 public valuePerAmount */\n    tag_73:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":3109:3246  function getTotalProfit(address _user) external view returns (uint256 value){... */\n    tag_77:\n        /* \"contracts/periphery/Fomo3d.sol\":3171:3184  uint256 value */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":3220:3238  _getUnclaim(_user) */\n      tag_178\n        /* \"contracts/periphery/Fomo3d.sol\":3232:3237  _user */\n      dup3\n        /* \"contracts/periphery/Fomo3d.sol\":3220:3231  _getUnclaim */\n      tag_161\n        /* \"contracts/periphery/Fomo3d.sol\":3220:3238  _getUnclaim(_user) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/periphery/Fomo3d.sol\":3203:3210  claimed */\n      0x05\n        /* \"contracts/periphery/Fomo3d.sol\":3203:3217  claimed[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":3211:3216  _user */\n      dup5\n        /* \"contracts/periphery/Fomo3d.sol\":3203:3217  claimed[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d.sol\":3203:3238  claimed[_user] + _getUnclaim(_user) */\n      tag_179\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_179:\n        /* \"contracts/periphery/Fomo3d.sol\":3196:3238  return claimed[_user] + _getUnclaim(_user) */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":3109:3246  function getTotalProfit(address _user) external view returns (uint256 value){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":779:799  uint256 public price */\n    tag_80:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":362:404  mapping (address => uint256) public amount */\n    tag_84:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":508:551  mapping (address => uint256) public claimed */\n    tag_88:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":617:643  uint32 public historyNonce */\n    tag_91:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":683:708  uint256 public totalValue */\n    tag_94:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":2963:3075  function getClaimed(address _user) external view returns (uint256 value){... */\n    tag_98:\n        /* \"contracts/periphery/Fomo3d.sol\":3021:3034  uint256 value */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":3053:3060  claimed */\n      0x05\n        /* \"contracts/periphery/Fomo3d.sol\":3053:3067  claimed[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":3061:3066  _user */\n      dup4\n        /* \"contracts/periphery/Fomo3d.sol\":3053:3067  claimed[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d.sol\":3046:3067  return claimed[_user] */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":2963:3075  function getClaimed(address _user) external view returns (uint256 value){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":411:451  mapping (address => uint256) public mask */\n    tag_102:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":558:608  mapping (uint32 => HistoryInfo) public historyInfo */\n    tag_106:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d.sol\":3603:3796  function _getUnclaim(address _user) internal view returns (uint256 value){... */\n    tag_161:\n        /* \"contracts/periphery/Fomo3d.sol\":3662:3675  uint256 value */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":3774:3781  claimed */\n      0x05\n        /* \"contracts/periphery/Fomo3d.sol\":3774:3788  claimed[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":3782:3787  _user */\n      dup4\n        /* \"contracts/periphery/Fomo3d.sol\":3774:3788  claimed[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d.sol\":3763:3770  decimal */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d.sol\":3759:3761  10 */\n      0x0a\n        /* \"contracts/periphery/Fomo3d.sol\":3759:3770  10**decimal */\n      tag_182\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_182:\n        /* \"contracts/periphery/Fomo3d.sol\":3744:3748  mask */\n      0x03\n        /* \"contracts/periphery/Fomo3d.sol\":3744:3755  mask[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":3749:3754  _user */\n      dup6\n        /* \"contracts/periphery/Fomo3d.sol\":3744:3755  mask[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d.sol\":3729:3743  valuePerAmount */\n      sload(0x0a)\n        /* \"contracts/periphery/Fomo3d.sol\":3729:3755  valuePerAmount-mask[_user] */\n      tag_183\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_183:\n        /* \"contracts/periphery/Fomo3d.sol\":3712:3718  amount */\n      0x02\n        /* \"contracts/periphery/Fomo3d.sol\":3712:3725  amount[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":3719:3724  _user */\n      dup7\n        /* \"contracts/periphery/Fomo3d.sol\":3712:3725  amount[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d.sol\":3712:3756  amount[_user] * (valuePerAmount-mask[_user]) */\n      tag_184\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_184:\n        /* \"contracts/periphery/Fomo3d.sol\":3711:3771  (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal) */\n      tag_185\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_185:\n        /* \"contracts/periphery/Fomo3d.sol\":3694:3701  unclaim */\n      0x04\n        /* \"contracts/periphery/Fomo3d.sol\":3694:3708  unclaim[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d.sol\":3702:3707  _user */\n      dup6\n        /* \"contracts/periphery/Fomo3d.sol\":3694:3708  unclaim[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d.sol\":3694:3771  unclaim[_user] + (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal) */\n      tag_186\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_186:\n        /* \"contracts/periphery/Fomo3d.sol\":3694:3788  unclaim[_user] + (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal) - claimed[_user] */\n      tag_187\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_187:\n        /* \"contracts/periphery/Fomo3d.sol\":3687:3788  return unclaim[_user] + (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal) - claimed[_user] */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d.sol\":3603:3796  function _getUnclaim(address _user) internal view returns (uint256 value){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_110:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_189:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:427   */\n    tag_191:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:420   */\n      0xffffffff\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:421   */\n      and\n        /* \"#utility.yul\":388:421   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":433:553   */\n    tag_192:\n        /* \"#utility.yul\":505:528   */\n      tag_232\n        /* \"#utility.yul\":522:527   */\n      dup2\n        /* \"#utility.yul\":505:528   */\n      tag_191\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":498:503   */\n      dup2\n        /* \"#utility.yul\":495:529   */\n      eq\n        /* \"#utility.yul\":485:547   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":543:544   */\n      0x00\n        /* \"#utility.yul\":540:541   */\n      dup1\n        /* \"#utility.yul\":533:545   */\n      revert\n        /* \"#utility.yul\":485:547   */\n    tag_233:\n        /* \"#utility.yul\":433:553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":559:696   */\n    tag_193:\n        /* \"#utility.yul\":604:609   */\n      0x00\n        /* \"#utility.yul\":642:648   */\n      dup2\n        /* \"#utility.yul\":629:649   */\n      calldataload\n        /* \"#utility.yul\":620:649   */\n      swap1\n      pop\n        /* \"#utility.yul\":658:690   */\n      tag_235\n        /* \"#utility.yul\":684:689   */\n      dup2\n        /* \"#utility.yul\":658:690   */\n      tag_192\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":559:696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":702:1029   */\n    tag_29:\n        /* \"#utility.yul\":760:766   */\n      0x00\n        /* \"#utility.yul\":809:811   */\n      0x20\n        /* \"#utility.yul\":797:806   */\n      dup3\n        /* \"#utility.yul\":788:795   */\n      dup5\n        /* \"#utility.yul\":784:807   */\n      sub\n        /* \"#utility.yul\":780:812   */\n      slt\n        /* \"#utility.yul\":777:896   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":815:894   */\n      tag_238\n      tag_189\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":777:896   */\n    tag_237:\n        /* \"#utility.yul\":935:936   */\n      0x00\n        /* \"#utility.yul\":960:1012   */\n      tag_239\n        /* \"#utility.yul\":1004:1011   */\n      dup5\n        /* \"#utility.yul\":995:1001   */\n      dup3\n        /* \"#utility.yul\":984:993   */\n      dup6\n        /* \"#utility.yul\":980:1002   */\n      add\n        /* \"#utility.yul\":960:1012   */\n      tag_193\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":950:1012   */\n      swap2\n      pop\n        /* \"#utility.yul\":906:1022   */\n      pop\n        /* \"#utility.yul\":702:1029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1035:1161   */\n    tag_194:\n        /* \"#utility.yul\":1072:1079   */\n      0x00\n        /* \"#utility.yul\":1112:1154   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1105:1110   */\n      dup3\n        /* \"#utility.yul\":1101:1155   */\n      and\n        /* \"#utility.yul\":1090:1155   */\n      swap1\n      pop\n        /* \"#utility.yul\":1035:1161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1167:1263   */\n    tag_195:\n        /* \"#utility.yul\":1204:1211   */\n      0x00\n        /* \"#utility.yul\":1233:1257   */\n      tag_242\n        /* \"#utility.yul\":1251:1256   */\n      dup3\n        /* \"#utility.yul\":1233:1257   */\n      tag_194\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":1222:1257   */\n      swap1\n      pop\n        /* \"#utility.yul\":1167:1263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1269:1377   */\n    tag_196:\n        /* \"#utility.yul\":1346:1370   */\n      tag_244\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_195\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1269:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1460   */\n    tag_197:\n        /* \"#utility.yul\":1420:1427   */\n      0x00\n        /* \"#utility.yul\":1449:1454   */\n      dup2\n        /* \"#utility.yul\":1438:1454   */\n      swap1\n      pop\n        /* \"#utility.yul\":1383:1460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1466:1574   */\n    tag_198:\n        /* \"#utility.yul\":1543:1567   */\n      tag_247\n        /* \"#utility.yul\":1561:1566   */\n      dup2\n        /* \"#utility.yul\":1543:1567   */\n      tag_197\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1538:1541   */\n      dup3\n        /* \"#utility.yul\":1531:1568   */\n      mstore\n        /* \"#utility.yul\":1466:1574   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1644:2336   */\n    tag_199:\n        /* \"#utility.yul\":1799:1803   */\n      0x60\n        /* \"#utility.yul\":1794:1797   */\n      dup3\n        /* \"#utility.yul\":1790:1804   */\n      add\n        /* \"#utility.yul\":1886:1890   */\n      0x00\n        /* \"#utility.yul\":1879:1884   */\n      dup3\n        /* \"#utility.yul\":1875:1891   */\n      add\n        /* \"#utility.yul\":1869:1892   */\n      mload\n        /* \"#utility.yul\":1905:1968   */\n      tag_249\n        /* \"#utility.yul\":1962:1966   */\n      0x00\n        /* \"#utility.yul\":1957:1960   */\n      dup6\n        /* \"#utility.yul\":1953:1967   */\n      add\n        /* \"#utility.yul\":1939:1951   */\n      dup3\n        /* \"#utility.yul\":1905:1968   */\n      tag_196\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1814:1978   */\n      pop\n        /* \"#utility.yul\":2061:2065   */\n      0x20\n        /* \"#utility.yul\":2054:2059   */\n      dup3\n        /* \"#utility.yul\":2050:2066   */\n      add\n        /* \"#utility.yul\":2044:2067   */\n      mload\n        /* \"#utility.yul\":2080:2143   */\n      tag_250\n        /* \"#utility.yul\":2137:2141   */\n      0x20\n        /* \"#utility.yul\":2132:2135   */\n      dup6\n        /* \"#utility.yul\":2128:2142   */\n      add\n        /* \"#utility.yul\":2114:2126   */\n      dup3\n        /* \"#utility.yul\":2080:2143   */\n      tag_198\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":1988:2153   */\n      pop\n        /* \"#utility.yul\":2237:2241   */\n      0x40\n        /* \"#utility.yul\":2230:2235   */\n      dup3\n        /* \"#utility.yul\":2226:2242   */\n      add\n        /* \"#utility.yul\":2220:2243   */\n      mload\n        /* \"#utility.yul\":2256:2319   */\n      tag_251\n        /* \"#utility.yul\":2313:2317   */\n      0x40\n        /* \"#utility.yul\":2308:2311   */\n      dup6\n        /* \"#utility.yul\":2304:2318   */\n      add\n        /* \"#utility.yul\":2290:2302   */\n      dup3\n        /* \"#utility.yul\":2256:2319   */\n      tag_198\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2163:2329   */\n      pop\n        /* \"#utility.yul\":1768:2336   */\n      pop\n        /* \"#utility.yul\":1644:2336   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2342:2680   */\n    tag_32:\n        /* \"#utility.yul\":2493:2497   */\n      0x00\n        /* \"#utility.yul\":2531:2533   */\n      0x60\n        /* \"#utility.yul\":2520:2529   */\n      dup3\n        /* \"#utility.yul\":2516:2534   */\n      add\n        /* \"#utility.yul\":2508:2534   */\n      swap1\n      pop\n        /* \"#utility.yul\":2544:2673   */\n      tag_253\n        /* \"#utility.yul\":2670:2671   */\n      0x00\n        /* \"#utility.yul\":2659:2668   */\n      dup4\n        /* \"#utility.yul\":2655:2672   */\n      add\n        /* \"#utility.yul\":2646:2652   */\n      dup5\n        /* \"#utility.yul\":2544:2673   */\n      tag_199\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2342:2680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2686:2808   */\n    tag_200:\n        /* \"#utility.yul\":2759:2783   */\n      tag_255\n        /* \"#utility.yul\":2777:2782   */\n      dup2\n        /* \"#utility.yul\":2759:2783   */\n      tag_195\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2752:2757   */\n      dup2\n        /* \"#utility.yul\":2749:2784   */\n      eq\n        /* \"#utility.yul\":2739:2802   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2798:2799   */\n      0x00\n        /* \"#utility.yul\":2795:2796   */\n      dup1\n        /* \"#utility.yul\":2788:2800   */\n      revert\n        /* \"#utility.yul\":2739:2802   */\n    tag_256:\n        /* \"#utility.yul\":2686:2808   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2814:2953   */\n    tag_201:\n        /* \"#utility.yul\":2860:2865   */\n      0x00\n        /* \"#utility.yul\":2898:2904   */\n      dup2\n        /* \"#utility.yul\":2885:2905   */\n      calldataload\n        /* \"#utility.yul\":2876:2905   */\n      swap1\n      pop\n        /* \"#utility.yul\":2914:2947   */\n      tag_258\n        /* \"#utility.yul\":2941:2946   */\n      dup2\n        /* \"#utility.yul\":2914:2947   */\n      tag_200\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2814:2953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2959:3081   */\n    tag_202:\n        /* \"#utility.yul\":3032:3056   */\n      tag_260\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3032:3056   */\n      tag_197\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3025:3030   */\n      dup2\n        /* \"#utility.yul\":3022:3057   */\n      eq\n        /* \"#utility.yul\":3012:3075   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":3071:3072   */\n      0x00\n        /* \"#utility.yul\":3068:3069   */\n      dup1\n        /* \"#utility.yul\":3061:3073   */\n      revert\n        /* \"#utility.yul\":3012:3075   */\n    tag_261:\n        /* \"#utility.yul\":2959:3081   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3087:3226   */\n    tag_203:\n        /* \"#utility.yul\":3133:3138   */\n      0x00\n        /* \"#utility.yul\":3171:3177   */\n      dup2\n        /* \"#utility.yul\":3158:3178   */\n      calldataload\n        /* \"#utility.yul\":3149:3178   */\n      swap1\n      pop\n        /* \"#utility.yul\":3187:3220   */\n      tag_263\n        /* \"#utility.yul\":3214:3219   */\n      dup2\n        /* \"#utility.yul\":3187:3220   */\n      tag_202\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3087:3226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3232:3851   */\n    tag_35:\n        /* \"#utility.yul\":3309:3315   */\n      0x00\n        /* \"#utility.yul\":3317:3323   */\n      dup1\n        /* \"#utility.yul\":3325:3331   */\n      0x00\n        /* \"#utility.yul\":3374:3376   */\n      0x60\n        /* \"#utility.yul\":3362:3371   */\n      dup5\n        /* \"#utility.yul\":3353:3360   */\n      dup7\n        /* \"#utility.yul\":3349:3372   */\n      sub\n        /* \"#utility.yul\":3345:3377   */\n      slt\n        /* \"#utility.yul\":3342:3461   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":3380:3459   */\n      tag_266\n      tag_189\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3342:3461   */\n    tag_265:\n        /* \"#utility.yul\":3500:3501   */\n      0x00\n        /* \"#utility.yul\":3525:3578   */\n      tag_267\n        /* \"#utility.yul\":3570:3577   */\n      dup7\n        /* \"#utility.yul\":3561:3567   */\n      dup3\n        /* \"#utility.yul\":3550:3559   */\n      dup8\n        /* \"#utility.yul\":3546:3568   */\n      add\n        /* \"#utility.yul\":3525:3578   */\n      tag_201\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3515:3578   */\n      swap4\n      pop\n        /* \"#utility.yul\":3471:3588   */\n      pop\n        /* \"#utility.yul\":3627:3629   */\n      0x20\n        /* \"#utility.yul\":3653:3706   */\n      tag_268\n        /* \"#utility.yul\":3698:3705   */\n      dup7\n        /* \"#utility.yul\":3689:3695   */\n      dup3\n        /* \"#utility.yul\":3678:3687   */\n      dup8\n        /* \"#utility.yul\":3674:3696   */\n      add\n        /* \"#utility.yul\":3653:3706   */\n      tag_203\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3643:3706   */\n      swap3\n      pop\n        /* \"#utility.yul\":3598:3716   */\n      pop\n        /* \"#utility.yul\":3755:3757   */\n      0x40\n        /* \"#utility.yul\":3781:3834   */\n      tag_269\n        /* \"#utility.yul\":3826:3833   */\n      dup7\n        /* \"#utility.yul\":3817:3823   */\n      dup3\n        /* \"#utility.yul\":3806:3815   */\n      dup8\n        /* \"#utility.yul\":3802:3824   */\n      add\n        /* \"#utility.yul\":3781:3834   */\n      tag_203\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3771:3834   */\n      swap2\n      pop\n        /* \"#utility.yul\":3726:3844   */\n      pop\n        /* \"#utility.yul\":3232:3851   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3857:4186   */\n    tag_39:\n        /* \"#utility.yul\":3916:3922   */\n      0x00\n        /* \"#utility.yul\":3965:3967   */\n      0x20\n        /* \"#utility.yul\":3953:3962   */\n      dup3\n        /* \"#utility.yul\":3944:3951   */\n      dup5\n        /* \"#utility.yul\":3940:3963   */\n      sub\n        /* \"#utility.yul\":3936:3968   */\n      slt\n        /* \"#utility.yul\":3933:4052   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":3971:4050   */\n      tag_272\n      tag_189\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3933:4052   */\n    tag_271:\n        /* \"#utility.yul\":4091:4092   */\n      0x00\n        /* \"#utility.yul\":4116:4169   */\n      tag_273\n        /* \"#utility.yul\":4161:4168   */\n      dup5\n        /* \"#utility.yul\":4152:4158   */\n      dup3\n        /* \"#utility.yul\":4141:4150   */\n      dup6\n        /* \"#utility.yul\":4137:4159   */\n      add\n        /* \"#utility.yul\":4116:4169   */\n      tag_201\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4106:4169   */\n      swap2\n      pop\n        /* \"#utility.yul\":4062:4179   */\n      pop\n        /* \"#utility.yul\":3857:4186   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4192:4310   */\n    tag_204:\n        /* \"#utility.yul\":4279:4303   */\n      tag_275\n        /* \"#utility.yul\":4297:4302   */\n      dup2\n        /* \"#utility.yul\":4279:4303   */\n      tag_197\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4274:4277   */\n      dup3\n        /* \"#utility.yul\":4267:4304   */\n      mstore\n        /* \"#utility.yul\":4192:4310   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4316:4538   */\n    tag_42:\n        /* \"#utility.yul\":4409:4413   */\n      0x00\n        /* \"#utility.yul\":4447:4449   */\n      0x20\n        /* \"#utility.yul\":4436:4445   */\n      dup3\n        /* \"#utility.yul\":4432:4450   */\n      add\n        /* \"#utility.yul\":4424:4450   */\n      swap1\n      pop\n        /* \"#utility.yul\":4460:4531   */\n      tag_277\n        /* \"#utility.yul\":4528:4529   */\n      0x00\n        /* \"#utility.yul\":4517:4526   */\n      dup4\n        /* \"#utility.yul\":4513:4530   */\n      add\n        /* \"#utility.yul\":4504:4510   */\n      dup5\n        /* \"#utility.yul\":4460:4531   */\n      tag_204\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4316:4538   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4544:5018   */\n    tag_45:\n        /* \"#utility.yul\":4612:4618   */\n      0x00\n        /* \"#utility.yul\":4620:4626   */\n      dup1\n        /* \"#utility.yul\":4669:4671   */\n      0x40\n        /* \"#utility.yul\":4657:4666   */\n      dup4\n        /* \"#utility.yul\":4648:4655   */\n      dup6\n        /* \"#utility.yul\":4644:4667   */\n      sub\n        /* \"#utility.yul\":4640:4672   */\n      slt\n        /* \"#utility.yul\":4637:4756   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":4675:4754   */\n      tag_280\n      tag_189\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4637:4756   */\n    tag_279:\n        /* \"#utility.yul\":4795:4796   */\n      0x00\n        /* \"#utility.yul\":4820:4873   */\n      tag_281\n        /* \"#utility.yul\":4865:4872   */\n      dup6\n        /* \"#utility.yul\":4856:4862   */\n      dup3\n        /* \"#utility.yul\":4845:4854   */\n      dup7\n        /* \"#utility.yul\":4841:4863   */\n      add\n        /* \"#utility.yul\":4820:4873   */\n      tag_201\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4810:4873   */\n      swap3\n      pop\n        /* \"#utility.yul\":4766:4883   */\n      pop\n        /* \"#utility.yul\":4922:4924   */\n      0x20\n        /* \"#utility.yul\":4948:5001   */\n      tag_282\n        /* \"#utility.yul\":4993:5000   */\n      dup6\n        /* \"#utility.yul\":4984:4990   */\n      dup3\n        /* \"#utility.yul\":4973:4982   */\n      dup7\n        /* \"#utility.yul\":4969:4991   */\n      add\n        /* \"#utility.yul\":4948:5001   */\n      tag_203\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4938:5001   */\n      swap2\n      pop\n        /* \"#utility.yul\":4893:5011   */\n      pop\n        /* \"#utility.yul\":4544:5018   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5024:5084   */\n    tag_205:\n        /* \"#utility.yul\":5052:5055   */\n      0x00\n        /* \"#utility.yul\":5073:5078   */\n      dup2\n        /* \"#utility.yul\":5066:5078   */\n      swap1\n      pop\n        /* \"#utility.yul\":5024:5084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5090:5232   */\n    tag_206:\n        /* \"#utility.yul\":5140:5149   */\n      0x00\n        /* \"#utility.yul\":5173:5226   */\n      tag_285\n        /* \"#utility.yul\":5191:5225   */\n      tag_286\n        /* \"#utility.yul\":5200:5224   */\n      tag_287\n        /* \"#utility.yul\":5218:5223   */\n      dup5\n        /* \"#utility.yul\":5200:5224   */\n      tag_194\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5191:5225   */\n      tag_205\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5173:5226   */\n      tag_194\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5160:5226   */\n      swap1\n      pop\n        /* \"#utility.yul\":5090:5232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5238:5364   */\n    tag_207:\n        /* \"#utility.yul\":5288:5297   */\n      0x00\n        /* \"#utility.yul\":5321:5358   */\n      tag_289\n        /* \"#utility.yul\":5352:5357   */\n      dup3\n        /* \"#utility.yul\":5321:5358   */\n      tag_206\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":5308:5358   */\n      swap1\n      pop\n        /* \"#utility.yul\":5238:5364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5370:5513   */\n    tag_208:\n        /* \"#utility.yul\":5437:5446   */\n      0x00\n        /* \"#utility.yul\":5470:5507   */\n      tag_291\n        /* \"#utility.yul\":5501:5506   */\n      dup3\n        /* \"#utility.yul\":5470:5507   */\n      tag_207\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5457:5507   */\n      swap1\n      pop\n        /* \"#utility.yul\":5370:5513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5519:5684   */\n    tag_209:\n        /* \"#utility.yul\":5623:5677   */\n      tag_293\n        /* \"#utility.yul\":5671:5676   */\n      dup2\n        /* \"#utility.yul\":5623:5677   */\n      tag_208\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5618:5621   */\n      dup3\n        /* \"#utility.yul\":5611:5678   */\n      mstore\n        /* \"#utility.yul\":5519:5684   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5690:5946   */\n    tag_54:\n        /* \"#utility.yul\":5800:5804   */\n      0x00\n        /* \"#utility.yul\":5838:5840   */\n      0x20\n        /* \"#utility.yul\":5827:5836   */\n      dup3\n        /* \"#utility.yul\":5823:5841   */\n      add\n        /* \"#utility.yul\":5815:5841   */\n      swap1\n      pop\n        /* \"#utility.yul\":5851:5939   */\n      tag_295\n        /* \"#utility.yul\":5936:5937   */\n      0x00\n        /* \"#utility.yul\":5925:5934   */\n      dup4\n        /* \"#utility.yul\":5921:5938   */\n      add\n        /* \"#utility.yul\":5912:5918   */\n      dup5\n        /* \"#utility.yul\":5851:5939   */\n      tag_209\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5690:5946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5952:6092   */\n    tag_210:\n        /* \"#utility.yul\":6016:6025   */\n      0x00\n        /* \"#utility.yul\":6049:6086   */\n      tag_297\n        /* \"#utility.yul\":6080:6085   */\n      dup3\n        /* \"#utility.yul\":6049:6086   */\n      tag_207\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":6036:6086   */\n      swap1\n      pop\n        /* \"#utility.yul\":5952:6092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6098:6257   */\n    tag_211:\n        /* \"#utility.yul\":6199:6250   */\n      tag_299\n        /* \"#utility.yul\":6244:6249   */\n      dup2\n        /* \"#utility.yul\":6199:6250   */\n      tag_210\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":6194:6197   */\n      dup3\n        /* \"#utility.yul\":6187:6251   */\n      mstore\n        /* \"#utility.yul\":6098:6257   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6263:6513   */\n    tag_58:\n        /* \"#utility.yul\":6370:6374   */\n      0x00\n        /* \"#utility.yul\":6408:6410   */\n      0x20\n        /* \"#utility.yul\":6397:6406   */\n      dup3\n        /* \"#utility.yul\":6393:6411   */\n      add\n        /* \"#utility.yul\":6385:6411   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6506   */\n      tag_301\n        /* \"#utility.yul\":6503:6504   */\n      0x00\n        /* \"#utility.yul\":6492:6501   */\n      dup4\n        /* \"#utility.yul\":6488:6505   */\n      add\n        /* \"#utility.yul\":6479:6485   */\n      dup5\n        /* \"#utility.yul\":6421:6506   */\n      tag_211\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":6263:6513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6519:6634   */\n    tag_212:\n        /* \"#utility.yul\":6604:6627   */\n      tag_303\n        /* \"#utility.yul\":6621:6626   */\n      dup2\n        /* \"#utility.yul\":6604:6627   */\n      tag_191\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":6599:6602   */\n      dup3\n        /* \"#utility.yul\":6592:6628   */\n      mstore\n        /* \"#utility.yul\":6519:6634   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6640:6858   */\n    tag_68:\n        /* \"#utility.yul\":6731:6735   */\n      0x00\n        /* \"#utility.yul\":6769:6771   */\n      0x20\n        /* \"#utility.yul\":6758:6767   */\n      dup3\n        /* \"#utility.yul\":6754:6772   */\n      add\n        /* \"#utility.yul\":6746:6772   */\n      swap1\n      pop\n        /* \"#utility.yul\":6782:6851   */\n      tag_305\n        /* \"#utility.yul\":6848:6849   */\n      0x00\n        /* \"#utility.yul\":6837:6846   */\n      dup4\n        /* \"#utility.yul\":6833:6850   */\n      add\n        /* \"#utility.yul\":6824:6830   */\n      dup5\n        /* \"#utility.yul\":6782:6851   */\n      tag_212\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":6640:6858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6864:6982   */\n    tag_213:\n        /* \"#utility.yul\":6951:6975   */\n      tag_307\n        /* \"#utility.yul\":6969:6974   */\n      dup2\n        /* \"#utility.yul\":6951:6975   */\n      tag_195\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":6946:6949   */\n      dup3\n        /* \"#utility.yul\":6939:6976   */\n      mstore\n        /* \"#utility.yul\":6864:6982   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6988:7430   */\n    tag_108:\n        /* \"#utility.yul\":7137:7141   */\n      0x00\n        /* \"#utility.yul\":7175:7177   */\n      0x60\n        /* \"#utility.yul\":7164:7173   */\n      dup3\n        /* \"#utility.yul\":7160:7178   */\n      add\n        /* \"#utility.yul\":7152:7178   */\n      swap1\n      pop\n        /* \"#utility.yul\":7188:7259   */\n      tag_309\n        /* \"#utility.yul\":7256:7257   */\n      0x00\n        /* \"#utility.yul\":7245:7254   */\n      dup4\n        /* \"#utility.yul\":7241:7258   */\n      add\n        /* \"#utility.yul\":7232:7238   */\n      dup7\n        /* \"#utility.yul\":7188:7259   */\n      tag_213\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7269:7341   */\n      tag_310\n        /* \"#utility.yul\":7337:7339   */\n      0x20\n        /* \"#utility.yul\":7326:7335   */\n      dup4\n        /* \"#utility.yul\":7322:7340   */\n      add\n        /* \"#utility.yul\":7313:7319   */\n      dup6\n        /* \"#utility.yul\":7269:7341   */\n      tag_204\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":7351:7423   */\n      tag_311\n        /* \"#utility.yul\":7419:7421   */\n      0x40\n        /* \"#utility.yul\":7408:7417   */\n      dup4\n        /* \"#utility.yul\":7404:7422   */\n      add\n        /* \"#utility.yul\":7395:7401   */\n      dup5\n        /* \"#utility.yul\":7351:7423   */\n      tag_204\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":6988:7430   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7436:7513   */\n    tag_214:\n        /* \"#utility.yul\":7473:7480   */\n      0x00\n        /* \"#utility.yul\":7502:7507   */\n      dup2\n        /* \"#utility.yul\":7491:7507   */\n      swap1\n      pop\n        /* \"#utility.yul\":7436:7513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7519:7641   */\n    tag_215:\n        /* \"#utility.yul\":7592:7616   */\n      tag_314\n        /* \"#utility.yul\":7610:7615   */\n      dup2\n        /* \"#utility.yul\":7592:7616   */\n      tag_214\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":7585:7590   */\n      dup2\n        /* \"#utility.yul\":7582:7617   */\n      eq\n        /* \"#utility.yul\":7572:7635   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":7631:7632   */\n      0x00\n        /* \"#utility.yul\":7628:7629   */\n      dup1\n        /* \"#utility.yul\":7621:7633   */\n      revert\n        /* \"#utility.yul\":7572:7635   */\n    tag_315:\n        /* \"#utility.yul\":7519:7641   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7647:7790   */\n    tag_216:\n        /* \"#utility.yul\":7704:7709   */\n      0x00\n        /* \"#utility.yul\":7735:7741   */\n      dup2\n        /* \"#utility.yul\":7729:7742   */\n      mload\n        /* \"#utility.yul\":7720:7742   */\n      swap1\n      pop\n        /* \"#utility.yul\":7751:7784   */\n      tag_317\n        /* \"#utility.yul\":7778:7783   */\n      dup2\n        /* \"#utility.yul\":7751:7784   */\n      tag_215\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":7647:7790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7796:8147   */\n    tag_116:\n        /* \"#utility.yul\":7866:7872   */\n      0x00\n        /* \"#utility.yul\":7915:7917   */\n      0x20\n        /* \"#utility.yul\":7903:7912   */\n      dup3\n        /* \"#utility.yul\":7894:7901   */\n      dup5\n        /* \"#utility.yul\":7890:7913   */\n      sub\n        /* \"#utility.yul\":7886:7918   */\n      slt\n        /* \"#utility.yul\":7883:8002   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":7921:8000   */\n      tag_320\n      tag_189\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":7883:8002   */\n    tag_319:\n        /* \"#utility.yul\":8041:8042   */\n      0x00\n        /* \"#utility.yul\":8066:8130   */\n      tag_321\n        /* \"#utility.yul\":8122:8129   */\n      dup5\n        /* \"#utility.yul\":8113:8119   */\n      dup3\n        /* \"#utility.yul\":8102:8111   */\n      dup6\n        /* \"#utility.yul\":8098:8120   */\n      add\n        /* \"#utility.yul\":8066:8130   */\n      tag_216\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8056:8130   */\n      swap2\n      pop\n        /* \"#utility.yul\":8012:8140   */\n      pop\n        /* \"#utility.yul\":7796:8147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8153:8271   */\n    tag_217:\n        /* \"#utility.yul\":8240:8264   */\n      tag_323\n        /* \"#utility.yul\":8258:8263   */\n      dup2\n        /* \"#utility.yul\":8240:8264   */\n      tag_214\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":8235:8238   */\n      dup3\n        /* \"#utility.yul\":8228:8265   */\n      mstore\n        /* \"#utility.yul\":8153:8271   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8277:8609   */\n    tag_118:\n        /* \"#utility.yul\":8398:8402   */\n      0x00\n        /* \"#utility.yul\":8436:8438   */\n      0x40\n        /* \"#utility.yul\":8425:8434   */\n      dup3\n        /* \"#utility.yul\":8421:8439   */\n      add\n        /* \"#utility.yul\":8413:8439   */\n      swap1\n      pop\n        /* \"#utility.yul\":8449:8520   */\n      tag_325\n        /* \"#utility.yul\":8517:8518   */\n      0x00\n        /* \"#utility.yul\":8506:8515   */\n      dup4\n        /* \"#utility.yul\":8502:8519   */\n      add\n        /* \"#utility.yul\":8493:8499   */\n      dup6\n        /* \"#utility.yul\":8449:8520   */\n      tag_217\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":8530:8602   */\n      tag_326\n        /* \"#utility.yul\":8598:8600   */\n      0x20\n        /* \"#utility.yul\":8587:8596   */\n      dup4\n        /* \"#utility.yul\":8583:8601   */\n      add\n        /* \"#utility.yul\":8574:8580   */\n      dup5\n        /* \"#utility.yul\":8530:8602   */\n      tag_213\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":8277:8609   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8615:8795   */\n    tag_218:\n        /* \"#utility.yul\":8663:8740   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8660:8661   */\n      0x00\n        /* \"#utility.yul\":8653:8741   */\n      mstore\n        /* \"#utility.yul\":8760:8764   */\n      0x11\n        /* \"#utility.yul\":8757:8758   */\n      0x04\n        /* \"#utility.yul\":8750:8765   */\n      mstore\n        /* \"#utility.yul\":8784:8788   */\n      0x24\n        /* \"#utility.yul\":8781:8782   */\n      0x00\n        /* \"#utility.yul\":8774:8789   */\n      revert\n        /* \"#utility.yul\":8801:8903   */\n    tag_219:\n        /* \"#utility.yul\":8843:8851   */\n      0x00\n        /* \"#utility.yul\":8890:8895   */\n      dup2\n        /* \"#utility.yul\":8887:8888   */\n      0x01\n        /* \"#utility.yul\":8883:8896   */\n      shr\n        /* \"#utility.yul\":8862:8896   */\n      swap1\n      pop\n        /* \"#utility.yul\":8801:8903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8909:9757   */\n    tag_220:\n        /* \"#utility.yul\":8970:8975   */\n      0x00\n        /* \"#utility.yul\":8977:8981   */\n      dup1\n        /* \"#utility.yul\":9001:9007   */\n      dup3\n        /* \"#utility.yul\":8992:9007   */\n      swap2\n      pop\n        /* \"#utility.yul\":9025:9030   */\n      dup4\n        /* \"#utility.yul\":9016:9030   */\n      swap1\n      pop\n        /* \"#utility.yul\":9039:9751   */\n    tag_330:\n        /* \"#utility.yul\":9060:9061   */\n      0x01\n        /* \"#utility.yul\":9050:9058   */\n      dup6\n        /* \"#utility.yul\":9047:9062   */\n      gt\n        /* \"#utility.yul\":9039:9751   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":9155:9159   */\n      dup1\n        /* \"#utility.yul\":9150:9153   */\n      dup7\n        /* \"#utility.yul\":9146:9160   */\n      div\n        /* \"#utility.yul\":9140:9144   */\n      dup2\n        /* \"#utility.yul\":9137:9161   */\n      gt\n        /* \"#utility.yul\":9134:9184   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":9164:9182   */\n      tag_334\n      tag_218\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":9134:9184   */\n    tag_333:\n        /* \"#utility.yul\":9214:9215   */\n      0x01\n        /* \"#utility.yul\":9204:9212   */\n      dup6\n        /* \"#utility.yul\":9200:9216   */\n      and\n        /* \"#utility.yul\":9197:9648   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":9629:9633   */\n      dup1\n        /* \"#utility.yul\":9622:9627   */\n      dup3\n        /* \"#utility.yul\":9618:9634   */\n      mul\n        /* \"#utility.yul\":9609:9634   */\n      swap2\n      pop\n        /* \"#utility.yul\":9197:9648   */\n    tag_335:\n        /* \"#utility.yul\":9679:9683   */\n      dup1\n        /* \"#utility.yul\":9673:9677   */\n      dup2\n        /* \"#utility.yul\":9669:9684   */\n      mul\n        /* \"#utility.yul\":9661:9684   */\n      swap1\n      pop\n        /* \"#utility.yul\":9709:9741   */\n      tag_336\n        /* \"#utility.yul\":9732:9740   */\n      dup6\n        /* \"#utility.yul\":9709:9741   */\n      tag_219\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":9697:9741   */\n      swap5\n      pop\n        /* \"#utility.yul\":9039:9751   */\n      jump(tag_330)\n    tag_332:\n        /* \"#utility.yul\":8909:9757   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9763:10836   */\n    tag_221:\n        /* \"#utility.yul\":9817:9822   */\n      0x00\n        /* \"#utility.yul\":10008:10016   */\n      dup3\n        /* \"#utility.yul\":9998:10038   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":10029:10030   */\n      0x01\n        /* \"#utility.yul\":10020:10030   */\n      swap1\n      pop\n        /* \"#utility.yul\":10031:10036   */\n      jump(tag_337)\n        /* \"#utility.yul\":9998:10038   */\n    tag_338:\n        /* \"#utility.yul\":10057:10061   */\n      dup2\n        /* \"#utility.yul\":10047:10083   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":10074:10075   */\n      0x00\n        /* \"#utility.yul\":10065:10075   */\n      swap1\n      pop\n        /* \"#utility.yul\":10076:10081   */\n      jump(tag_337)\n        /* \"#utility.yul\":10047:10083   */\n    tag_339:\n        /* \"#utility.yul\":10143:10147   */\n      dup2\n        /* \"#utility.yul\":10191:10192   */\n      0x01\n        /* \"#utility.yul\":10186:10213   */\n      dup2\n      eq\n      tag_341\n      jumpi\n        /* \"#utility.yul\":10227:10228   */\n      0x02\n        /* \"#utility.yul\":10222:10413   */\n      dup2\n      eq\n      tag_342\n      jumpi\n        /* \"#utility.yul\":10136:10413   */\n      jump(tag_340)\n        /* \"#utility.yul\":10186:10213   */\n    tag_341:\n        /* \"#utility.yul\":10204:10205   */\n      0x01\n        /* \"#utility.yul\":10195:10205   */\n      swap2\n      pop\n        /* \"#utility.yul\":10206:10211   */\n      pop\n      jump(tag_337)\n        /* \"#utility.yul\":10222:10413   */\n    tag_342:\n        /* \"#utility.yul\":10267:10270   */\n      0xff\n        /* \"#utility.yul\":10257:10265   */\n      dup5\n        /* \"#utility.yul\":10254:10271   */\n      gt\n        /* \"#utility.yul\":10251:10294   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":10274:10292   */\n      tag_344\n      tag_218\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":10251:10294   */\n    tag_343:\n        /* \"#utility.yul\":10323:10331   */\n      dup4\n        /* \"#utility.yul\":10320:10321   */\n      0x02\n        /* \"#utility.yul\":10316:10332   */\n      exp\n        /* \"#utility.yul\":10307:10332   */\n      swap2\n      pop\n        /* \"#utility.yul\":10358:10361   */\n      dup5\n        /* \"#utility.yul\":10351:10356   */\n      dup3\n        /* \"#utility.yul\":10348:10362   */\n      gt\n        /* \"#utility.yul\":10345:10385   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":10365:10383   */\n      tag_346\n      tag_218\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":10345:10385   */\n    tag_345:\n        /* \"#utility.yul\":10398:10403   */\n      pop\n      jump(tag_337)\n        /* \"#utility.yul\":10136:10413   */\n    tag_340:\n      pop\n        /* \"#utility.yul\":10522:10524   */\n      0x20\n        /* \"#utility.yul\":10512:10520   */\n      dup4\n        /* \"#utility.yul\":10509:10525   */\n      lt\n        /* \"#utility.yul\":10503:10506   */\n      0x0133\n        /* \"#utility.yul\":10497:10501   */\n      dup4\n        /* \"#utility.yul\":10494:10507   */\n      lt\n        /* \"#utility.yul\":10490:10526   */\n      and\n        /* \"#utility.yul\":10472:10474   */\n      0x4e\n        /* \"#utility.yul\":10462:10470   */\n      dup5\n        /* \"#utility.yul\":10459:10475   */\n      lt\n        /* \"#utility.yul\":10454:10456   */\n      0x0b\n        /* \"#utility.yul\":10448:10452   */\n      dup5\n        /* \"#utility.yul\":10445:10457   */\n      lt\n        /* \"#utility.yul\":10441:10476   */\n      and\n        /* \"#utility.yul\":10425:10536   */\n      or\n        /* \"#utility.yul\":10422:10668   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":10578:10586   */\n      dup3\n        /* \"#utility.yul\":10572:10576   */\n      dup3\n        /* \"#utility.yul\":10568:10587   */\n      exp\n        /* \"#utility.yul\":10559:10587   */\n      swap1\n      pop\n        /* \"#utility.yul\":10613:10616   */\n      dup4\n        /* \"#utility.yul\":10606:10611   */\n      dup2\n        /* \"#utility.yul\":10603:10617   */\n      gt\n        /* \"#utility.yul\":10600:10640   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":10620:10638   */\n      tag_349\n      tag_218\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":10600:10640   */\n    tag_348:\n        /* \"#utility.yul\":10653:10658   */\n      jump(tag_337)\n        /* \"#utility.yul\":10422:10668   */\n    tag_347:\n        /* \"#utility.yul\":10693:10735   */\n      tag_350\n        /* \"#utility.yul\":10731:10734   */\n      dup5\n        /* \"#utility.yul\":10721:10729   */\n      dup5\n        /* \"#utility.yul\":10715:10719   */\n      dup5\n        /* \"#utility.yul\":10712:10713   */\n      0x01\n        /* \"#utility.yul\":10693:10735   */\n      tag_220\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":10678:10735   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":10767:10771   */\n      dup2\n        /* \"#utility.yul\":10762:10765   */\n      dup5\n        /* \"#utility.yul\":10758:10772   */\n      div\n        /* \"#utility.yul\":10751:10756   */\n      dup2\n        /* \"#utility.yul\":10748:10773   */\n      gt\n        /* \"#utility.yul\":10745:10796   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":10776:10794   */\n      tag_352\n      tag_218\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":10745:10796   */\n    tag_351:\n        /* \"#utility.yul\":10825:10829   */\n      dup2\n        /* \"#utility.yul\":10818:10823   */\n      dup2\n        /* \"#utility.yul\":10814:10830   */\n      mul\n        /* \"#utility.yul\":10805:10830   */\n      swap1\n      pop\n        /* \"#utility.yul\":9763:10836   */\n    tag_337:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10842:11125   */\n    tag_126:\n        /* \"#utility.yul\":10901:10906   */\n      0x00\n        /* \"#utility.yul\":10925:10948   */\n      tag_354\n        /* \"#utility.yul\":10943:10947   */\n      dup3\n        /* \"#utility.yul\":10925:10948   */\n      tag_197\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":10917:10948   */\n      swap2\n      pop\n        /* \"#utility.yul\":10969:10995   */\n      tag_355\n        /* \"#utility.yul\":10986:10994   */\n      dup4\n        /* \"#utility.yul\":10969:10995   */\n      tag_191\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":10957:10995   */\n      swap3\n      pop\n        /* \"#utility.yul\":11014:11118   */\n      tag_356\n        /* \"#utility.yul\":11051:11117   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11041:11049   */\n      dup5\n        /* \"#utility.yul\":11035:11039   */\n      dup5\n        /* \"#utility.yul\":11014:11118   */\n      tag_221\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":11005:11118   */\n      swap1\n      pop\n        /* \"#utility.yul\":10842:11125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11131:11325   */\n    tag_128:\n        /* \"#utility.yul\":11171:11175   */\n      0x00\n        /* \"#utility.yul\":11191:11211   */\n      tag_358\n        /* \"#utility.yul\":11209:11210   */\n      dup3\n        /* \"#utility.yul\":11191:11211   */\n      tag_197\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":11186:11211   */\n      swap2\n      pop\n        /* \"#utility.yul\":11225:11245   */\n      tag_359\n        /* \"#utility.yul\":11243:11244   */\n      dup4\n        /* \"#utility.yul\":11225:11245   */\n      tag_197\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":11220:11245   */\n      swap3\n      pop\n        /* \"#utility.yul\":11269:11270   */\n      dup3\n        /* \"#utility.yul\":11266:11267   */\n      dup3\n        /* \"#utility.yul\":11262:11271   */\n      sub\n        /* \"#utility.yul\":11254:11271   */\n      swap1\n      pop\n        /* \"#utility.yul\":11293:11294   */\n      dup2\n        /* \"#utility.yul\":11287:11291   */\n      dup2\n        /* \"#utility.yul\":11284:11295   */\n      gt\n        /* \"#utility.yul\":11281:11318   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":11298:11316   */\n      tag_361\n      tag_218\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":11281:11318   */\n    tag_360:\n        /* \"#utility.yul\":11131:11325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11331:11741   */\n    tag_130:\n        /* \"#utility.yul\":11371:11378   */\n      0x00\n        /* \"#utility.yul\":11394:11414   */\n      tag_363\n        /* \"#utility.yul\":11412:11413   */\n      dup3\n        /* \"#utility.yul\":11394:11414   */\n      tag_197\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":11389:11414   */\n      swap2\n      pop\n        /* \"#utility.yul\":11428:11448   */\n      tag_364\n        /* \"#utility.yul\":11446:11447   */\n      dup4\n        /* \"#utility.yul\":11428:11448   */\n      tag_197\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":11423:11448   */\n      swap3\n      pop\n        /* \"#utility.yul\":11483:11484   */\n      dup3\n        /* \"#utility.yul\":11480:11481   */\n      dup3\n        /* \"#utility.yul\":11476:11485   */\n      mul\n        /* \"#utility.yul\":11505:11535   */\n      tag_365\n        /* \"#utility.yul\":11523:11534   */\n      dup2\n        /* \"#utility.yul\":11505:11535   */\n      tag_197\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":11494:11535   */\n      swap2\n      pop\n        /* \"#utility.yul\":11684:11685   */\n      dup3\n        /* \"#utility.yul\":11675:11682   */\n      dup3\n        /* \"#utility.yul\":11671:11686   */\n      div\n        /* \"#utility.yul\":11668:11669   */\n      dup5\n        /* \"#utility.yul\":11665:11687   */\n      eq\n        /* \"#utility.yul\":11645:11646   */\n      dup4\n        /* \"#utility.yul\":11638:11647   */\n      iszero\n        /* \"#utility.yul\":11618:11701   */\n      or\n        /* \"#utility.yul\":11595:11734   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":11714:11732   */\n      tag_367\n      tag_218\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":11595:11734   */\n    tag_366:\n        /* \"#utility.yul\":11379:11741   */\n      pop\n        /* \"#utility.yul\":11331:11741   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11747:11927   */\n    tag_222:\n        /* \"#utility.yul\":11795:11872   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11792:11793   */\n      0x00\n        /* \"#utility.yul\":11785:11873   */\n      mstore\n        /* \"#utility.yul\":11892:11896   */\n      0x12\n        /* \"#utility.yul\":11889:11890   */\n      0x04\n        /* \"#utility.yul\":11882:11897   */\n      mstore\n        /* \"#utility.yul\":11916:11920   */\n      0x24\n        /* \"#utility.yul\":11913:11914   */\n      0x00\n        /* \"#utility.yul\":11906:11921   */\n      revert\n        /* \"#utility.yul\":11933:12118   */\n    tag_132:\n        /* \"#utility.yul\":11973:11974   */\n      0x00\n        /* \"#utility.yul\":11990:12010   */\n      tag_370\n        /* \"#utility.yul\":12008:12009   */\n      dup3\n        /* \"#utility.yul\":11990:12010   */\n      tag_197\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":11985:12010   */\n      swap2\n      pop\n        /* \"#utility.yul\":12024:12044   */\n      tag_371\n        /* \"#utility.yul\":12042:12043   */\n      dup4\n        /* \"#utility.yul\":12024:12044   */\n      tag_197\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":12019:12044   */\n      swap3\n      pop\n        /* \"#utility.yul\":12063:12064   */\n      dup3\n        /* \"#utility.yul\":12053:12088   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":12068:12086   */\n      tag_373\n      tag_222\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":12053:12088   */\n    tag_372:\n        /* \"#utility.yul\":12110:12111   */\n      dup3\n        /* \"#utility.yul\":12107:12108   */\n      dup3\n        /* \"#utility.yul\":12103:12112   */\n      div\n        /* \"#utility.yul\":12098:12112   */\n      swap1\n      pop\n        /* \"#utility.yul\":11933:12118   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12124:12315   */\n    tag_134:\n        /* \"#utility.yul\":12164:12167   */\n      0x00\n        /* \"#utility.yul\":12183:12203   */\n      tag_375\n        /* \"#utility.yul\":12201:12202   */\n      dup3\n        /* \"#utility.yul\":12183:12203   */\n      tag_197\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":12178:12203   */\n      swap2\n      pop\n        /* \"#utility.yul\":12217:12237   */\n      tag_376\n        /* \"#utility.yul\":12235:12236   */\n      dup4\n        /* \"#utility.yul\":12217:12237   */\n      tag_197\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":12212:12237   */\n      swap3\n      pop\n        /* \"#utility.yul\":12260:12261   */\n      dup3\n        /* \"#utility.yul\":12257:12258   */\n      dup3\n        /* \"#utility.yul\":12253:12262   */\n      add\n        /* \"#utility.yul\":12246:12262   */\n      swap1\n      pop\n        /* \"#utility.yul\":12281:12284   */\n      dup1\n        /* \"#utility.yul\":12278:12279   */\n      dup3\n        /* \"#utility.yul\":12275:12285   */\n      gt\n        /* \"#utility.yul\":12272:12308   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":12288:12306   */\n      tag_378\n      tag_218\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":12272:12308   */\n    tag_377:\n        /* \"#utility.yul\":12124:12315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12321:12496   */\n    tag_143:\n        /* \"#utility.yul\":12359:12362   */\n      0x00\n        /* \"#utility.yul\":12382:12405   */\n      tag_380\n        /* \"#utility.yul\":12399:12404   */\n      dup3\n        /* \"#utility.yul\":12382:12405   */\n      tag_191\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":12373:12405   */\n      swap2\n      pop\n        /* \"#utility.yul\":12427:12437   */\n      0xffffffff\n        /* \"#utility.yul\":12420:12425   */\n      dup3\n        /* \"#utility.yul\":12417:12438   */\n      sub\n        /* \"#utility.yul\":12414:12461   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":12441:12459   */\n      tag_382\n      tag_218\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":12414:12461   */\n    tag_381:\n        /* \"#utility.yul\":12488:12489   */\n      0x01\n        /* \"#utility.yul\":12481:12486   */\n      dup3\n        /* \"#utility.yul\":12477:12490   */\n      add\n        /* \"#utility.yul\":12470:12490   */\n      swap1\n      pop\n        /* \"#utility.yul\":12321:12496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12502:12834   */\n    tag_145:\n        /* \"#utility.yul\":12623:12627   */\n      0x00\n        /* \"#utility.yul\":12661:12663   */\n      0x40\n        /* \"#utility.yul\":12650:12659   */\n      dup3\n        /* \"#utility.yul\":12646:12664   */\n      add\n        /* \"#utility.yul\":12638:12664   */\n      swap1\n      pop\n        /* \"#utility.yul\":12674:12745   */\n      tag_384\n        /* \"#utility.yul\":12742:12743   */\n      0x00\n        /* \"#utility.yul\":12731:12740   */\n      dup4\n        /* \"#utility.yul\":12727:12744   */\n      add\n        /* \"#utility.yul\":12718:12724   */\n      dup6\n        /* \"#utility.yul\":12674:12745   */\n      tag_204\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":12755:12827   */\n      tag_385\n        /* \"#utility.yul\":12823:12825   */\n      0x20\n        /* \"#utility.yul\":12812:12821   */\n      dup4\n        /* \"#utility.yul\":12808:12826   */\n      add\n        /* \"#utility.yul\":12799:12805   */\n      dup5\n        /* \"#utility.yul\":12755:12827   */\n      tag_204\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":12502:12834   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12840:13172   */\n    tag_166:\n        /* \"#utility.yul\":12961:12965   */\n      0x00\n        /* \"#utility.yul\":12999:13001   */\n      0x40\n        /* \"#utility.yul\":12988:12997   */\n      dup3\n        /* \"#utility.yul\":12984:13002   */\n      add\n        /* \"#utility.yul\":12976:13002   */\n      swap1\n      pop\n        /* \"#utility.yul\":13012:13083   */\n      tag_387\n        /* \"#utility.yul\":13080:13081   */\n      0x00\n        /* \"#utility.yul\":13069:13078   */\n      dup4\n        /* \"#utility.yul\":13065:13082   */\n      add\n        /* \"#utility.yul\":13056:13062   */\n      dup6\n        /* \"#utility.yul\":13012:13083   */\n      tag_213\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":13093:13165   */\n      tag_388\n        /* \"#utility.yul\":13161:13163   */\n      0x20\n        /* \"#utility.yul\":13150:13159   */\n      dup4\n        /* \"#utility.yul\":13146:13164   */\n      add\n        /* \"#utility.yul\":13137:13143   */\n      dup5\n        /* \"#utility.yul\":13093:13165   */\n      tag_204\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":12840:13172   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13178:13268   */\n    tag_223:\n        /* \"#utility.yul\":13212:13219   */\n      0x00\n        /* \"#utility.yul\":13255:13260   */\n      dup2\n        /* \"#utility.yul\":13248:13261   */\n      iszero\n        /* \"#utility.yul\":13241:13262   */\n      iszero\n        /* \"#utility.yul\":13230:13262   */\n      swap1\n      pop\n        /* \"#utility.yul\":13178:13268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13274:13390   */\n    tag_224:\n        /* \"#utility.yul\":13344:13365   */\n      tag_391\n        /* \"#utility.yul\":13359:13364   */\n      dup2\n        /* \"#utility.yul\":13344:13365   */\n      tag_223\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":13337:13342   */\n      dup2\n        /* \"#utility.yul\":13334:13366   */\n      eq\n        /* \"#utility.yul\":13324:13384   */\n      tag_392\n      jumpi\n        /* \"#utility.yul\":13380:13381   */\n      0x00\n        /* \"#utility.yul\":13377:13378   */\n      dup1\n        /* \"#utility.yul\":13370:13382   */\n      revert\n        /* \"#utility.yul\":13324:13384   */\n    tag_392:\n        /* \"#utility.yul\":13274:13390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13396:13533   */\n    tag_225:\n        /* \"#utility.yul\":13450:13455   */\n      0x00\n        /* \"#utility.yul\":13481:13487   */\n      dup2\n        /* \"#utility.yul\":13475:13488   */\n      mload\n        /* \"#utility.yul\":13466:13488   */\n      swap1\n      pop\n        /* \"#utility.yul\":13497:13527   */\n      tag_394\n        /* \"#utility.yul\":13521:13526   */\n      dup2\n        /* \"#utility.yul\":13497:13527   */\n      tag_224\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":13396:13533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13539:13884   */\n    tag_170:\n        /* \"#utility.yul\":13606:13612   */\n      0x00\n        /* \"#utility.yul\":13655:13657   */\n      0x20\n        /* \"#utility.yul\":13643:13652   */\n      dup3\n        /* \"#utility.yul\":13634:13641   */\n      dup5\n        /* \"#utility.yul\":13630:13653   */\n      sub\n        /* \"#utility.yul\":13626:13658   */\n      slt\n        /* \"#utility.yul\":13623:13742   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":13661:13740   */\n      tag_397\n      tag_189\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":13623:13742   */\n    tag_396:\n        /* \"#utility.yul\":13781:13782   */\n      0x00\n        /* \"#utility.yul\":13806:13867   */\n      tag_398\n        /* \"#utility.yul\":13859:13866   */\n      dup5\n        /* \"#utility.yul\":13850:13856   */\n      dup3\n        /* \"#utility.yul\":13839:13848   */\n      dup6\n        /* \"#utility.yul\":13835:13857   */\n      add\n        /* \"#utility.yul\":13806:13867   */\n      tag_225\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":13796:13867   */\n      swap2\n      pop\n        /* \"#utility.yul\":13752:13877   */\n      pop\n        /* \"#utility.yul\":13539:13884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13890:14090   */\n    tag_176:\n        /* \"#utility.yul\":13929:13933   */\n      0x00\n        /* \"#utility.yul\":13949:13968   */\n      tag_400\n        /* \"#utility.yul\":13966:13967   */\n      dup3\n        /* \"#utility.yul\":13949:13968   */\n      tag_191\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":13944:13968   */\n      swap2\n      pop\n        /* \"#utility.yul\":13982:14001   */\n      tag_401\n        /* \"#utility.yul\":13999:14000   */\n      dup4\n        /* \"#utility.yul\":13982:14001   */\n      tag_191\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":13977:14001   */\n      swap3\n      pop\n        /* \"#utility.yul\":14025:14026   */\n      dup3\n        /* \"#utility.yul\":14022:14023   */\n      dup3\n        /* \"#utility.yul\":14018:14027   */\n      sub\n        /* \"#utility.yul\":14010:14027   */\n      swap1\n      pop\n        /* \"#utility.yul\":14049:14059   */\n      0xffffffff\n        /* \"#utility.yul\":14043:14047   */\n      dup2\n        /* \"#utility.yul\":14040:14060   */\n      gt\n        /* \"#utility.yul\":14037:14083   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":14063:14081   */\n      tag_403\n      tag_218\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":14037:14083   */\n    tag_402:\n        /* \"#utility.yul\":13890:14090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207fb1966a061af7742c301f3b24919015738ddaf405c3bf0d2714cca34143f55164736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1380": {
									"entryPoint": null,
									"id": 1380,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2585:12",
										"nodeType": "YulBlock",
										"src": "0:2585:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "759:80:12",
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nativeSrc": "769:22:12",
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nativeSrc": "778:13:12",
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nativeSrc": "800:33:12",
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nativeSrc": "800:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:12",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:12",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:12",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nativeSrc": "890:32:12",
													"nodeType": "YulBlock",
													"src": "890:32:12",
													"statements": [
														{
															"nativeSrc": "900:16:12",
															"nodeType": "YulAssignment",
															"src": "900:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:12",
																"nodeType": "YulIdentifier",
																"src": "911:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:12",
														"nodeType": "YulTypedName",
														"src": "872:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:12",
														"nodeType": "YulTypedName",
														"src": "882:7:12",
														"type": ""
													}
												],
												"src": "845:77:12"
											},
											{
												"body": {
													"nativeSrc": "971:79:12",
													"nodeType": "YulBlock",
													"src": "971:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:12",
																"nodeType": "YulBlock",
																"src": "1028:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:12"
																			},
																			"nativeSrc": "1030:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:12"
																		},
																		"nativeSrc": "1030:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:12"
																				},
																				"nativeSrc": "1001:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:12"
																		},
																		"nativeSrc": "991:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:12"
																},
																"nativeSrc": "984:43:12",
																"nodeType": "YulFunctionCall",
																"src": "984:43:12"
															},
															"nativeSrc": "981:63:12",
															"nodeType": "YulIf",
															"src": "981:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:12",
														"nodeType": "YulTypedName",
														"src": "964:5:12",
														"type": ""
													}
												],
												"src": "928:122:12"
											},
											{
												"body": {
													"nativeSrc": "1119:80:12",
													"nodeType": "YulBlock",
													"src": "1119:80:12",
													"statements": [
														{
															"nativeSrc": "1129:22:12",
															"nodeType": "YulAssignment",
															"src": "1129:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:12"
																},
																"nativeSrc": "1138:13:12",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:12"
																},
																"nativeSrc": "1160:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:12"
															},
															"nativeSrc": "1160:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:12",
														"nodeType": "YulTypedName",
														"src": "1097:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:12",
														"nodeType": "YulTypedName",
														"src": "1105:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:12",
														"nodeType": "YulTypedName",
														"src": "1113:5:12",
														"type": ""
													}
												],
												"src": "1056:143:12"
											},
											{
												"body": {
													"nativeSrc": "1316:552:12",
													"nodeType": "YulBlock",
													"src": "1316:552:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:12",
																"nodeType": "YulBlock",
																"src": "1362:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:12"
																			},
																			"nativeSrc": "1364:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:12"
																		},
																		"nativeSrc": "1364:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:12"
																		},
																		"nativeSrc": "1333:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:12"
																},
																"nativeSrc": "1329:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:12"
															},
															"nativeSrc": "1326:119:12",
															"nodeType": "YulIf",
															"src": "1326:119:12"
														},
														{
															"nativeSrc": "1455:128:12",
															"nodeType": "YulBlock",
															"src": "1455:128:12",
															"statements": [
																{
																	"nativeSrc": "1470:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:12"
																				},
																				"nativeSrc": "1541:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1509:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:12"
																		},
																		"nativeSrc": "1509:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:12",
															"nodeType": "YulBlock",
															"src": "1593:129:12",
															"statements": [
																{
																	"nativeSrc": "1608:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:12"
																				},
																				"nativeSrc": "1680:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1648:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:12"
																		},
																		"nativeSrc": "1648:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:12",
															"nodeType": "YulBlock",
															"src": "1732:129:12",
															"statements": [
																{
																	"nativeSrc": "1747:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:12"
																				},
																				"nativeSrc": "1819:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1787:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:12"
																		},
																		"nativeSrc": "1787:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "1205:663:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:12",
														"nodeType": "YulTypedName",
														"src": "1270:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:12",
														"nodeType": "YulTypedName",
														"src": "1281:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:12",
														"nodeType": "YulTypedName",
														"src": "1293:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:12",
														"nodeType": "YulTypedName",
														"src": "1301:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:12",
														"nodeType": "YulTypedName",
														"src": "1309:6:12",
														"type": ""
													}
												],
												"src": "1205:663:12"
											},
											{
												"body": {
													"nativeSrc": "1917:43:12",
													"nodeType": "YulBlock",
													"src": "1917:43:12",
													"statements": [
														{
															"nativeSrc": "1927:27:12",
															"nodeType": "YulAssignment",
															"src": "1927:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1942:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1942:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1938:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1938:3:12"
																},
																"nativeSrc": "1938:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1938:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1927:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1927:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "1874:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1899:5:12",
														"nodeType": "YulTypedName",
														"src": "1899:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1909:7:12",
														"nodeType": "YulTypedName",
														"src": "1909:7:12",
														"type": ""
													}
												],
												"src": "1874:86:12"
											},
											{
												"body": {
													"nativeSrc": "2007:77:12",
													"nodeType": "YulBlock",
													"src": "2007:77:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2062:16:12",
																"nodeType": "YulBlock",
																"src": "2062:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2071:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2071:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2074:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2064:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2064:6:12"
																			},
																			"nativeSrc": "2064:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2064:12:12"
																		},
																		"nativeSrc": "2064:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2064:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2030:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2030:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2053:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2053:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "2037:15:12",
																					"nodeType": "YulIdentifier",
																					"src": "2037:15:12"
																				},
																				"nativeSrc": "2037:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2037:22:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2027:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2027:2:12"
																		},
																		"nativeSrc": "2027:33:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2027:33:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2020:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2020:6:12"
																},
																"nativeSrc": "2020:41:12",
																"nodeType": "YulFunctionCall",
																"src": "2020:41:12"
															},
															"nativeSrc": "2017:61:12",
															"nodeType": "YulIf",
															"src": "2017:61:12"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "1966:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2000:5:12",
														"nodeType": "YulTypedName",
														"src": "2000:5:12",
														"type": ""
													}
												],
												"src": "1966:118:12"
											},
											{
												"body": {
													"nativeSrc": "2151:78:12",
													"nodeType": "YulBlock",
													"src": "2151:78:12",
													"statements": [
														{
															"nativeSrc": "2161:22:12",
															"nodeType": "YulAssignment",
															"src": "2161:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2176:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2170:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2170:5:12"
																},
																"nativeSrc": "2170:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2170:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2161:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2161:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2217:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2217:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "2192:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "2192:24:12"
																},
																"nativeSrc": "2192:31:12",
																"nodeType": "YulFunctionCall",
																"src": "2192:31:12"
															},
															"nativeSrc": "2192:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "2192:31:12"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "2090:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2129:6:12",
														"nodeType": "YulTypedName",
														"src": "2129:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2137:3:12",
														"nodeType": "YulTypedName",
														"src": "2137:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2145:5:12",
														"nodeType": "YulTypedName",
														"src": "2145:5:12",
														"type": ""
													}
												],
												"src": "2090:139:12"
											},
											{
												"body": {
													"nativeSrc": "2310:272:12",
													"nodeType": "YulBlock",
													"src": "2310:272:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2356:83:12",
																"nodeType": "YulBlock",
																"src": "2356:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2358:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2358:77:12"
																			},
																			"nativeSrc": "2358:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2358:79:12"
																		},
																		"nativeSrc": "2358:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2358:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2331:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2331:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2340:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2340:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2327:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2327:3:12"
																		},
																		"nativeSrc": "2327:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2327:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2352:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2352:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2323:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2323:3:12"
																},
																"nativeSrc": "2323:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2323:32:12"
															},
															"nativeSrc": "2320:119:12",
															"nodeType": "YulIf",
															"src": "2320:119:12"
														},
														{
															"nativeSrc": "2449:126:12",
															"nodeType": "YulBlock",
															"src": "2449:126:12",
															"statements": [
																{
																	"nativeSrc": "2464:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2464:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2478:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2478:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2468:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2468:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2493:72:12",
																	"nodeType": "YulAssignment",
																	"src": "2493:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2537:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2537:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2548:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2548:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2533:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2533:3:12"
																				},
																				"nativeSrc": "2533:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2533:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2557:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2557:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "2503:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "2503:29:12"
																		},
																		"nativeSrc": "2503:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2503:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2493:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2493:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "2235:347:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2280:9:12",
														"nodeType": "YulTypedName",
														"src": "2280:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2291:7:12",
														"nodeType": "YulTypedName",
														"src": "2291:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2303:6:12",
														"nodeType": "YulTypedName",
														"src": "2303:6:12",
														"type": ""
													}
												],
												"src": "2235:347:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001bf338038062001bf3833981810160405281019062000036919062000233565b825f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000de573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620001049190620002c7565b60ff16600b5f6101000a81548163ffffffff021916908363ffffffff1602179055505f60075f6101000a81548163ffffffff021916908363ffffffff16021790555080600c819055508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620002f7565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001c5826200019a565b9050919050565b620001d781620001b9565b8114620001e2575f80fd5b50565b5f81519050620001f581620001cc565b92915050565b5f819050919050565b6200020f81620001fb565b81146200021a575f80fd5b50565b5f815190506200022d8162000204565b92915050565b5f805f606084860312156200024d576200024c62000196565b5b5f6200025c86828701620001e5565b93505060206200026f86828701620001e5565b925050604062000282868287016200021d565b9150509250925092565b5f60ff82169050919050565b620002a3816200028c565b8114620002ae575f80fd5b50565b5f81519050620002c18162000298565b92915050565b5f60208284031215620002df57620002de62000196565b5b5f620002ee84828501620002b1565b91505092915050565b6118ee80620003055f395ff3fe608060405234801561000f575f80fd5b5060043610610135575f3560e01c806376809ce3116100b6578063c884ef831161007a578063c884ef8314610351578063cdf033f314610381578063d4c3eea01461039f578063eb46260e146103bd578063eeda71d5146103ed578063f54f0a8d1461041d57610135565b806376809ce3146102975780637a19a488146102b55780638233fbcb146102d3578063a035b1fe14610303578063b9f0bf661461032157610135565b80631aa3a008116100fd5780631aa3a008146102035780633013ce2914610221578063480a42621461023f5780634e71d92d1461026f5780636d1c60411461027957610135565b806307040e91146101395780630efe6a8b146101695780631161e5821461018557806313da0777146101b55780631a39d8ef146101e5575b5f80fd5b610153600480360381019061014e9190611141565b61044f565b6040516101609190611203565b60405180910390f35b610183600480360381019061017e9190611270565b6104ee565b005b61019f600480360381019061019a91906112c0565b610a4a565b6040516101ac91906112fa565b60405180910390f35b6101cf60048036038101906101ca9190611313565b610a5f565b6040516101dc91906112fa565b60405180910390f35b6101ed610bbf565b6040516101fa91906112fa565b60405180910390f35b61020b610bc5565b60405161021891906113ac565b60405180910390f35b610229610bea565b60405161023691906113e5565b60405180910390f35b610259600480360381019061025491906112c0565b610c0d565b60405161026691906112fa565b60405180910390f35b610277610c1e565b005b610281610dd3565b60405161028e919061140d565b60405180910390f35b61029f610e1e565b6040516102ac919061140d565b60405180910390f35b6102bd610e33565b6040516102ca91906112fa565b60405180910390f35b6102ed60048036038101906102e891906112c0565b610e39565b6040516102fa91906112fa565b60405180910390f35b61030b610e92565b60405161031891906112fa565b60405180910390f35b61033b600480360381019061033691906112c0565b610e98565b60405161034891906112fa565b60405180910390f35b61036b600480360381019061036691906112c0565b610ead565b60405161037891906112fa565b60405180910390f35b610389610ec2565b604051610396919061140d565b60405180910390f35b6103a7610ed7565b6040516103b491906112fa565b60405180910390f35b6103d760048036038101906103d291906112c0565b610edd565b6040516103e491906112fa565b60405180910390f35b610407600480360381019061040291906112c0565b610f23565b60405161041491906112fa565b60405180910390f35b61043760048036038101906104329190611141565b610f38565b60405161044693929190611435565b60405180910390f35b6104576110d0565b60065f8363ffffffff1663ffffffff1681526020019081526020015f206040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250509050919050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312d9a6ad60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f46f16c26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610595573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b9919061149d565b336040518363ffffffff1660e01b81526004016105d79291906114d7565b5f6040518083038186803b1580156105ed575f80fd5b505afa1580156105ff573d5f803e3d5ffd5b505050505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610668576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f82036106a1576040517faa7feadc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81036106da576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b5f9054906101000a900463ffffffff16600a6106f8919061165a565b60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600a5461074391906116a4565b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461078b91906116d7565b6107959190611745565b60045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107e09190611775565b925050819055508160095f8282546107f89190611775565b92505081905550600a5460035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461088f9190611775565b925050819055508060085f8282546108a79190611775565b92505081905550600854600b5f9054906101000a900463ffffffff16600a6108cf919061165a565b836108da91906116d7565b6108e49190611745565b600a5f8282546108f49190611775565b9250508190555060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281525060065f60075f9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015590505060075f81819054906101000a900463ffffffff16809291906109d6906117a8565b91906101000a81548163ffffffff021916908363ffffffff160217905550508273ffffffffffffffffffffffffffffffffffffffff167f0f0d29b5d4cebe99e2c93ffec39876a8b37c77ba767270f4f489daede43aea4e8383604051610a3d9291906117d3565b60405180910390a2505050565b6004602052805f5260405f205f915090505481565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ac5576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8260025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b0f9190611775565b90505f83600854610b209190611775565b03610b2e575f915050610bb9565b5f83600854610b3d9190611775565b600b5f9054906101000a900463ffffffff16600a610b5b919061165a565b83610b6691906116d7565b610b709190611745565b9050600b5f9054906101000a900463ffffffff16600a610b90919061165a565b600a600c54610b9f9190611745565b82610baa91906116d7565b610bb49190611745565b925050505b92915050565b60085481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610c1782610f7d565b9050919050565b5f3390505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c87576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610c9182610f7d565b90505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610ced9291906117fa565b6020604051808303815f875af1158015610d09573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d2d9190611856565b508060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d7a9190611775565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f3488c34059d2e654b3b166b5ec4ee17bbd37297b906d39c704104a7dc2459b3182604051610dc791906112fa565b60405180910390a25050565b5f8060075f9054906101000a900463ffffffff1663ffffffff1603610dfa575f9050610e1b565b600160075f9054906101000a900463ffffffff16610e189190611881565b90505b90565b600b5f9054906101000a900463ffffffff1681565b600a5481565b5f610e4382610f7d565b60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610e8b9190611775565b9050919050565b600c5481565b6002602052805f5260405f205f915090505481565b6005602052805f5260405f205f915090505481565b60075f9054906101000a900463ffffffff1681565b60095481565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6003602052805f5260405f205f915090505481565b6006602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600b5f9054906101000a900463ffffffff16600a610fda919061165a565b60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600a5461102591906116a4565b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461106d91906116d7565b6110779190611745565b60045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546110bf9190611775565b6110c991906116a4565b9050919050565b60405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81525090565b5f80fd5b5f63ffffffff82169050919050565b61112081611108565b811461112a575f80fd5b50565b5f8135905061113b81611117565b92915050565b5f6020828403121561115657611155611104565b5b5f6111638482850161112d565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111958261116c565b9050919050565b6111a58161118b565b82525050565b5f819050919050565b6111bd816111ab565b82525050565b606082015f8201516111d75f85018261119c565b5060208201516111ea60208501826111b4565b5060408201516111fd60408501826111b4565b50505050565b5f6060820190506112165f8301846111c3565b92915050565b6112258161118b565b811461122f575f80fd5b50565b5f813590506112408161121c565b92915050565b61124f816111ab565b8114611259575f80fd5b50565b5f8135905061126a81611246565b92915050565b5f805f6060848603121561128757611286611104565b5b5f61129486828701611232565b93505060206112a58682870161125c565b92505060406112b68682870161125c565b9150509250925092565b5f602082840312156112d5576112d4611104565b5b5f6112e284828501611232565b91505092915050565b6112f4816111ab565b82525050565b5f60208201905061130d5f8301846112eb565b92915050565b5f806040838503121561132957611328611104565b5b5f61133685828601611232565b92505060206113478582860161125c565b9150509250929050565b5f819050919050565b5f61137461136f61136a8461116c565b611351565b61116c565b9050919050565b5f6113858261135a565b9050919050565b5f6113968261137b565b9050919050565b6113a68161138c565b82525050565b5f6020820190506113bf5f83018461139d565b92915050565b5f6113cf8261137b565b9050919050565b6113df816113c5565b82525050565b5f6020820190506113f85f8301846113d6565b92915050565b61140781611108565b82525050565b5f6020820190506114205f8301846113fe565b92915050565b61142f8161118b565b82525050565b5f6060820190506114485f830186611426565b61145560208301856112eb565b61146260408301846112eb565b949350505050565b5f819050919050565b61147c8161146a565b8114611486575f80fd5b50565b5f8151905061149781611473565b92915050565b5f602082840312156114b2576114b1611104565b5b5f6114bf84828501611489565b91505092915050565b6114d18161146a565b82525050565b5f6040820190506114ea5f8301856114c8565b6114f76020830184611426565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156115805780860481111561155c5761155b6114fe565b5b600185161561156b5780820291505b80810290506115798561152b565b9450611540565b94509492505050565b5f826115985760019050611653565b816115a5575f9050611653565b81600181146115bb57600281146115c5576115f4565b6001915050611653565b60ff8411156115d7576115d66114fe565b5b8360020a9150848211156115ee576115ed6114fe565b5b50611653565b5060208310610133831016604e8410600b84101617156116295782820a905083811115611624576116236114fe565b5b611653565b6116368484846001611537565b9250905081840481111561164d5761164c6114fe565b5b81810290505b9392505050565b5f611664826111ab565b915061166f83611108565b925061169c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611589565b905092915050565b5f6116ae826111ab565b91506116b9836111ab565b92508282039050818111156116d1576116d06114fe565b5b92915050565b5f6116e1826111ab565b91506116ec836111ab565b92508282026116fa816111ab565b91508282048414831517611711576117106114fe565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61174f826111ab565b915061175a836111ab565b92508261176a57611769611718565b5b828204905092915050565b5f61177f826111ab565b915061178a836111ab565b92508282019050808211156117a2576117a16114fe565b5b92915050565b5f6117b282611108565b915063ffffffff82036117c8576117c76114fe565b5b600182019050919050565b5f6040820190506117e65f8301856112eb565b6117f360208301846112eb565b9392505050565b5f60408201905061180d5f830185611426565b61181a60208301846112eb565b9392505050565b5f8115159050919050565b61183581611821565b811461183f575f80fd5b50565b5f815190506118508161182c565b92915050565b5f6020828403121561186b5761186a611104565b5b5f61187884828501611842565b91505092915050565b5f61188b82611108565b915061189683611108565b9250828203905063ffffffff8111156118b2576118b16114fe565b5b9291505056fea26469706673582212207fb1966a061af7742c301f3b24919015738ddaf405c3bf0d2714cca34143f55164736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1BF3 CODESIZE SUB DUP1 PUSH3 0x1BF3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x233 JUMP JUMPDEST DUP3 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xDE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x104 SWAP2 SWAP1 PUSH3 0x2C7 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x2F7 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1C5 DUP3 PUSH3 0x19A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1D7 DUP2 PUSH3 0x1B9 JUMP JUMPDEST DUP2 EQ PUSH3 0x1E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F5 DUP2 PUSH3 0x1CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x20F DUP2 PUSH3 0x1FB JUMP JUMPDEST DUP2 EQ PUSH3 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x22D DUP2 PUSH3 0x204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x24D JUMPI PUSH3 0x24C PUSH3 0x196 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x25C DUP7 DUP3 DUP8 ADD PUSH3 0x1E5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x26F DUP7 DUP3 DUP8 ADD PUSH3 0x1E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x282 DUP7 DUP3 DUP8 ADD PUSH3 0x21D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2A3 DUP2 PUSH3 0x28C JUMP JUMPDEST DUP2 EQ PUSH3 0x2AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2C1 DUP2 PUSH3 0x298 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2DF JUMPI PUSH3 0x2DE PUSH3 0x196 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x2EE DUP5 DUP3 DUP6 ADD PUSH3 0x2B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18EE DUP1 PUSH3 0x305 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76809CE3 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC884EF83 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xCDF033F3 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xD4C3EEA0 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xEB46260E EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xEEDA71D5 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF54F0A8D EQ PUSH2 0x41D JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x76809CE3 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x7A19A488 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x8233FBCB EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xB9F0BF66 EQ PUSH2 0x321 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1AA3A008 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x480A4262 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x6D1C6041 EQ PUSH2 0x279 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x7040E91 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xEFE6A8B EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x1161E582 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x13DA0777 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x1E5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1270 JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0xC1E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30B PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x437 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x446 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12D9A6AD PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF46F16C2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D7 SWAP3 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SUB PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA7FEADC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xA SLOAD PUSH2 0x743 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x78B SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x795 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST DUP4 PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x7 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x9D6 SWAP1 PUSH2 0x17A8 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF0D29B5D4CEBE99E2C93FFEC39876A8B37C77BA767270F4F489DAEDE43AEA4E DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA3D SWAP3 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x8 SLOAD PUSH2 0xB20 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SUB PUSH2 0xB2E JUMPI PUSH0 SWAP2 POP POP PUSH2 0xBB9 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x8 SLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0xB5B SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST DUP4 PUSH2 0xB66 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0xB70 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0xB90 SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH1 0xA PUSH1 0xC SLOAD PUSH2 0xB9F SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST DUP3 PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0xBB4 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xC17 DUP3 PUSH2 0xF7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC87 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xC91 DUP3 PUSH2 0xF7D JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCED SWAP3 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD09 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x1856 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD7A SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3488C34059D2E654B3B166B5EC4EE17BBD37297B906D39C704104A7DC2459B31 DUP3 PUSH1 0x40 MLOAD PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SUB PUSH2 0xDFA JUMPI PUSH0 SWAP1 POP PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x1881 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xE43 DUP3 PUSH2 0xF7D JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xE8B SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0xFDA SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xA SLOAD PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x106D SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x1077 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x10BF SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x10C9 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1120 DUP2 PUSH2 0x1108 JUMP JUMPDEST DUP2 EQ PUSH2 0x112A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x113B DUP2 PUSH2 0x1117 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1156 JUMPI PUSH2 0x1155 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1163 DUP5 DUP3 DUP6 ADD PUSH2 0x112D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1195 DUP3 PUSH2 0x116C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A5 DUP2 PUSH2 0x118B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11BD DUP2 PUSH2 0x11AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x11D7 PUSH0 DUP6 ADD DUP3 PUSH2 0x119C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x11EA PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x11B4 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x11FD PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x11B4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1216 PUSH0 DUP4 ADD DUP5 PUSH2 0x11C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1225 DUP2 PUSH2 0x118B JUMP JUMPDEST DUP2 EQ PUSH2 0x122F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1240 DUP2 PUSH2 0x121C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x124F DUP2 PUSH2 0x11AB JUMP JUMPDEST DUP2 EQ PUSH2 0x1259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x126A DUP2 PUSH2 0x1246 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1294 DUP7 DUP3 DUP8 ADD PUSH2 0x1232 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12A5 DUP7 DUP3 DUP8 ADD PUSH2 0x125C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12B6 DUP7 DUP3 DUP8 ADD PUSH2 0x125C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D5 JUMPI PUSH2 0x12D4 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12E2 DUP5 DUP3 DUP6 ADD PUSH2 0x1232 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F4 DUP2 PUSH2 0x11AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x130D PUSH0 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1329 JUMPI PUSH2 0x1328 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1336 DUP6 DUP3 DUP7 ADD PUSH2 0x1232 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1347 DUP6 DUP3 DUP7 ADD PUSH2 0x125C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1374 PUSH2 0x136F PUSH2 0x136A DUP5 PUSH2 0x116C JUMP JUMPDEST PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x116C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1385 DUP3 PUSH2 0x135A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1396 DUP3 PUSH2 0x137B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A6 DUP2 PUSH2 0x138C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BF PUSH0 DUP4 ADD DUP5 PUSH2 0x139D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13CF DUP3 PUSH2 0x137B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13DF DUP2 PUSH2 0x13C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F8 PUSH0 DUP4 ADD DUP5 PUSH2 0x13D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1407 DUP2 PUSH2 0x1108 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1420 PUSH0 DUP4 ADD DUP5 PUSH2 0x13FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x142F DUP2 PUSH2 0x118B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1448 PUSH0 DUP4 ADD DUP7 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x1455 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0x1462 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147C DUP2 PUSH2 0x146A JUMP JUMPDEST DUP2 EQ PUSH2 0x1486 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1497 DUP2 PUSH2 0x1473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14BF DUP5 DUP3 DUP6 ADD PUSH2 0x1489 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x146A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14EA PUSH0 DUP4 ADD DUP6 PUSH2 0x14C8 JUMP JUMPDEST PUSH2 0x14F7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1426 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1580 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x155C JUMPI PUSH2 0x155B PUSH2 0x14FE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x156B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1579 DUP6 PUSH2 0x152B JUMP JUMPDEST SWAP5 POP PUSH2 0x1540 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1598 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1653 JUMP JUMPDEST DUP2 PUSH2 0x15A5 JUMPI PUSH0 SWAP1 POP PUSH2 0x1653 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x15BB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x15C5 JUMPI PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1653 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x15D7 JUMPI PUSH2 0x15D6 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x15EE JUMPI PUSH2 0x15ED PUSH2 0x14FE JUMP JUMPDEST JUMPDEST POP PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1629 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1624 JUMPI PUSH2 0x1623 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST PUSH2 0x1653 JUMP JUMPDEST PUSH2 0x1636 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1537 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x164D JUMPI PUSH2 0x164C PUSH2 0x14FE JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1664 DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x166F DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP3 POP PUSH2 0x169C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16AE DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x16B9 DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x16D1 JUMPI PUSH2 0x16D0 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16E1 DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x16EC DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x16FA DUP2 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1711 JUMPI PUSH2 0x1710 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x174F DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x175A DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x176A JUMPI PUSH2 0x1769 PUSH2 0x1718 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x177F DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x178A DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17A2 JUMPI PUSH2 0x17A1 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17B2 DUP3 PUSH2 0x1108 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x17C8 JUMPI PUSH2 0x17C7 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17E6 PUSH0 DUP4 ADD DUP6 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0x17F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x180D PUSH0 DUP4 ADD DUP6 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x181A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1835 DUP2 PUSH2 0x1821 JUMP JUMPDEST DUP2 EQ PUSH2 0x183F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1850 DUP2 PUSH2 0x182C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186B JUMPI PUSH2 0x186A PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1878 DUP5 DUP3 DUP6 ADD PUSH2 0x1842 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x188B DUP3 PUSH2 0x1108 JUMP JUMPDEST SWAP2 POP PUSH2 0x1896 DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B2 JUMPI PUSH2 0x18B1 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xB1966A061AF7742C301F3B24919015738DDAF405C3BF0D2714CCA34143F55164 PUSH20 0x6F6C634300081700330000000000000000000000 ",
							"sourceMap": "262:3539:10:-:0;;;814:392;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;953:17;932:12;;:39;;;;;;;;;;;;;;;;;;992:12;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;982:33;;:7;;:33;;;;;;;;;;;;;;;;;;1041:1;1026:12;;:16;;;;;;;;;;;;;;;;;;1151:6;1143:5;:14;;;;1188:9;1168:8;;:30;;;;;;;;;;;;;;;;;;814:392;;;262:3539;;88:117:12;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:86::-;1909:7;1949:4;1942:5;1938:16;1927:27;;1874:86;;;:::o;1966:118::-;2037:22;2053:5;2037:22;:::i;:::-;2030:5;2027:33;2017:61;;2074:1;2071;2064:12;2017:61;1966:118;:::o;2090:139::-;2145:5;2176:6;2170:13;2161:22;;2192:31;2217:5;2192:31;:::i;:::-;2090:139;;;;:::o;2235:347::-;2303:6;2352:2;2340:9;2331:7;2327:23;2323:32;2320:119;;;2358:79;;:::i;:::-;2320:119;2478:1;2503:62;2557:7;2548:6;2537:9;2533:22;2503:62;:::i;:::-;2493:72;;2449:126;2235:347;;;;:::o;262:3539:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getUnclaim_1712": {
									"entryPoint": 3965,
									"id": 1712,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@amount_1315": {
									"entryPoint": 3736,
									"id": 1315,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_1546": {
									"entryPoint": 3102,
									"id": 1546,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimed_1327": {
									"entryPoint": 3757,
									"id": 1327,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimal_1342": {
									"entryPoint": 3614,
									"id": 1342,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1503": {
									"entryPoint": 1262,
									"id": 1503,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getClaimed_1634": {
									"entryPoint": 3805,
									"id": 1634,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCurrentHistoryNonce_1666": {
									"entryPoint": 3539,
									"id": 1666,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getHistory_1679": {
									"entryPoint": 1103,
									"id": 1679,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPredict_1610": {
									"entryPoint": 2655,
									"id": 1610,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getTotalProfit_1650": {
									"entryPoint": 3641,
									"id": 1650,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUnclaim_1622": {
									"entryPoint": 3085,
									"id": 1622,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@historyInfo_1332": {
									"entryPoint": 3896,
									"id": 1332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@historyNonce_1334": {
									"entryPoint": 3778,
									"id": 1334,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mask_1319": {
									"entryPoint": 3875,
									"id": 1319,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paymentToken_1308": {
									"entryPoint": 3050,
									"id": 1308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@price_1344": {
									"entryPoint": 3730,
									"id": 1344,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@register_1311": {
									"entryPoint": 3013,
									"id": 1311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAmount_1336": {
									"entryPoint": 3007,
									"id": 1336,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalValue_1338": {
									"entryPoint": 3799,
									"id": 1338,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unclaim_1323": {
									"entryPoint": 2634,
									"id": 1323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@valuePerAmount_1340": {
									"entryPoint": 3635,
									"id": 1340,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 5257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 4397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 4720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 5277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 4417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ERC20_$1030_to_t_address_fromStack": {
									"entryPoint": 5078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_Register_$1828_to_t_address_fromStack": {
									"entryPoint": 5021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_HistoryInfo_$1234_memory_ptr_to_t_struct$_HistoryInfo_$1234_memory_ptr_fromStack": {
									"entryPoint": 4547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 5118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6138,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": 5335,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$1030__to_t_address__fromStack_reversed": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Register_$1828__to_t_address__fromStack_reversed": {
									"entryPoint": 5036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_HistoryInfo_$1234_memory_ptr__to_t_struct$_HistoryInfo_$1234_memory_ptr__fromStack_reversed": {
									"entryPoint": 4611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6099,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": 5133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 5431,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint32": {
									"entryPoint": 5722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 5513,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint32": {
									"entryPoint": 6273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 4360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$1030_to_t_address": {
									"entryPoint": 5061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_Register_$1828_to_t_address": {
									"entryPoint": 5004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint32": {
									"entryPoint": 6056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5912,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4356,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 5419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 4375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14093:12",
										"nodeType": "YulBlock",
										"src": "0:14093:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:49:12",
													"nodeType": "YulBlock",
													"src": "378:49:12",
													"statements": [
														{
															"nativeSrc": "388:33:12",
															"nodeType": "YulAssignment",
															"src": "388:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:10:12",
																		"nodeType": "YulLiteral",
																		"src": "410:10:12",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:22:12",
																"nodeType": "YulFunctionCall",
																"src": "399:22:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "334:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:93:12"
											},
											{
												"body": {
													"nativeSrc": "475:78:12",
													"nodeType": "YulBlock",
													"src": "475:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "531:16:12",
																"nodeType": "YulBlock",
																"src": "531:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "540:1:12",
																					"nodeType": "YulLiteral",
																					"src": "540:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "543:1:12",
																					"nodeType": "YulLiteral",
																					"src": "543:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "533:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "533:6:12"
																			},
																			"nativeSrc": "533:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "533:12:12"
																		},
																		"nativeSrc": "533:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "533:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "498:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "498:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "522:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "522:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nativeSrc": "505:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "505:16:12"
																				},
																				"nativeSrc": "505:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "505:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "495:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "495:2:12"
																		},
																		"nativeSrc": "495:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "495:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "488:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:12"
																},
																"nativeSrc": "488:42:12",
																"nodeType": "YulFunctionCall",
																"src": "488:42:12"
															},
															"nativeSrc": "485:62:12",
															"nodeType": "YulIf",
															"src": "485:62:12"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nativeSrc": "433:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "468:5:12",
														"nodeType": "YulTypedName",
														"src": "468:5:12",
														"type": ""
													}
												],
												"src": "433:120:12"
											},
											{
												"body": {
													"nativeSrc": "610:86:12",
													"nodeType": "YulBlock",
													"src": "610:86:12",
													"statements": [
														{
															"nativeSrc": "620:29:12",
															"nodeType": "YulAssignment",
															"src": "620:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "642:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "629:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "629:12:12"
																},
																"nativeSrc": "629:20:12",
																"nodeType": "YulFunctionCall",
																"src": "629:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "620:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "620:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "684:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "684:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nativeSrc": "658:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "658:25:12"
																},
																"nativeSrc": "658:32:12",
																"nodeType": "YulFunctionCall",
																"src": "658:32:12"
															},
															"nativeSrc": "658:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "658:32:12"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nativeSrc": "559:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "588:6:12",
														"nodeType": "YulTypedName",
														"src": "588:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "596:3:12",
														"nodeType": "YulTypedName",
														"src": "596:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "559:137:12"
											},
											{
												"body": {
													"nativeSrc": "767:262:12",
													"nodeType": "YulBlock",
													"src": "767:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "813:83:12",
																"nodeType": "YulBlock",
																"src": "813:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "815:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "815:77:12"
																			},
																			"nativeSrc": "815:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "815:79:12"
																		},
																		"nativeSrc": "815:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "815:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "788:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "788:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "797:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "797:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "784:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "784:3:12"
																		},
																		"nativeSrc": "784:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "784:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "809:2:12",
																		"nodeType": "YulLiteral",
																		"src": "809:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "780:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "780:3:12"
																},
																"nativeSrc": "780:32:12",
																"nodeType": "YulFunctionCall",
																"src": "780:32:12"
															},
															"nativeSrc": "777:119:12",
															"nodeType": "YulIf",
															"src": "777:119:12"
														},
														{
															"nativeSrc": "906:116:12",
															"nodeType": "YulBlock",
															"src": "906:116:12",
															"statements": [
																{
																	"nativeSrc": "921:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "921:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "935:1:12",
																		"nodeType": "YulLiteral",
																		"src": "935:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "925:6:12",
																			"nodeType": "YulTypedName",
																			"src": "925:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "950:62:12",
																	"nodeType": "YulAssignment",
																	"src": "950:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "984:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "984:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "995:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "995:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "980:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "980:3:12"
																				},
																				"nativeSrc": "980:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "980:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1004:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1004:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nativeSrc": "960:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "960:19:12"
																		},
																		"nativeSrc": "960:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "960:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "950:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "950:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nativeSrc": "702:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "737:9:12",
														"nodeType": "YulTypedName",
														"src": "737:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "748:7:12",
														"nodeType": "YulTypedName",
														"src": "748:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "760:6:12",
														"nodeType": "YulTypedName",
														"src": "760:6:12",
														"type": ""
													}
												],
												"src": "702:327:12"
											},
											{
												"body": {
													"nativeSrc": "1080:81:12",
													"nodeType": "YulBlock",
													"src": "1080:81:12",
													"statements": [
														{
															"nativeSrc": "1090:65:12",
															"nodeType": "YulAssignment",
															"src": "1090:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1105:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1105:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1112:42:12",
																		"nodeType": "YulLiteral",
																		"src": "1112:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1101:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1101:3:12"
																},
																"nativeSrc": "1101:54:12",
																"nodeType": "YulFunctionCall",
																"src": "1101:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1090:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1090:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1035:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1062:5:12",
														"nodeType": "YulTypedName",
														"src": "1062:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1072:7:12",
														"nodeType": "YulTypedName",
														"src": "1072:7:12",
														"type": ""
													}
												],
												"src": "1035:126:12"
											},
											{
												"body": {
													"nativeSrc": "1212:51:12",
													"nodeType": "YulBlock",
													"src": "1212:51:12",
													"statements": [
														{
															"nativeSrc": "1222:35:12",
															"nodeType": "YulAssignment",
															"src": "1222:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1251:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1251:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1233:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1233:17:12"
																},
																"nativeSrc": "1233:24:12",
																"nodeType": "YulFunctionCall",
																"src": "1233:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1222:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1222:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1167:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1194:5:12",
														"nodeType": "YulTypedName",
														"src": "1194:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1204:7:12",
														"nodeType": "YulTypedName",
														"src": "1204:7:12",
														"type": ""
													}
												],
												"src": "1167:96:12"
											},
											{
												"body": {
													"nativeSrc": "1324:53:12",
													"nodeType": "YulBlock",
													"src": "1324:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1346:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:12"
																		},
																		"nativeSrc": "1346:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:12"
																},
																"nativeSrc": "1334:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:12"
															},
															"nativeSrc": "1334:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "1269:108:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:12",
														"nodeType": "YulTypedName",
														"src": "1312:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:12",
														"nodeType": "YulTypedName",
														"src": "1319:3:12",
														"type": ""
													}
												],
												"src": "1269:108:12"
											},
											{
												"body": {
													"nativeSrc": "1428:32:12",
													"nodeType": "YulBlock",
													"src": "1428:32:12",
													"statements": [
														{
															"nativeSrc": "1438:16:12",
															"nodeType": "YulAssignment",
															"src": "1438:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1449:5:12",
																"nodeType": "YulIdentifier",
																"src": "1449:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1438:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1438:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1383:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1410:5:12",
														"nodeType": "YulTypedName",
														"src": "1410:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1420:7:12",
														"nodeType": "YulTypedName",
														"src": "1420:7:12",
														"type": ""
													}
												],
												"src": "1383:77:12"
											},
											{
												"body": {
													"nativeSrc": "1521:53:12",
													"nodeType": "YulBlock",
													"src": "1521:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1538:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1538:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1561:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1561:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1543:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1543:17:12"
																		},
																		"nativeSrc": "1543:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1543:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:12"
																},
																"nativeSrc": "1531:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1531:37:12"
															},
															"nativeSrc": "1531:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1531:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "1466:108:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1509:5:12",
														"nodeType": "YulTypedName",
														"src": "1509:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1516:3:12",
														"nodeType": "YulTypedName",
														"src": "1516:3:12",
														"type": ""
													}
												],
												"src": "1466:108:12"
											},
											{
												"body": {
													"nativeSrc": "1768:568:12",
													"nodeType": "YulBlock",
													"src": "1768:568:12",
													"statements": [
														{
															"nativeSrc": "1778:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1778:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1794:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1794:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1799:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1799:4:12",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1790:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1790:3:12"
																},
																"nativeSrc": "1790:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1790:14:12"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "1782:4:12",
																	"nodeType": "YulTypedName",
																	"src": "1782:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1814:164:12",
															"nodeType": "YulBlock",
															"src": "1814:164:12",
															"statements": [
																{
																	"nativeSrc": "1849:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1849:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1879:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1879:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1886:4:12",
																						"nodeType": "YulLiteral",
																						"src": "1886:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1875:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1875:3:12"
																				},
																				"nativeSrc": "1875:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1875:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1869:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "1869:5:12"
																		},
																		"nativeSrc": "1869:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1869:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "1853:12:12",
																			"nodeType": "YulTypedName",
																			"src": "1853:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "1939:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "1939:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "1957:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1957:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1962:4:12",
																						"nodeType": "YulLiteral",
																						"src": "1962:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1953:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1953:3:12"
																				},
																				"nativeSrc": "1953:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1953:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "1905:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "1905:33:12"
																		},
																		"nativeSrc": "1905:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1905:63:12"
																	},
																	"nativeSrc": "1905:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "1905:63:12"
																}
															]
														},
														{
															"nativeSrc": "1988:165:12",
															"nodeType": "YulBlock",
															"src": "1988:165:12",
															"statements": [
																{
																	"nativeSrc": "2024:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2024:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2054:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2054:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2061:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2061:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2050:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2050:3:12"
																				},
																				"nativeSrc": "2050:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2050:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2044:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "2044:5:12"
																		},
																		"nativeSrc": "2044:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2044:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2028:12:12",
																			"nodeType": "YulTypedName",
																			"src": "2028:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2114:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "2114:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2132:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2132:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2137:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2137:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2128:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2128:3:12"
																				},
																				"nativeSrc": "2128:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2128:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2080:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "2080:33:12"
																		},
																		"nativeSrc": "2080:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2080:63:12"
																	},
																	"nativeSrc": "2080:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "2080:63:12"
																}
															]
														},
														{
															"nativeSrc": "2163:166:12",
															"nodeType": "YulBlock",
															"src": "2163:166:12",
															"statements": [
																{
																	"nativeSrc": "2200:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2200:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2230:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2230:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2237:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2237:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2226:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2226:3:12"
																				},
																				"nativeSrc": "2226:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2226:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2220:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "2220:5:12"
																		},
																		"nativeSrc": "2220:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2204:12:12",
																			"nodeType": "YulTypedName",
																			"src": "2204:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2290:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "2290:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2308:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2308:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2313:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2313:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2304:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2304:3:12"
																				},
																				"nativeSrc": "2304:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2304:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2256:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "2256:33:12"
																		},
																		"nativeSrc": "2256:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2256:63:12"
																	},
																	"nativeSrc": "2256:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "2256:63:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_HistoryInfo_$1234_memory_ptr_to_t_struct$_HistoryInfo_$1234_memory_ptr_fromStack",
												"nativeSrc": "1644:692:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1755:5:12",
														"nodeType": "YulTypedName",
														"src": "1755:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1762:3:12",
														"nodeType": "YulTypedName",
														"src": "1762:3:12",
														"type": ""
													}
												],
												"src": "1644:692:12"
											},
											{
												"body": {
													"nativeSrc": "2498:182:12",
													"nodeType": "YulBlock",
													"src": "2498:182:12",
													"statements": [
														{
															"nativeSrc": "2508:26:12",
															"nodeType": "YulAssignment",
															"src": "2508:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2520:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2520:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2531:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2531:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2516:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2516:3:12"
																},
																"nativeSrc": "2516:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2516:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2508:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2508:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2646:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2646:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2659:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2659:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2670:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2670:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2655:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2655:3:12"
																		},
																		"nativeSrc": "2655:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2655:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_HistoryInfo_$1234_memory_ptr_to_t_struct$_HistoryInfo_$1234_memory_ptr_fromStack",
																	"nativeSrc": "2544:101:12",
																	"nodeType": "YulIdentifier",
																	"src": "2544:101:12"
																},
																"nativeSrc": "2544:129:12",
																"nodeType": "YulFunctionCall",
																"src": "2544:129:12"
															},
															"nativeSrc": "2544:129:12",
															"nodeType": "YulExpressionStatement",
															"src": "2544:129:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_HistoryInfo_$1234_memory_ptr__to_t_struct$_HistoryInfo_$1234_memory_ptr__fromStack_reversed",
												"nativeSrc": "2342:338:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2470:9:12",
														"nodeType": "YulTypedName",
														"src": "2470:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2482:6:12",
														"nodeType": "YulTypedName",
														"src": "2482:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2493:4:12",
														"nodeType": "YulTypedName",
														"src": "2493:4:12",
														"type": ""
													}
												],
												"src": "2342:338:12"
											},
											{
												"body": {
													"nativeSrc": "2729:79:12",
													"nodeType": "YulBlock",
													"src": "2729:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2786:16:12",
																"nodeType": "YulBlock",
																"src": "2786:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2795:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2795:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2798:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2798:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2788:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2788:6:12"
																			},
																			"nativeSrc": "2788:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2788:12:12"
																		},
																		"nativeSrc": "2788:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2788:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2752:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2752:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2777:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2777:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2759:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2759:17:12"
																				},
																				"nativeSrc": "2759:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2759:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2749:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2749:2:12"
																		},
																		"nativeSrc": "2749:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2749:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2742:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2742:6:12"
																},
																"nativeSrc": "2742:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2742:43:12"
															},
															"nativeSrc": "2739:63:12",
															"nodeType": "YulIf",
															"src": "2739:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2686:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2722:5:12",
														"nodeType": "YulTypedName",
														"src": "2722:5:12",
														"type": ""
													}
												],
												"src": "2686:122:12"
											},
											{
												"body": {
													"nativeSrc": "2866:87:12",
													"nodeType": "YulBlock",
													"src": "2866:87:12",
													"statements": [
														{
															"nativeSrc": "2876:29:12",
															"nodeType": "YulAssignment",
															"src": "2876:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2898:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2898:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2885:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2885:12:12"
																},
																"nativeSrc": "2885:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2885:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2876:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2876:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2941:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2941:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2914:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2914:26:12"
																},
																"nativeSrc": "2914:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2914:33:12"
															},
															"nativeSrc": "2914:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2914:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2814:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2844:6:12",
														"nodeType": "YulTypedName",
														"src": "2844:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2852:3:12",
														"nodeType": "YulTypedName",
														"src": "2852:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2860:5:12",
														"nodeType": "YulTypedName",
														"src": "2860:5:12",
														"type": ""
													}
												],
												"src": "2814:139:12"
											},
											{
												"body": {
													"nativeSrc": "3002:79:12",
													"nodeType": "YulBlock",
													"src": "3002:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3059:16:12",
																"nodeType": "YulBlock",
																"src": "3059:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3068:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3068:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3071:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3071:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3061:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3061:6:12"
																			},
																			"nativeSrc": "3061:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3061:12:12"
																		},
																		"nativeSrc": "3061:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3061:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3025:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3025:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3050:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3050:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3032:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3032:17:12"
																				},
																				"nativeSrc": "3032:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3032:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3022:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3022:2:12"
																		},
																		"nativeSrc": "3022:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3022:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3015:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3015:6:12"
																},
																"nativeSrc": "3015:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3015:43:12"
															},
															"nativeSrc": "3012:63:12",
															"nodeType": "YulIf",
															"src": "3012:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2959:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2995:5:12",
														"nodeType": "YulTypedName",
														"src": "2995:5:12",
														"type": ""
													}
												],
												"src": "2959:122:12"
											},
											{
												"body": {
													"nativeSrc": "3139:87:12",
													"nodeType": "YulBlock",
													"src": "3139:87:12",
													"statements": [
														{
															"nativeSrc": "3149:29:12",
															"nodeType": "YulAssignment",
															"src": "3149:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3171:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3171:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3158:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3158:12:12"
																},
																"nativeSrc": "3158:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3158:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3149:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3149:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3214:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3214:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3187:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3187:26:12"
																},
																"nativeSrc": "3187:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3187:33:12"
															},
															"nativeSrc": "3187:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3187:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3087:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3117:6:12",
														"nodeType": "YulTypedName",
														"src": "3117:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3125:3:12",
														"nodeType": "YulTypedName",
														"src": "3125:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3133:5:12",
														"nodeType": "YulTypedName",
														"src": "3133:5:12",
														"type": ""
													}
												],
												"src": "3087:139:12"
											},
											{
												"body": {
													"nativeSrc": "3332:519:12",
													"nodeType": "YulBlock",
													"src": "3332:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3378:83:12",
																"nodeType": "YulBlock",
																"src": "3378:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3380:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3380:77:12"
																			},
																			"nativeSrc": "3380:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3380:79:12"
																		},
																		"nativeSrc": "3380:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3380:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3353:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3353:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3362:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3362:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3349:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3349:3:12"
																		},
																		"nativeSrc": "3349:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3349:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3374:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3374:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3345:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3345:3:12"
																},
																"nativeSrc": "3345:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3345:32:12"
															},
															"nativeSrc": "3342:119:12",
															"nodeType": "YulIf",
															"src": "3342:119:12"
														},
														{
															"nativeSrc": "3471:117:12",
															"nodeType": "YulBlock",
															"src": "3471:117:12",
															"statements": [
																{
																	"nativeSrc": "3486:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3486:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3500:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3500:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3490:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3490:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3515:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3515:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3550:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3550:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3561:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3561:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3546:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3546:3:12"
																				},
																				"nativeSrc": "3546:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3546:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3570:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3570:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3525:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3525:20:12"
																		},
																		"nativeSrc": "3525:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3525:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3515:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3515:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3598:118:12",
															"nodeType": "YulBlock",
															"src": "3598:118:12",
															"statements": [
																{
																	"nativeSrc": "3613:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3613:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3627:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3627:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3617:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3617:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3643:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3643:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3678:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3678:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3689:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3689:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3674:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3674:3:12"
																				},
																				"nativeSrc": "3674:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3674:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3698:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3698:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3653:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3653:20:12"
																		},
																		"nativeSrc": "3653:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3653:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3643:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3643:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3726:118:12",
															"nodeType": "YulBlock",
															"src": "3726:118:12",
															"statements": [
																{
																	"nativeSrc": "3741:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3741:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3755:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3755:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3745:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3745:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3771:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3771:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3806:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3806:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3817:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3817:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3802:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3802:3:12"
																				},
																				"nativeSrc": "3802:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3802:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3826:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3826:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3781:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3781:20:12"
																		},
																		"nativeSrc": "3781:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3781:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3771:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3771:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "3232:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3286:9:12",
														"nodeType": "YulTypedName",
														"src": "3286:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3297:7:12",
														"nodeType": "YulTypedName",
														"src": "3297:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3309:6:12",
														"nodeType": "YulTypedName",
														"src": "3309:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3317:6:12",
														"nodeType": "YulTypedName",
														"src": "3317:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3325:6:12",
														"nodeType": "YulTypedName",
														"src": "3325:6:12",
														"type": ""
													}
												],
												"src": "3232:619:12"
											},
											{
												"body": {
													"nativeSrc": "3923:263:12",
													"nodeType": "YulBlock",
													"src": "3923:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3969:83:12",
																"nodeType": "YulBlock",
																"src": "3969:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3971:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3971:77:12"
																			},
																			"nativeSrc": "3971:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3971:79:12"
																		},
																		"nativeSrc": "3971:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3971:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3944:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3944:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3953:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3953:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3940:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3940:3:12"
																		},
																		"nativeSrc": "3940:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3940:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3965:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3965:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3936:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3936:3:12"
																},
																"nativeSrc": "3936:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3936:32:12"
															},
															"nativeSrc": "3933:119:12",
															"nodeType": "YulIf",
															"src": "3933:119:12"
														},
														{
															"nativeSrc": "4062:117:12",
															"nodeType": "YulBlock",
															"src": "4062:117:12",
															"statements": [
																{
																	"nativeSrc": "4077:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4077:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4091:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4091:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4081:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4081:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4106:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4106:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4141:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4141:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4152:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4152:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4137:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4137:3:12"
																				},
																				"nativeSrc": "4137:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4137:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4161:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4161:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4116:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4116:20:12"
																		},
																		"nativeSrc": "4116:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4116:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4106:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4106:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3857:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3893:9:12",
														"nodeType": "YulTypedName",
														"src": "3893:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3904:7:12",
														"nodeType": "YulTypedName",
														"src": "3904:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3916:6:12",
														"nodeType": "YulTypedName",
														"src": "3916:6:12",
														"type": ""
													}
												],
												"src": "3857:329:12"
											},
											{
												"body": {
													"nativeSrc": "4257:53:12",
													"nodeType": "YulBlock",
													"src": "4257:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4274:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4274:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4297:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4297:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4279:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4279:17:12"
																		},
																		"nativeSrc": "4279:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4279:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4267:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4267:6:12"
																},
																"nativeSrc": "4267:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4267:37:12"
															},
															"nativeSrc": "4267:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4267:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4192:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4245:5:12",
														"nodeType": "YulTypedName",
														"src": "4245:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4252:3:12",
														"nodeType": "YulTypedName",
														"src": "4252:3:12",
														"type": ""
													}
												],
												"src": "4192:118:12"
											},
											{
												"body": {
													"nativeSrc": "4414:124:12",
													"nodeType": "YulBlock",
													"src": "4414:124:12",
													"statements": [
														{
															"nativeSrc": "4424:26:12",
															"nodeType": "YulAssignment",
															"src": "4424:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4436:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4436:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4447:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4447:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4432:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4432:3:12"
																},
																"nativeSrc": "4432:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4432:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4424:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4424:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4504:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4504:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4517:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4517:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4528:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4528:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4513:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4513:3:12"
																		},
																		"nativeSrc": "4513:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4513:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4460:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4460:43:12"
																},
																"nativeSrc": "4460:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4460:71:12"
															},
															"nativeSrc": "4460:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4460:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4316:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4386:9:12",
														"nodeType": "YulTypedName",
														"src": "4386:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4398:6:12",
														"nodeType": "YulTypedName",
														"src": "4398:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4409:4:12",
														"nodeType": "YulTypedName",
														"src": "4409:4:12",
														"type": ""
													}
												],
												"src": "4316:222:12"
											},
											{
												"body": {
													"nativeSrc": "4627:391:12",
													"nodeType": "YulBlock",
													"src": "4627:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4673:83:12",
																"nodeType": "YulBlock",
																"src": "4673:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4675:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4675:77:12"
																			},
																			"nativeSrc": "4675:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4675:79:12"
																		},
																		"nativeSrc": "4675:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4675:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4648:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4648:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4657:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4657:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4644:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4644:3:12"
																		},
																		"nativeSrc": "4644:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4644:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4669:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4669:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4640:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4640:3:12"
																},
																"nativeSrc": "4640:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4640:32:12"
															},
															"nativeSrc": "4637:119:12",
															"nodeType": "YulIf",
															"src": "4637:119:12"
														},
														{
															"nativeSrc": "4766:117:12",
															"nodeType": "YulBlock",
															"src": "4766:117:12",
															"statements": [
																{
																	"nativeSrc": "4781:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4781:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4795:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4795:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4785:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4785:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4810:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4810:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4845:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4845:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4856:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4856:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4841:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4841:3:12"
																				},
																				"nativeSrc": "4841:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4841:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4865:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4865:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4820:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4820:20:12"
																		},
																		"nativeSrc": "4820:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4820:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4810:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4810:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4893:118:12",
															"nodeType": "YulBlock",
															"src": "4893:118:12",
															"statements": [
																{
																	"nativeSrc": "4908:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4908:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4922:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4922:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4912:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4912:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4938:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4938:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4973:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4973:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4984:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4984:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4969:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4969:3:12"
																				},
																				"nativeSrc": "4969:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4969:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4993:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4993:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4948:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4948:20:12"
																		},
																		"nativeSrc": "4948:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4948:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4938:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4938:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4544:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4589:9:12",
														"nodeType": "YulTypedName",
														"src": "4589:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4600:7:12",
														"nodeType": "YulTypedName",
														"src": "4600:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4612:6:12",
														"nodeType": "YulTypedName",
														"src": "4612:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4620:6:12",
														"nodeType": "YulTypedName",
														"src": "4620:6:12",
														"type": ""
													}
												],
												"src": "4544:474:12"
											},
											{
												"body": {
													"nativeSrc": "5056:28:12",
													"nodeType": "YulBlock",
													"src": "5056:28:12",
													"statements": [
														{
															"nativeSrc": "5066:12:12",
															"nodeType": "YulAssignment",
															"src": "5066:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "5073:5:12",
																"nodeType": "YulIdentifier",
																"src": "5073:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5066:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5066:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5024:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5042:5:12",
														"nodeType": "YulTypedName",
														"src": "5042:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5052:3:12",
														"nodeType": "YulTypedName",
														"src": "5052:3:12",
														"type": ""
													}
												],
												"src": "5024:60:12"
											},
											{
												"body": {
													"nativeSrc": "5150:82:12",
													"nodeType": "YulBlock",
													"src": "5150:82:12",
													"statements": [
														{
															"nativeSrc": "5160:66:12",
															"nodeType": "YulAssignment",
															"src": "5160:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5218:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5218:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5200:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5200:17:12"
																				},
																				"nativeSrc": "5200:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5200:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5191:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "5191:8:12"
																		},
																		"nativeSrc": "5191:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5191:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5173:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5173:17:12"
																},
																"nativeSrc": "5173:53:12",
																"nodeType": "YulFunctionCall",
																"src": "5173:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5160:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5160:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5090:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5130:5:12",
														"nodeType": "YulTypedName",
														"src": "5130:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5140:9:12",
														"nodeType": "YulTypedName",
														"src": "5140:9:12",
														"type": ""
													}
												],
												"src": "5090:142:12"
											},
											{
												"body": {
													"nativeSrc": "5298:66:12",
													"nodeType": "YulBlock",
													"src": "5298:66:12",
													"statements": [
														{
															"nativeSrc": "5308:50:12",
															"nodeType": "YulAssignment",
															"src": "5308:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5352:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5352:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5321:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "5321:30:12"
																},
																"nativeSrc": "5321:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5321:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5308:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5308:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5238:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5278:5:12",
														"nodeType": "YulTypedName",
														"src": "5278:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5288:9:12",
														"nodeType": "YulTypedName",
														"src": "5288:9:12",
														"type": ""
													}
												],
												"src": "5238:126:12"
											},
											{
												"body": {
													"nativeSrc": "5447:66:12",
													"nodeType": "YulBlock",
													"src": "5447:66:12",
													"statements": [
														{
															"nativeSrc": "5457:50:12",
															"nodeType": "YulAssignment",
															"src": "5457:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5501:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5501:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5470:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "5470:30:12"
																},
																"nativeSrc": "5470:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5470:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5457:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5457:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_Register_$1828_to_t_address",
												"nativeSrc": "5370:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5427:5:12",
														"nodeType": "YulTypedName",
														"src": "5427:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5437:9:12",
														"nodeType": "YulTypedName",
														"src": "5437:9:12",
														"type": ""
													}
												],
												"src": "5370:143:12"
											},
											{
												"body": {
													"nativeSrc": "5601:83:12",
													"nodeType": "YulBlock",
													"src": "5601:83:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5618:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5618:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5671:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5671:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_Register_$1828_to_t_address",
																			"nativeSrc": "5623:47:12",
																			"nodeType": "YulIdentifier",
																			"src": "5623:47:12"
																		},
																		"nativeSrc": "5623:54:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5623:54:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5611:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5611:6:12"
																},
																"nativeSrc": "5611:67:12",
																"nodeType": "YulFunctionCall",
																"src": "5611:67:12"
															},
															"nativeSrc": "5611:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "5611:67:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_Register_$1828_to_t_address_fromStack",
												"nativeSrc": "5519:165:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5589:5:12",
														"nodeType": "YulTypedName",
														"src": "5589:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5596:3:12",
														"nodeType": "YulTypedName",
														"src": "5596:3:12",
														"type": ""
													}
												],
												"src": "5519:165:12"
											},
											{
												"body": {
													"nativeSrc": "5805:141:12",
													"nodeType": "YulBlock",
													"src": "5805:141:12",
													"statements": [
														{
															"nativeSrc": "5815:26:12",
															"nodeType": "YulAssignment",
															"src": "5815:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5827:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5827:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5838:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5838:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5823:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5823:3:12"
																},
																"nativeSrc": "5823:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5823:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5815:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5815:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5912:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5912:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5925:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5925:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5936:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5936:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5921:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5921:3:12"
																		},
																		"nativeSrc": "5921:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5921:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_Register_$1828_to_t_address_fromStack",
																	"nativeSrc": "5851:60:12",
																	"nodeType": "YulIdentifier",
																	"src": "5851:60:12"
																},
																"nativeSrc": "5851:88:12",
																"nodeType": "YulFunctionCall",
																"src": "5851:88:12"
															},
															"nativeSrc": "5851:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "5851:88:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Register_$1828__to_t_address__fromStack_reversed",
												"nativeSrc": "5690:256:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5777:9:12",
														"nodeType": "YulTypedName",
														"src": "5777:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5789:6:12",
														"nodeType": "YulTypedName",
														"src": "5789:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5800:4:12",
														"nodeType": "YulTypedName",
														"src": "5800:4:12",
														"type": ""
													}
												],
												"src": "5690:256:12"
											},
											{
												"body": {
													"nativeSrc": "6026:66:12",
													"nodeType": "YulBlock",
													"src": "6026:66:12",
													"statements": [
														{
															"nativeSrc": "6036:50:12",
															"nodeType": "YulAssignment",
															"src": "6036:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6080:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6080:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6049:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "6049:30:12"
																},
																"nativeSrc": "6049:37:12",
																"nodeType": "YulFunctionCall",
																"src": "6049:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6036:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "6036:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$1030_to_t_address",
												"nativeSrc": "5952:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6006:5:12",
														"nodeType": "YulTypedName",
														"src": "6006:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6016:9:12",
														"nodeType": "YulTypedName",
														"src": "6016:9:12",
														"type": ""
													}
												],
												"src": "5952:140:12"
											},
											{
												"body": {
													"nativeSrc": "6177:80:12",
													"nodeType": "YulBlock",
													"src": "6177:80:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6194:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6194:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6244:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6244:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$1030_to_t_address",
																			"nativeSrc": "6199:44:12",
																			"nodeType": "YulIdentifier",
																			"src": "6199:44:12"
																		},
																		"nativeSrc": "6199:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6199:51:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6187:6:12"
																},
																"nativeSrc": "6187:64:12",
																"nodeType": "YulFunctionCall",
																"src": "6187:64:12"
															},
															"nativeSrc": "6187:64:12",
															"nodeType": "YulExpressionStatement",
															"src": "6187:64:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$1030_to_t_address_fromStack",
												"nativeSrc": "6098:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6165:5:12",
														"nodeType": "YulTypedName",
														"src": "6165:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6172:3:12",
														"nodeType": "YulTypedName",
														"src": "6172:3:12",
														"type": ""
													}
												],
												"src": "6098:159:12"
											},
											{
												"body": {
													"nativeSrc": "6375:138:12",
													"nodeType": "YulBlock",
													"src": "6375:138:12",
													"statements": [
														{
															"nativeSrc": "6385:26:12",
															"nodeType": "YulAssignment",
															"src": "6385:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6397:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6397:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6408:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6408:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6393:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6393:3:12"
																},
																"nativeSrc": "6393:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6393:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6385:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6385:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6479:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6479:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6492:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6492:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6503:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6503:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6488:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6488:3:12"
																		},
																		"nativeSrc": "6488:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6488:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$1030_to_t_address_fromStack",
																	"nativeSrc": "6421:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "6421:57:12"
																},
																"nativeSrc": "6421:85:12",
																"nodeType": "YulFunctionCall",
																"src": "6421:85:12"
															},
															"nativeSrc": "6421:85:12",
															"nodeType": "YulExpressionStatement",
															"src": "6421:85:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$1030__to_t_address__fromStack_reversed",
												"nativeSrc": "6263:250:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6347:9:12",
														"nodeType": "YulTypedName",
														"src": "6347:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6359:6:12",
														"nodeType": "YulTypedName",
														"src": "6359:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6370:4:12",
														"nodeType": "YulTypedName",
														"src": "6370:4:12",
														"type": ""
													}
												],
												"src": "6263:250:12"
											},
											{
												"body": {
													"nativeSrc": "6582:52:12",
													"nodeType": "YulBlock",
													"src": "6582:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6599:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6599:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6621:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6621:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nativeSrc": "6604:16:12",
																			"nodeType": "YulIdentifier",
																			"src": "6604:16:12"
																		},
																		"nativeSrc": "6604:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6604:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6592:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6592:6:12"
																},
																"nativeSrc": "6592:36:12",
																"nodeType": "YulFunctionCall",
																"src": "6592:36:12"
															},
															"nativeSrc": "6592:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "6592:36:12"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nativeSrc": "6519:115:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6570:5:12",
														"nodeType": "YulTypedName",
														"src": "6570:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6577:3:12",
														"nodeType": "YulTypedName",
														"src": "6577:3:12",
														"type": ""
													}
												],
												"src": "6519:115:12"
											},
											{
												"body": {
													"nativeSrc": "6736:122:12",
													"nodeType": "YulBlock",
													"src": "6736:122:12",
													"statements": [
														{
															"nativeSrc": "6746:26:12",
															"nodeType": "YulAssignment",
															"src": "6746:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6758:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6758:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6769:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6769:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6754:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6754:3:12"
																},
																"nativeSrc": "6754:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6754:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6746:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6746:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6824:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6824:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6837:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6837:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6848:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6848:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6833:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6833:3:12"
																		},
																		"nativeSrc": "6833:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6833:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nativeSrc": "6782:41:12",
																	"nodeType": "YulIdentifier",
																	"src": "6782:41:12"
																},
																"nativeSrc": "6782:69:12",
																"nodeType": "YulFunctionCall",
																"src": "6782:69:12"
															},
															"nativeSrc": "6782:69:12",
															"nodeType": "YulExpressionStatement",
															"src": "6782:69:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nativeSrc": "6640:218:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6708:9:12",
														"nodeType": "YulTypedName",
														"src": "6708:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6720:6:12",
														"nodeType": "YulTypedName",
														"src": "6720:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6731:4:12",
														"nodeType": "YulTypedName",
														"src": "6731:4:12",
														"type": ""
													}
												],
												"src": "6640:218:12"
											},
											{
												"body": {
													"nativeSrc": "6929:53:12",
													"nodeType": "YulBlock",
													"src": "6929:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6946:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6946:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6969:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6969:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6951:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "6951:17:12"
																		},
																		"nativeSrc": "6951:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6951:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6939:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6939:6:12"
																},
																"nativeSrc": "6939:37:12",
																"nodeType": "YulFunctionCall",
																"src": "6939:37:12"
															},
															"nativeSrc": "6939:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "6939:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6864:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6917:5:12",
														"nodeType": "YulTypedName",
														"src": "6917:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6924:3:12",
														"nodeType": "YulTypedName",
														"src": "6924:3:12",
														"type": ""
													}
												],
												"src": "6864:118:12"
											},
											{
												"body": {
													"nativeSrc": "7142:288:12",
													"nodeType": "YulBlock",
													"src": "7142:288:12",
													"statements": [
														{
															"nativeSrc": "7152:26:12",
															"nodeType": "YulAssignment",
															"src": "7152:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7164:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7164:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7175:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7175:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7160:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7160:3:12"
																},
																"nativeSrc": "7160:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7160:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7152:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7152:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7232:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7232:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7245:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7245:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7256:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7256:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7241:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7241:3:12"
																		},
																		"nativeSrc": "7241:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7241:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7188:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "7188:43:12"
																},
																"nativeSrc": "7188:71:12",
																"nodeType": "YulFunctionCall",
																"src": "7188:71:12"
															},
															"nativeSrc": "7188:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "7188:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7313:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7313:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7326:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7326:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7337:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7337:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7322:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7322:3:12"
																		},
																		"nativeSrc": "7322:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7322:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7269:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "7269:43:12"
																},
																"nativeSrc": "7269:72:12",
																"nodeType": "YulFunctionCall",
																"src": "7269:72:12"
															},
															"nativeSrc": "7269:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "7269:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7395:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7395:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7408:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7408:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7419:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7419:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7404:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7404:3:12"
																		},
																		"nativeSrc": "7404:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7404:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7351:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "7351:43:12"
																},
																"nativeSrc": "7351:72:12",
																"nodeType": "YulFunctionCall",
																"src": "7351:72:12"
															},
															"nativeSrc": "7351:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "7351:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6988:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7098:9:12",
														"nodeType": "YulTypedName",
														"src": "7098:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7110:6:12",
														"nodeType": "YulTypedName",
														"src": "7110:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7118:6:12",
														"nodeType": "YulTypedName",
														"src": "7118:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7126:6:12",
														"nodeType": "YulTypedName",
														"src": "7126:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7137:4:12",
														"nodeType": "YulTypedName",
														"src": "7137:4:12",
														"type": ""
													}
												],
												"src": "6988:442:12"
											},
											{
												"body": {
													"nativeSrc": "7481:32:12",
													"nodeType": "YulBlock",
													"src": "7481:32:12",
													"statements": [
														{
															"nativeSrc": "7491:16:12",
															"nodeType": "YulAssignment",
															"src": "7491:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "7502:5:12",
																"nodeType": "YulIdentifier",
																"src": "7502:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7491:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "7491:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "7436:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7463:5:12",
														"nodeType": "YulTypedName",
														"src": "7463:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7473:7:12",
														"nodeType": "YulTypedName",
														"src": "7473:7:12",
														"type": ""
													}
												],
												"src": "7436:77:12"
											},
											{
												"body": {
													"nativeSrc": "7562:79:12",
													"nodeType": "YulBlock",
													"src": "7562:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7619:16:12",
																"nodeType": "YulBlock",
																"src": "7619:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7628:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7628:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7631:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7631:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7621:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7621:6:12"
																			},
																			"nativeSrc": "7621:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7621:12:12"
																		},
																		"nativeSrc": "7621:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7621:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7585:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7585:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7610:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7610:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "7592:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "7592:17:12"
																				},
																				"nativeSrc": "7592:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7592:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7582:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7582:2:12"
																		},
																		"nativeSrc": "7582:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7582:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7575:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7575:6:12"
																},
																"nativeSrc": "7575:43:12",
																"nodeType": "YulFunctionCall",
																"src": "7575:43:12"
															},
															"nativeSrc": "7572:63:12",
															"nodeType": "YulIf",
															"src": "7572:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "7519:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7555:5:12",
														"nodeType": "YulTypedName",
														"src": "7555:5:12",
														"type": ""
													}
												],
												"src": "7519:122:12"
											},
											{
												"body": {
													"nativeSrc": "7710:80:12",
													"nodeType": "YulBlock",
													"src": "7710:80:12",
													"statements": [
														{
															"nativeSrc": "7720:22:12",
															"nodeType": "YulAssignment",
															"src": "7720:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7735:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7735:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7729:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7729:5:12"
																},
																"nativeSrc": "7729:13:12",
																"nodeType": "YulFunctionCall",
																"src": "7729:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7720:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7720:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7778:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7778:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "7751:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "7751:26:12"
																},
																"nativeSrc": "7751:33:12",
																"nodeType": "YulFunctionCall",
																"src": "7751:33:12"
															},
															"nativeSrc": "7751:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "7751:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "7647:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7688:6:12",
														"nodeType": "YulTypedName",
														"src": "7688:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7696:3:12",
														"nodeType": "YulTypedName",
														"src": "7696:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7704:5:12",
														"nodeType": "YulTypedName",
														"src": "7704:5:12",
														"type": ""
													}
												],
												"src": "7647:143:12"
											},
											{
												"body": {
													"nativeSrc": "7873:274:12",
													"nodeType": "YulBlock",
													"src": "7873:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7919:83:12",
																"nodeType": "YulBlock",
																"src": "7919:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7921:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7921:77:12"
																			},
																			"nativeSrc": "7921:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7921:79:12"
																		},
																		"nativeSrc": "7921:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7921:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7894:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7894:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7903:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7903:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7890:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7890:3:12"
																		},
																		"nativeSrc": "7890:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7890:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7915:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7915:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7886:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7886:3:12"
																},
																"nativeSrc": "7886:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7886:32:12"
															},
															"nativeSrc": "7883:119:12",
															"nodeType": "YulIf",
															"src": "7883:119:12"
														},
														{
															"nativeSrc": "8012:128:12",
															"nodeType": "YulBlock",
															"src": "8012:128:12",
															"statements": [
																{
																	"nativeSrc": "8027:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8027:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8041:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8041:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8031:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8031:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8056:74:12",
																	"nodeType": "YulAssignment",
																	"src": "8056:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8102:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8102:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8113:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8113:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8098:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8098:3:12"
																				},
																				"nativeSrc": "8098:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8098:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8122:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8122:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "8066:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "8066:31:12"
																		},
																		"nativeSrc": "8066:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8066:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8056:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8056:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "7796:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7843:9:12",
														"nodeType": "YulTypedName",
														"src": "7843:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7854:7:12",
														"nodeType": "YulTypedName",
														"src": "7854:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7866:6:12",
														"nodeType": "YulTypedName",
														"src": "7866:6:12",
														"type": ""
													}
												],
												"src": "7796:351:12"
											},
											{
												"body": {
													"nativeSrc": "8218:53:12",
													"nodeType": "YulBlock",
													"src": "8218:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8235:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8235:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8258:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "8258:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8240:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "8240:17:12"
																		},
																		"nativeSrc": "8240:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8240:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8228:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8228:6:12"
																},
																"nativeSrc": "8228:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8228:37:12"
															},
															"nativeSrc": "8228:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "8228:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "8153:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8206:5:12",
														"nodeType": "YulTypedName",
														"src": "8206:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8213:3:12",
														"nodeType": "YulTypedName",
														"src": "8213:3:12",
														"type": ""
													}
												],
												"src": "8153:118:12"
											},
											{
												"body": {
													"nativeSrc": "8403:206:12",
													"nodeType": "YulBlock",
													"src": "8403:206:12",
													"statements": [
														{
															"nativeSrc": "8413:26:12",
															"nodeType": "YulAssignment",
															"src": "8413:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8425:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8425:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8436:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8436:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8421:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8421:3:12"
																},
																"nativeSrc": "8421:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8421:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8413:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8413:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8493:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8493:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8506:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8506:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8517:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8517:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8502:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8502:3:12"
																		},
																		"nativeSrc": "8502:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8502:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8449:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8449:43:12"
																},
																"nativeSrc": "8449:71:12",
																"nodeType": "YulFunctionCall",
																"src": "8449:71:12"
															},
															"nativeSrc": "8449:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "8449:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8574:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8574:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8587:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8587:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8598:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8598:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:12"
																		},
																		"nativeSrc": "8583:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8530:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8530:43:12"
																},
																"nativeSrc": "8530:72:12",
																"nodeType": "YulFunctionCall",
																"src": "8530:72:12"
															},
															"nativeSrc": "8530:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "8530:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
												"nativeSrc": "8277:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8367:9:12",
														"nodeType": "YulTypedName",
														"src": "8367:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8379:6:12",
														"nodeType": "YulTypedName",
														"src": "8379:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8387:6:12",
														"nodeType": "YulTypedName",
														"src": "8387:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8398:4:12",
														"nodeType": "YulTypedName",
														"src": "8398:4:12",
														"type": ""
													}
												],
												"src": "8277:332:12"
											},
											{
												"body": {
													"nativeSrc": "8643:152:12",
													"nodeType": "YulBlock",
													"src": "8643:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8660:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8660:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8663:77:12",
																		"nodeType": "YulLiteral",
																		"src": "8663:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8653:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8653:6:12"
																},
																"nativeSrc": "8653:88:12",
																"nodeType": "YulFunctionCall",
																"src": "8653:88:12"
															},
															"nativeSrc": "8653:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "8653:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8757:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8757:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8760:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8760:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8750:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8750:6:12"
																},
																"nativeSrc": "8750:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8750:15:12"
															},
															"nativeSrc": "8750:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8750:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8781:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8781:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8784:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8784:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8774:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8774:6:12"
																},
																"nativeSrc": "8774:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8774:15:12"
															},
															"nativeSrc": "8774:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8774:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8615:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "8615:180:12"
											},
											{
												"body": {
													"nativeSrc": "8852:51:12",
													"nodeType": "YulBlock",
													"src": "8852:51:12",
													"statements": [
														{
															"nativeSrc": "8862:34:12",
															"nodeType": "YulAssignment",
															"src": "8862:34:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8887:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8887:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8890:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8890:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8883:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8883:3:12"
																},
																"nativeSrc": "8883:13:12",
																"nodeType": "YulFunctionCall",
																"src": "8883:13:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8862:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "8862:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "8801:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8833:5:12",
														"nodeType": "YulTypedName",
														"src": "8833:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8843:8:12",
														"nodeType": "YulTypedName",
														"src": "8843:8:12",
														"type": ""
													}
												],
												"src": "8801:102:12"
											},
											{
												"body": {
													"nativeSrc": "8982:775:12",
													"nodeType": "YulBlock",
													"src": "8982:775:12",
													"statements": [
														{
															"nativeSrc": "8992:15:12",
															"nodeType": "YulAssignment",
															"src": "8992:15:12",
															"value": {
																"name": "_power",
																"nativeSrc": "9001:6:12",
																"nodeType": "YulIdentifier",
																"src": "9001:6:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8992:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8992:5:12"
																}
															]
														},
														{
															"nativeSrc": "9016:14:12",
															"nodeType": "YulAssignment",
															"src": "9016:14:12",
															"value": {
																"name": "_base",
																"nativeSrc": "9025:5:12",
																"nodeType": "YulIdentifier",
																"src": "9025:5:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9016:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9016:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9074:677:12",
																"nodeType": "YulBlock",
																"src": "9074:677:12",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "9162:22:12",
																			"nodeType": "YulBlock",
																			"src": "9162:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9164:16:12",
																							"nodeType": "YulIdentifier",
																							"src": "9164:16:12"
																						},
																						"nativeSrc": "9164:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "9164:18:12"
																					},
																					"nativeSrc": "9164:18:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "9164:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9140:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "9140:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "9150:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "9150:3:12"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "9155:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "9155:4:12"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "9146:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "9146:3:12"
																					},
																					"nativeSrc": "9146:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9146:14:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9137:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "9137:2:12"
																			},
																			"nativeSrc": "9137:24:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9137:24:12"
																		},
																		"nativeSrc": "9134:50:12",
																		"nodeType": "YulIf",
																		"src": "9134:50:12"
																	},
																	{
																		"body": {
																			"nativeSrc": "9229:419:12",
																			"nodeType": "YulBlock",
																			"src": "9229:419:12",
																			"statements": [
																				{
																					"nativeSrc": "9609:25:12",
																					"nodeType": "YulAssignment",
																					"src": "9609:25:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "9622:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "9622:5:12"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "9629:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "9629:4:12"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "9618:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "9618:3:12"
																						},
																						"nativeSrc": "9618:16:12",
																						"nodeType": "YulFunctionCall",
																						"src": "9618:16:12"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "9609:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "9609:5:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9204:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "9204:8:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9214:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9214:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9200:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9200:3:12"
																			},
																			"nativeSrc": "9200:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9200:16:12"
																		},
																		"nativeSrc": "9197:451:12",
																		"nodeType": "YulIf",
																		"src": "9197:451:12"
																	},
																	{
																		"nativeSrc": "9661:23:12",
																		"nodeType": "YulAssignment",
																		"src": "9661:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9673:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "9673:4:12"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "9679:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "9679:4:12"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "9669:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9669:3:12"
																			},
																			"nativeSrc": "9669:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9669:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "9661:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9661:4:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9697:44:12",
																		"nodeType": "YulAssignment",
																		"src": "9697:44:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9732:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "9732:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "9709:22:12",
																				"nodeType": "YulIdentifier",
																				"src": "9709:22:12"
																			},
																			"nativeSrc": "9709:32:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9709:32:12"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "9697:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "9697:8:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9050:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "9050:8:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9060:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9060:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9047:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9047:2:12"
																},
																"nativeSrc": "9047:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9047:15:12"
															},
															"nativeSrc": "9039:712:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9063:2:12",
																"nodeType": "YulBlock",
																"src": "9063:2:12",
																"statements": []
															},
															"pre": {
																"nativeSrc": "9043:3:12",
																"nodeType": "YulBlock",
																"src": "9043:3:12",
																"statements": []
															},
															"src": "9039:712:12"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "8909:848:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "8937:6:12",
														"nodeType": "YulTypedName",
														"src": "8937:6:12",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "8945:5:12",
														"nodeType": "YulTypedName",
														"src": "8945:5:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8952:8:12",
														"nodeType": "YulTypedName",
														"src": "8952:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8962:3:12",
														"nodeType": "YulTypedName",
														"src": "8962:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8970:5:12",
														"nodeType": "YulTypedName",
														"src": "8970:5:12",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "8977:4:12",
														"nodeType": "YulTypedName",
														"src": "8977:4:12",
														"type": ""
													}
												],
												"src": "8909:848:12"
											},
											{
												"body": {
													"nativeSrc": "9823:1013:12",
													"nodeType": "YulBlock",
													"src": "9823:1013:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10018:20:12",
																"nodeType": "YulBlock",
																"src": "10018:20:12",
																"statements": [
																	{
																		"nativeSrc": "10020:10:12",
																		"nodeType": "YulAssignment",
																		"src": "10020:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10029:1:12",
																			"nodeType": "YulLiteral",
																			"src": "10029:1:12",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10020:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10020:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10031:5:12",
																		"nodeType": "YulLeave",
																		"src": "10031:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10008:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "10008:8:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10001:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10001:6:12"
																},
																"nativeSrc": "10001:16:12",
																"nodeType": "YulFunctionCall",
																"src": "10001:16:12"
															},
															"nativeSrc": "9998:40:12",
															"nodeType": "YulIf",
															"src": "9998:40:12"
														},
														{
															"body": {
																"nativeSrc": "10063:20:12",
																"nodeType": "YulBlock",
																"src": "10063:20:12",
																"statements": [
																	{
																		"nativeSrc": "10065:10:12",
																		"nodeType": "YulAssignment",
																		"src": "10065:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10074:1:12",
																			"nodeType": "YulLiteral",
																			"src": "10074:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10065:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10065:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10076:5:12",
																		"nodeType": "YulLeave",
																		"src": "10076:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10057:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10057:4:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10050:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10050:6:12"
																},
																"nativeSrc": "10050:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10050:12:12"
															},
															"nativeSrc": "10047:36:12",
															"nodeType": "YulIf",
															"src": "10047:36:12"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10193:20:12",
																		"nodeType": "YulBlock",
																		"src": "10193:20:12",
																		"statements": [
																			{
																				"nativeSrc": "10195:10:12",
																				"nodeType": "YulAssignment",
																				"src": "10195:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10204:1:12",
																					"nodeType": "YulLiteral",
																					"src": "10204:1:12",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10195:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "10195:5:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10206:5:12",
																				"nodeType": "YulLeave",
																				"src": "10206:5:12"
																			}
																		]
																	},
																	"nativeSrc": "10186:27:12",
																	"nodeType": "YulCase",
																	"src": "10186:27:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10191:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10191:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10237:176:12",
																		"nodeType": "YulBlock",
																		"src": "10237:176:12",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "10272:22:12",
																					"nodeType": "YulBlock",
																					"src": "10272:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10274:16:12",
																									"nodeType": "YulIdentifier",
																									"src": "10274:16:12"
																								},
																								"nativeSrc": "10274:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "10274:18:12"
																							},
																							"nativeSrc": "10274:18:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "10274:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "10257:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "10257:8:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10267:3:12",
																							"nodeType": "YulLiteral",
																							"src": "10267:3:12",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10254:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "10254:2:12"
																					},
																					"nativeSrc": "10254:17:12",
																					"nodeType": "YulFunctionCall",
																					"src": "10254:17:12"
																				},
																				"nativeSrc": "10251:43:12",
																				"nodeType": "YulIf",
																				"src": "10251:43:12"
																			},
																			{
																				"nativeSrc": "10307:25:12",
																				"nodeType": "YulAssignment",
																				"src": "10307:25:12",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10320:1:12",
																							"nodeType": "YulLiteral",
																							"src": "10320:1:12",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "10323:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "10323:8:12"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "10316:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "10316:3:12"
																					},
																					"nativeSrc": "10316:16:12",
																					"nodeType": "YulFunctionCall",
																					"src": "10316:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10307:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "10307:5:12"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10363:22:12",
																					"nodeType": "YulBlock",
																					"src": "10363:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10365:16:12",
																									"nodeType": "YulIdentifier",
																									"src": "10365:16:12"
																								},
																								"nativeSrc": "10365:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "10365:18:12"
																							},
																							"nativeSrc": "10365:18:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "10365:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "10351:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "10351:5:12"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "10358:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "10358:3:12"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10348:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "10348:2:12"
																					},
																					"nativeSrc": "10348:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "10348:14:12"
																				},
																				"nativeSrc": "10345:40:12",
																				"nodeType": "YulIf",
																				"src": "10345:40:12"
																			},
																			{
																				"nativeSrc": "10398:5:12",
																				"nodeType": "YulLeave",
																				"src": "10398:5:12"
																			}
																		]
																	},
																	"nativeSrc": "10222:191:12",
																	"nodeType": "YulCase",
																	"src": "10222:191:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10227:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10227:1:12",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "10143:4:12",
																"nodeType": "YulIdentifier",
																"src": "10143:4:12"
															},
															"nativeSrc": "10136:277:12",
															"nodeType": "YulSwitch",
															"src": "10136:277:12"
														},
														{
															"body": {
																"nativeSrc": "10545:123:12",
																"nodeType": "YulBlock",
																"src": "10545:123:12",
																"statements": [
																	{
																		"nativeSrc": "10559:28:12",
																		"nodeType": "YulAssignment",
																		"src": "10559:28:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10572:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "10572:4:12"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "10578:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "10578:8:12"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "10568:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10568:3:12"
																			},
																			"nativeSrc": "10568:19:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10568:19:12"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10559:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10559:5:12"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "10618:22:12",
																			"nodeType": "YulBlock",
																			"src": "10618:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "10620:16:12",
																							"nodeType": "YulIdentifier",
																							"src": "10620:16:12"
																						},
																						"nativeSrc": "10620:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "10620:18:12"
																					},
																					"nativeSrc": "10620:18:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "10620:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "10606:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "10606:5:12"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "10613:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10613:3:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10603:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "10603:2:12"
																			},
																			"nativeSrc": "10603:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10603:14:12"
																		},
																		"nativeSrc": "10600:40:12",
																		"nodeType": "YulIf",
																		"src": "10600:40:12"
																	},
																	{
																		"nativeSrc": "10653:5:12",
																		"nodeType": "YulLeave",
																		"src": "10653:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10448:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "10448:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10454:2:12",
																						"nodeType": "YulLiteral",
																						"src": "10454:2:12",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10445:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "10445:2:12"
																				},
																				"nativeSrc": "10445:12:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10445:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10462:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "10462:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10472:2:12",
																						"nodeType": "YulLiteral",
																						"src": "10472:2:12",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10459:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "10459:2:12"
																				},
																				"nativeSrc": "10459:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10459:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10441:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10441:3:12"
																		},
																		"nativeSrc": "10441:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10441:35:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10497:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "10497:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10503:3:12",
																						"nodeType": "YulLiteral",
																						"src": "10503:3:12",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10494:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "10494:2:12"
																				},
																				"nativeSrc": "10494:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10494:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10512:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "10512:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10522:2:12",
																						"nodeType": "YulLiteral",
																						"src": "10522:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10509:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "10509:2:12"
																				},
																				"nativeSrc": "10509:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10509:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10490:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10490:3:12"
																		},
																		"nativeSrc": "10490:36:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10490:36:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10425:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10425:2:12"
																},
																"nativeSrc": "10425:111:12",
																"nodeType": "YulFunctionCall",
																"src": "10425:111:12"
															},
															"nativeSrc": "10422:246:12",
															"nodeType": "YulIf",
															"src": "10422:246:12"
														},
														{
															"nativeSrc": "10678:57:12",
															"nodeType": "YulAssignment",
															"src": "10678:57:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10712:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10712:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10715:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10715:4:12"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10721:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "10721:8:12"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "10731:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10731:3:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "10693:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "10693:18:12"
																},
																"nativeSrc": "10693:42:12",
																"nodeType": "YulFunctionCall",
																"src": "10693:42:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10678:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10678:5:12"
																},
																{
																	"name": "base",
																	"nativeSrc": "10685:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10685:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10774:22:12",
																"nodeType": "YulBlock",
																"src": "10774:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10776:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10776:16:12"
																			},
																			"nativeSrc": "10776:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10776:18:12"
																		},
																		"nativeSrc": "10776:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10776:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10751:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10751:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "10762:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10762:3:12"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "10767:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10767:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "10758:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10758:3:12"
																		},
																		"nativeSrc": "10758:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10758:14:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10748:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10748:2:12"
																},
																"nativeSrc": "10748:25:12",
																"nodeType": "YulFunctionCall",
																"src": "10748:25:12"
															},
															"nativeSrc": "10745:51:12",
															"nodeType": "YulIf",
															"src": "10745:51:12"
														},
														{
															"nativeSrc": "10805:25:12",
															"nodeType": "YulAssignment",
															"src": "10805:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10818:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10818:5:12"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10825:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10825:4:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10814:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10814:3:12"
																},
																"nativeSrc": "10814:16:12",
																"nodeType": "YulFunctionCall",
																"src": "10814:16:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10805:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10805:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "9763:1073:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9793:4:12",
														"nodeType": "YulTypedName",
														"src": "9793:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9799:8:12",
														"nodeType": "YulTypedName",
														"src": "9799:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9809:3:12",
														"nodeType": "YulTypedName",
														"src": "9809:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9817:5:12",
														"nodeType": "YulTypedName",
														"src": "9817:5:12",
														"type": ""
													}
												],
												"src": "9763:1073:12"
											},
											{
												"body": {
													"nativeSrc": "10907:218:12",
													"nodeType": "YulBlock",
													"src": "10907:218:12",
													"statements": [
														{
															"nativeSrc": "10917:31:12",
															"nodeType": "YulAssignment",
															"src": "10917:31:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10943:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10943:4:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10925:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10925:17:12"
																},
																"nativeSrc": "10925:23:12",
																"nodeType": "YulFunctionCall",
																"src": "10925:23:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10917:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10917:4:12"
																}
															]
														},
														{
															"nativeSrc": "10957:38:12",
															"nodeType": "YulAssignment",
															"src": "10957:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10986:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "10986:8:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nativeSrc": "10969:16:12",
																	"nodeType": "YulIdentifier",
																	"src": "10969:16:12"
																},
																"nativeSrc": "10969:26:12",
																"nodeType": "YulFunctionCall",
																"src": "10969:26:12"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "10957:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "10957:8:12"
																}
															]
														},
														{
															"nativeSrc": "11005:113:12",
															"nodeType": "YulAssignment",
															"src": "11005:113:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11035:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11035:4:12"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11041:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "11041:8:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11051:66:12",
																		"nodeType": "YulLiteral",
																		"src": "11051:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "11014:20:12",
																	"nodeType": "YulIdentifier",
																	"src": "11014:20:12"
																},
																"nativeSrc": "11014:104:12",
																"nodeType": "YulFunctionCall",
																"src": "11014:104:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11005:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11005:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint32",
												"nativeSrc": "10842:283:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10882:4:12",
														"nodeType": "YulTypedName",
														"src": "10882:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10888:8:12",
														"nodeType": "YulTypedName",
														"src": "10888:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10901:5:12",
														"nodeType": "YulTypedName",
														"src": "10901:5:12",
														"type": ""
													}
												],
												"src": "10842:283:12"
											},
											{
												"body": {
													"nativeSrc": "11176:149:12",
													"nodeType": "YulBlock",
													"src": "11176:149:12",
													"statements": [
														{
															"nativeSrc": "11186:25:12",
															"nodeType": "YulAssignment",
															"src": "11186:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11209:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11209:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11191:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11191:17:12"
																},
																"nativeSrc": "11191:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11191:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11186:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11186:1:12"
																}
															]
														},
														{
															"nativeSrc": "11220:25:12",
															"nodeType": "YulAssignment",
															"src": "11220:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11243:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11243:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11225:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11225:17:12"
																},
																"nativeSrc": "11225:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11225:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11220:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11220:1:12"
																}
															]
														},
														{
															"nativeSrc": "11254:17:12",
															"nodeType": "YulAssignment",
															"src": "11254:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11266:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11266:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11269:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11269:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11262:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11262:3:12"
																},
																"nativeSrc": "11262:9:12",
																"nodeType": "YulFunctionCall",
																"src": "11262:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11254:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11254:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11296:22:12",
																"nodeType": "YulBlock",
																"src": "11296:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11298:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "11298:16:12"
																			},
																			"nativeSrc": "11298:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11298:18:12"
																		},
																		"nativeSrc": "11298:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11298:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11287:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11287:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11293:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11293:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11284:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "11284:2:12"
																},
																"nativeSrc": "11284:11:12",
																"nodeType": "YulFunctionCall",
																"src": "11284:11:12"
															},
															"nativeSrc": "11281:37:12",
															"nodeType": "YulIf",
															"src": "11281:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11131:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11162:1:12",
														"nodeType": "YulTypedName",
														"src": "11162:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11165:1:12",
														"nodeType": "YulTypedName",
														"src": "11165:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11171:4:12",
														"nodeType": "YulTypedName",
														"src": "11171:4:12",
														"type": ""
													}
												],
												"src": "11131:194:12"
											},
											{
												"body": {
													"nativeSrc": "11379:362:12",
													"nodeType": "YulBlock",
													"src": "11379:362:12",
													"statements": [
														{
															"nativeSrc": "11389:25:12",
															"nodeType": "YulAssignment",
															"src": "11389:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11412:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11412:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11394:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11394:17:12"
																},
																"nativeSrc": "11394:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11394:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11389:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11389:1:12"
																}
															]
														},
														{
															"nativeSrc": "11423:25:12",
															"nodeType": "YulAssignment",
															"src": "11423:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11446:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11446:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11428:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11428:17:12"
																},
																"nativeSrc": "11428:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11428:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11423:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11423:1:12"
																}
															]
														},
														{
															"nativeSrc": "11457:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11457:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11480:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11480:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11483:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11483:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11476:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11476:3:12"
																},
																"nativeSrc": "11476:9:12",
																"nodeType": "YulFunctionCall",
																"src": "11476:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11461:11:12",
																	"nodeType": "YulTypedName",
																	"src": "11461:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11494:41:12",
															"nodeType": "YulAssignment",
															"src": "11494:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11523:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "11523:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11505:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11505:17:12"
																},
																"nativeSrc": "11505:30:12",
																"nodeType": "YulFunctionCall",
																"src": "11505:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11494:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "11494:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11712:22:12",
																"nodeType": "YulBlock",
																"src": "11712:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11714:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "11714:16:12"
																			},
																			"nativeSrc": "11714:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11714:18:12"
																		},
																		"nativeSrc": "11714:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11714:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11645:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "11645:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11638:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "11638:6:12"
																				},
																				"nativeSrc": "11638:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11638:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11668:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "11668:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11675:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "11675:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11684:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "11684:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11671:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "11671:3:12"
																						},
																						"nativeSrc": "11671:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "11671:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11665:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "11665:2:12"
																				},
																				"nativeSrc": "11665:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11665:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11618:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "11618:2:12"
																		},
																		"nativeSrc": "11618:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11618:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11598:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11598:6:12"
																},
																"nativeSrc": "11598:113:12",
																"nodeType": "YulFunctionCall",
																"src": "11598:113:12"
															},
															"nativeSrc": "11595:139:12",
															"nodeType": "YulIf",
															"src": "11595:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11331:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11362:1:12",
														"nodeType": "YulTypedName",
														"src": "11362:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11365:1:12",
														"nodeType": "YulTypedName",
														"src": "11365:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11371:7:12",
														"nodeType": "YulTypedName",
														"src": "11371:7:12",
														"type": ""
													}
												],
												"src": "11331:410:12"
											},
											{
												"body": {
													"nativeSrc": "11775:152:12",
													"nodeType": "YulBlock",
													"src": "11775:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11792:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11792:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11795:77:12",
																		"nodeType": "YulLiteral",
																		"src": "11795:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11785:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11785:6:12"
																},
																"nativeSrc": "11785:88:12",
																"nodeType": "YulFunctionCall",
																"src": "11785:88:12"
															},
															"nativeSrc": "11785:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "11785:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11889:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11889:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11892:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11892:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11882:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11882:6:12"
																},
																"nativeSrc": "11882:15:12",
																"nodeType": "YulFunctionCall",
																"src": "11882:15:12"
															},
															"nativeSrc": "11882:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "11882:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11913:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11913:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11916:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11916:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11906:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11906:6:12"
																},
																"nativeSrc": "11906:15:12",
																"nodeType": "YulFunctionCall",
																"src": "11906:15:12"
															},
															"nativeSrc": "11906:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "11906:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11747:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "11747:180:12"
											},
											{
												"body": {
													"nativeSrc": "11975:143:12",
													"nodeType": "YulBlock",
													"src": "11975:143:12",
													"statements": [
														{
															"nativeSrc": "11985:25:12",
															"nodeType": "YulAssignment",
															"src": "11985:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12008:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12008:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11990:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11990:17:12"
																},
																"nativeSrc": "11990:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11990:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11985:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11985:1:12"
																}
															]
														},
														{
															"nativeSrc": "12019:25:12",
															"nodeType": "YulAssignment",
															"src": "12019:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12042:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12042:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12024:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "12024:17:12"
																},
																"nativeSrc": "12024:20:12",
																"nodeType": "YulFunctionCall",
																"src": "12024:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12019:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "12019:1:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12066:22:12",
																"nodeType": "YulBlock",
																"src": "12066:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12068:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "12068:16:12"
																			},
																			"nativeSrc": "12068:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12068:18:12"
																		},
																		"nativeSrc": "12068:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12068:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12063:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12063:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12056:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12056:6:12"
																},
																"nativeSrc": "12056:9:12",
																"nodeType": "YulFunctionCall",
																"src": "12056:9:12"
															},
															"nativeSrc": "12053:35:12",
															"nodeType": "YulIf",
															"src": "12053:35:12"
														},
														{
															"nativeSrc": "12098:14:12",
															"nodeType": "YulAssignment",
															"src": "12098:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12107:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12107:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12110:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12110:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12103:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12103:3:12"
																},
																"nativeSrc": "12103:9:12",
																"nodeType": "YulFunctionCall",
																"src": "12103:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12098:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "12098:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11933:185:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11964:1:12",
														"nodeType": "YulTypedName",
														"src": "11964:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11967:1:12",
														"nodeType": "YulTypedName",
														"src": "11967:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11973:1:12",
														"nodeType": "YulTypedName",
														"src": "11973:1:12",
														"type": ""
													}
												],
												"src": "11933:185:12"
											},
											{
												"body": {
													"nativeSrc": "12168:147:12",
													"nodeType": "YulBlock",
													"src": "12168:147:12",
													"statements": [
														{
															"nativeSrc": "12178:25:12",
															"nodeType": "YulAssignment",
															"src": "12178:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12201:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12201:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12183:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "12183:17:12"
																},
																"nativeSrc": "12183:20:12",
																"nodeType": "YulFunctionCall",
																"src": "12183:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12178:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "12178:1:12"
																}
															]
														},
														{
															"nativeSrc": "12212:25:12",
															"nodeType": "YulAssignment",
															"src": "12212:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12235:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12235:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12217:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "12217:17:12"
																},
																"nativeSrc": "12217:20:12",
																"nodeType": "YulFunctionCall",
																"src": "12217:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12212:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "12212:1:12"
																}
															]
														},
														{
															"nativeSrc": "12246:16:12",
															"nodeType": "YulAssignment",
															"src": "12246:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12257:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12257:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12260:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12260:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12253:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12253:3:12"
																},
																"nativeSrc": "12253:9:12",
																"nodeType": "YulFunctionCall",
																"src": "12253:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12246:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12246:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12286:22:12",
																"nodeType": "YulBlock",
																"src": "12286:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12288:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "12288:16:12"
																			},
																			"nativeSrc": "12288:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12288:18:12"
																		},
																		"nativeSrc": "12288:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12288:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12278:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12278:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12281:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12281:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12275:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12275:2:12"
																},
																"nativeSrc": "12275:10:12",
																"nodeType": "YulFunctionCall",
																"src": "12275:10:12"
															},
															"nativeSrc": "12272:36:12",
															"nodeType": "YulIf",
															"src": "12272:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12124:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12155:1:12",
														"nodeType": "YulTypedName",
														"src": "12155:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12158:1:12",
														"nodeType": "YulTypedName",
														"src": "12158:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12164:3:12",
														"nodeType": "YulTypedName",
														"src": "12164:3:12",
														"type": ""
													}
												],
												"src": "12124:191:12"
											},
											{
												"body": {
													"nativeSrc": "12363:133:12",
													"nodeType": "YulBlock",
													"src": "12363:133:12",
													"statements": [
														{
															"nativeSrc": "12373:32:12",
															"nodeType": "YulAssignment",
															"src": "12373:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12399:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12399:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nativeSrc": "12382:16:12",
																	"nodeType": "YulIdentifier",
																	"src": "12382:16:12"
																},
																"nativeSrc": "12382:23:12",
																"nodeType": "YulFunctionCall",
																"src": "12382:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12373:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12373:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12439:22:12",
																"nodeType": "YulBlock",
																"src": "12439:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12441:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "12441:16:12"
																			},
																			"nativeSrc": "12441:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12441:18:12"
																		},
																		"nativeSrc": "12441:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12441:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12420:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12420:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12427:10:12",
																		"nodeType": "YulLiteral",
																		"src": "12427:10:12",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12417:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12417:2:12"
																},
																"nativeSrc": "12417:21:12",
																"nodeType": "YulFunctionCall",
																"src": "12417:21:12"
															},
															"nativeSrc": "12414:47:12",
															"nodeType": "YulIf",
															"src": "12414:47:12"
														},
														{
															"nativeSrc": "12470:20:12",
															"nodeType": "YulAssignment",
															"src": "12470:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12481:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12481:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12488:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12488:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12477:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12477:3:12"
																},
																"nativeSrc": "12477:13:12",
																"nodeType": "YulFunctionCall",
																"src": "12477:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12470:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12470:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint32",
												"nativeSrc": "12321:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12349:5:12",
														"nodeType": "YulTypedName",
														"src": "12349:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12359:3:12",
														"nodeType": "YulTypedName",
														"src": "12359:3:12",
														"type": ""
													}
												],
												"src": "12321:175:12"
											},
											{
												"body": {
													"nativeSrc": "12628:206:12",
													"nodeType": "YulBlock",
													"src": "12628:206:12",
													"statements": [
														{
															"nativeSrc": "12638:26:12",
															"nodeType": "YulAssignment",
															"src": "12638:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12650:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12650:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12661:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12661:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12646:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12646:3:12"
																},
																"nativeSrc": "12646:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12646:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12638:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12638:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12718:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12718:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12731:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12731:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12742:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12742:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12727:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12727:3:12"
																		},
																		"nativeSrc": "12727:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12727:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12674:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12674:43:12"
																},
																"nativeSrc": "12674:71:12",
																"nodeType": "YulFunctionCall",
																"src": "12674:71:12"
															},
															"nativeSrc": "12674:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "12674:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12799:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12799:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12812:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12812:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12823:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12823:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12808:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12808:3:12"
																		},
																		"nativeSrc": "12808:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12808:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12755:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12755:43:12"
																},
																"nativeSrc": "12755:72:12",
																"nodeType": "YulFunctionCall",
																"src": "12755:72:12"
															},
															"nativeSrc": "12755:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "12755:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12502:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12592:9:12",
														"nodeType": "YulTypedName",
														"src": "12592:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12604:6:12",
														"nodeType": "YulTypedName",
														"src": "12604:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12612:6:12",
														"nodeType": "YulTypedName",
														"src": "12612:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12623:4:12",
														"nodeType": "YulTypedName",
														"src": "12623:4:12",
														"type": ""
													}
												],
												"src": "12502:332:12"
											},
											{
												"body": {
													"nativeSrc": "12966:206:12",
													"nodeType": "YulBlock",
													"src": "12966:206:12",
													"statements": [
														{
															"nativeSrc": "12976:26:12",
															"nodeType": "YulAssignment",
															"src": "12976:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12988:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12988:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12999:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12999:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12984:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12984:3:12"
																},
																"nativeSrc": "12984:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12984:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12976:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12976:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13056:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13056:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13069:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13069:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13080:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13080:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13065:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13065:3:12"
																		},
																		"nativeSrc": "13065:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13065:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13012:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "13012:43:12"
																},
																"nativeSrc": "13012:71:12",
																"nodeType": "YulFunctionCall",
																"src": "13012:71:12"
															},
															"nativeSrc": "13012:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "13012:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13137:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13137:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13150:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13150:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13161:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13161:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13146:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13146:3:12"
																		},
																		"nativeSrc": "13146:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13146:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13093:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "13093:43:12"
																},
																"nativeSrc": "13093:72:12",
																"nodeType": "YulFunctionCall",
																"src": "13093:72:12"
															},
															"nativeSrc": "13093:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "13093:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12840:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12930:9:12",
														"nodeType": "YulTypedName",
														"src": "12930:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12942:6:12",
														"nodeType": "YulTypedName",
														"src": "12942:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12950:6:12",
														"nodeType": "YulTypedName",
														"src": "12950:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12961:4:12",
														"nodeType": "YulTypedName",
														"src": "12961:4:12",
														"type": ""
													}
												],
												"src": "12840:332:12"
											},
											{
												"body": {
													"nativeSrc": "13220:48:12",
													"nodeType": "YulBlock",
													"src": "13220:48:12",
													"statements": [
														{
															"nativeSrc": "13230:32:12",
															"nodeType": "YulAssignment",
															"src": "13230:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13255:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "13255:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "13248:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "13248:6:12"
																		},
																		"nativeSrc": "13248:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13248:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13241:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13241:6:12"
																},
																"nativeSrc": "13241:21:12",
																"nodeType": "YulFunctionCall",
																"src": "13241:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13230:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "13230:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "13178:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13202:5:12",
														"nodeType": "YulTypedName",
														"src": "13202:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13212:7:12",
														"nodeType": "YulTypedName",
														"src": "13212:7:12",
														"type": ""
													}
												],
												"src": "13178:90:12"
											},
											{
												"body": {
													"nativeSrc": "13314:76:12",
													"nodeType": "YulBlock",
													"src": "13314:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "13368:16:12",
																"nodeType": "YulBlock",
																"src": "13368:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13377:1:12",
																					"nodeType": "YulLiteral",
																					"src": "13377:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13380:1:12",
																					"nodeType": "YulLiteral",
																					"src": "13380:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13370:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13370:6:12"
																			},
																			"nativeSrc": "13370:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13370:12:12"
																		},
																		"nativeSrc": "13370:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13370:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13337:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "13337:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13359:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "13359:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "13344:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "13344:14:12"
																				},
																				"nativeSrc": "13344:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13344:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13334:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "13334:2:12"
																		},
																		"nativeSrc": "13334:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13334:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13327:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13327:6:12"
																},
																"nativeSrc": "13327:40:12",
																"nodeType": "YulFunctionCall",
																"src": "13327:40:12"
															},
															"nativeSrc": "13324:60:12",
															"nodeType": "YulIf",
															"src": "13324:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13274:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13307:5:12",
														"nodeType": "YulTypedName",
														"src": "13307:5:12",
														"type": ""
													}
												],
												"src": "13274:116:12"
											},
											{
												"body": {
													"nativeSrc": "13456:77:12",
													"nodeType": "YulBlock",
													"src": "13456:77:12",
													"statements": [
														{
															"nativeSrc": "13466:22:12",
															"nodeType": "YulAssignment",
															"src": "13466:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13481:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13481:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13475:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13475:5:12"
																},
																"nativeSrc": "13475:13:12",
																"nodeType": "YulFunctionCall",
																"src": "13475:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13466:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13466:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13521:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13521:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13497:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "13497:23:12"
																},
																"nativeSrc": "13497:30:12",
																"nodeType": "YulFunctionCall",
																"src": "13497:30:12"
															},
															"nativeSrc": "13497:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "13497:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "13396:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13434:6:12",
														"nodeType": "YulTypedName",
														"src": "13434:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13442:3:12",
														"nodeType": "YulTypedName",
														"src": "13442:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13450:5:12",
														"nodeType": "YulTypedName",
														"src": "13450:5:12",
														"type": ""
													}
												],
												"src": "13396:137:12"
											},
											{
												"body": {
													"nativeSrc": "13613:271:12",
													"nodeType": "YulBlock",
													"src": "13613:271:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "13659:83:12",
																"nodeType": "YulBlock",
																"src": "13659:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13661:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "13661:77:12"
																			},
																			"nativeSrc": "13661:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13661:79:12"
																		},
																		"nativeSrc": "13661:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13661:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13634:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13634:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13643:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13643:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13630:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13630:3:12"
																		},
																		"nativeSrc": "13630:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13630:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13655:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13655:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13626:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13626:3:12"
																},
																"nativeSrc": "13626:32:12",
																"nodeType": "YulFunctionCall",
																"src": "13626:32:12"
															},
															"nativeSrc": "13623:119:12",
															"nodeType": "YulIf",
															"src": "13623:119:12"
														},
														{
															"nativeSrc": "13752:125:12",
															"nodeType": "YulBlock",
															"src": "13752:125:12",
															"statements": [
																{
																	"nativeSrc": "13767:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13767:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13781:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13781:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13771:6:12",
																			"nodeType": "YulTypedName",
																			"src": "13771:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13796:71:12",
																	"nodeType": "YulAssignment",
																	"src": "13796:71:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13839:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "13839:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13850:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "13850:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13835:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13835:3:12"
																				},
																				"nativeSrc": "13835:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13835:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13859:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13859:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "13806:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "13806:28:12"
																		},
																		"nativeSrc": "13806:61:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13806:61:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13796:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "13796:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "13539:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13583:9:12",
														"nodeType": "YulTypedName",
														"src": "13583:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13594:7:12",
														"nodeType": "YulTypedName",
														"src": "13594:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13606:6:12",
														"nodeType": "YulTypedName",
														"src": "13606:6:12",
														"type": ""
													}
												],
												"src": "13539:345:12"
											},
											{
												"body": {
													"nativeSrc": "13934:156:12",
													"nodeType": "YulBlock",
													"src": "13934:156:12",
													"statements": [
														{
															"nativeSrc": "13944:24:12",
															"nodeType": "YulAssignment",
															"src": "13944:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13966:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13966:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nativeSrc": "13949:16:12",
																	"nodeType": "YulIdentifier",
																	"src": "13949:16:12"
																},
																"nativeSrc": "13949:19:12",
																"nodeType": "YulFunctionCall",
																"src": "13949:19:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13944:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "13944:1:12"
																}
															]
														},
														{
															"nativeSrc": "13977:24:12",
															"nodeType": "YulAssignment",
															"src": "13977:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13999:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13999:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nativeSrc": "13982:16:12",
																	"nodeType": "YulIdentifier",
																	"src": "13982:16:12"
																},
																"nativeSrc": "13982:19:12",
																"nodeType": "YulFunctionCall",
																"src": "13982:19:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13977:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "13977:1:12"
																}
															]
														},
														{
															"nativeSrc": "14010:17:12",
															"nodeType": "YulAssignment",
															"src": "14010:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14022:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14022:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14025:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14025:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14018:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14018:3:12"
																},
																"nativeSrc": "14018:9:12",
																"nodeType": "YulFunctionCall",
																"src": "14018:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14010:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14010:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14061:22:12",
																"nodeType": "YulBlock",
																"src": "14061:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14063:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "14063:16:12"
																			},
																			"nativeSrc": "14063:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14063:18:12"
																		},
																		"nativeSrc": "14063:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "14063:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14043:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14043:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14049:10:12",
																		"nodeType": "YulLiteral",
																		"src": "14049:10:12",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14040:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "14040:2:12"
																},
																"nativeSrc": "14040:20:12",
																"nodeType": "YulFunctionCall",
																"src": "14040:20:12"
															},
															"nativeSrc": "14037:46:12",
															"nodeType": "YulIf",
															"src": "14037:46:12"
														}
													]
												},
												"name": "checked_sub_t_uint32",
												"nativeSrc": "13890:200:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13920:1:12",
														"nodeType": "YulTypedName",
														"src": "13920:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13923:1:12",
														"nodeType": "YulTypedName",
														"src": "13923:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13929:4:12",
														"nodeType": "YulTypedName",
														"src": "13929:4:12",
														"type": ""
													}
												],
												"src": "13890:200:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct IFomo3d.HistoryInfo -> struct IFomo3d.HistoryInfo\n    function abi_encode_t_struct$_HistoryInfo_$1234_memory_ptr_to_t_struct$_HistoryInfo_$1234_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // value\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_HistoryInfo_$1234_memory_ptr__to_t_struct$_HistoryInfo_$1234_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_struct$_HistoryInfo_$1234_memory_ptr_to_t_struct$_HistoryInfo_$1234_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Register_$1828_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Register_$1828_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Register_$1828_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Register_$1828__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Register_$1828_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ERC20_$1030_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$1030_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$1030_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$1030__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$1030_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint32(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint32(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint32(value) -> ret {\n        value := cleanup_t_uint32(value)\n        if eq(value, 0xffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint32(x, y) -> diff {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffff) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610135575f3560e01c806376809ce3116100b6578063c884ef831161007a578063c884ef8314610351578063cdf033f314610381578063d4c3eea01461039f578063eb46260e146103bd578063eeda71d5146103ed578063f54f0a8d1461041d57610135565b806376809ce3146102975780637a19a488146102b55780638233fbcb146102d3578063a035b1fe14610303578063b9f0bf661461032157610135565b80631aa3a008116100fd5780631aa3a008146102035780633013ce2914610221578063480a42621461023f5780634e71d92d1461026f5780636d1c60411461027957610135565b806307040e91146101395780630efe6a8b146101695780631161e5821461018557806313da0777146101b55780631a39d8ef146101e5575b5f80fd5b610153600480360381019061014e9190611141565b61044f565b6040516101609190611203565b60405180910390f35b610183600480360381019061017e9190611270565b6104ee565b005b61019f600480360381019061019a91906112c0565b610a4a565b6040516101ac91906112fa565b60405180910390f35b6101cf60048036038101906101ca9190611313565b610a5f565b6040516101dc91906112fa565b60405180910390f35b6101ed610bbf565b6040516101fa91906112fa565b60405180910390f35b61020b610bc5565b60405161021891906113ac565b60405180910390f35b610229610bea565b60405161023691906113e5565b60405180910390f35b610259600480360381019061025491906112c0565b610c0d565b60405161026691906112fa565b60405180910390f35b610277610c1e565b005b610281610dd3565b60405161028e919061140d565b60405180910390f35b61029f610e1e565b6040516102ac919061140d565b60405180910390f35b6102bd610e33565b6040516102ca91906112fa565b60405180910390f35b6102ed60048036038101906102e891906112c0565b610e39565b6040516102fa91906112fa565b60405180910390f35b61030b610e92565b60405161031891906112fa565b60405180910390f35b61033b600480360381019061033691906112c0565b610e98565b60405161034891906112fa565b60405180910390f35b61036b600480360381019061036691906112c0565b610ead565b60405161037891906112fa565b60405180910390f35b610389610ec2565b604051610396919061140d565b60405180910390f35b6103a7610ed7565b6040516103b491906112fa565b60405180910390f35b6103d760048036038101906103d291906112c0565b610edd565b6040516103e491906112fa565b60405180910390f35b610407600480360381019061040291906112c0565b610f23565b60405161041491906112fa565b60405180910390f35b61043760048036038101906104329190611141565b610f38565b60405161044693929190611435565b60405180910390f35b6104576110d0565b60065f8363ffffffff1663ffffffff1681526020019081526020015f206040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250509050919050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312d9a6ad60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f46f16c26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610595573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b9919061149d565b336040518363ffffffff1660e01b81526004016105d79291906114d7565b5f6040518083038186803b1580156105ed575f80fd5b505afa1580156105ff573d5f803e3d5ffd5b505050505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610668576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f82036106a1576040517faa7feadc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81036106da576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b5f9054906101000a900463ffffffff16600a6106f8919061165a565b60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600a5461074391906116a4565b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461078b91906116d7565b6107959190611745565b60045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107e09190611775565b925050819055508160095f8282546107f89190611775565b92505081905550600a5460035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461088f9190611775565b925050819055508060085f8282546108a79190611775565b92505081905550600854600b5f9054906101000a900463ffffffff16600a6108cf919061165a565b836108da91906116d7565b6108e49190611745565b600a5f8282546108f49190611775565b9250508190555060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281525060065f60075f9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015590505060075f81819054906101000a900463ffffffff16809291906109d6906117a8565b91906101000a81548163ffffffff021916908363ffffffff160217905550508273ffffffffffffffffffffffffffffffffffffffff167f0f0d29b5d4cebe99e2c93ffec39876a8b37c77ba767270f4f489daede43aea4e8383604051610a3d9291906117d3565b60405180910390a2505050565b6004602052805f5260405f205f915090505481565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ac5576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8260025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b0f9190611775565b90505f83600854610b209190611775565b03610b2e575f915050610bb9565b5f83600854610b3d9190611775565b600b5f9054906101000a900463ffffffff16600a610b5b919061165a565b83610b6691906116d7565b610b709190611745565b9050600b5f9054906101000a900463ffffffff16600a610b90919061165a565b600a600c54610b9f9190611745565b82610baa91906116d7565b610bb49190611745565b925050505b92915050565b60085481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610c1782610f7d565b9050919050565b5f3390505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c87576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610c9182610f7d565b90505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610ced9291906117fa565b6020604051808303815f875af1158015610d09573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d2d9190611856565b508060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d7a9190611775565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f3488c34059d2e654b3b166b5ec4ee17bbd37297b906d39c704104a7dc2459b3182604051610dc791906112fa565b60405180910390a25050565b5f8060075f9054906101000a900463ffffffff1663ffffffff1603610dfa575f9050610e1b565b600160075f9054906101000a900463ffffffff16610e189190611881565b90505b90565b600b5f9054906101000a900463ffffffff1681565b600a5481565b5f610e4382610f7d565b60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610e8b9190611775565b9050919050565b600c5481565b6002602052805f5260405f205f915090505481565b6005602052805f5260405f205f915090505481565b60075f9054906101000a900463ffffffff1681565b60095481565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6003602052805f5260405f205f915090505481565b6006602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600b5f9054906101000a900463ffffffff16600a610fda919061165a565b60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600a5461102591906116a4565b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461106d91906116d7565b6110779190611745565b60045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546110bf9190611775565b6110c991906116a4565b9050919050565b60405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81525090565b5f80fd5b5f63ffffffff82169050919050565b61112081611108565b811461112a575f80fd5b50565b5f8135905061113b81611117565b92915050565b5f6020828403121561115657611155611104565b5b5f6111638482850161112d565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111958261116c565b9050919050565b6111a58161118b565b82525050565b5f819050919050565b6111bd816111ab565b82525050565b606082015f8201516111d75f85018261119c565b5060208201516111ea60208501826111b4565b5060408201516111fd60408501826111b4565b50505050565b5f6060820190506112165f8301846111c3565b92915050565b6112258161118b565b811461122f575f80fd5b50565b5f813590506112408161121c565b92915050565b61124f816111ab565b8114611259575f80fd5b50565b5f8135905061126a81611246565b92915050565b5f805f6060848603121561128757611286611104565b5b5f61129486828701611232565b93505060206112a58682870161125c565b92505060406112b68682870161125c565b9150509250925092565b5f602082840312156112d5576112d4611104565b5b5f6112e284828501611232565b91505092915050565b6112f4816111ab565b82525050565b5f60208201905061130d5f8301846112eb565b92915050565b5f806040838503121561132957611328611104565b5b5f61133685828601611232565b92505060206113478582860161125c565b9150509250929050565b5f819050919050565b5f61137461136f61136a8461116c565b611351565b61116c565b9050919050565b5f6113858261135a565b9050919050565b5f6113968261137b565b9050919050565b6113a68161138c565b82525050565b5f6020820190506113bf5f83018461139d565b92915050565b5f6113cf8261137b565b9050919050565b6113df816113c5565b82525050565b5f6020820190506113f85f8301846113d6565b92915050565b61140781611108565b82525050565b5f6020820190506114205f8301846113fe565b92915050565b61142f8161118b565b82525050565b5f6060820190506114485f830186611426565b61145560208301856112eb565b61146260408301846112eb565b949350505050565b5f819050919050565b61147c8161146a565b8114611486575f80fd5b50565b5f8151905061149781611473565b92915050565b5f602082840312156114b2576114b1611104565b5b5f6114bf84828501611489565b91505092915050565b6114d18161146a565b82525050565b5f6040820190506114ea5f8301856114c8565b6114f76020830184611426565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156115805780860481111561155c5761155b6114fe565b5b600185161561156b5780820291505b80810290506115798561152b565b9450611540565b94509492505050565b5f826115985760019050611653565b816115a5575f9050611653565b81600181146115bb57600281146115c5576115f4565b6001915050611653565b60ff8411156115d7576115d66114fe565b5b8360020a9150848211156115ee576115ed6114fe565b5b50611653565b5060208310610133831016604e8410600b84101617156116295782820a905083811115611624576116236114fe565b5b611653565b6116368484846001611537565b9250905081840481111561164d5761164c6114fe565b5b81810290505b9392505050565b5f611664826111ab565b915061166f83611108565b925061169c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611589565b905092915050565b5f6116ae826111ab565b91506116b9836111ab565b92508282039050818111156116d1576116d06114fe565b5b92915050565b5f6116e1826111ab565b91506116ec836111ab565b92508282026116fa816111ab565b91508282048414831517611711576117106114fe565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61174f826111ab565b915061175a836111ab565b92508261176a57611769611718565b5b828204905092915050565b5f61177f826111ab565b915061178a836111ab565b92508282019050808211156117a2576117a16114fe565b5b92915050565b5f6117b282611108565b915063ffffffff82036117c8576117c76114fe565b5b600182019050919050565b5f6040820190506117e65f8301856112eb565b6117f360208301846112eb565b9392505050565b5f60408201905061180d5f830185611426565b61181a60208301846112eb565b9392505050565b5f8115159050919050565b61183581611821565b811461183f575f80fd5b50565b5f815190506118508161182c565b92915050565b5f6020828403121561186b5761186a611104565b5b5f61187884828501611842565b91505092915050565b5f61188b82611108565b915061189683611108565b9250828203905063ffffffff8111156118b2576118b16114fe565b5b9291505056fea26469706673582212207fb1966a061af7742c301f3b24919015738ddaf405c3bf0d2714cca34143f55164736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76809CE3 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC884EF83 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xCDF033F3 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xD4C3EEA0 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xEB46260E EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xEEDA71D5 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF54F0A8D EQ PUSH2 0x41D JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x76809CE3 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x7A19A488 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x8233FBCB EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xB9F0BF66 EQ PUSH2 0x321 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1AA3A008 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x480A4262 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x6D1C6041 EQ PUSH2 0x279 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x7040E91 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xEFE6A8B EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x1161E582 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x13DA0777 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x1E5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1270 JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0xC1E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30B PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x437 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x446 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12D9A6AD PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF46F16C2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D7 SWAP3 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SUB PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA7FEADC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xA SLOAD PUSH2 0x743 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x78B SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x795 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST DUP4 PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x7 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x9D6 SWAP1 PUSH2 0x17A8 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF0D29B5D4CEBE99E2C93FFEC39876A8B37C77BA767270F4F489DAEDE43AEA4E DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA3D SWAP3 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x8 SLOAD PUSH2 0xB20 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SUB PUSH2 0xB2E JUMPI PUSH0 SWAP2 POP POP PUSH2 0xBB9 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x8 SLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0xB5B SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST DUP4 PUSH2 0xB66 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0xB70 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0xB90 SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH1 0xA PUSH1 0xC SLOAD PUSH2 0xB9F SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST DUP3 PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0xBB4 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xC17 DUP3 PUSH2 0xF7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC87 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xC91 DUP3 PUSH2 0xF7D JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCED SWAP3 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD09 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x1856 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD7A SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3488C34059D2E654B3B166B5EC4EE17BBD37297B906D39C704104A7DC2459B31 DUP3 PUSH1 0x40 MLOAD PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SUB PUSH2 0xDFA JUMPI PUSH0 SWAP1 POP PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x1881 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xE43 DUP3 PUSH2 0xF7D JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xE8B SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0xFDA SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xA SLOAD PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x106D SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x1077 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x10BF SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x10C9 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1120 DUP2 PUSH2 0x1108 JUMP JUMPDEST DUP2 EQ PUSH2 0x112A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x113B DUP2 PUSH2 0x1117 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1156 JUMPI PUSH2 0x1155 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1163 DUP5 DUP3 DUP6 ADD PUSH2 0x112D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1195 DUP3 PUSH2 0x116C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A5 DUP2 PUSH2 0x118B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11BD DUP2 PUSH2 0x11AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x11D7 PUSH0 DUP6 ADD DUP3 PUSH2 0x119C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x11EA PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x11B4 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x11FD PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x11B4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1216 PUSH0 DUP4 ADD DUP5 PUSH2 0x11C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1225 DUP2 PUSH2 0x118B JUMP JUMPDEST DUP2 EQ PUSH2 0x122F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1240 DUP2 PUSH2 0x121C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x124F DUP2 PUSH2 0x11AB JUMP JUMPDEST DUP2 EQ PUSH2 0x1259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x126A DUP2 PUSH2 0x1246 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1294 DUP7 DUP3 DUP8 ADD PUSH2 0x1232 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12A5 DUP7 DUP3 DUP8 ADD PUSH2 0x125C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12B6 DUP7 DUP3 DUP8 ADD PUSH2 0x125C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D5 JUMPI PUSH2 0x12D4 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12E2 DUP5 DUP3 DUP6 ADD PUSH2 0x1232 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F4 DUP2 PUSH2 0x11AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x130D PUSH0 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1329 JUMPI PUSH2 0x1328 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1336 DUP6 DUP3 DUP7 ADD PUSH2 0x1232 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1347 DUP6 DUP3 DUP7 ADD PUSH2 0x125C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1374 PUSH2 0x136F PUSH2 0x136A DUP5 PUSH2 0x116C JUMP JUMPDEST PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x116C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1385 DUP3 PUSH2 0x135A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1396 DUP3 PUSH2 0x137B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A6 DUP2 PUSH2 0x138C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BF PUSH0 DUP4 ADD DUP5 PUSH2 0x139D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13CF DUP3 PUSH2 0x137B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13DF DUP2 PUSH2 0x13C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F8 PUSH0 DUP4 ADD DUP5 PUSH2 0x13D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1407 DUP2 PUSH2 0x1108 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1420 PUSH0 DUP4 ADD DUP5 PUSH2 0x13FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x142F DUP2 PUSH2 0x118B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1448 PUSH0 DUP4 ADD DUP7 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x1455 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0x1462 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147C DUP2 PUSH2 0x146A JUMP JUMPDEST DUP2 EQ PUSH2 0x1486 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1497 DUP2 PUSH2 0x1473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14BF DUP5 DUP3 DUP6 ADD PUSH2 0x1489 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x146A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14EA PUSH0 DUP4 ADD DUP6 PUSH2 0x14C8 JUMP JUMPDEST PUSH2 0x14F7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1426 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1580 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x155C JUMPI PUSH2 0x155B PUSH2 0x14FE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x156B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1579 DUP6 PUSH2 0x152B JUMP JUMPDEST SWAP5 POP PUSH2 0x1540 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1598 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1653 JUMP JUMPDEST DUP2 PUSH2 0x15A5 JUMPI PUSH0 SWAP1 POP PUSH2 0x1653 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x15BB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x15C5 JUMPI PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1653 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x15D7 JUMPI PUSH2 0x15D6 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x15EE JUMPI PUSH2 0x15ED PUSH2 0x14FE JUMP JUMPDEST JUMPDEST POP PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1629 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1624 JUMPI PUSH2 0x1623 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST PUSH2 0x1653 JUMP JUMPDEST PUSH2 0x1636 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1537 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x164D JUMPI PUSH2 0x164C PUSH2 0x14FE JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1664 DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x166F DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP3 POP PUSH2 0x169C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16AE DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x16B9 DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x16D1 JUMPI PUSH2 0x16D0 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16E1 DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x16EC DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x16FA DUP2 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1711 JUMPI PUSH2 0x1710 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x174F DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x175A DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x176A JUMPI PUSH2 0x1769 PUSH2 0x1718 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x177F DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x178A DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17A2 JUMPI PUSH2 0x17A1 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17B2 DUP3 PUSH2 0x1108 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x17C8 JUMPI PUSH2 0x17C7 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17E6 PUSH0 DUP4 ADD DUP6 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0x17F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x180D PUSH0 DUP4 ADD DUP6 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x181A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1835 DUP2 PUSH2 0x1821 JUMP JUMPDEST DUP2 EQ PUSH2 0x183F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1850 DUP2 PUSH2 0x182C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186B JUMPI PUSH2 0x186A PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1878 DUP5 DUP3 DUP6 ADD PUSH2 0x1842 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x188B DUP3 PUSH2 0x1108 JUMP JUMPDEST SWAP2 POP PUSH2 0x1896 DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B2 JUMPI PUSH2 0x18B1 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xB1966A061AF7742C301F3B24919015738DDAF405C3BF0D2714CCA34143F55164 PUSH20 0x6F6C634300081700330000000000000000000000 ",
							"sourceMap": "262:3539:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3465:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1242:776;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;458:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2392:387;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;650:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;329:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;297:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2813:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2058:298;;;:::i;:::-;;3280:151;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;751:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;715:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3109:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;779:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;362:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;508:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;617:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;683:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2963:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;411:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;558:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3465:122;3523:18;;:::i;:::-;3560:11;:19;3572:6;3560:19;;;;;;;;;;;;;;;3553:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3465:122;;;:::o;1242:776::-;1335:8;;;;;;;;;;;:18;;;1354:8;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1373:10;1335:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1415:1;1398:19;;:5;:19;;;1395:47;;1426:16;;;;;;;;;;;;;;1395:47;1466:1;1456:6;:11;1453:37;;1476:14;;;;;;;;;;;;;;1453:37;1515:1;1504:7;:12;1501:39;;1525:15;;;;;;;;;;;;;;1501:39;1631:7;;;;;;;;;;;1627:2;:11;;;;:::i;:::-;1612:4;:11;1617:5;1612:11;;;;;;;;;;;;;;;;1597:14;;:26;;;;:::i;:::-;1580:6;:13;1587:5;1580:13;;;;;;;;;;;;;;;;:44;;;;:::i;:::-;1579:60;;;;:::i;:::-;1561:7;:14;1569:5;1561:14;;;;;;;;;;;;;;;;:78;;;;;;;:::i;:::-;;;;;;;;1664:6;1650:10;;:20;;;;;;;:::i;:::-;;;;;;;;1695:14;;1681:4;:11;1686:5;1681:11;;;;;;;;;;;;;;;:28;;;;1737:7;1720:6;:13;1727:5;1720:13;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;1770:7;1755:11;;:22;;;;;;;:::i;:::-;;;;;;;;1828:11;;1819:7;;;;;;;;;;;1815:2;:11;;;;:::i;:::-;1807:6;:20;;;;:::i;:::-;:32;;;;:::i;:::-;1788:14;;:52;;;;;;;:::i;:::-;;;;;;;;1879:53;;;;;;;;1891:5;1879:53;;;;;;1906:6;1879:53;;;;1923:7;1879:53;;;1851:11;:25;1863:12;;;;;;;;;;;1851:25;;;;;;;;;;;;;;;:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1943:12;;:14;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1987:5;1973:37;;;1994:6;2002:7;1973:37;;;;;;;:::i;:::-;;;;;;;;1242:776;;;:::o;458:43::-;;;;;;;;;;;;;;;;;:::o;2392:387::-;2467:13;2512:1;2495:19;;:5;:19;;;2492:47;;2523:16;;;;;;;;;;;;;;2492:47;2550:18;2587:7;2571:6;:13;2578:5;2571:13;;;;;;;;;;;;;;;;:23;;;;:::i;:::-;2550:44;;2631:1;2620:7;2608:11;;:19;;;;:::i;:::-;:24;2605:37;;2641:1;2634:8;;;;;2605:37;2653:13;2709:7;2697:11;;:19;;;;:::i;:::-;2686:7;;;;;;;;;;;2682:2;:11;;;;:::i;:::-;2670:10;:24;;;;:::i;:::-;2669:48;;;;:::i;:::-;2653:64;;2763:7;;;;;;;;;;;2759:2;:11;;;;:::i;:::-;2752:2;2746:5;;:8;;;;:::i;:::-;2737:5;:18;;;;:::i;:::-;2736:35;;;;:::i;:::-;2728:43;;;;2392:387;;;;;:::o;650:26::-;;;;:::o;329:24::-;;;;;;;;;;;;;:::o;297:25::-;;;;;;;;;;;;:::o;2813:116::-;2871:13;2903:18;2915:5;2903:11;:18::i;:::-;2896:25;;2813:116;;;:::o;2058:298::-;2094:13;2110:10;2094:26;;2151:1;2134:19;;:5;:19;;;2131:47;;2162:16;;;;;;;;;;;;;;2131:47;2189:14;2206:18;2218:5;2206:11;:18::i;:::-;2189:35;;2235:12;;;;;;;;;;:21;;;2257:5;2264:6;2235:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2300:6;2282:7;:14;2290:5;2282:14;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;2334:5;2322:26;;;2341:6;2322:26;;;;;;:::i;:::-;;;;;;;;2083:273;;2058:298::o;3280:151::-;3337:12;3380:1;3364:12;;;;;;;;;;;:17;;;3361:30;;3390:1;3383:8;;;;3361:30;3422:1;3409:12;;;;;;;;;;;:14;;;;:::i;:::-;3402:21;;3280:151;;:::o;751:21::-;;;;;;;;;;;;;:::o;715:29::-;;;;:::o;3109:137::-;3171:13;3220:18;3232:5;3220:11;:18::i;:::-;3203:7;:14;3211:5;3203:14;;;;;;;;;;;;;;;;:35;;;;:::i;:::-;3196:42;;3109:137;;;:::o;779:20::-;;;;:::o;362:42::-;;;;;;;;;;;;;;;;;:::o;508:43::-;;;;;;;;;;;;;;;;;:::o;617:26::-;;;;;;;;;;;;;:::o;683:25::-;;;;:::o;2963:112::-;3021:13;3053:7;:14;3061:5;3053:14;;;;;;;;;;;;;;;;3046:21;;2963:112;;;:::o;411:40::-;;;;;;;;;;;;;;;;;:::o;558:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3603:193::-;3662:13;3774:7;:14;3782:5;3774:14;;;;;;;;;;;;;;;;3763:7;;;;;;;;;;;3759:2;:11;;;;:::i;:::-;3744:4;:11;3749:5;3744:11;;;;;;;;;;;;;;;;3729:14;;:26;;;;:::i;:::-;3712:6;:13;3719:5;3712:13;;;;;;;;;;;;;;;;:44;;;;:::i;:::-;3711:60;;;;:::i;:::-;3694:7;:14;3702:5;3694:14;;;;;;;;;;;;;;;;:77;;;;:::i;:::-;:94;;;;:::i;:::-;3687:101;;3603:193;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:12:-;197:1;194;187:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:137::-;604:5;642:6;629:20;620:29;;658:32;684:5;658:32;:::i;:::-;559:137;;;;:::o;702:327::-;760:6;809:2;797:9;788:7;784:23;780:32;777:119;;;815:79;;:::i;:::-;777:119;935:1;960:52;1004:7;995:6;984:9;980:22;960:52;:::i;:::-;950:62;;906:116;702:327;;;;:::o;1035:126::-;1072:7;1112:42;1105:5;1101:54;1090:65;;1035:126;;;:::o;1167:96::-;1204:7;1233:24;1251:5;1233:24;:::i;:::-;1222:35;;1167:96;;;:::o;1269:108::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1269:108;;:::o;1383:77::-;1420:7;1449:5;1438:16;;1383:77;;;:::o;1466:108::-;1543:24;1561:5;1543:24;:::i;:::-;1538:3;1531:37;1466:108;;:::o;1644:692::-;1799:4;1794:3;1790:14;1886:4;1879:5;1875:16;1869:23;1905:63;1962:4;1957:3;1953:14;1939:12;1905:63;:::i;:::-;1814:164;2061:4;2054:5;2050:16;2044:23;2080:63;2137:4;2132:3;2128:14;2114:12;2080:63;:::i;:::-;1988:165;2237:4;2230:5;2226:16;2220:23;2256:63;2313:4;2308:3;2304:14;2290:12;2256:63;:::i;:::-;2163:166;1768:568;1644:692;;:::o;2342:338::-;2493:4;2531:2;2520:9;2516:18;2508:26;;2544:129;2670:1;2659:9;2655:17;2646:6;2544:129;:::i;:::-;2342:338;;;;:::o;2686:122::-;2759:24;2777:5;2759:24;:::i;:::-;2752:5;2749:35;2739:63;;2798:1;2795;2788:12;2739:63;2686:122;:::o;2814:139::-;2860:5;2898:6;2885:20;2876:29;;2914:33;2941:5;2914:33;:::i;:::-;2814:139;;;;:::o;2959:122::-;3032:24;3050:5;3032:24;:::i;:::-;3025:5;3022:35;3012:63;;3071:1;3068;3061:12;3012:63;2959:122;:::o;3087:139::-;3133:5;3171:6;3158:20;3149:29;;3187:33;3214:5;3187:33;:::i;:::-;3087:139;;;;:::o;3232:619::-;3309:6;3317;3325;3374:2;3362:9;3353:7;3349:23;3345:32;3342:119;;;3380:79;;:::i;:::-;3342:119;3500:1;3525:53;3570:7;3561:6;3550:9;3546:22;3525:53;:::i;:::-;3515:63;;3471:117;3627:2;3653:53;3698:7;3689:6;3678:9;3674:22;3653:53;:::i;:::-;3643:63;;3598:118;3755:2;3781:53;3826:7;3817:6;3806:9;3802:22;3781:53;:::i;:::-;3771:63;;3726:118;3232:619;;;;;:::o;3857:329::-;3916:6;3965:2;3953:9;3944:7;3940:23;3936:32;3933:119;;;3971:79;;:::i;:::-;3933:119;4091:1;4116:53;4161:7;4152:6;4141:9;4137:22;4116:53;:::i;:::-;4106:63;;4062:117;3857:329;;;;:::o;4192:118::-;4279:24;4297:5;4279:24;:::i;:::-;4274:3;4267:37;4192:118;;:::o;4316:222::-;4409:4;4447:2;4436:9;4432:18;4424:26;;4460:71;4528:1;4517:9;4513:17;4504:6;4460:71;:::i;:::-;4316:222;;;;:::o;4544:474::-;4612:6;4620;4669:2;4657:9;4648:7;4644:23;4640:32;4637:119;;;4675:79;;:::i;:::-;4637:119;4795:1;4820:53;4865:7;4856:6;4845:9;4841:22;4820:53;:::i;:::-;4810:63;;4766:117;4922:2;4948:53;4993:7;4984:6;4973:9;4969:22;4948:53;:::i;:::-;4938:63;;4893:118;4544:474;;;;;:::o;5024:60::-;5052:3;5073:5;5066:12;;5024:60;;;:::o;5090:142::-;5140:9;5173:53;5191:34;5200:24;5218:5;5200:24;:::i;:::-;5191:34;:::i;:::-;5173:53;:::i;:::-;5160:66;;5090:142;;;:::o;5238:126::-;5288:9;5321:37;5352:5;5321:37;:::i;:::-;5308:50;;5238:126;;;:::o;5370:143::-;5437:9;5470:37;5501:5;5470:37;:::i;:::-;5457:50;;5370:143;;;:::o;5519:165::-;5623:54;5671:5;5623:54;:::i;:::-;5618:3;5611:67;5519:165;;:::o;5690:256::-;5800:4;5838:2;5827:9;5823:18;5815:26;;5851:88;5936:1;5925:9;5921:17;5912:6;5851:88;:::i;:::-;5690:256;;;;:::o;5952:140::-;6016:9;6049:37;6080:5;6049:37;:::i;:::-;6036:50;;5952:140;;;:::o;6098:159::-;6199:51;6244:5;6199:51;:::i;:::-;6194:3;6187:64;6098:159;;:::o;6263:250::-;6370:4;6408:2;6397:9;6393:18;6385:26;;6421:85;6503:1;6492:9;6488:17;6479:6;6421:85;:::i;:::-;6263:250;;;;:::o;6519:115::-;6604:23;6621:5;6604:23;:::i;:::-;6599:3;6592:36;6519:115;;:::o;6640:218::-;6731:4;6769:2;6758:9;6754:18;6746:26;;6782:69;6848:1;6837:9;6833:17;6824:6;6782:69;:::i;:::-;6640:218;;;;:::o;6864:118::-;6951:24;6969:5;6951:24;:::i;:::-;6946:3;6939:37;6864:118;;:::o;6988:442::-;7137:4;7175:2;7164:9;7160:18;7152:26;;7188:71;7256:1;7245:9;7241:17;7232:6;7188:71;:::i;:::-;7269:72;7337:2;7326:9;7322:18;7313:6;7269:72;:::i;:::-;7351;7419:2;7408:9;7404:18;7395:6;7351:72;:::i;:::-;6988:442;;;;;;:::o;7436:77::-;7473:7;7502:5;7491:16;;7436:77;;;:::o;7519:122::-;7592:24;7610:5;7592:24;:::i;:::-;7585:5;7582:35;7572:63;;7631:1;7628;7621:12;7572:63;7519:122;:::o;7647:143::-;7704:5;7735:6;7729:13;7720:22;;7751:33;7778:5;7751:33;:::i;:::-;7647:143;;;;:::o;7796:351::-;7866:6;7915:2;7903:9;7894:7;7890:23;7886:32;7883:119;;;7921:79;;:::i;:::-;7883:119;8041:1;8066:64;8122:7;8113:6;8102:9;8098:22;8066:64;:::i;:::-;8056:74;;8012:128;7796:351;;;;:::o;8153:118::-;8240:24;8258:5;8240:24;:::i;:::-;8235:3;8228:37;8153:118;;:::o;8277:332::-;8398:4;8436:2;8425:9;8421:18;8413:26;;8449:71;8517:1;8506:9;8502:17;8493:6;8449:71;:::i;:::-;8530:72;8598:2;8587:9;8583:18;8574:6;8530:72;:::i;:::-;8277:332;;;;;:::o;8615:180::-;8663:77;8660:1;8653:88;8760:4;8757:1;8750:15;8784:4;8781:1;8774:15;8801:102;8843:8;8890:5;8887:1;8883:13;8862:34;;8801:102;;;:::o;8909:848::-;8970:5;8977:4;9001:6;8992:15;;9025:5;9016:14;;9039:712;9060:1;9050:8;9047:15;9039:712;;;9155:4;9150:3;9146:14;9140:4;9137:24;9134:50;;;9164:18;;:::i;:::-;9134:50;9214:1;9204:8;9200:16;9197:451;;;9629:4;9622:5;9618:16;9609:25;;9197:451;9679:4;9673;9669:15;9661:23;;9709:32;9732:8;9709:32;:::i;:::-;9697:44;;9039:712;;;8909:848;;;;;;;:::o;9763:1073::-;9817:5;10008:8;9998:40;;10029:1;10020:10;;10031:5;;9998:40;10057:4;10047:36;;10074:1;10065:10;;10076:5;;10047:36;10143:4;10191:1;10186:27;;;;10227:1;10222:191;;;;10136:277;;10186:27;10204:1;10195:10;;10206:5;;;10222:191;10267:3;10257:8;10254:17;10251:43;;;10274:18;;:::i;:::-;10251:43;10323:8;10320:1;10316:16;10307:25;;10358:3;10351:5;10348:14;10345:40;;;10365:18;;:::i;:::-;10345:40;10398:5;;;10136:277;;10522:2;10512:8;10509:16;10503:3;10497:4;10494:13;10490:36;10472:2;10462:8;10459:16;10454:2;10448:4;10445:12;10441:35;10425:111;10422:246;;;10578:8;10572:4;10568:19;10559:28;;10613:3;10606:5;10603:14;10600:40;;;10620:18;;:::i;:::-;10600:40;10653:5;;10422:246;10693:42;10731:3;10721:8;10715:4;10712:1;10693:42;:::i;:::-;10678:57;;;;10767:4;10762:3;10758:14;10751:5;10748:25;10745:51;;;10776:18;;:::i;:::-;10745:51;10825:4;10818:5;10814:16;10805:25;;9763:1073;;;;;;:::o;10842:283::-;10901:5;10925:23;10943:4;10925:23;:::i;:::-;10917:31;;10969:26;10986:8;10969:26;:::i;:::-;10957:38;;11014:104;11051:66;11041:8;11035:4;11014:104;:::i;:::-;11005:113;;10842:283;;;;:::o;11131:194::-;11171:4;11191:20;11209:1;11191:20;:::i;:::-;11186:25;;11225:20;11243:1;11225:20;:::i;:::-;11220:25;;11269:1;11266;11262:9;11254:17;;11293:1;11287:4;11284:11;11281:37;;;11298:18;;:::i;:::-;11281:37;11131:194;;;;:::o;11331:410::-;11371:7;11394:20;11412:1;11394:20;:::i;:::-;11389:25;;11428:20;11446:1;11428:20;:::i;:::-;11423:25;;11483:1;11480;11476:9;11505:30;11523:11;11505:30;:::i;:::-;11494:41;;11684:1;11675:7;11671:15;11668:1;11665:22;11645:1;11638:9;11618:83;11595:139;;11714:18;;:::i;:::-;11595:139;11379:362;11331:410;;;;:::o;11747:180::-;11795:77;11792:1;11785:88;11892:4;11889:1;11882:15;11916:4;11913:1;11906:15;11933:185;11973:1;11990:20;12008:1;11990:20;:::i;:::-;11985:25;;12024:20;12042:1;12024:20;:::i;:::-;12019:25;;12063:1;12053:35;;12068:18;;:::i;:::-;12053:35;12110:1;12107;12103:9;12098:14;;11933:185;;;;:::o;12124:191::-;12164:3;12183:20;12201:1;12183:20;:::i;:::-;12178:25;;12217:20;12235:1;12217:20;:::i;:::-;12212:25;;12260:1;12257;12253:9;12246:16;;12281:3;12278:1;12275:10;12272:36;;;12288:18;;:::i;:::-;12272:36;12124:191;;;;:::o;12321:175::-;12359:3;12382:23;12399:5;12382:23;:::i;:::-;12373:32;;12427:10;12420:5;12417:21;12414:47;;12441:18;;:::i;:::-;12414:47;12488:1;12481:5;12477:13;12470:20;;12321:175;;;:::o;12502:332::-;12623:4;12661:2;12650:9;12646:18;12638:26;;12674:71;12742:1;12731:9;12727:17;12718:6;12674:71;:::i;:::-;12755:72;12823:2;12812:9;12808:18;12799:6;12755:72;:::i;:::-;12502:332;;;;;:::o;12840:::-;12961:4;12999:2;12988:9;12984:18;12976:26;;13012:71;13080:1;13069:9;13065:17;13056:6;13012:71;:::i;:::-;13093:72;13161:2;13150:9;13146:18;13137:6;13093:72;:::i;:::-;12840:332;;;;;:::o;13178:90::-;13212:7;13255:5;13248:13;13241:21;13230:32;;13178:90;;;:::o;13274:116::-;13344:21;13359:5;13344:21;:::i;:::-;13337:5;13334:32;13324:60;;13380:1;13377;13370:12;13324:60;13274:116;:::o;13396:137::-;13450:5;13481:6;13475:13;13466:22;;13497:30;13521:5;13497:30;:::i;:::-;13396:137;;;;:::o;13539:345::-;13606:6;13655:2;13643:9;13634:7;13630:23;13626:32;13623:119;;;13661:79;;:::i;:::-;13623:119;13781:1;13806:61;13859:7;13850:6;13839:9;13835:22;13806:61;:::i;:::-;13796:71;;13752:125;13539:345;;;;:::o;13890:200::-;13929:4;13949:19;13966:1;13949:19;:::i;:::-;13944:24;;13982:19;13999:1;13982:19;:::i;:::-;13977:24;;14025:1;14022;14018:9;14010:17;;14049:10;14043:4;14040:20;14037:46;;;14063:18;;:::i;:::-;14037:46;13890:200;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1276400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"amount(address)": "2913",
								"claim()": "infinite",
								"claimed(address)": "2824",
								"decimal()": "2489",
								"deposit(address,uint256,uint256)": "infinite",
								"getClaimed(address)": "2917",
								"getCurrentHistoryNonce()": "infinite",
								"getHistory(uint32)": "infinite",
								"getPredict(address,uint256)": "infinite",
								"getTotalProfit(address)": "infinite",
								"getUnclaim(address)": "infinite",
								"historyInfo(uint32)": "infinite",
								"historyNonce()": "2510",
								"mask(address)": "2912",
								"paymentToken()": "infinite",
								"price()": "2514",
								"register()": "infinite",
								"totalAmount()": "2537",
								"totalValue()": "2491",
								"unclaim(address)": "2870",
								"valuePerAmount()": "2470"
							},
							"internal": {
								"_getUnclaim(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 262,
									"end": 3801,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 262,
									"end": 3801,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 262,
									"end": 3801,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 814,
									"end": 1206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 953,
									"end": 970,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 932,
									"end": 944,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 944,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 932,
									"end": 971,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 932,
									"end": 971,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 932,
									"end": 971,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 932,
									"end": 971,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 932,
									"end": 971,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 932,
									"end": 971,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 932,
									"end": 971,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 932,
									"end": 971,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 932,
									"end": 971,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 932,
									"end": 971,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 932,
									"end": 971,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 932,
									"end": 971,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 932,
									"end": 971,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 932,
									"end": 971,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 932,
									"end": 971,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 932,
									"end": 971,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 932,
									"end": 971,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 932,
									"end": 971,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1004,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 992,
									"end": 1004,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1004,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1004,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1004,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 992,
									"end": 1004,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1004,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1004,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1004,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 992,
									"end": 1004,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1013,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 992,
									"end": 1013,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1013,
									"name": "PUSH",
									"source": 10,
									"value": "313CE567"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFF"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "GAS",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "STATICCALL",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "RETURNDATACOPY",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 992,
									"end": 1015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 992,
									"end": 1015,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 982,
									"end": 989,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 982,
									"end": 989,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFF"
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFF"
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 982,
									"end": 1015,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1041,
									"end": 1042,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1026,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 1026,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1026,
									"end": 1042,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1151,
									"end": 1157,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1143,
									"end": 1148,
									"name": "PUSH",
									"source": 10,
									"value": "C"
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1143,
									"end": 1157,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1188,
									"end": 1197,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1176,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1168,
									"end": 1176,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1198,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 814,
									"end": 1206,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3801,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 262,
									"end": 3801,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1874,
									"end": 1960,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1874,
									"end": 1960,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1909,
									"end": 1916,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1953,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 1942,
									"end": 1947,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1938,
									"end": 1954,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1927,
									"end": 1954,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1927,
									"end": 1954,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1874,
									"end": 1960,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1874,
									"end": 1960,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1874,
									"end": 1960,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1874,
									"end": 1960,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 2084,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1966,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2037,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 2053,
									"end": 2058,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2037,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 2037,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2037,
									"end": 2059,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 2037,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2030,
									"end": 2035,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2027,
									"end": 2060,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2074,
									"end": 2075,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2071,
									"end": 2072,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2064,
									"end": 2076,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 2084,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 2084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2090,
									"end": 2229,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2090,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2145,
									"end": 2150,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2170,
									"end": 2183,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2183,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2183,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2192,
									"end": 2223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2217,
									"end": 2222,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2192,
									"end": 2223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2192,
									"end": 2223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2192,
									"end": 2223,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2192,
									"end": 2223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2090,
									"end": 2229,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2090,
									"end": 2229,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2090,
									"end": 2229,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2090,
									"end": 2229,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2090,
									"end": 2229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2235,
									"end": 2582,
									"name": "tag",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 2235,
									"end": 2582,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2303,
									"end": 2309,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2354,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2340,
									"end": 2349,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2331,
									"end": 2338,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2327,
									"end": 2350,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2323,
									"end": 2355,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2320,
									"end": 2439,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2320,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2320,
									"end": 2439,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2358,
									"end": 2437,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 2358,
									"end": 2437,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 2358,
									"end": 2437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2358,
									"end": 2437,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 2358,
									"end": 2437,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2320,
									"end": 2439,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2320,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2478,
									"end": 2479,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2503,
									"end": 2565,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 2557,
									"end": 2564,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2548,
									"end": 2554,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2537,
									"end": 2546,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2533,
									"end": 2555,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2503,
									"end": 2565,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2503,
									"end": 2565,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2503,
									"end": 2565,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 2503,
									"end": 2565,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2493,
									"end": 2565,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2493,
									"end": 2565,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2449,
									"end": 2575,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2235,
									"end": 2582,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2235,
									"end": 2582,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2235,
									"end": 2582,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2235,
									"end": 2582,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2235,
									"end": 2582,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 262,
									"end": 3801,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 262,
									"end": 3801,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3801,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3801,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3801,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3801,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3801,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 262,
									"end": 3801,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3801,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207fb1966a061af7742c301f3b24919015738ddaf405c3bf0d2714cca34143f55164736f6c63430008170033",
									".code": [
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "76809CE3"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "C884EF83"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "C884EF83"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "CDF033F3"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "D4C3EEA0"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "EB46260E"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "EEDA71D5"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "F54F0A8D"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "76809CE3"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "7A19A488"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "8233FBCB"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "A035B1FE"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "B9F0BF66"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "1AA3A008"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "1AA3A008"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "3013CE29"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "480A4262"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "4E71D92D"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "6D1C6041"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "7040E91"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "EFE6A8B"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "1161E582"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "13DA0777"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "1A39D8EF"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 262,
											"end": 3801,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 3465,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 3465,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3465,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 1242,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1242,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 458,
											"end": 501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 458,
											"end": 501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2392,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2392,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2392,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 650,
											"end": 676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 650,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 650,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 650,
											"end": 676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 676,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 650,
											"end": 676,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 650,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 650,
											"end": 676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 676,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 329,
											"end": 353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 329,
											"end": 353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 297,
											"end": 322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 297,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 297,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 297,
											"end": 322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 322,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 297,
											"end": 322,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 297,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 297,
											"end": 322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 322,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2813,
											"end": 2929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2813,
											"end": 2929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2813,
											"end": 2929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2058,
											"end": 2356,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 2058,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2058,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2058,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2058,
											"end": 2356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2058,
											"end": 2356,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2058,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2058,
											"end": 2356,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3280,
											"end": 3431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 3280,
											"end": 3431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 751,
											"end": 772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 751,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 751,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 751,
											"end": 772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 772,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 751,
											"end": 772,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 751,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 751,
											"end": 772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 772,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 715,
											"end": 744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 715,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 715,
											"end": 744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 715,
											"end": 744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 744,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 715,
											"end": 744,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 715,
											"end": 744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 715,
											"end": 744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 744,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 3109,
											"end": 3246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3109,
											"end": 3246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 3109,
											"end": 3246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 779,
											"end": 799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 779,
											"end": 799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 362,
											"end": 404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 362,
											"end": 404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 362,
											"end": 404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 508,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 508,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 508,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 617,
											"end": 643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 617,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 617,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 617,
											"end": 643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 643,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 617,
											"end": 643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 617,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 617,
											"end": 643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 643,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 683,
											"end": 708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 683,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 683,
											"end": 708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 683,
											"end": 708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 708,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 683,
											"end": 708,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 683,
											"end": 708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 683,
											"end": 708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 708,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2963,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2963,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2963,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 411,
											"end": 451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 411,
											"end": 451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 411,
											"end": 451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 558,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 558,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 558,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 3523,
											"end": 3541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3571,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3578,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1353,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1335,
											"end": 1353,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1353,
											"name": "PUSH",
											"source": 10,
											"value": "12D9A6AD"
										},
										{
											"begin": 1354,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1354,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1362,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1354,
											"end": 1362,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1362,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1362,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1369,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1369,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1369,
											"name": "PUSH",
											"source": 10,
											"value": "F46F16C2"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 1354,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1373,
											"end": 1383,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 1335,
											"end": 1384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1415,
											"end": 1416,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1417,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1398,
											"end": 1417,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1398,
											"end": 1403,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1398,
											"end": 1417,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1398,
											"end": 1417,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1398,
											"end": 1417,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1395,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 1395,
											"end": 1442,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "PUSH",
											"source": 10,
											"value": "E6C4247B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1395,
											"end": 1442,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 1395,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1467,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1453,
											"end": 1490,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "PUSH",
											"source": 10,
											"value": "AA7FEADC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 1490,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1453,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1515,
											"end": 1516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1504,
											"end": 1511,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1516,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1501,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1501,
											"end": 1540,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1540,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1540,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1540,
											"name": "PUSH",
											"source": 10,
											"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1525,
											"end": 1540,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1540,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1540,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1525,
											"end": 1540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1540,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1540,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1540,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1540,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1540,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1540,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1501,
											"end": 1540,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1501,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1627,
											"end": 1629,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1627,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 1627,
											"end": 1638,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1627,
											"end": 1638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1627,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1627,
											"end": 1638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1627,
											"end": 1638,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 1627,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1616,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 1611,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1597,
											"end": 1611,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1597,
											"end": 1623,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 1623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 1597,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 1623,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1597,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1592,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 1580,
											"end": 1624,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1624,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1580,
											"end": 1624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1624,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 1580,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1579,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1579,
											"end": 1639,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1579,
											"end": 1639,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1579,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 1579,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1579,
											"end": 1639,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1579,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1568,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1574,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1561,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1670,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1660,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1650,
											"end": 1660,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1650,
											"end": 1670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1685,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1691,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1709,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1709,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1737,
											"end": 1744,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1726,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1732,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1720,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1777,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1755,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1755,
											"end": 1777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1828,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1828,
											"end": 1839,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1817,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1815,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1807,
											"end": 1827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1807,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1827,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1807,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1807,
											"end": 1839,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 1807,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1839,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1807,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1802,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1788,
											"end": 1802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1788,
											"end": 1840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1891,
											"end": 1896,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1906,
											"end": 1912,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 1930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1862,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 1943,
											"end": 1957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1987,
											"end": 1992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "PUSH",
											"source": 10,
											"value": "F0D29B5D4CEBE99E2C93FFEC39876A8B37C77BA767270F4F489DAEDE43AEA4E"
										},
										{
											"begin": 1994,
											"end": 2000,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2009,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 1973,
											"end": 2010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2010,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 2018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 501,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 458,
											"end": 501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2480,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2513,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2495,
											"end": 2514,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2495,
											"end": 2514,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2495,
											"end": 2500,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2495,
											"end": 2514,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2495,
											"end": 2514,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2495,
											"end": 2514,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 2492,
											"end": 2539,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2539,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2523,
											"end": 2539,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2539,
											"name": "PUSH",
											"source": 10,
											"value": "E6C4247B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2523,
											"end": 2539,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2539,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2539,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2523,
											"end": 2539,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2539,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2523,
											"end": 2539,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2539,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2539,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2539,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2539,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2539,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2539,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 2492,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2577,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 2571,
											"end": 2594,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2594,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 2571,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2594,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 2571,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2550,
											"end": 2594,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2550,
											"end": 2594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2627,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2619,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2608,
											"end": 2619,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 2608,
											"end": 2627,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2627,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 2608,
											"end": 2627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2627,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 2608,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2632,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2605,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 2605,
											"end": 2642,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 2642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2642,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 2634,
											"end": 2642,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2605,
											"end": 2642,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 2605,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2716,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2708,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2697,
											"end": 2708,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2697,
											"end": 2716,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2716,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 2697,
											"end": 2716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2716,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2697,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 2682,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2682,
											"end": 2693,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2682,
											"end": 2693,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2682,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 2682,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2682,
											"end": 2693,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2682,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2680,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 2670,
											"end": 2694,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2694,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 2670,
											"end": 2694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2694,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 2670,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2669,
											"end": 2717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 2717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2669,
											"end": 2717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 2717,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2669,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2653,
											"end": 2717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2653,
											"end": 2717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 2759,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2759,
											"end": 2770,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 2759,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2770,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2759,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2752,
											"end": 2754,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 2746,
											"end": 2751,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 2746,
											"end": 2751,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2746,
											"end": 2754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2737,
											"end": 2755,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2755,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 2737,
											"end": 2755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2755,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2737,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2736,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 2736,
											"end": 2771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2736,
											"end": 2771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2736,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2736,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2736,
											"end": 2771,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 2736,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2771,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 650,
											"end": 676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 650,
											"end": 676,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 650,
											"end": 676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 329,
											"end": 353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 297,
											"end": 322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 322,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 297,
											"end": 322,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 297,
											"end": 322,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 297,
											"end": 322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2871,
											"end": 2884,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 2915,
											"end": 2920,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 2903,
											"end": 2921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2896,
											"end": 2921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2896,
											"end": 2921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2058,
											"end": 2356,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2058,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2094,
											"end": 2107,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2120,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2094,
											"end": 2120,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2094,
											"end": 2120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2151,
											"end": 2152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2134,
											"end": 2153,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2134,
											"end": 2153,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2139,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2153,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2134,
											"end": 2153,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2153,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 2131,
											"end": 2178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "PUSH",
											"source": 10,
											"value": "E6C4247B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2178,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 2131,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2189,
											"end": 2203,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 2218,
											"end": 2223,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2206,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 2206,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2189,
											"end": 2224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2189,
											"end": 2224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2256,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2256,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2256,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 2257,
											"end": 2262,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 2235,
											"end": 2271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 2235,
											"end": 2271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2306,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2289,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2295,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 2282,
											"end": 2306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2339,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "PUSH",
											"source": 10,
											"value": "3488C34059D2E654B3B166B5EC4EE17BBD37297B906D39C704104A7DC2459B31"
										},
										{
											"begin": 2341,
											"end": 2347,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2322,
											"end": 2348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2348,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2083,
											"end": 2356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2083,
											"end": 2356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2058,
											"end": 2356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3337,
											"end": 3349,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3376,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 3364,
											"end": 3376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3376,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3376,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3364,
											"end": 3376,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3376,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3376,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3364,
											"end": 3376,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3381,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3364,
											"end": 3381,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3381,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3361,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 3361,
											"end": 3391,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3390,
											"end": 3391,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3383,
											"end": 3391,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3383,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 3383,
											"end": 3391,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3361,
											"end": 3391,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 3361,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3423,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3409,
											"end": 3421,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 3409,
											"end": 3421,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3421,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3421,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3409,
											"end": 3421,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3421,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3421,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3409,
											"end": 3421,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3409,
											"end": 3423,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3423,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3409,
											"end": 3423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3423,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3409,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3402,
											"end": 3423,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3402,
											"end": 3423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 751,
											"end": 772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 751,
											"end": 772,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 751,
											"end": 772,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 751,
											"end": 772,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 751,
											"end": 772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 715,
											"end": 744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 715,
											"end": 744,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 715,
											"end": 744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3184,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3232,
											"end": 3237,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3220,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3220,
											"end": 3238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3220,
											"end": 3238,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3220,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3210,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3203,
											"end": 3238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3203,
											"end": 3238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3238,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3203,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 779,
											"end": 799,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 779,
											"end": 799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 362,
											"end": 404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 551,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 508,
											"end": 551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 617,
											"end": 643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 617,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 617,
											"end": 643,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 617,
											"end": 643,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 617,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 683,
											"end": 708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 683,
											"end": 708,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 683,
											"end": 708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3066,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3046,
											"end": 3067,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3046,
											"end": 3067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 411,
											"end": 451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 558,
											"end": 608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3796,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3603,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3787,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3770,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 3763,
											"end": 3770,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3770,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3770,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3763,
											"end": 3770,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3770,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3770,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3763,
											"end": 3770,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 3761,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 3759,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3759,
											"end": 3770,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 3770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3759,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 3770,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3759,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3748,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3754,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3755,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 3743,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 3729,
											"end": 3743,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3729,
											"end": 3755,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 3755,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3729,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 3755,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3729,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3718,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3719,
											"end": 3724,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3725,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 3712,
											"end": 3756,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3756,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3712,
											"end": 3756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3756,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 3712,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3711,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 3711,
											"end": 3771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3711,
											"end": 3771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3711,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3711,
											"end": 3771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3711,
											"end": 3771,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 3711,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3701,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3702,
											"end": 3707,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3708,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 3694,
											"end": 3771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3694,
											"end": 3771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3771,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 3694,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 3694,
											"end": 3788,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3694,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3788,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 3694,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3687,
											"end": 3788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3687,
											"end": 3788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3796,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "110"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 427,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 334,
											"end": 427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 420,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 421,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 421,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 433,
											"end": 553,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 433,
											"end": 553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 505,
											"end": 528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 505,
											"end": 528,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 498,
											"end": 503,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 495,
											"end": 529,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 485,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 541,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 533,
											"end": 545,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 485,
											"end": 547,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 433,
											"end": 553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 433,
											"end": 553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 559,
											"end": 696,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 559,
											"end": 696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 604,
											"end": 609,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 648,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 629,
											"end": 649,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 620,
											"end": 649,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 620,
											"end": 649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 684,
											"end": 689,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 658,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 658,
											"end": 690,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 559,
											"end": 696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 760,
											"end": 766,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 811,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 806,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 788,
											"end": 795,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 780,
											"end": 812,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 777,
											"end": 896,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 777,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 815,
											"end": 894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 815,
											"end": 894,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 896,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 935,
											"end": 936,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 1004,
											"end": 1011,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 980,
											"end": 1002,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 960,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 906,
											"end": 1022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 702,
											"end": 1029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1154,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1155,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1090,
											"end": 1155,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1090,
											"end": 1155,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1167,
											"end": 1263,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1167,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1204,
											"end": 1211,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1233,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1233,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1233,
											"end": 1257,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 1233,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1222,
											"end": 1257,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1222,
											"end": 1257,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1167,
											"end": 1263,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1167,
											"end": 1263,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1167,
											"end": 1263,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1167,
											"end": 1263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1377,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 1269,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1460,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 1383,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1420,
											"end": 1427,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1438,
											"end": 1454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1438,
											"end": 1454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1466,
											"end": 1574,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 1466,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 1561,
											"end": 1566,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 1543,
											"end": 1567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1538,
											"end": 1541,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1466,
											"end": 1574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1466,
											"end": 1574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1466,
											"end": 1574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 2336,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 1644,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1799,
											"end": 1803,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1794,
											"end": 1797,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1790,
											"end": 1804,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1890,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1884,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 1891,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1869,
											"end": 1892,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1905,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1960,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 1967,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1939,
											"end": 1951,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1905,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 1905,
											"end": 1968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1905,
											"end": 1968,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 1905,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1814,
											"end": 1978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2061,
											"end": 2065,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2066,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2044,
											"end": 2067,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2080,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 2137,
											"end": 2141,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2132,
											"end": 2135,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2128,
											"end": 2142,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2114,
											"end": 2126,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2080,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 2080,
											"end": 2143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2080,
											"end": 2143,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 2080,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 2153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2237,
											"end": 2241,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2235,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2226,
											"end": 2242,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2243,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 2313,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2311,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2318,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2290,
											"end": 2302,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 2256,
											"end": 2319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2319,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 2256,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2163,
											"end": 2329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1768,
											"end": 2336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 2336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 2336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 2336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2342,
											"end": 2680,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 2342,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2493,
											"end": 2497,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2533,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2516,
											"end": 2534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2544,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 2670,
											"end": 2671,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2668,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2655,
											"end": 2672,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2646,
											"end": 2652,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2544,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 2544,
											"end": 2673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2544,
											"end": 2673,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 2544,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2342,
											"end": 2680,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2342,
											"end": 2680,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2342,
											"end": 2680,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2342,
											"end": 2680,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2342,
											"end": 2680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2808,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 2686,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 2759,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2752,
											"end": 2757,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2749,
											"end": 2784,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2739,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 2739,
											"end": 2802,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2799,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2796,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2788,
											"end": 2800,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2739,
											"end": 2802,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 2739,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2808,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2814,
											"end": 2953,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 2814,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2865,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2904,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2905,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2876,
											"end": 2905,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2876,
											"end": 2905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2914,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 2941,
											"end": 2946,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2914,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 2914,
											"end": 2947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2914,
											"end": 2947,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 2914,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2814,
											"end": 2953,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2814,
											"end": 2953,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2814,
											"end": 2953,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2814,
											"end": 2953,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2814,
											"end": 2953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2959,
											"end": 3081,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 2959,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3032,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3032,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 3032,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3032,
											"end": 3056,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 3032,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3025,
											"end": 3030,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3022,
											"end": 3057,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3012,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 3012,
											"end": 3075,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3069,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3061,
											"end": 3073,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3012,
											"end": 3075,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 3012,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2959,
											"end": 3081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2959,
											"end": 3081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3087,
											"end": 3226,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 3087,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3138,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3177,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3158,
											"end": 3178,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3178,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 3214,
											"end": 3219,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 3187,
											"end": 3220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3220,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 3187,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3087,
											"end": 3226,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3087,
											"end": 3226,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3087,
											"end": 3226,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3087,
											"end": 3226,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3087,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3232,
											"end": 3851,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 3232,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3309,
											"end": 3315,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3323,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3325,
											"end": 3331,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3376,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3362,
											"end": 3371,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3353,
											"end": 3360,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3345,
											"end": 3377,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3342,
											"end": 3461,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3342,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 3342,
											"end": 3461,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3380,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 3380,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 3380,
											"end": 3459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3380,
											"end": 3459,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 3380,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3342,
											"end": 3461,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 3342,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3500,
											"end": 3501,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 3570,
											"end": 3577,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3567,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3559,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3568,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 3525,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3578,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 3525,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3515,
											"end": 3578,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3515,
											"end": 3578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3627,
											"end": 3629,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 3698,
											"end": 3705,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3689,
											"end": 3695,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3674,
											"end": 3696,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 3653,
											"end": 3706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3706,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 3653,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3643,
											"end": 3706,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3643,
											"end": 3706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3598,
											"end": 3716,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3755,
											"end": 3757,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3781,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 3826,
											"end": 3833,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3817,
											"end": 3823,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3806,
											"end": 3815,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3824,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3781,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 3781,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3781,
											"end": 3834,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 3781,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3771,
											"end": 3834,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3771,
											"end": 3834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3726,
											"end": 3844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3232,
											"end": 3851,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3232,
											"end": 3851,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3232,
											"end": 3851,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3232,
											"end": 3851,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3232,
											"end": 3851,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3232,
											"end": 3851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3857,
											"end": 4186,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 3857,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 3922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3965,
											"end": 3967,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 3962,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3944,
											"end": 3951,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3940,
											"end": 3963,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3936,
											"end": 3968,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3933,
											"end": 4052,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3933,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 3933,
											"end": 4052,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3971,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 3971,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 3971,
											"end": 4050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3971,
											"end": 4050,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 3971,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3933,
											"end": 4052,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 3933,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4092,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 4161,
											"end": 4168,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4152,
											"end": 4158,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4141,
											"end": 4150,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4116,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 4116,
											"end": 4169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4116,
											"end": 4169,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 4116,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4169,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4062,
											"end": 4179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3857,
											"end": 4186,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3857,
											"end": 4186,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3857,
											"end": 4186,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3857,
											"end": 4186,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3857,
											"end": 4186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4192,
											"end": 4310,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 4192,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4279,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 4297,
											"end": 4302,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4279,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 4279,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4279,
											"end": 4303,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 4279,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4274,
											"end": 4277,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4267,
											"end": 4304,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4192,
											"end": 4310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4192,
											"end": 4310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4192,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4409,
											"end": 4413,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4449,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4436,
											"end": 4445,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4432,
											"end": 4450,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4424,
											"end": 4450,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4424,
											"end": 4450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4460,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 4528,
											"end": 4529,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4526,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4513,
											"end": 4530,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4504,
											"end": 4510,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4460,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 4460,
											"end": 4531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4460,
											"end": 4531,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 4460,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4544,
											"end": 5018,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 4544,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4669,
											"end": 4671,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4657,
											"end": 4666,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4648,
											"end": 4655,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4644,
											"end": 4667,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4640,
											"end": 4672,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4637,
											"end": 4756,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4637,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 4637,
											"end": 4756,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4675,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 4675,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 4675,
											"end": 4754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4675,
											"end": 4754,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 4675,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4637,
											"end": 4756,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 4637,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4795,
											"end": 4796,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4820,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 4865,
											"end": 4872,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4854,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4841,
											"end": 4863,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 4820,
											"end": 4873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4873,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 4820,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4810,
											"end": 4873,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4810,
											"end": 4873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4766,
											"end": 4883,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4922,
											"end": 4924,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 4993,
											"end": 5000,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4982,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 4991,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4948,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 4948,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4948,
											"end": 5001,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 4948,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4938,
											"end": 5001,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4938,
											"end": 5001,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5011,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4544,
											"end": 5018,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4544,
											"end": 5018,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4544,
											"end": 5018,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4544,
											"end": 5018,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4544,
											"end": 5018,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4544,
											"end": 5018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5024,
											"end": 5084,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 5024,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5052,
											"end": 5055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5073,
											"end": 5078,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5078,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5024,
											"end": 5084,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5024,
											"end": 5084,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5024,
											"end": 5084,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5024,
											"end": 5084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5232,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 5090,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5149,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5173,
											"end": 5226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 5191,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 5200,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 5218,
											"end": 5223,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 5200,
											"end": 5224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5224,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 5200,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5191,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 5191,
											"end": 5225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5191,
											"end": 5225,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 5191,
											"end": 5225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5173,
											"end": 5226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 5173,
											"end": 5226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5173,
											"end": 5226,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 5173,
											"end": 5226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5160,
											"end": 5226,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5160,
											"end": 5226,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5232,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5232,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5232,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5238,
											"end": 5364,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 5238,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5321,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 5352,
											"end": 5357,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5321,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 5321,
											"end": 5358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5321,
											"end": 5358,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 5321,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5308,
											"end": 5358,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5308,
											"end": 5358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5238,
											"end": 5364,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5238,
											"end": 5364,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5238,
											"end": 5364,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5238,
											"end": 5364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5370,
											"end": 5513,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 5370,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5446,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 5501,
											"end": 5506,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5470,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 5470,
											"end": 5507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5470,
											"end": 5507,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 5470,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5507,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5507,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5370,
											"end": 5513,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5370,
											"end": 5513,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5370,
											"end": 5513,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5370,
											"end": 5513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5519,
											"end": 5684,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 5519,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5623,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 5671,
											"end": 5676,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5623,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 5623,
											"end": 5677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5623,
											"end": 5677,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 5623,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5618,
											"end": 5621,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5611,
											"end": 5678,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5519,
											"end": 5684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5519,
											"end": 5684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5519,
											"end": 5684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5946,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 5690,
											"end": 5946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5800,
											"end": 5804,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5838,
											"end": 5840,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5827,
											"end": 5836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5815,
											"end": 5841,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5815,
											"end": 5841,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 5936,
											"end": 5937,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5934,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5938,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5912,
											"end": 5918,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 5851,
											"end": 5939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5939,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 5851,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5946,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5946,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5946,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5946,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5952,
											"end": 6092,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 5952,
											"end": 6092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6016,
											"end": 6025,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 6080,
											"end": 6085,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6049,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 6049,
											"end": 6086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6049,
											"end": 6086,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 6049,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6086,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5952,
											"end": 6092,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5952,
											"end": 6092,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5952,
											"end": 6092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5952,
											"end": 6092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6257,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 6098,
											"end": 6257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 6244,
											"end": 6249,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 6199,
											"end": 6250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6250,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 6199,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6194,
											"end": 6197,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6187,
											"end": 6251,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6257,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6257,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6263,
											"end": 6513,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 6263,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6370,
											"end": 6374,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6408,
											"end": 6410,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6397,
											"end": 6406,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6393,
											"end": 6411,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6385,
											"end": 6411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6385,
											"end": 6411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 6503,
											"end": 6504,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6492,
											"end": 6501,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6488,
											"end": 6505,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6479,
											"end": 6485,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 6421,
											"end": 6506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6506,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 6421,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6263,
											"end": 6513,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6263,
											"end": 6513,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6263,
											"end": 6513,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6263,
											"end": 6513,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6263,
											"end": 6513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6634,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 6519,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6604,
											"end": 6627,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 6621,
											"end": 6626,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6604,
											"end": 6627,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 6604,
											"end": 6627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6604,
											"end": 6627,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 6604,
											"end": 6627,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6599,
											"end": 6602,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6592,
											"end": 6628,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6640,
											"end": 6858,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 6640,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6735,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6769,
											"end": 6771,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6758,
											"end": 6767,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6754,
											"end": 6772,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6746,
											"end": 6772,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6746,
											"end": 6772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6782,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 6848,
											"end": 6849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6782,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 6782,
											"end": 6851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6782,
											"end": 6851,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 6782,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6640,
											"end": 6858,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6640,
											"end": 6858,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6640,
											"end": 6858,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6640,
											"end": 6858,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6640,
											"end": 6858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 6982,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 6864,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6951,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 6969,
											"end": 6974,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6951,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 6951,
											"end": 6975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6951,
											"end": 6975,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 6951,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6939,
											"end": 6976,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 6982,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 6982,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 6982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6988,
											"end": 7430,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 6988,
											"end": 7430,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7137,
											"end": 7141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7175,
											"end": 7177,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7164,
											"end": 7173,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7160,
											"end": 7178,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7152,
											"end": 7178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7152,
											"end": 7178,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7188,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 7256,
											"end": 7257,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7245,
											"end": 7254,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7241,
											"end": 7258,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7232,
											"end": 7238,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7188,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 7188,
											"end": 7259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7188,
											"end": 7259,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 7188,
											"end": 7259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7269,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 7337,
											"end": 7339,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7326,
											"end": 7335,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7322,
											"end": 7340,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7313,
											"end": 7319,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7269,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 7269,
											"end": 7341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7269,
											"end": 7341,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 7269,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7351,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 7419,
											"end": 7421,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7408,
											"end": 7417,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7404,
											"end": 7422,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7395,
											"end": 7401,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7351,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 7351,
											"end": 7423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7351,
											"end": 7423,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 7351,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6988,
											"end": 7430,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6988,
											"end": 7430,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6988,
											"end": 7430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6988,
											"end": 7430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6988,
											"end": 7430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6988,
											"end": 7430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6988,
											"end": 7430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7436,
											"end": 7513,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 7436,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7473,
											"end": 7480,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7502,
											"end": 7507,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7436,
											"end": 7513,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7436,
											"end": 7513,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7436,
											"end": 7513,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7436,
											"end": 7513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7519,
											"end": 7641,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 7519,
											"end": 7641,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7592,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 7610,
											"end": 7615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7592,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 7592,
											"end": 7616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7592,
											"end": 7616,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 7592,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7585,
											"end": 7590,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7582,
											"end": 7617,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7572,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 7572,
											"end": 7635,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7631,
											"end": 7632,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7629,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7621,
											"end": 7633,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7572,
											"end": 7635,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 7572,
											"end": 7635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7519,
											"end": 7641,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7519,
											"end": 7641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7647,
											"end": 7790,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 7647,
											"end": 7790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7704,
											"end": 7709,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7741,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7729,
											"end": 7742,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7720,
											"end": 7742,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7720,
											"end": 7742,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7751,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 7778,
											"end": 7783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7751,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 7751,
											"end": 7784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7751,
											"end": 7784,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 7751,
											"end": 7784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7647,
											"end": 7790,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7647,
											"end": 7790,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7647,
											"end": 7790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7647,
											"end": 7790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7647,
											"end": 7790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7796,
											"end": 8147,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 7796,
											"end": 8147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7866,
											"end": 7872,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7915,
											"end": 7917,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7912,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7894,
											"end": 7901,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7890,
											"end": 7913,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7886,
											"end": 7918,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 8002,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 7883,
											"end": 8002,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7921,
											"end": 8000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 7921,
											"end": 8000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 7921,
											"end": 8000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7921,
											"end": 8000,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 7921,
											"end": 8000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 8002,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 7883,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8041,
											"end": 8042,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8066,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 8122,
											"end": 8129,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8113,
											"end": 8119,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8102,
											"end": 8111,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8120,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8066,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 8066,
											"end": 8130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8066,
											"end": 8130,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 8066,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8056,
											"end": 8130,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8056,
											"end": 8130,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8012,
											"end": 8140,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7796,
											"end": 8147,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7796,
											"end": 8147,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7796,
											"end": 8147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7796,
											"end": 8147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7796,
											"end": 8147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8153,
											"end": 8271,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 8153,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8240,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 8258,
											"end": 8263,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8240,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 8240,
											"end": 8264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8240,
											"end": 8264,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 8240,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8235,
											"end": 8238,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8228,
											"end": 8265,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8153,
											"end": 8271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8153,
											"end": 8271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8153,
											"end": 8271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8277,
											"end": 8609,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 8277,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8398,
											"end": 8402,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8436,
											"end": 8438,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8425,
											"end": 8434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8421,
											"end": 8439,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8413,
											"end": 8439,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8413,
											"end": 8439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8449,
											"end": 8520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 8517,
											"end": 8518,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8515,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8502,
											"end": 8519,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8493,
											"end": 8499,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8449,
											"end": 8520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 8449,
											"end": 8520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8449,
											"end": 8520,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 8449,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 8598,
											"end": 8600,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8596,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8583,
											"end": 8601,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8574,
											"end": 8580,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 8530,
											"end": 8602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8602,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 8530,
											"end": 8602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8277,
											"end": 8609,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8277,
											"end": 8609,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8277,
											"end": 8609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8277,
											"end": 8609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8277,
											"end": 8609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8277,
											"end": 8609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8615,
											"end": 8795,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 8615,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8663,
											"end": 8740,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8660,
											"end": 8661,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8653,
											"end": 8741,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8764,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 8757,
											"end": 8758,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8750,
											"end": 8765,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8784,
											"end": 8788,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8781,
											"end": 8782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8774,
											"end": 8789,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 8903,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 8801,
											"end": 8903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8843,
											"end": 8851,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8890,
											"end": 8895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8887,
											"end": 8888,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8883,
											"end": 8896,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 8862,
											"end": 8896,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8862,
											"end": 8896,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 8903,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 8903,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 8903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 8903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8909,
											"end": 9757,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 8909,
											"end": 9757,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8970,
											"end": 8975,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 8981,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9001,
											"end": 9007,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9025,
											"end": 9030,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9030,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9039,
											"end": 9751,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 9039,
											"end": 9751,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9060,
											"end": 9061,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9050,
											"end": 9058,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9062,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9039,
											"end": 9751,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9039,
											"end": 9751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 9039,
											"end": 9751,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9155,
											"end": 9159,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9150,
											"end": 9153,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9160,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9137,
											"end": 9161,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9134,
											"end": 9184,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9134,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 9134,
											"end": 9184,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 9164,
											"end": 9182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9134,
											"end": 9184,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 9134,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9214,
											"end": 9215,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9204,
											"end": 9212,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9200,
											"end": 9216,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9197,
											"end": 9648,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9197,
											"end": 9648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 9197,
											"end": 9648,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9629,
											"end": 9633,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9622,
											"end": 9627,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9618,
											"end": 9634,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 9609,
											"end": 9634,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9609,
											"end": 9634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9197,
											"end": 9648,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 9197,
											"end": 9648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9679,
											"end": 9683,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9673,
											"end": 9677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9669,
											"end": 9684,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 9661,
											"end": 9684,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9661,
											"end": 9684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9709,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 9732,
											"end": 9740,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9709,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 9709,
											"end": 9741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9709,
											"end": 9741,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 9709,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9697,
											"end": 9741,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9697,
											"end": 9741,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9039,
											"end": 9751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 9039,
											"end": 9751,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9039,
											"end": 9751,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 9039,
											"end": 9751,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8909,
											"end": 9757,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8909,
											"end": 9757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8909,
											"end": 9757,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8909,
											"end": 9757,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8909,
											"end": 9757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8909,
											"end": 9757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8909,
											"end": 9757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8909,
											"end": 9757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9763,
											"end": 10836,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 9763,
											"end": 10836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9817,
											"end": 9822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10008,
											"end": 10016,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9998,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 9998,
											"end": 10038,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10029,
											"end": 10030,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10020,
											"end": 10030,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10020,
											"end": 10030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10031,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 10031,
											"end": 10036,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9998,
											"end": 10038,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 9998,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10057,
											"end": 10061,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10047,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 10047,
											"end": 10083,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10074,
											"end": 10075,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10065,
											"end": 10075,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10065,
											"end": 10075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10076,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 10076,
											"end": 10081,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10047,
											"end": 10083,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 10047,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10143,
											"end": 10147,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10191,
											"end": 10192,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10186,
											"end": 10213,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10186,
											"end": 10213,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 10186,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 10186,
											"end": 10213,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10227,
											"end": 10228,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10222,
											"end": 10413,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10222,
											"end": 10413,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 10222,
											"end": 10413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 10222,
											"end": 10413,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10136,
											"end": 10413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 10136,
											"end": 10413,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10186,
											"end": 10213,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 10186,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10204,
											"end": 10205,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10195,
											"end": 10205,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10195,
											"end": 10205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10206,
											"end": 10211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10206,
											"end": 10211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 10206,
											"end": 10211,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10222,
											"end": 10413,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 10222,
											"end": 10413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10267,
											"end": 10270,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 10257,
											"end": 10265,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10254,
											"end": 10271,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10251,
											"end": 10294,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10251,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 10251,
											"end": 10294,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10274,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 10274,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 10274,
											"end": 10292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10274,
											"end": 10292,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 10274,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10251,
											"end": 10294,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 10251,
											"end": 10294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10331,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10320,
											"end": 10321,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10316,
											"end": 10332,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 10307,
											"end": 10332,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10307,
											"end": 10332,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10358,
											"end": 10361,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10351,
											"end": 10356,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10348,
											"end": 10362,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10345,
											"end": 10385,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10345,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 10345,
											"end": 10385,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10365,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 10365,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 10365,
											"end": 10383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10365,
											"end": 10383,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 10365,
											"end": 10383,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10345,
											"end": 10385,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 10345,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10398,
											"end": 10403,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10398,
											"end": 10403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 10398,
											"end": 10403,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10136,
											"end": 10413,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 10136,
											"end": 10413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10136,
											"end": 10413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10522,
											"end": 10524,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10520,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10509,
											"end": 10525,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10503,
											"end": 10506,
											"name": "PUSH",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 10497,
											"end": 10501,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10494,
											"end": 10507,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10490,
											"end": 10526,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10472,
											"end": 10474,
											"name": "PUSH",
											"source": 12,
											"value": "4E"
										},
										{
											"begin": 10462,
											"end": 10470,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10459,
											"end": 10475,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10454,
											"end": 10456,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 10448,
											"end": 10452,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10445,
											"end": 10457,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10476,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10425,
											"end": 10536,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 10422,
											"end": 10668,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10422,
											"end": 10668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 10422,
											"end": 10668,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10578,
											"end": 10586,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10572,
											"end": 10576,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10568,
											"end": 10587,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 10559,
											"end": 10587,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10559,
											"end": 10587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10613,
											"end": 10616,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10606,
											"end": 10611,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10603,
											"end": 10617,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10600,
											"end": 10640,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10600,
											"end": 10640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 10600,
											"end": 10640,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10620,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 10620,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 10620,
											"end": 10638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10620,
											"end": 10638,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 10620,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10600,
											"end": 10640,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 10600,
											"end": 10640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10653,
											"end": 10658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 10653,
											"end": 10658,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10422,
											"end": 10668,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 10422,
											"end": 10668,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10693,
											"end": 10735,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 10731,
											"end": 10734,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10729,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10715,
											"end": 10719,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10712,
											"end": 10713,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10693,
											"end": 10735,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 10693,
											"end": 10735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10693,
											"end": 10735,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 10693,
											"end": 10735,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10678,
											"end": 10735,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10678,
											"end": 10735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10678,
											"end": 10735,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10678,
											"end": 10735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10767,
											"end": 10771,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10762,
											"end": 10765,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10758,
											"end": 10772,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10748,
											"end": 10773,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10745,
											"end": 10796,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10745,
											"end": 10796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 10745,
											"end": 10796,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10776,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 10776,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 10776,
											"end": 10794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10776,
											"end": 10794,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 10776,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10745,
											"end": 10796,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 10745,
											"end": 10796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10825,
											"end": 10829,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10818,
											"end": 10823,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10814,
											"end": 10830,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10805,
											"end": 10830,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10805,
											"end": 10830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9763,
											"end": 10836,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 9763,
											"end": 10836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9763,
											"end": 10836,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9763,
											"end": 10836,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9763,
											"end": 10836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9763,
											"end": 10836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9763,
											"end": 10836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9763,
											"end": 10836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10842,
											"end": 11125,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 10842,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10901,
											"end": 10906,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10925,
											"end": 10948,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 10943,
											"end": 10947,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10925,
											"end": 10948,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 10925,
											"end": 10948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10925,
											"end": 10948,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 10925,
											"end": 10948,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10917,
											"end": 10948,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10917,
											"end": 10948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10969,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 10986,
											"end": 10994,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10969,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 10969,
											"end": 10995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10969,
											"end": 10995,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 10969,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10957,
											"end": 10995,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10957,
											"end": 10995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11014,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 11051,
											"end": 11117,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11041,
											"end": 11049,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11035,
											"end": 11039,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11014,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 11014,
											"end": 11118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11014,
											"end": 11118,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 11014,
											"end": 11118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11005,
											"end": 11118,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11005,
											"end": 11118,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10842,
											"end": 11125,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10842,
											"end": 11125,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10842,
											"end": 11125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10842,
											"end": 11125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10842,
											"end": 11125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11131,
											"end": 11325,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 11131,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11171,
											"end": 11175,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11191,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 11209,
											"end": 11210,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11191,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 11191,
											"end": 11211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11191,
											"end": 11211,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 11191,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11186,
											"end": 11211,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11186,
											"end": 11211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11225,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 11243,
											"end": 11244,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11225,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 11225,
											"end": 11245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11225,
											"end": 11245,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 11225,
											"end": 11245,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11220,
											"end": 11245,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11220,
											"end": 11245,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11269,
											"end": 11270,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11266,
											"end": 11267,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11262,
											"end": 11271,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11254,
											"end": 11271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11254,
											"end": 11271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11293,
											"end": 11294,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11287,
											"end": 11291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11284,
											"end": 11295,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11281,
											"end": 11318,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11281,
											"end": 11318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 11281,
											"end": 11318,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11298,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 11298,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 11298,
											"end": 11316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11298,
											"end": 11316,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 11298,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11281,
											"end": 11318,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 11281,
											"end": 11318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11131,
											"end": 11325,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11131,
											"end": 11325,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11131,
											"end": 11325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11131,
											"end": 11325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11131,
											"end": 11325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11331,
											"end": 11741,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 11331,
											"end": 11741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11371,
											"end": 11378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11394,
											"end": 11414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 11412,
											"end": 11413,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11394,
											"end": 11414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 11394,
											"end": 11414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11394,
											"end": 11414,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 11394,
											"end": 11414,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11389,
											"end": 11414,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11389,
											"end": 11414,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11428,
											"end": 11448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 11446,
											"end": 11447,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11428,
											"end": 11448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 11428,
											"end": 11448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11428,
											"end": 11448,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 11428,
											"end": 11448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11423,
											"end": 11448,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11423,
											"end": 11448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11483,
											"end": 11484,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11480,
											"end": 11481,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11476,
											"end": 11485,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 11505,
											"end": 11535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 11523,
											"end": 11534,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11505,
											"end": 11535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 11505,
											"end": 11535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11505,
											"end": 11535,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 11505,
											"end": 11535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11494,
											"end": 11535,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11494,
											"end": 11535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11684,
											"end": 11685,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11675,
											"end": 11682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11671,
											"end": 11686,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11668,
											"end": 11669,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11665,
											"end": 11687,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 11645,
											"end": 11646,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11638,
											"end": 11647,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11618,
											"end": 11701,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 11595,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 11595,
											"end": 11734,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11714,
											"end": 11732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 11714,
											"end": 11732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 11714,
											"end": 11732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11714,
											"end": 11732,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 11714,
											"end": 11732,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11595,
											"end": 11734,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 11595,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11379,
											"end": 11741,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11331,
											"end": 11741,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11331,
											"end": 11741,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11331,
											"end": 11741,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11331,
											"end": 11741,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11331,
											"end": 11741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11747,
											"end": 11927,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 11747,
											"end": 11927,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11795,
											"end": 11872,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11792,
											"end": 11793,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11785,
											"end": 11873,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11892,
											"end": 11896,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 11889,
											"end": 11890,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11882,
											"end": 11897,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11916,
											"end": 11920,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11913,
											"end": 11914,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11906,
											"end": 11921,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12118,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 11933,
											"end": 12118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11973,
											"end": 11974,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11990,
											"end": 12010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 12008,
											"end": 12009,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11990,
											"end": 12010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 11990,
											"end": 12010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11990,
											"end": 12010,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 11990,
											"end": 12010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11985,
											"end": 12010,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11985,
											"end": 12010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12024,
											"end": 12044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 12042,
											"end": 12043,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12024,
											"end": 12044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 12024,
											"end": 12044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12024,
											"end": 12044,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 12024,
											"end": 12044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12019,
											"end": 12044,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12019,
											"end": 12044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12063,
											"end": 12064,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12053,
											"end": 12088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 12053,
											"end": 12088,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12068,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 12068,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 12068,
											"end": 12086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12068,
											"end": 12086,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 12068,
											"end": 12086,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12053,
											"end": 12088,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 12053,
											"end": 12088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12110,
											"end": 12111,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12107,
											"end": 12108,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12103,
											"end": 12112,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12112,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12118,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12118,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12118,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12118,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12124,
											"end": 12315,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 12124,
											"end": 12315,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12164,
											"end": 12167,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12183,
											"end": 12203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 12201,
											"end": 12202,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12183,
											"end": 12203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 12183,
											"end": 12203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12183,
											"end": 12203,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 12183,
											"end": 12203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12178,
											"end": 12203,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12178,
											"end": 12203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 12235,
											"end": 12236,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 12217,
											"end": 12237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12237,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 12217,
											"end": 12237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12212,
											"end": 12237,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12212,
											"end": 12237,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12260,
											"end": 12261,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12257,
											"end": 12258,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12253,
											"end": 12262,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12246,
											"end": 12262,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12246,
											"end": 12262,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12281,
											"end": 12284,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12278,
											"end": 12279,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12275,
											"end": 12285,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12272,
											"end": 12308,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12272,
											"end": 12308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 12272,
											"end": 12308,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12288,
											"end": 12306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 12288,
											"end": 12306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 12288,
											"end": 12306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12288,
											"end": 12306,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 12288,
											"end": 12306,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12272,
											"end": 12308,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 12272,
											"end": 12308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12124,
											"end": 12315,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12124,
											"end": 12315,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12124,
											"end": 12315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12124,
											"end": 12315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12124,
											"end": 12315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12321,
											"end": 12496,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 12321,
											"end": 12496,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12359,
											"end": 12362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12382,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 12399,
											"end": 12404,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12382,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 12382,
											"end": 12405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12382,
											"end": 12405,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 12382,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12373,
											"end": 12405,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12373,
											"end": 12405,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12427,
											"end": 12437,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12420,
											"end": 12425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12417,
											"end": 12438,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12414,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 12414,
											"end": 12461,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12441,
											"end": 12459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 12441,
											"end": 12459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 12441,
											"end": 12459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12441,
											"end": 12459,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 12441,
											"end": 12459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12414,
											"end": 12461,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 12414,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12488,
											"end": 12489,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12481,
											"end": 12486,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12477,
											"end": 12490,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12470,
											"end": 12490,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12470,
											"end": 12490,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12321,
											"end": 12496,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12321,
											"end": 12496,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12321,
											"end": 12496,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12321,
											"end": 12496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12502,
											"end": 12834,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 12502,
											"end": 12834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12623,
											"end": 12627,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12661,
											"end": 12663,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12650,
											"end": 12659,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12646,
											"end": 12664,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12638,
											"end": 12664,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12638,
											"end": 12664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12674,
											"end": 12745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 12742,
											"end": 12743,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12731,
											"end": 12740,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12727,
											"end": 12744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12718,
											"end": 12724,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12674,
											"end": 12745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 12674,
											"end": 12745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12674,
											"end": 12745,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 12674,
											"end": 12745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12755,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 12823,
											"end": 12825,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12812,
											"end": 12821,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12808,
											"end": 12826,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12799,
											"end": 12805,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12755,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 12755,
											"end": 12827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12755,
											"end": 12827,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 12755,
											"end": 12827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12502,
											"end": 12834,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12502,
											"end": 12834,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12502,
											"end": 12834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12502,
											"end": 12834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12502,
											"end": 12834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12502,
											"end": 12834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12840,
											"end": 13172,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 12840,
											"end": 13172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12961,
											"end": 12965,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12999,
											"end": 13001,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12988,
											"end": 12997,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13002,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12976,
											"end": 13002,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12976,
											"end": 13002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13012,
											"end": 13083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 13080,
											"end": 13081,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13069,
											"end": 13078,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13065,
											"end": 13082,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13056,
											"end": 13062,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13012,
											"end": 13083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 13012,
											"end": 13083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13012,
											"end": 13083,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 13012,
											"end": 13083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13093,
											"end": 13165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 13161,
											"end": 13163,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13150,
											"end": 13159,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13146,
											"end": 13164,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13137,
											"end": 13143,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13093,
											"end": 13165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 13093,
											"end": 13165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13093,
											"end": 13165,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 13093,
											"end": 13165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12840,
											"end": 13172,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12840,
											"end": 13172,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12840,
											"end": 13172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12840,
											"end": 13172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12840,
											"end": 13172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12840,
											"end": 13172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13178,
											"end": 13268,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 13178,
											"end": 13268,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13212,
											"end": 13219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13255,
											"end": 13260,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13248,
											"end": 13261,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13241,
											"end": 13262,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13230,
											"end": 13262,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13230,
											"end": 13262,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13178,
											"end": 13268,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13178,
											"end": 13268,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13178,
											"end": 13268,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13178,
											"end": 13268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13274,
											"end": 13390,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 13274,
											"end": 13390,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13344,
											"end": 13365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 13359,
											"end": 13364,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13344,
											"end": 13365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 13344,
											"end": 13365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13344,
											"end": 13365,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 13344,
											"end": 13365,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13342,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13334,
											"end": 13366,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 13324,
											"end": 13384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 13324,
											"end": 13384,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13380,
											"end": 13381,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13377,
											"end": 13378,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13370,
											"end": 13382,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13324,
											"end": 13384,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 13324,
											"end": 13384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13274,
											"end": 13390,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13274,
											"end": 13390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13396,
											"end": 13533,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 13396,
											"end": 13533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13450,
											"end": 13455,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13487,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13475,
											"end": 13488,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13466,
											"end": 13488,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13466,
											"end": 13488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13497,
											"end": 13527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 13521,
											"end": 13526,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13497,
											"end": 13527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 13497,
											"end": 13527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13497,
											"end": 13527,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 13497,
											"end": 13527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13396,
											"end": 13533,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13396,
											"end": 13533,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13396,
											"end": 13533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13396,
											"end": 13533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13396,
											"end": 13533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13884,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 13539,
											"end": 13884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13606,
											"end": 13612,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13655,
											"end": 13657,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13643,
											"end": 13652,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13634,
											"end": 13641,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13630,
											"end": 13653,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13626,
											"end": 13658,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 13623,
											"end": 13742,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13623,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 13623,
											"end": 13742,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13661,
											"end": 13740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 13661,
											"end": 13740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 13661,
											"end": 13740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13661,
											"end": 13740,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 13661,
											"end": 13740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13623,
											"end": 13742,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 13623,
											"end": 13742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13781,
											"end": 13782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13806,
											"end": 13867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 13859,
											"end": 13866,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13850,
											"end": 13856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13839,
											"end": 13848,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13835,
											"end": 13857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13806,
											"end": 13867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 13806,
											"end": 13867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13806,
											"end": 13867,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 13806,
											"end": 13867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13796,
											"end": 13867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13796,
											"end": 13867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13752,
											"end": 13877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13884,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13890,
											"end": 14090,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 13890,
											"end": 14090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13929,
											"end": 13933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13949,
											"end": 13968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 13966,
											"end": 13967,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13949,
											"end": 13968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 13949,
											"end": 13968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13949,
											"end": 13968,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 13949,
											"end": 13968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13944,
											"end": 13968,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13944,
											"end": 13968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13982,
											"end": 14001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 13999,
											"end": 14000,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13982,
											"end": 14001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 13982,
											"end": 14001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13982,
											"end": 14001,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 13982,
											"end": 14001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13977,
											"end": 14001,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13977,
											"end": 14001,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14025,
											"end": 14026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14022,
											"end": 14023,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14018,
											"end": 14027,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14010,
											"end": 14027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14010,
											"end": 14027,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14049,
											"end": 14059,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14043,
											"end": 14047,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14040,
											"end": 14060,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14037,
											"end": 14083,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14037,
											"end": 14083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 14037,
											"end": 14083,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14063,
											"end": 14081,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 14063,
											"end": 14081,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 14063,
											"end": 14081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14063,
											"end": 14081,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 14063,
											"end": 14081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14037,
											"end": 14083,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 14037,
											"end": 14083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13890,
											"end": 14090,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13890,
											"end": 14090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13890,
											"end": 14090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13890,
											"end": 14090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13890,
											"end": 14090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interfaces/IFomo3d.sol",
								"contracts/periphery/Fomo3d.sol",
								"contracts/periphery/Register.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"amount(address)": "b9f0bf66",
							"claim()": "4e71d92d",
							"claimed(address)": "c884ef83",
							"decimal()": "76809ce3",
							"deposit(address,uint256,uint256)": "0efe6a8b",
							"getClaimed(address)": "eb46260e",
							"getCurrentHistoryNonce()": "6d1c6041",
							"getHistory(uint32)": "07040e91",
							"getPredict(address,uint256)": "13da0777",
							"getTotalProfit(address)": "8233fbcb",
							"getUnclaim(address)": "480a4262",
							"historyInfo(uint32)": "f54f0a8d",
							"historyNonce()": "cdf033f3",
							"mask(address)": "eeda71d5",
							"paymentToken()": "3013ce29",
							"price()": "a035b1fe",
							"register()": "1aa3a008",
							"totalAmount()": "1a39d8ef",
							"totalValue()": "d4c3eea0",
							"unclaim(address)": "1161e582",
							"valuePerAmount()": "7a19a488"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_basePaymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_register\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidValue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Fomo3dClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Fomo3dDeposit\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimal\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentHistoryNonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_nonce\",\"type\":\"uint32\"}],\"name\":\"getHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IFomo3d.HistoryInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getPredict\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTotalProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUnclaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"historyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"historyNonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mask\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"register\",\"outputs\":[{\"internalType\":\"contract Register\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unclaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valuePerAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SeekersAlliance\",\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256,uint256)\":{\"params\":{\"_amount\":\"The amount of the deposit\",\"_user\":\"The user address\",\"_value\":\"The value of the deposit\"}},\"getHistory(uint32)\":{\"params\":{\"_nonce\":\"The nonce of the history\"}},\"getPredict(address,uint256)\":{\"params\":{\"_amount\":\"The amount of user put more here\",\"_user\":\"The user address\"}},\"getUnclaim(address)\":{\"params\":{\"_user\":\"The user address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim()\":{\"notice\":\"Withdraw all the value from the unclaim part\"},\"deposit(address,uint256,uint256)\":{\"notice\":\"Deposit from the userOnly the admin role can call this function\"},\"getCurrentHistoryNonce()\":{\"notice\":\"get history current nonce. (The nonce of the last history)\"},\"getHistory(uint32)\":{\"notice\":\"get history info with nonce\"},\"getPredict(address,uint256)\":{\"notice\":\"Return how much the user can get when he put more amount here\"},\"getUnclaim(address)\":{\"notice\":\"get user info\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Fomo3d.sol\":\"Fomo3d\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/IFomo3d.sol\":{\"keccak256\":\"0x3c9e6589f4aa0815d22c9a81a9c52529c8968fc6e484394b71aaf6fc712196de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13048dc3e05f45ad0626dc2974dd482965b988c839ec54792ad2cb38ed88ba0c\",\"dweb:/ipfs/QmSQD4HZLYYkg59EER3tkqiFtsLDid6rcRE3xxBRWJGEiR\"]},\"contracts/periphery/Fomo3d.sol\":{\"keccak256\":\"0xc67ef5a8b0735dd27e9df541a5bafb7164a32b3a34a39a7d8e1e3b025a93e04d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9fe73519cd5c7a1ae7ac5a7a71182c8098a179b1ff99ed6dfad668844a90a95\",\"dweb:/ipfs/QmRnJ3pXByYfhGXE1EUDMeFAMhyf48orNy1WjwLYUPPC6T\"]},\"contracts/periphery/Register.sol\":{\"keccak256\":\"0xc5acce36f5a5a4f525f0e0f7f969d7b3d06d8aea06a2c6a8fdb13445ddcf2871\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921d2d569fac5c7f4b15fa6b5b5776449cca15990eaa08daead6025eb20235e1\",\"dweb:/ipfs/Qmb1LcTFiEXfXUQ2WgPkgiYbPnZXwUa9g3JZc3nMVnzSUx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1308,
								"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
								"label": "paymentToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ERC20)1030"
							},
							{
								"astId": 1311,
								"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
								"label": "register",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(Register)1828"
							},
							{
								"astId": 1315,
								"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
								"label": "amount",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1319,
								"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
								"label": "mask",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1323,
								"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
								"label": "unclaim",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1327,
								"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
								"label": "claimed",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1332,
								"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
								"label": "historyInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint32,t_struct(HistoryInfo)1234_storage)"
							},
							{
								"astId": 1334,
								"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
								"label": "historyNonce",
								"offset": 0,
								"slot": "7",
								"type": "t_uint32"
							},
							{
								"astId": 1336,
								"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
								"label": "totalAmount",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1338,
								"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
								"label": "totalValue",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1340,
								"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
								"label": "valuePerAmount",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1342,
								"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
								"label": "decimal",
								"offset": 0,
								"slot": "11",
								"type": "t_uint32"
							},
							{
								"astId": 1344,
								"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
								"label": "price",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ERC20)1030": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_contract(Register)1828": {
								"encoding": "inplace",
								"label": "contract Register",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint32,t_struct(HistoryInfo)1234_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct IFomo3d.HistoryInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(HistoryInfo)1234_storage"
							},
							"t_struct(HistoryInfo)1234_storage": {
								"encoding": "inplace",
								"label": "struct IFomo3d.HistoryInfo",
								"members": [
									{
										"astId": 1229,
										"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1231,
										"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
										"label": "value",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1233,
										"contract": "contracts/periphery/Fomo3d.sol:Fomo3d",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claim()": {
								"notice": "Withdraw all the value from the unclaim part"
							},
							"deposit(address,uint256,uint256)": {
								"notice": "Deposit from the userOnly the admin role can call this function"
							},
							"getCurrentHistoryNonce()": {
								"notice": "get history current nonce. (The nonce of the last history)"
							},
							"getHistory(uint32)": {
								"notice": "get history info with nonce"
							},
							"getPredict(address,uint256)": {
								"notice": "Return how much the user can get when he put more amount here"
							},
							"getUnclaim(address)": {
								"notice": "get user info"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/periphery/Register.sol": {
				"Register": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_initialAdmin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DRAW",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FOMO3D",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "JACKPOT",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MARKET",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRIZE_ITEMS",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REFERRAL",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOKEN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VRF",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "checkRole",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "currentContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_role",
									"type": "bytes32"
								}
							],
							"name": "getContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/periphery/Register.sol\":145:1315  contract Register is AccessControl{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/periphery/Register.sol\":738:837  constructor(address _initialAdmin) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/periphery/Register.sol\":784:829  _grantRole(DEFAULT_ADMIN_ROLE, _initialAdmin) */\n  tag_6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/periphery/Register.sol\":795:813  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/periphery/Register.sol\":815:828  _initialAdmin */\n  dup3\n    /* \"contracts/periphery/Register.sol\":784:794  _grantRole */\n  shl(0x20, tag_7)\n    /* \"contracts/periphery/Register.sol\":784:829  _grantRole(DEFAULT_ADMIN_ROLE, _initialAdmin) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/periphery/Register.sol\":738:837  constructor(address _initialAdmin) {... */\n  pop\n    /* \"contracts/periphery/Register.sol\":145:1315  contract Register is AccessControl{... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_9:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_39\n  tag_19\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":932:1051   */\ntag_38:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_40\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_24\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/periphery/Register.sol\":145:1315  contract Register is AccessControl{... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/periphery/Register.sol\":145:1315  contract Register is AccessControl{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x74d16f5c\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc63568c7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe16c7d98\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf46f16c2\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x74d16f5c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x82bfefc8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa126285b\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x43c5cd74\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4e2164c9\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x619d36ef\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x12d9a6ad\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x20987a7e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Register.sol\":1037:1179  function checkRole(bytes32 _role, address _account) public view {... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/periphery/Register.sol\":379:441  bytes32 public constant PRIZE_ITEMS = keccak256(\"PRIZE_ITEMS\") */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Register.sol\":845:1025  function grantRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)){... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/periphery/Register.sol\":259:313  bytes32 public constant JACKPOT = keccak256(\"JACKPOT\") */\n    tag_9:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Register.sol\":200:252  bytes32 public constant FOMO3D = keccak256(\"FOMO3D\") */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Register.sol\":621:669  bytes32 public constant DRAW = keccak256(\"DRAW\") */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Register.sol\":678:729  mapping (bytes32 => address) public currentContract */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Register.sol\":564:614  bytes32 public constant TOKEN = keccak256(\"TOKEN\") */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Register.sol\":511:557  bytes32 public constant VRF = keccak256(\"VRF\") */\n    tag_15:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_16:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Register.sol\":448:504  bytes32 public constant REFERRAL = keccak256(\"REFERRAL\") */\n    tag_17:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_18:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/periphery/Register.sol\":1185:1298  function getContract(bytes32 _role) public view returns (address){... */\n    tag_19:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Register.sol\":320:372  bytes32 public constant MARKET = keccak256(\"MARKET\") */\n    tag_20:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_91\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_92\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Register.sol\":1037:1179  function checkRole(bytes32 _role, address _account) public view {... */\n    tag_33:\n        /* \"contracts/periphery/Register.sol\":1120:1144  hasRole(_role, _account) */\n      tag_94\n        /* \"contracts/periphery/Register.sol\":1128:1133  _role */\n      dup3\n        /* \"contracts/periphery/Register.sol\":1135:1143  _account */\n      dup3\n        /* \"contracts/periphery/Register.sol\":1120:1127  hasRole */\n      tag_68\n        /* \"contracts/periphery/Register.sol\":1120:1144  hasRole(_role, _account) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/periphery/Register.sol\":1112:1171  require(hasRole(_role, _account), \"Register: INVALID_ROLE\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/periphery/Register.sol\":1037:1179  function checkRole(bytes32 _role, address _account) public view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Register.sol\":379:441  bytes32 public constant PRIZE_ITEMS = keccak256(\"PRIZE_ITEMS\") */\n    tag_35:\n        /* \"contracts/periphery/Register.sol\":417:441  keccak256(\"PRIZE_ITEMS\") */\n      0xdc56da5a1587a4cd75ea240b3d5cd7c4a0eaac792d95a49979f1c23a0cf8895f\n        /* \"contracts/periphery/Register.sol\":379:441  bytes32 public constant PRIZE_ITEMS = keccak256(\"PRIZE_ITEMS\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Register.sol\":845:1025  function grantRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)){... */\n    tag_45:\n        /* \"contracts/periphery/Register.sol\":920:938  getRoleAdmin(role) */\n      tag_99\n        /* \"contracts/periphery/Register.sol\":933:937  role */\n      dup3\n        /* \"contracts/periphery/Register.sol\":920:932  getRoleAdmin */\n      tag_41\n        /* \"contracts/periphery/Register.sol\":920:938  getRoleAdmin(role) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_101\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_102\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/periphery/Register.sol\":950:975  _grantRole(role, account) */\n      tag_104\n        /* \"contracts/periphery/Register.sol\":961:965  role */\n      dup4\n        /* \"contracts/periphery/Register.sol\":967:974  account */\n      dup4\n        /* \"contracts/periphery/Register.sol\":950:960  _grantRole */\n      tag_105\n        /* \"contracts/periphery/Register.sol\":950:975  _grantRole(role, account) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"contracts/periphery/Register.sol\":1010:1017  account */\n      dup2\n        /* \"contracts/periphery/Register.sol\":986:1001  currentContract */\n      0x01\n        /* \"contracts/periphery/Register.sol\":986:1007  currentContract[role] */\n      0x00\n        /* \"contracts/periphery/Register.sol\":1002:1006  role */\n      dup6\n        /* \"contracts/periphery/Register.sol\":986:1007  currentContract[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/periphery/Register.sol\":986:1017  currentContract[role] = account */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Register.sol\":845:1025  function grantRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)){... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_107\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_109\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_110\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_110:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Register.sol\":259:313  bytes32 public constant JACKPOT = keccak256(\"JACKPOT\") */\n    tag_50:\n        /* \"contracts/periphery/Register.sol\":293:313  keccak256(\"JACKPOT\") */\n      0xf45223fc822e0a02a042bb2eec36a76af2a028cc55539c3a40ab438d1089e1c0\n        /* \"contracts/periphery/Register.sol\":259:313  bytes32 public constant JACKPOT = keccak256(\"JACKPOT\") */\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Register.sol\":200:252  bytes32 public constant FOMO3D = keccak256(\"FOMO3D\") */\n    tag_53:\n        /* \"contracts/periphery/Register.sol\":233:252  keccak256(\"FOMO3D\") */\n      0x64b1d43f4e53241bce58c6f9670f08a22934a523acf2a5359fa7c904ff98bd97\n        /* \"contracts/periphery/Register.sol\":200:252  bytes32 public constant FOMO3D = keccak256(\"FOMO3D\") */\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Register.sol\":621:669  bytes32 public constant DRAW = keccak256(\"DRAW\") */\n    tag_56:\n        /* \"contracts/periphery/Register.sol\":652:669  keccak256(\"DRAW\") */\n      0x1cf54708aaa392dbeba88d1a07e69feaba67586acd469366b89b52bf44132258\n        /* \"contracts/periphery/Register.sol\":621:669  bytes32 public constant DRAW = keccak256(\"DRAW\") */\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Register.sol\":678:729  mapping (bytes32 => address) public currentContract */\n    tag_60:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Register.sol\":564:614  bytes32 public constant TOKEN = keccak256(\"TOKEN\") */\n    tag_64:\n        /* \"contracts/periphery/Register.sol\":596:614  keccak256(\"TOKEN\") */\n      0x96706879d29c248edfb2a2563a8a9d571c49634c0f82013e6f5a7cde739d35d4\n        /* \"contracts/periphery/Register.sol\":564:614  bytes32 public constant TOKEN = keccak256(\"TOKEN\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Register.sol\":511:557  bytes32 public constant VRF = keccak256(\"VRF\") */\n    tag_71:\n        /* \"contracts/periphery/Register.sol\":541:557  keccak256(\"VRF\") */\n      0xcd0c49d5c8438d0944f64e0d3825bed3b606f318474213a77860c93bca5ed999\n        /* \"contracts/periphery/Register.sol\":511:557  bytes32 public constant VRF = keccak256(\"VRF\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Register.sol\":448:504  bytes32 public constant REFERRAL = keccak256(\"REFERRAL\") */\n    tag_77:\n        /* \"contracts/periphery/Register.sol\":483:504  keccak256(\"REFERRAL\") */\n      0x4af58918e2c6f17f8b6da7260d8669fa63150ffd279395662a723476f776f76a\n        /* \"contracts/periphery/Register.sol\":448:504  bytes32 public constant REFERRAL = keccak256(\"REFERRAL\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_41\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_102\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_117\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_117:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Register.sol\":1185:1298  function getContract(bytes32 _role) public view returns (address){... */\n    tag_84:\n        /* \"contracts/periphery/Register.sol\":1242:1249  address */\n      0x00\n        /* \"contracts/periphery/Register.sol\":1268:1283  currentContract */\n      0x01\n        /* \"contracts/periphery/Register.sol\":1268:1290  currentContract[_role] */\n      0x00\n        /* \"contracts/periphery/Register.sol\":1284:1289  _role */\n      dup4\n        /* \"contracts/periphery/Register.sol\":1268:1290  currentContract[_role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Register.sol\":1261:1290  return currentContract[_role] */\n      swap1\n      pop\n        /* \"contracts/periphery/Register.sol\":1185:1298  function getContract(bytes32 _role) public view returns (address){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Register.sol\":320:372  bytes32 public constant MARKET = keccak256(\"MARKET\") */\n    tag_87:\n        /* \"contracts/periphery/Register.sol\":353:372  keccak256(\"MARKET\") */\n      0x23acc66832ff38a7ce3c1caf89922410f4374ba8fd897ffa98f088747997bc6d\n        /* \"contracts/periphery/Register.sol\":320:372  bytes32 public constant MARKET = keccak256(\"MARKET\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_121\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_125\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_68\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_127\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_124)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_124:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_131\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_68\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_130)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_130:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_136\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_68\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap3\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_141:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_143:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_144:\n        /* \"#utility.yul\":561:584   */\n      tag_166\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_143\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_167:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_145:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_169\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_144\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_172\n      tag_141\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":833:952   */\n    tag_171:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_173\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_145\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_146:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_147:\n        /* \"#utility.yul\":1268:1289   */\n      tag_176\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_146\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_178\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_147\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_148:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_149:\n        /* \"#utility.yul\":1674:1698   */\n      tag_181\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_148\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_182:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_150:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_184\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_149\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2000   */\n    tag_151:\n        /* \"#utility.yul\":1911:1918   */\n      0x00\n        /* \"#utility.yul\":1951:1993   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1944:1949   */\n      dup3\n        /* \"#utility.yul\":1940:1994   */\n      and\n        /* \"#utility.yul\":1929:1994   */\n      swap1\n      pop\n        /* \"#utility.yul\":1874:2000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2006:2102   */\n    tag_152:\n        /* \"#utility.yul\":2043:2050   */\n      0x00\n        /* \"#utility.yul\":2072:2096   */\n      tag_187\n        /* \"#utility.yul\":2090:2095   */\n      dup3\n        /* \"#utility.yul\":2072:2096   */\n      tag_151\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2061:2096   */\n      swap1\n      pop\n        /* \"#utility.yul\":2006:2102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2230   */\n    tag_153:\n        /* \"#utility.yul\":2181:2205   */\n      tag_189\n        /* \"#utility.yul\":2199:2204   */\n      dup2\n        /* \"#utility.yul\":2181:2205   */\n      tag_152\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2174:2179   */\n      dup2\n        /* \"#utility.yul\":2171:2206   */\n      eq\n        /* \"#utility.yul\":2161:2224   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":2220:2221   */\n      0x00\n        /* \"#utility.yul\":2217:2218   */\n      dup1\n        /* \"#utility.yul\":2210:2222   */\n      revert\n        /* \"#utility.yul\":2161:2224   */\n    tag_190:\n        /* \"#utility.yul\":2108:2230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2375   */\n    tag_154:\n        /* \"#utility.yul\":2282:2287   */\n      0x00\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2298:2327   */\n      swap1\n      pop\n        /* \"#utility.yul\":2336:2369   */\n      tag_192\n        /* \"#utility.yul\":2363:2368   */\n      dup2\n        /* \"#utility.yul\":2336:2369   */\n      tag_153\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2236:2375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:2855   */\n    tag_32:\n        /* \"#utility.yul\":2449:2455   */\n      0x00\n        /* \"#utility.yul\":2457:2463   */\n      dup1\n        /* \"#utility.yul\":2506:2508   */\n      0x40\n        /* \"#utility.yul\":2494:2503   */\n      dup4\n        /* \"#utility.yul\":2485:2492   */\n      dup6\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2593   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":2512:2591   */\n      tag_195\n      tag_141\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2474:2593   */\n    tag_194:\n        /* \"#utility.yul\":2632:2633   */\n      0x00\n        /* \"#utility.yul\":2657:2710   */\n      tag_196\n        /* \"#utility.yul\":2702:2709   */\n      dup6\n        /* \"#utility.yul\":2693:2699   */\n      dup3\n        /* \"#utility.yul\":2682:2691   */\n      dup7\n        /* \"#utility.yul\":2678:2700   */\n      add\n        /* \"#utility.yul\":2657:2710   */\n      tag_150\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2647:2710   */\n      swap3\n      pop\n        /* \"#utility.yul\":2603:2720   */\n      pop\n        /* \"#utility.yul\":2759:2761   */\n      0x20\n        /* \"#utility.yul\":2785:2838   */\n      tag_197\n        /* \"#utility.yul\":2830:2837   */\n      dup6\n        /* \"#utility.yul\":2821:2827   */\n      dup3\n        /* \"#utility.yul\":2810:2819   */\n      dup7\n        /* \"#utility.yul\":2806:2828   */\n      add\n        /* \"#utility.yul\":2785:2838   */\n      tag_154\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2775:2838   */\n      swap2\n      pop\n        /* \"#utility.yul\":2730:2848   */\n      pop\n        /* \"#utility.yul\":2381:2855   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2861:2979   */\n    tag_155:\n        /* \"#utility.yul\":2948:2972   */\n      tag_199\n        /* \"#utility.yul\":2966:2971   */\n      dup2\n        /* \"#utility.yul\":2948:2972   */\n      tag_148\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2943:2946   */\n      dup3\n        /* \"#utility.yul\":2936:2973   */\n      mstore\n        /* \"#utility.yul\":2861:2979   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2985:3207   */\n    tag_37:\n        /* \"#utility.yul\":3078:3082   */\n      0x00\n        /* \"#utility.yul\":3116:3118   */\n      0x20\n        /* \"#utility.yul\":3105:3114   */\n      dup3\n        /* \"#utility.yul\":3101:3119   */\n      add\n        /* \"#utility.yul\":3093:3119   */\n      swap1\n      pop\n        /* \"#utility.yul\":3129:3200   */\n      tag_201\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3129:3200   */\n      tag_155\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2985:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_40:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_204\n      tag_141\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":3289:3408   */\n    tag_203:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_205\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_150\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3666   */\n    tag_156:\n        /* \"#utility.yul\":3635:3659   */\n      tag_207\n        /* \"#utility.yul\":3653:3658   */\n      dup2\n        /* \"#utility.yul\":3635:3659   */\n      tag_152\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3630:3633   */\n      dup3\n        /* \"#utility.yul\":3623:3660   */\n      mstore\n        /* \"#utility.yul\":3548:3666   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3672:3894   */\n    tag_62:\n        /* \"#utility.yul\":3765:3769   */\n      0x00\n        /* \"#utility.yul\":3803:3805   */\n      0x20\n        /* \"#utility.yul\":3792:3801   */\n      dup3\n        /* \"#utility.yul\":3788:3806   */\n      add\n        /* \"#utility.yul\":3780:3806   */\n      swap1\n      pop\n        /* \"#utility.yul\":3816:3887   */\n      tag_209\n        /* \"#utility.yul\":3884:3885   */\n      0x00\n        /* \"#utility.yul\":3873:3882   */\n      dup4\n        /* \"#utility.yul\":3869:3886   */\n      add\n        /* \"#utility.yul\":3860:3866   */\n      dup5\n        /* \"#utility.yul\":3816:3887   */\n      tag_156\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3672:3894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3900:4069   */\n    tag_157:\n        /* \"#utility.yul\":3984:3995   */\n      0x00\n        /* \"#utility.yul\":4018:4024   */\n      dup3\n        /* \"#utility.yul\":4013:4016   */\n      dup3\n        /* \"#utility.yul\":4006:4025   */\n      mstore\n        /* \"#utility.yul\":4058:4062   */\n      0x20\n        /* \"#utility.yul\":4053:4056   */\n      dup3\n        /* \"#utility.yul\":4049:4063   */\n      add\n        /* \"#utility.yul\":4034:4063   */\n      swap1\n      pop\n        /* \"#utility.yul\":3900:4069   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4075:4247   */\n    tag_158:\n        /* \"#utility.yul\":4215:4239   */\n      0x52656769737465723a20494e56414c49445f524f4c4500000000000000000000\n        /* \"#utility.yul\":4211:4212   */\n      0x00\n        /* \"#utility.yul\":4203:4209   */\n      dup3\n        /* \"#utility.yul\":4199:4213   */\n      add\n        /* \"#utility.yul\":4192:4240   */\n      mstore\n        /* \"#utility.yul\":4075:4247   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4253:4619   */\n    tag_159:\n        /* \"#utility.yul\":4395:4398   */\n      0x00\n        /* \"#utility.yul\":4416:4483   */\n      tag_213\n        /* \"#utility.yul\":4480:4482   */\n      0x16\n        /* \"#utility.yul\":4475:4478   */\n      dup4\n        /* \"#utility.yul\":4416:4483   */\n      tag_157\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4409:4483   */\n      swap2\n      pop\n        /* \"#utility.yul\":4492:4585   */\n      tag_214\n        /* \"#utility.yul\":4581:4584   */\n      dup3\n        /* \"#utility.yul\":4492:4585   */\n      tag_158\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4610:4612   */\n      0x20\n        /* \"#utility.yul\":4605:4608   */\n      dup3\n        /* \"#utility.yul\":4601:4613   */\n      add\n        /* \"#utility.yul\":4594:4613   */\n      swap1\n      pop\n        /* \"#utility.yul\":4253:4619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4625:5044   */\n    tag_97:\n        /* \"#utility.yul\":4791:4795   */\n      0x00\n        /* \"#utility.yul\":4829:4831   */\n      0x20\n        /* \"#utility.yul\":4818:4827   */\n      dup3\n        /* \"#utility.yul\":4814:4832   */\n      add\n        /* \"#utility.yul\":4806:4832   */\n      swap1\n      pop\n        /* \"#utility.yul\":4878:4887   */\n      dup2\n        /* \"#utility.yul\":4872:4876   */\n      dup2\n        /* \"#utility.yul\":4868:4888   */\n      sub\n        /* \"#utility.yul\":4864:4865   */\n      0x00\n        /* \"#utility.yul\":4853:4862   */\n      dup4\n        /* \"#utility.yul\":4849:4866   */\n      add\n        /* \"#utility.yul\":4842:4889   */\n      mstore\n        /* \"#utility.yul\":4906:5037   */\n      tag_216\n        /* \"#utility.yul\":5032:5036   */\n      dup2\n        /* \"#utility.yul\":4906:5037   */\n      tag_159\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4898:5037   */\n      swap1\n      pop\n        /* \"#utility.yul\":4625:5044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5050:5382   */\n    tag_139:\n        /* \"#utility.yul\":5171:5175   */\n      0x00\n        /* \"#utility.yul\":5209:5211   */\n      0x40\n        /* \"#utility.yul\":5198:5207   */\n      dup3\n        /* \"#utility.yul\":5194:5212   */\n      add\n        /* \"#utility.yul\":5186:5212   */\n      swap1\n      pop\n        /* \"#utility.yul\":5222:5293   */\n      tag_218\n        /* \"#utility.yul\":5290:5291   */\n      0x00\n        /* \"#utility.yul\":5279:5288   */\n      dup4\n        /* \"#utility.yul\":5275:5292   */\n      add\n        /* \"#utility.yul\":5266:5272   */\n      dup6\n        /* \"#utility.yul\":5222:5293   */\n      tag_156\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5303:5375   */\n      tag_219\n        /* \"#utility.yul\":5371:5373   */\n      0x20\n        /* \"#utility.yul\":5360:5369   */\n      dup4\n        /* \"#utility.yul\":5356:5374   */\n      add\n        /* \"#utility.yul\":5347:5353   */\n      dup5\n        /* \"#utility.yul\":5303:5375   */\n      tag_155\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5050:5382   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208c6a151ad76e0a79b6767e0e83a39bd0c81848e8cafbb2e87bf3e7745fda83f364736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1774": {
									"entryPoint": null,
									"id": 1774,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 82,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1146": {
									"entryPoint": 432,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 333,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:12",
										"nodeType": "YulBlock",
										"src": "0:1199:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "759:80:12",
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nativeSrc": "769:22:12",
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nativeSrc": "778:13:12",
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nativeSrc": "800:33:12",
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nativeSrc": "800:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:12",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:12",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:12",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nativeSrc": "922:274:12",
													"nodeType": "YulBlock",
													"src": "922:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:12",
																"nodeType": "YulBlock",
																"src": "968:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:12"
																			},
																			"nativeSrc": "970:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:12"
																		},
																		"nativeSrc": "970:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:12"
																		},
																		"nativeSrc": "939:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:12",
																		"nodeType": "YulLiteral",
																		"src": "964:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:12"
																},
																"nativeSrc": "935:32:12",
																"nodeType": "YulFunctionCall",
																"src": "935:32:12"
															},
															"nativeSrc": "932:119:12",
															"nodeType": "YulIf",
															"src": "932:119:12"
														},
														{
															"nativeSrc": "1061:128:12",
															"nodeType": "YulBlock",
															"src": "1061:128:12",
															"statements": [
																{
																	"nativeSrc": "1076:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:12"
																				},
																				"nativeSrc": "1147:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:12"
																		},
																		"nativeSrc": "1115:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:12",
														"nodeType": "YulTypedName",
														"src": "892:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:12",
														"nodeType": "YulTypedName",
														"src": "903:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:12",
														"nodeType": "YulTypedName",
														"src": "915:6:12",
														"type": ""
													}
												],
												"src": "845:351:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162000f3b38038062000f3b83398181016040528101906200003691906200021c565b6200004a5f801b826200005260201b60201c565b50506200024c565b5f6200006583836200014d60201b60201c565b620001435760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550620000df620001b060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905062000147565b5f90505b92915050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001e682620001bb565b9050919050565b620001f881620001da565b811462000203575f80fd5b50565b5f815190506200021681620001ed565b92915050565b5f60208284031215620002345762000233620001b7565b5b5f620002438482850162000206565b91505092915050565b610ce1806200025a5f395ff3fe608060405234801561000f575f80fd5b5060043610610114575f3560e01c806374d16f5c116100a0578063a217fddf1161006f578063a217fddf146102e0578063c63568c7146102fe578063d547741f1461031c578063e16c7d9814610338578063f46f16c21461036857610114565b806374d16f5c1461024457806382bfefc81461027457806391d1485414610292578063a126285b146102c257610114565b80632f2ff15d116100e75780632f2ff15d146101b257806336568abe146101ce57806343c5cd74146101ea5780634e2164c914610208578063619d36ef1461022657610114565b806301ffc9a71461011857806312d9a6ad1461014857806320987a7e14610164578063248a9ca314610182575b5f80fd5b610132600480360381019061012d9190610a68565b610386565b60405161013f9190610aad565b60405180910390f35b610162600480360381019061015d9190610b53565b6103ff565b005b61016c61044c565b6040516101799190610ba0565b60405180910390f35b61019c60048036038101906101979190610bb9565b610470565b6040516101a99190610ba0565b60405180910390f35b6101cc60048036038101906101c79190610b53565b61048c565b005b6101e860048036038101906101e39190610b53565b6104fd565b005b6101f2610578565b6040516101ff9190610ba0565b60405180910390f35b61021061059c565b60405161021d9190610ba0565b60405180910390f35b61022e6105c0565b60405161023b9190610ba0565b60405180910390f35b61025e60048036038101906102599190610bb9565b6105e4565b60405161026b9190610bf3565b60405180910390f35b61027c610614565b6040516102899190610ba0565b60405180910390f35b6102ac60048036038101906102a79190610b53565b610638565b6040516102b99190610aad565b60405180910390f35b6102ca61069b565b6040516102d79190610ba0565b60405180910390f35b6102e86106bf565b6040516102f59190610ba0565b60405180910390f35b6103066106c5565b6040516103139190610ba0565b60405180910390f35b61033660048036038101906103319190610b53565b6106e9565b005b610352600480360381019061034d9190610bb9565b61070b565b60405161035f9190610bf3565b60405180910390f35b610370610744565b60405161037d9190610ba0565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103f857506103f782610768565b5b9050919050565b6104098282610638565b610448576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043f90610c66565b60405180910390fd5b5050565b7fdc56da5a1587a4cd75ea240b3d5cd7c4a0eaac792d95a49979f1c23a0cf8895f81565b5f805f8381526020019081526020015f20600101549050919050565b61049582610470565b61049e816107d1565b6104a883836107e5565b508160015f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6105056108ce565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610569576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61057382826108d5565b505050565b7ff45223fc822e0a02a042bb2eec36a76af2a028cc55539c3a40ab438d1089e1c081565b7f64b1d43f4e53241bce58c6f9670f08a22934a523acf2a5359fa7c904ff98bd9781565b7f1cf54708aaa392dbeba88d1a07e69feaba67586acd469366b89b52bf4413225881565b6001602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f96706879d29c248edfb2a2563a8a9d571c49634c0f82013e6f5a7cde739d35d481565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7fcd0c49d5c8438d0944f64e0d3825bed3b606f318474213a77860c93bca5ed99981565b5f801b81565b7f4af58918e2c6f17f8b6da7260d8669fa63150ffd279395662a723476f776f76a81565b6106f282610470565b6106fb816107d1565b61070583836108d5565b50505050565b5f60015f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f23acc66832ff38a7ce3c1caf89922410f4374ba8fd897ffa98f088747997bc6d81565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6107e2816107dd6108ce565b6109be565b50565b5f6107f08383610638565b6108c45760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506108616108ce565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506108c8565b5f90505b92915050565b5f33905090565b5f6108e08383610638565b156109b4575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506109516108ce565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506109b8565b5f90505b92915050565b6109c88282610638565b610a0b5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610a02929190610c84565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a4781610a13565b8114610a51575f80fd5b50565b5f81359050610a6281610a3e565b92915050565b5f60208284031215610a7d57610a7c610a0f565b5b5f610a8a84828501610a54565b91505092915050565b5f8115159050919050565b610aa781610a93565b82525050565b5f602082019050610ac05f830184610a9e565b92915050565b5f819050919050565b610ad881610ac6565b8114610ae2575f80fd5b50565b5f81359050610af381610acf565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b2282610af9565b9050919050565b610b3281610b18565b8114610b3c575f80fd5b50565b5f81359050610b4d81610b29565b92915050565b5f8060408385031215610b6957610b68610a0f565b5b5f610b7685828601610ae5565b9250506020610b8785828601610b3f565b9150509250929050565b610b9a81610ac6565b82525050565b5f602082019050610bb35f830184610b91565b92915050565b5f60208284031215610bce57610bcd610a0f565b5b5f610bdb84828501610ae5565b91505092915050565b610bed81610b18565b82525050565b5f602082019050610c065f830184610be4565b92915050565b5f82825260208201905092915050565b7f52656769737465723a20494e56414c49445f524f4c45000000000000000000005f82015250565b5f610c50601683610c0c565b9150610c5b82610c1c565b602082019050919050565b5f6020820190508181035f830152610c7d81610c44565b9050919050565b5f604082019050610c975f830185610be4565b610ca46020830184610b91565b939250505056fea26469706673582212208c6a151ad76e0a79b6767e0e83a39bd0c81848e8cafbb2e87bf3e7745fda83f364736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xF3B CODESIZE SUB DUP1 PUSH3 0xF3B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x21C JUMP JUMPDEST PUSH3 0x4A PUSH0 DUP1 SHL DUP3 PUSH3 0x52 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x24C JUMP JUMPDEST PUSH0 PUSH3 0x65 DUP4 DUP4 PUSH3 0x14D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x143 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0xDF PUSH3 0x1B0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x147 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1E6 DUP3 PUSH3 0x1BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F8 DUP2 PUSH3 0x1DA JUMP JUMPDEST DUP2 EQ PUSH3 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x216 DUP2 PUSH3 0x1ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x234 JUMPI PUSH3 0x233 PUSH3 0x1B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x243 DUP5 DUP3 DUP6 ADD PUSH3 0x206 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCE1 DUP1 PUSH3 0x25A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74D16F5C GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xC63568C7 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xE16C7D98 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xF46F16C2 EQ PUSH2 0x368 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x74D16F5C EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x82BFEFC8 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xA126285B EQ PUSH2 0x2C2 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x43C5CD74 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x4E2164C9 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x619D36EF EQ PUSH2 0x226 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x12D9A6AD EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x20987A7E EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x182 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xA68 JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3F8 JUMPI POP PUSH2 0x3F7 DUP3 PUSH2 0x768 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x409 DUP3 DUP3 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43F SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xDC56DA5A1587A4CD75EA240B3D5CD7C4A0EAAC792D95A49979F1C23A0CF8895F DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x495 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x49E DUP2 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x4A8 DUP4 DUP4 PUSH2 0x7E5 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x505 PUSH2 0x8CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x573 DUP3 DUP3 PUSH2 0x8D5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xF45223FC822E0A02A042BB2EEC36A76AF2A028CC55539C3A40AB438D1089E1C0 DUP2 JUMP JUMPDEST PUSH32 0x64B1D43F4E53241BCE58C6F9670F08A22934A523ACF2A5359FA7C904FF98BD97 DUP2 JUMP JUMPDEST PUSH32 0x1CF54708AAA392DBEBA88D1A07E69FEABA67586ACD469366B89B52BF44132258 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x96706879D29C248EDFB2A2563A8A9D571C49634C0F82013E6F5A7CDE739D35D4 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xCD0C49D5C8438D0944F64E0D3825BED3B606F318474213A77860C93BCA5ED999 DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x4AF58918E2C6F17F8B6DA7260D8669FA63150FFD279395662A723476F776F76A DUP2 JUMP JUMPDEST PUSH2 0x6F2 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x6FB DUP2 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x705 DUP4 DUP4 PUSH2 0x8D5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x23ACC66832FF38A7CE3C1CAF89922410F4374BA8FD897FFA98F088747997BC6D DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E2 DUP2 PUSH2 0x7DD PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x7F0 DUP4 DUP4 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x8C4 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x861 PUSH2 0x8CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x8C8 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x8E0 DUP4 DUP4 PUSH2 0x638 JUMP JUMPDEST ISZERO PUSH2 0x9B4 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x951 PUSH2 0x8CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x9B8 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9C8 DUP3 DUP3 PUSH2 0x638 JUMP JUMPDEST PUSH2 0xA0B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA02 SWAP3 SWAP2 SWAP1 PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA47 DUP2 PUSH2 0xA13 JUMP JUMPDEST DUP2 EQ PUSH2 0xA51 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA62 DUP2 PUSH2 0xA3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7D JUMPI PUSH2 0xA7C PUSH2 0xA0F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA8A DUP5 DUP3 DUP6 ADD PUSH2 0xA54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA7 DUP2 PUSH2 0xA93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC0 PUSH0 DUP4 ADD DUP5 PUSH2 0xA9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD8 DUP2 PUSH2 0xAC6 JUMP JUMPDEST DUP2 EQ PUSH2 0xAE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF3 DUP2 PUSH2 0xACF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB22 DUP3 PUSH2 0xAF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB32 DUP2 PUSH2 0xB18 JUMP JUMPDEST DUP2 EQ PUSH2 0xB3C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB4D DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB69 JUMPI PUSH2 0xB68 PUSH2 0xA0F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB76 DUP6 DUP3 DUP7 ADD PUSH2 0xAE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB87 DUP6 DUP3 DUP7 ADD PUSH2 0xB3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9A DUP2 PUSH2 0xAC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB3 PUSH0 DUP4 ADD DUP5 PUSH2 0xB91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBCE JUMPI PUSH2 0xBCD PUSH2 0xA0F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBDB DUP5 DUP3 DUP6 ADD PUSH2 0xAE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBED DUP2 PUSH2 0xB18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC06 PUSH0 DUP4 ADD DUP5 PUSH2 0xBE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52656769737465723A20494E56414C49445F524F4C4500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC50 PUSH1 0x16 DUP4 PUSH2 0xC0C JUMP JUMPDEST SWAP2 POP PUSH2 0xC5B DUP3 PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC7D DUP2 PUSH2 0xC44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC97 PUSH0 DUP4 ADD DUP6 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0xCA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB91 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 PUSH11 0x151AD76E0A79B6767E0E83 LOG3 SWAP12 0xD0 0xC8 XOR BASEFEE 0xE8 0xCA 0xFB 0xB2 0xE8 PUSH28 0xF3E7745FDA83F364736F6C6343000817003300000000000000000000 ",
							"sourceMap": "145:1170:11:-:0;;;738:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;784:45;2232:4:0;795:18:11;;815:13;784:10;;;:45;;:::i;:::-;;738:99;145:1170;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;145:1170:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 1727,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DRAW_1759": {
									"entryPoint": 1472,
									"id": 1759,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@FOMO3D_1724": {
									"entryPoint": 1436,
									"id": 1724,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@JACKPOT_1729": {
									"entryPoint": 1400,
									"id": 1729,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MARKET_1734": {
									"entryPoint": 1860,
									"id": 1734,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PRIZE_ITEMS_1739": {
									"entryPoint": 1100,
									"id": 1739,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@REFERRAL_1744": {
									"entryPoint": 1733,
									"id": 1744,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOKEN_1754": {
									"entryPoint": 1556,
									"id": 1754,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@VRF_1749": {
									"entryPoint": 1691,
									"id": 1749,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 2494,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 2001,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 2021,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1146": {
									"entryPoint": 2254,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 2261,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkRole_1815": {
									"entryPoint": 1023,
									"id": 1815,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@currentContract_1763": {
									"entryPoint": 1508,
									"id": 1763,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getContract_1827": {
									"entryPoint": 1803,
									"id": 1827,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1136,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_1799": {
									"entryPoint": 1164,
									"id": 1799,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1592,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 1277,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 1769,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1187": {
									"entryPoint": 1896,
									"id": 1187,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 902,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 3204,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2575,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9": {
									"entryPoint": 3100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 2622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5385:12",
										"nodeType": "YulBlock",
										"src": "0:5385:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1563:32:12",
													"nodeType": "YulBlock",
													"src": "1563:32:12",
													"statements": [
														{
															"nativeSrc": "1573:16:12",
															"nodeType": "YulAssignment",
															"src": "1573:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:12",
																"nodeType": "YulIdentifier",
																"src": "1584:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:12",
														"nodeType": "YulTypedName",
														"src": "1545:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:12",
														"nodeType": "YulTypedName",
														"src": "1555:7:12",
														"type": ""
													}
												],
												"src": "1518:77:12"
											},
											{
												"body": {
													"nativeSrc": "1644:79:12",
													"nodeType": "YulBlock",
													"src": "1644:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:12",
																"nodeType": "YulBlock",
																"src": "1701:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:12"
																			},
																			"nativeSrc": "1703:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:12"
																		},
																		"nativeSrc": "1703:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1674:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:12"
																				},
																				"nativeSrc": "1674:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:12"
																		},
																		"nativeSrc": "1664:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:12"
																},
																"nativeSrc": "1657:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:12"
															},
															"nativeSrc": "1654:63:12",
															"nodeType": "YulIf",
															"src": "1654:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1601:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:12",
														"nodeType": "YulTypedName",
														"src": "1637:5:12",
														"type": ""
													}
												],
												"src": "1601:122:12"
											},
											{
												"body": {
													"nativeSrc": "1781:87:12",
													"nodeType": "YulBlock",
													"src": "1781:87:12",
													"statements": [
														{
															"nativeSrc": "1791:29:12",
															"nodeType": "YulAssignment",
															"src": "1791:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:12"
																},
																"nativeSrc": "1800:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1829:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:12"
																},
																"nativeSrc": "1829:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:12"
															},
															"nativeSrc": "1829:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1729:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:12",
														"nodeType": "YulTypedName",
														"src": "1759:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:12",
														"nodeType": "YulTypedName",
														"src": "1767:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:12",
														"nodeType": "YulTypedName",
														"src": "1775:5:12",
														"type": ""
													}
												],
												"src": "1729:139:12"
											},
											{
												"body": {
													"nativeSrc": "1919:81:12",
													"nodeType": "YulBlock",
													"src": "1919:81:12",
													"statements": [
														{
															"nativeSrc": "1929:65:12",
															"nodeType": "YulAssignment",
															"src": "1929:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1944:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1944:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1951:42:12",
																		"nodeType": "YulLiteral",
																		"src": "1951:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1940:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1940:3:12"
																},
																"nativeSrc": "1940:54:12",
																"nodeType": "YulFunctionCall",
																"src": "1940:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1929:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1929:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1874:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1901:5:12",
														"nodeType": "YulTypedName",
														"src": "1901:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1911:7:12",
														"nodeType": "YulTypedName",
														"src": "1911:7:12",
														"type": ""
													}
												],
												"src": "1874:126:12"
											},
											{
												"body": {
													"nativeSrc": "2051:51:12",
													"nodeType": "YulBlock",
													"src": "2051:51:12",
													"statements": [
														{
															"nativeSrc": "2061:35:12",
															"nodeType": "YulAssignment",
															"src": "2061:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2090:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2090:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2072:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2072:17:12"
																},
																"nativeSrc": "2072:24:12",
																"nodeType": "YulFunctionCall",
																"src": "2072:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2061:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2061:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2006:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2033:5:12",
														"nodeType": "YulTypedName",
														"src": "2033:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2043:7:12",
														"nodeType": "YulTypedName",
														"src": "2043:7:12",
														"type": ""
													}
												],
												"src": "2006:96:12"
											},
											{
												"body": {
													"nativeSrc": "2151:79:12",
													"nodeType": "YulBlock",
													"src": "2151:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2208:16:12",
																"nodeType": "YulBlock",
																"src": "2208:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2217:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2217:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2220:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2220:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2210:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2210:6:12"
																			},
																			"nativeSrc": "2210:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2210:12:12"
																		},
																		"nativeSrc": "2210:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2174:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2174:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2199:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2199:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2181:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2181:17:12"
																				},
																				"nativeSrc": "2181:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2171:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2171:2:12"
																		},
																		"nativeSrc": "2171:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2171:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2164:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:12"
																},
																"nativeSrc": "2164:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2164:43:12"
															},
															"nativeSrc": "2161:63:12",
															"nodeType": "YulIf",
															"src": "2161:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2108:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2144:5:12",
														"nodeType": "YulTypedName",
														"src": "2144:5:12",
														"type": ""
													}
												],
												"src": "2108:122:12"
											},
											{
												"body": {
													"nativeSrc": "2288:87:12",
													"nodeType": "YulBlock",
													"src": "2288:87:12",
													"statements": [
														{
															"nativeSrc": "2298:29:12",
															"nodeType": "YulAssignment",
															"src": "2298:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2320:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2307:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:12"
																},
																"nativeSrc": "2307:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2307:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2298:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2298:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2363:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2363:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2336:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2336:26:12"
																},
																"nativeSrc": "2336:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2336:33:12"
															},
															"nativeSrc": "2336:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2336:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2236:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2266:6:12",
														"nodeType": "YulTypedName",
														"src": "2266:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2274:3:12",
														"nodeType": "YulTypedName",
														"src": "2274:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2282:5:12",
														"nodeType": "YulTypedName",
														"src": "2282:5:12",
														"type": ""
													}
												],
												"src": "2236:139:12"
											},
											{
												"body": {
													"nativeSrc": "2464:391:12",
													"nodeType": "YulBlock",
													"src": "2464:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2510:83:12",
																"nodeType": "YulBlock",
																"src": "2510:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2512:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2512:77:12"
																			},
																			"nativeSrc": "2512:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2512:79:12"
																		},
																		"nativeSrc": "2512:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2485:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2494:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2481:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:12"
																		},
																		"nativeSrc": "2481:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2506:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2477:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:12"
																},
																"nativeSrc": "2477:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2477:32:12"
															},
															"nativeSrc": "2474:119:12",
															"nodeType": "YulIf",
															"src": "2474:119:12"
														},
														{
															"nativeSrc": "2603:117:12",
															"nodeType": "YulBlock",
															"src": "2603:117:12",
															"statements": [
																{
																	"nativeSrc": "2618:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2618:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2632:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2632:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2622:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2622:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2647:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2647:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2682:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2682:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2693:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2693:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2678:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2678:3:12"
																				},
																				"nativeSrc": "2678:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2678:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2702:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2702:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2657:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2657:20:12"
																		},
																		"nativeSrc": "2657:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2657:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2647:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2647:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2730:118:12",
															"nodeType": "YulBlock",
															"src": "2730:118:12",
															"statements": [
																{
																	"nativeSrc": "2745:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2745:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2759:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2759:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2749:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2749:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2775:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2775:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2810:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2810:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2821:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2821:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2806:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2806:3:12"
																				},
																				"nativeSrc": "2806:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2806:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2830:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2830:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2785:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2785:20:12"
																		},
																		"nativeSrc": "2785:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2785:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2775:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2775:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "2381:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2426:9:12",
														"nodeType": "YulTypedName",
														"src": "2426:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2437:7:12",
														"nodeType": "YulTypedName",
														"src": "2437:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2449:6:12",
														"nodeType": "YulTypedName",
														"src": "2449:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2457:6:12",
														"nodeType": "YulTypedName",
														"src": "2457:6:12",
														"type": ""
													}
												],
												"src": "2381:474:12"
											},
											{
												"body": {
													"nativeSrc": "2926:53:12",
													"nodeType": "YulBlock",
													"src": "2926:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2943:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2943:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2966:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2966:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2948:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2948:17:12"
																		},
																		"nativeSrc": "2948:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2948:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2936:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2936:6:12"
																},
																"nativeSrc": "2936:37:12",
																"nodeType": "YulFunctionCall",
																"src": "2936:37:12"
															},
															"nativeSrc": "2936:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "2936:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2861:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2914:5:12",
														"nodeType": "YulTypedName",
														"src": "2914:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2921:3:12",
														"nodeType": "YulTypedName",
														"src": "2921:3:12",
														"type": ""
													}
												],
												"src": "2861:118:12"
											},
											{
												"body": {
													"nativeSrc": "3083:124:12",
													"nodeType": "YulBlock",
													"src": "3083:124:12",
													"statements": [
														{
															"nativeSrc": "3093:26:12",
															"nodeType": "YulAssignment",
															"src": "3093:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3105:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3105:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3116:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3116:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3101:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3101:3:12"
																},
																"nativeSrc": "3101:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3101:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3093:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3093:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3173:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:12"
																		},
																		"nativeSrc": "3182:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3129:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3129:43:12"
																},
																"nativeSrc": "3129:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3129:71:12"
															},
															"nativeSrc": "3129:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "3129:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2985:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3055:9:12",
														"nodeType": "YulTypedName",
														"src": "3055:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3067:6:12",
														"nodeType": "YulTypedName",
														"src": "3067:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3078:4:12",
														"nodeType": "YulTypedName",
														"src": "3078:4:12",
														"type": ""
													}
												],
												"src": "2985:222:12"
											},
											{
												"body": {
													"nativeSrc": "3279:263:12",
													"nodeType": "YulBlock",
													"src": "3279:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3325:83:12",
																"nodeType": "YulBlock",
																"src": "3325:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3327:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:12"
																			},
																			"nativeSrc": "3327:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:12"
																		},
																		"nativeSrc": "3327:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3300:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3309:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3296:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:12"
																		},
																		"nativeSrc": "3296:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3292:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:12"
																},
																"nativeSrc": "3292:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3292:32:12"
															},
															"nativeSrc": "3289:119:12",
															"nodeType": "YulIf",
															"src": "3289:119:12"
														},
														{
															"nativeSrc": "3418:117:12",
															"nodeType": "YulBlock",
															"src": "3418:117:12",
															"statements": [
																{
																	"nativeSrc": "3433:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3447:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3437:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:12"
																				},
																				"nativeSrc": "3493:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3472:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:12"
																		},
																		"nativeSrc": "3472:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3462:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "3213:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3249:9:12",
														"nodeType": "YulTypedName",
														"src": "3249:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3260:7:12",
														"nodeType": "YulTypedName",
														"src": "3260:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3272:6:12",
														"nodeType": "YulTypedName",
														"src": "3272:6:12",
														"type": ""
													}
												],
												"src": "3213:329:12"
											},
											{
												"body": {
													"nativeSrc": "3613:53:12",
													"nodeType": "YulBlock",
													"src": "3613:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3630:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3630:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3653:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3653:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3635:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "3635:17:12"
																		},
																		"nativeSrc": "3635:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3635:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3623:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3623:6:12"
																},
																"nativeSrc": "3623:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3623:37:12"
															},
															"nativeSrc": "3623:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "3623:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3548:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3601:5:12",
														"nodeType": "YulTypedName",
														"src": "3601:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3608:3:12",
														"nodeType": "YulTypedName",
														"src": "3608:3:12",
														"type": ""
													}
												],
												"src": "3548:118:12"
											},
											{
												"body": {
													"nativeSrc": "3770:124:12",
													"nodeType": "YulBlock",
													"src": "3770:124:12",
													"statements": [
														{
															"nativeSrc": "3780:26:12",
															"nodeType": "YulAssignment",
															"src": "3780:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3792:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3792:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3803:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3803:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3788:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3788:3:12"
																},
																"nativeSrc": "3788:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3788:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3780:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3780:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3860:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3860:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3873:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3873:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3884:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3884:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3869:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3869:3:12"
																		},
																		"nativeSrc": "3869:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3869:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3816:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3816:43:12"
																},
																"nativeSrc": "3816:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3816:71:12"
															},
															"nativeSrc": "3816:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "3816:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3672:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3742:9:12",
														"nodeType": "YulTypedName",
														"src": "3742:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3754:6:12",
														"nodeType": "YulTypedName",
														"src": "3754:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3765:4:12",
														"nodeType": "YulTypedName",
														"src": "3765:4:12",
														"type": ""
													}
												],
												"src": "3672:222:12"
											},
											{
												"body": {
													"nativeSrc": "3996:73:12",
													"nodeType": "YulBlock",
													"src": "3996:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4013:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4013:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4018:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4018:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4006:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4006:6:12"
																},
																"nativeSrc": "4006:19:12",
																"nodeType": "YulFunctionCall",
																"src": "4006:19:12"
															},
															"nativeSrc": "4006:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "4006:19:12"
														},
														{
															"nativeSrc": "4034:29:12",
															"nodeType": "YulAssignment",
															"src": "4034:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4053:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4053:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4058:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4058:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4049:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4049:3:12"
																},
																"nativeSrc": "4049:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4049:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4034:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "4034:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3900:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3968:3:12",
														"nodeType": "YulTypedName",
														"src": "3968:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3973:6:12",
														"nodeType": "YulTypedName",
														"src": "3973:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3984:11:12",
														"nodeType": "YulTypedName",
														"src": "3984:11:12",
														"type": ""
													}
												],
												"src": "3900:169:12"
											},
											{
												"body": {
													"nativeSrc": "4181:66:12",
													"nodeType": "YulBlock",
													"src": "4181:66:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4203:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4203:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4211:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4211:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4199:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4199:3:12"
																		},
																		"nativeSrc": "4199:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4199:14:12"
																	},
																	{
																		"hexValue": "52656769737465723a20494e56414c49445f524f4c45",
																		"kind": "string",
																		"nativeSrc": "4215:24:12",
																		"nodeType": "YulLiteral",
																		"src": "4215:24:12",
																		"type": "",
																		"value": "Register: INVALID_ROLE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4192:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4192:6:12"
																},
																"nativeSrc": "4192:48:12",
																"nodeType": "YulFunctionCall",
																"src": "4192:48:12"
															},
															"nativeSrc": "4192:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "4192:48:12"
														}
													]
												},
												"name": "store_literal_in_memory_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9",
												"nativeSrc": "4075:172:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4173:6:12",
														"nodeType": "YulTypedName",
														"src": "4173:6:12",
														"type": ""
													}
												],
												"src": "4075:172:12"
											},
											{
												"body": {
													"nativeSrc": "4399:220:12",
													"nodeType": "YulBlock",
													"src": "4399:220:12",
													"statements": [
														{
															"nativeSrc": "4409:74:12",
															"nodeType": "YulAssignment",
															"src": "4409:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4475:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4475:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4480:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4480:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4416:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "4416:58:12"
																},
																"nativeSrc": "4416:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4416:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4409:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4409:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4581:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4581:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9",
																	"nativeSrc": "4492:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "4492:88:12"
																},
																"nativeSrc": "4492:93:12",
																"nodeType": "YulFunctionCall",
																"src": "4492:93:12"
															},
															"nativeSrc": "4492:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "4492:93:12"
														},
														{
															"nativeSrc": "4594:19:12",
															"nodeType": "YulAssignment",
															"src": "4594:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4605:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4605:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4610:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4610:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4601:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4601:3:12"
																},
																"nativeSrc": "4601:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4601:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4594:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4594:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4253:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4387:3:12",
														"nodeType": "YulTypedName",
														"src": "4387:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4395:3:12",
														"nodeType": "YulTypedName",
														"src": "4395:3:12",
														"type": ""
													}
												],
												"src": "4253:366:12"
											},
											{
												"body": {
													"nativeSrc": "4796:248:12",
													"nodeType": "YulBlock",
													"src": "4796:248:12",
													"statements": [
														{
															"nativeSrc": "4806:26:12",
															"nodeType": "YulAssignment",
															"src": "4806:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4818:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4818:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4829:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4829:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4814:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4814:3:12"
																},
																"nativeSrc": "4814:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4814:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4806:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4806:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4853:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4864:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4864:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4849:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4849:3:12"
																		},
																		"nativeSrc": "4849:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4849:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4872:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4872:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4878:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4878:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4868:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4868:3:12"
																		},
																		"nativeSrc": "4868:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4868:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4842:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4842:6:12"
																},
																"nativeSrc": "4842:47:12",
																"nodeType": "YulFunctionCall",
																"src": "4842:47:12"
															},
															"nativeSrc": "4842:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "4842:47:12"
														},
														{
															"nativeSrc": "4898:139:12",
															"nodeType": "YulAssignment",
															"src": "4898:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5032:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5032:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4906:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "4906:124:12"
																},
																"nativeSrc": "4906:131:12",
																"nodeType": "YulFunctionCall",
																"src": "4906:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4898:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4898:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4625:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4776:9:12",
														"nodeType": "YulTypedName",
														"src": "4776:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4791:4:12",
														"nodeType": "YulTypedName",
														"src": "4791:4:12",
														"type": ""
													}
												],
												"src": "4625:419:12"
											},
											{
												"body": {
													"nativeSrc": "5176:206:12",
													"nodeType": "YulBlock",
													"src": "5176:206:12",
													"statements": [
														{
															"nativeSrc": "5186:26:12",
															"nodeType": "YulAssignment",
															"src": "5186:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5198:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5198:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5209:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5209:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5194:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5194:3:12"
																},
																"nativeSrc": "5194:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5194:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5186:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5186:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5266:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5266:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5279:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5279:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5290:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5290:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5275:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5275:3:12"
																		},
																		"nativeSrc": "5275:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5275:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5222:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5222:43:12"
																},
																"nativeSrc": "5222:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5222:71:12"
															},
															"nativeSrc": "5222:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5222:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5347:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5347:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5360:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5360:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5371:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5371:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5356:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5356:3:12"
																		},
																		"nativeSrc": "5356:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5356:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5303:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5303:43:12"
																},
																"nativeSrc": "5303:72:12",
																"nodeType": "YulFunctionCall",
																"src": "5303:72:12"
															},
															"nativeSrc": "5303:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "5303:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "5050:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5140:9:12",
														"nodeType": "YulTypedName",
														"src": "5140:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5152:6:12",
														"nodeType": "YulTypedName",
														"src": "5152:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5160:6:12",
														"nodeType": "YulTypedName",
														"src": "5160:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5171:4:12",
														"nodeType": "YulTypedName",
														"src": "5171:4:12",
														"type": ""
													}
												],
												"src": "5050:332:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Register: INVALID_ROLE\")\n\n    }\n\n    function abi_encode_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610114575f3560e01c806374d16f5c116100a0578063a217fddf1161006f578063a217fddf146102e0578063c63568c7146102fe578063d547741f1461031c578063e16c7d9814610338578063f46f16c21461036857610114565b806374d16f5c1461024457806382bfefc81461027457806391d1485414610292578063a126285b146102c257610114565b80632f2ff15d116100e75780632f2ff15d146101b257806336568abe146101ce57806343c5cd74146101ea5780634e2164c914610208578063619d36ef1461022657610114565b806301ffc9a71461011857806312d9a6ad1461014857806320987a7e14610164578063248a9ca314610182575b5f80fd5b610132600480360381019061012d9190610a68565b610386565b60405161013f9190610aad565b60405180910390f35b610162600480360381019061015d9190610b53565b6103ff565b005b61016c61044c565b6040516101799190610ba0565b60405180910390f35b61019c60048036038101906101979190610bb9565b610470565b6040516101a99190610ba0565b60405180910390f35b6101cc60048036038101906101c79190610b53565b61048c565b005b6101e860048036038101906101e39190610b53565b6104fd565b005b6101f2610578565b6040516101ff9190610ba0565b60405180910390f35b61021061059c565b60405161021d9190610ba0565b60405180910390f35b61022e6105c0565b60405161023b9190610ba0565b60405180910390f35b61025e60048036038101906102599190610bb9565b6105e4565b60405161026b9190610bf3565b60405180910390f35b61027c610614565b6040516102899190610ba0565b60405180910390f35b6102ac60048036038101906102a79190610b53565b610638565b6040516102b99190610aad565b60405180910390f35b6102ca61069b565b6040516102d79190610ba0565b60405180910390f35b6102e86106bf565b6040516102f59190610ba0565b60405180910390f35b6103066106c5565b6040516103139190610ba0565b60405180910390f35b61033660048036038101906103319190610b53565b6106e9565b005b610352600480360381019061034d9190610bb9565b61070b565b60405161035f9190610bf3565b60405180910390f35b610370610744565b60405161037d9190610ba0565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103f857506103f782610768565b5b9050919050565b6104098282610638565b610448576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043f90610c66565b60405180910390fd5b5050565b7fdc56da5a1587a4cd75ea240b3d5cd7c4a0eaac792d95a49979f1c23a0cf8895f81565b5f805f8381526020019081526020015f20600101549050919050565b61049582610470565b61049e816107d1565b6104a883836107e5565b508160015f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6105056108ce565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610569576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61057382826108d5565b505050565b7ff45223fc822e0a02a042bb2eec36a76af2a028cc55539c3a40ab438d1089e1c081565b7f64b1d43f4e53241bce58c6f9670f08a22934a523acf2a5359fa7c904ff98bd9781565b7f1cf54708aaa392dbeba88d1a07e69feaba67586acd469366b89b52bf4413225881565b6001602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f96706879d29c248edfb2a2563a8a9d571c49634c0f82013e6f5a7cde739d35d481565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7fcd0c49d5c8438d0944f64e0d3825bed3b606f318474213a77860c93bca5ed99981565b5f801b81565b7f4af58918e2c6f17f8b6da7260d8669fa63150ffd279395662a723476f776f76a81565b6106f282610470565b6106fb816107d1565b61070583836108d5565b50505050565b5f60015f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f23acc66832ff38a7ce3c1caf89922410f4374ba8fd897ffa98f088747997bc6d81565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6107e2816107dd6108ce565b6109be565b50565b5f6107f08383610638565b6108c45760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506108616108ce565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506108c8565b5f90505b92915050565b5f33905090565b5f6108e08383610638565b156109b4575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506109516108ce565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506109b8565b5f90505b92915050565b6109c88282610638565b610a0b5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610a02929190610c84565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a4781610a13565b8114610a51575f80fd5b50565b5f81359050610a6281610a3e565b92915050565b5f60208284031215610a7d57610a7c610a0f565b5b5f610a8a84828501610a54565b91505092915050565b5f8115159050919050565b610aa781610a93565b82525050565b5f602082019050610ac05f830184610a9e565b92915050565b5f819050919050565b610ad881610ac6565b8114610ae2575f80fd5b50565b5f81359050610af381610acf565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b2282610af9565b9050919050565b610b3281610b18565b8114610b3c575f80fd5b50565b5f81359050610b4d81610b29565b92915050565b5f8060408385031215610b6957610b68610a0f565b5b5f610b7685828601610ae5565b9250506020610b8785828601610b3f565b9150509250929050565b610b9a81610ac6565b82525050565b5f602082019050610bb35f830184610b91565b92915050565b5f60208284031215610bce57610bcd610a0f565b5b5f610bdb84828501610ae5565b91505092915050565b610bed81610b18565b82525050565b5f602082019050610c065f830184610be4565b92915050565b5f82825260208201905092915050565b7f52656769737465723a20494e56414c49445f524f4c45000000000000000000005f82015250565b5f610c50601683610c0c565b9150610c5b82610c1c565b602082019050919050565b5f6020820190508181035f830152610c7d81610c44565b9050919050565b5f604082019050610c975f830185610be4565b610ca46020830184610b91565b939250505056fea26469706673582212208c6a151ad76e0a79b6767e0e83a39bd0c81848e8cafbb2e87bf3e7745fda83f364736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74D16F5C GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xC63568C7 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xE16C7D98 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xF46F16C2 EQ PUSH2 0x368 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x74D16F5C EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x82BFEFC8 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xA126285B EQ PUSH2 0x2C2 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x43C5CD74 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x4E2164C9 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x619D36EF EQ PUSH2 0x226 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x12D9A6AD EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x20987A7E EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x182 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xA68 JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3F8 JUMPI POP PUSH2 0x3F7 DUP3 PUSH2 0x768 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x409 DUP3 DUP3 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43F SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xDC56DA5A1587A4CD75EA240B3D5CD7C4A0EAAC792D95A49979F1C23A0CF8895F DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x495 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x49E DUP2 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x4A8 DUP4 DUP4 PUSH2 0x7E5 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x505 PUSH2 0x8CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x573 DUP3 DUP3 PUSH2 0x8D5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xF45223FC822E0A02A042BB2EEC36A76AF2A028CC55539C3A40AB438D1089E1C0 DUP2 JUMP JUMPDEST PUSH32 0x64B1D43F4E53241BCE58C6F9670F08A22934A523ACF2A5359FA7C904FF98BD97 DUP2 JUMP JUMPDEST PUSH32 0x1CF54708AAA392DBEBA88D1A07E69FEABA67586ACD469366B89B52BF44132258 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x96706879D29C248EDFB2A2563A8A9D571C49634C0F82013E6F5A7CDE739D35D4 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xCD0C49D5C8438D0944F64E0D3825BED3B606F318474213A77860C93BCA5ED999 DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x4AF58918E2C6F17F8B6DA7260D8669FA63150FFD279395662A723476F776F76A DUP2 JUMP JUMPDEST PUSH2 0x6F2 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x6FB DUP2 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x705 DUP4 DUP4 PUSH2 0x8D5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x23ACC66832FF38A7CE3C1CAF89922410F4374BA8FD897FFA98F088747997BC6D DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E2 DUP2 PUSH2 0x7DD PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x7F0 DUP4 DUP4 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x8C4 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x861 PUSH2 0x8CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x8C8 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x8E0 DUP4 DUP4 PUSH2 0x638 JUMP JUMPDEST ISZERO PUSH2 0x9B4 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x951 PUSH2 0x8CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x9B8 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9C8 DUP3 DUP3 PUSH2 0x638 JUMP JUMPDEST PUSH2 0xA0B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA02 SWAP3 SWAP2 SWAP1 PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA47 DUP2 PUSH2 0xA13 JUMP JUMPDEST DUP2 EQ PUSH2 0xA51 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA62 DUP2 PUSH2 0xA3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7D JUMPI PUSH2 0xA7C PUSH2 0xA0F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA8A DUP5 DUP3 DUP6 ADD PUSH2 0xA54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA7 DUP2 PUSH2 0xA93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC0 PUSH0 DUP4 ADD DUP5 PUSH2 0xA9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD8 DUP2 PUSH2 0xAC6 JUMP JUMPDEST DUP2 EQ PUSH2 0xAE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF3 DUP2 PUSH2 0xACF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB22 DUP3 PUSH2 0xAF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB32 DUP2 PUSH2 0xB18 JUMP JUMPDEST DUP2 EQ PUSH2 0xB3C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB4D DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB69 JUMPI PUSH2 0xB68 PUSH2 0xA0F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB76 DUP6 DUP3 DUP7 ADD PUSH2 0xAE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB87 DUP6 DUP3 DUP7 ADD PUSH2 0xB3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9A DUP2 PUSH2 0xAC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB3 PUSH0 DUP4 ADD DUP5 PUSH2 0xB91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBCE JUMPI PUSH2 0xBCD PUSH2 0xA0F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBDB DUP5 DUP3 DUP6 ADD PUSH2 0xAE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBED DUP2 PUSH2 0xB18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC06 PUSH0 DUP4 ADD DUP5 PUSH2 0xBE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52656769737465723A20494E56414C49445F524F4C4500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC50 PUSH1 0x16 DUP4 PUSH2 0xC0C JUMP JUMPDEST SWAP2 POP PUSH2 0xC5B DUP3 PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC7D DUP2 PUSH2 0xC44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC97 PUSH0 DUP4 ADD DUP6 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0xCA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB91 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 PUSH11 0x151AD76E0A79B6767E0E83 LOG3 SWAP12 0xD0 0xC8 XOR BASEFEE 0xE8 0xCA 0xFB 0xB2 0xE8 PUSH28 0xF3E7745FDA83F364736F6C6343000817003300000000000000000000 ",
							"sourceMap": "145:1170:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1037:142:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;379:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;845:180:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;259:54:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;200:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;621:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;678:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;564:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;511:46:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;448:56:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1185:113:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;320:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1037:142:11:-;1120:24;1128:5;1135:8;1120:7;:24::i;:::-;1112:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1037:142;;:::o;379:62::-;417:24;379:62;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;845:180:11:-;920:18;933:4;920:12;:18::i;:::-;2464:16:0;2475:4;2464:10;:16::i;:::-;950:25:11::1;961:4;967:7;950:10;:25::i;:::-;;1010:7;986:15;:21;1002:4;986:21;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;845:180:::0;;;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;259:54:11:-;293:20;259:54;:::o;200:52::-;233:19;200:52;:::o;621:48::-;652:17;621:48;:::o;678:51::-;;;;;;;;;;;;;;;;;;;;;;:::o;564:50::-;596:18;564:50;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;511:46:11:-;541:16;511:46;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;448:56:11:-;483:21;448:56;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;1185:113:11:-;1242:7;1268:15;:22;1284:5;1268:22;;;;;;;;;;;;;;;;;;;;;1261:29;;1185:113;;;:::o;320:52::-;353:19;320:52;:::o;762:146:7:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;3432:197::-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:12:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:126::-;1911:7;1951:42;1944:5;1940:54;1929:65;;1874:126;;;:::o;2006:96::-;2043:7;2072:24;2090:5;2072:24;:::i;:::-;2061:35;;2006:96;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:474::-;2449:6;2457;2506:2;2494:9;2485:7;2481:23;2477:32;2474:119;;;2512:79;;:::i;:::-;2474:119;2632:1;2657:53;2702:7;2693:6;2682:9;2678:22;2657:53;:::i;:::-;2647:63;;2603:117;2759:2;2785:53;2830:7;2821:6;2810:9;2806:22;2785:53;:::i;:::-;2775:63;;2730:118;2381:474;;;;;:::o;2861:118::-;2948:24;2966:5;2948:24;:::i;:::-;2943:3;2936:37;2861:118;;:::o;2985:222::-;3078:4;3116:2;3105:9;3101:18;3093:26;;3129:71;3197:1;3186:9;3182:17;3173:6;3129:71;:::i;:::-;2985:222;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:118::-;3635:24;3653:5;3635:24;:::i;:::-;3630:3;3623:37;3548:118;;:::o;3672:222::-;3765:4;3803:2;3792:9;3788:18;3780:26;;3816:71;3884:1;3873:9;3869:17;3860:6;3816:71;:::i;:::-;3672:222;;;;:::o;3900:169::-;3984:11;4018:6;4013:3;4006:19;4058:4;4053:3;4049:14;4034:29;;3900:169;;;;:::o;4075:172::-;4215:24;4211:1;4203:6;4199:14;4192:48;4075:172;:::o;4253:366::-;4395:3;4416:67;4480:2;4475:3;4416:67;:::i;:::-;4409:74;;4492:93;4581:3;4492:93;:::i;:::-;4610:2;4605:3;4601:12;4594:19;;4253:366;;;:::o;4625:419::-;4791:4;4829:2;4818:9;4814:18;4806:26;;4878:9;4872:4;4868:20;4864:1;4853:9;4849:17;4842:47;4906:131;5032:4;4906:131;:::i;:::-;4898:139;;4625:419;;;:::o;5050:332::-;5171:4;5209:2;5198:9;5194:18;5186:26;;5222:71;5290:1;5279:9;5275:17;5266:6;5222:71;:::i;:::-;5303:72;5371:2;5360:9;5356:18;5347:6;5303:72;:::i;:::-;5050:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "659400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "352",
								"DRAW()": "436",
								"FOMO3D()": "414",
								"JACKPOT()": "392",
								"MARKET()": "435",
								"PRIZE_ITEMS()": "393",
								"REFERRAL()": "369",
								"TOKEN()": "370",
								"VRF()": "414",
								"checkRole(bytes32,address)": "3314",
								"currentContract(bytes32)": "2850",
								"getContract(bytes32)": "2940",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3189",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 145,
									"end": 1315,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 145,
									"end": 1315,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 145,
									"end": 1315,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 738,
									"end": 837,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 738,
									"end": 837,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 738,
									"end": 837,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 738,
									"end": 837,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 738,
									"end": 837,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 738,
									"end": 837,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 738,
									"end": 837,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 738,
									"end": 837,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 784,
									"end": 829,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 795,
									"end": 813,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 795,
									"end": 813,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 815,
									"end": 828,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 784,
									"end": 794,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 784,
									"end": 794,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 784,
									"end": 794,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 784,
									"end": 829,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 784,
									"end": 829,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 784,
									"end": 829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 784,
									"end": 829,
									"name": "tag",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 784,
									"end": 829,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 784,
									"end": 829,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 738,
									"end": 837,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 145,
									"end": 1315,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 145,
									"end": 1315,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 145,
									"end": 1315,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 145,
									"end": 1315,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 145,
									"end": 1315,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 1315,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 145,
									"end": 1315,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 1315,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 1315,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 145,
									"end": 1315,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 1315,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208c6a151ad76e0a79b6767e0e83a39bd0c81848e8cafbb2e87bf3e7745fda83f364736f6c63430008170033",
									".code": [
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "74D16F5C"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "C63568C7"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "E16C7D98"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "F46F16C2"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "74D16F5C"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "82BFEFC8"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "A126285B"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "43C5CD74"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "4E2164C9"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "619D36EF"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "12D9A6AD"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "20987A7E"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 145,
											"end": 1315,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1037,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1037,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 379,
											"end": 441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 379,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 379,
											"end": 441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 379,
											"end": 441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 441,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 379,
											"end": 441,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 379,
											"end": 441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 379,
											"end": 441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 441,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 845,
											"end": 1025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 845,
											"end": 1025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 313,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 259,
											"end": 313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 259,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 259,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 259,
											"end": 313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 259,
											"end": 313,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 259,
											"end": 313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 259,
											"end": 313,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 313,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 259,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 259,
											"end": 313,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 259,
											"end": 313,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 259,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 259,
											"end": 313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 259,
											"end": 313,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 259,
											"end": 313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 259,
											"end": 313,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 313,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 259,
											"end": 313,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 259,
											"end": 313,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 259,
											"end": 313,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 259,
											"end": 313,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 259,
											"end": 313,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 200,
											"end": 252,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 200,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 200,
											"end": 252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 200,
											"end": 252,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 252,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 200,
											"end": 252,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 200,
											"end": 252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 200,
											"end": 252,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 252,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 621,
											"end": 669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 621,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 621,
											"end": 669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 621,
											"end": 669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 669,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 621,
											"end": 669,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 621,
											"end": 669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 621,
											"end": 669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 669,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 678,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 678,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 564,
											"end": 614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 564,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 564,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 564,
											"end": 614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 614,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 564,
											"end": 614,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 564,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 564,
											"end": 614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 614,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 511,
											"end": 557,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 511,
											"end": 557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 511,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 511,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 511,
											"end": 557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 511,
											"end": 557,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 511,
											"end": 557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 511,
											"end": 557,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 557,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 511,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 511,
											"end": 557,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 511,
											"end": 557,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 511,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 511,
											"end": 557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 511,
											"end": 557,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 511,
											"end": 557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 511,
											"end": 557,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 557,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 511,
											"end": 557,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 511,
											"end": 557,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 511,
											"end": 557,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 511,
											"end": 557,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 511,
											"end": 557,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 448,
											"end": 504,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 448,
											"end": 504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 448,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 448,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 448,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 448,
											"end": 504,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 448,
											"end": 504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 448,
											"end": 504,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 504,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 448,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 448,
											"end": 504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 448,
											"end": 504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 448,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 448,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 448,
											"end": 504,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 448,
											"end": 504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 448,
											"end": 504,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 504,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 448,
											"end": 504,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 448,
											"end": 504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 448,
											"end": 504,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 448,
											"end": 504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 448,
											"end": 504,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1185,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 1185,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 320,
											"end": 372,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 320,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 320,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 320,
											"end": 372,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 320,
											"end": 372,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 320,
											"end": 372,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 320,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 320,
											"end": 372,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 320,
											"end": 372,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1143,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1120,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1144,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1120,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1112,
											"end": 1171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1112,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1037,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 379,
											"end": 441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 417,
											"end": 441,
											"name": "PUSH",
											"source": 11,
											"value": "DC56DA5A1587A4CD75EA240B3D5CD7C4A0EAAC792D95A49979F1C23A0CF8895F"
										},
										{
											"begin": 379,
											"end": 441,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 379,
											"end": 441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 933,
											"end": 937,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 920,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 920,
											"end": 938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 920,
											"end": 938,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 950,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 961,
											"end": 965,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 967,
											"end": 974,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 950,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 950,
											"end": 975,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 950,
											"end": 975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 950,
											"end": 975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 950,
											"end": 975,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 986,
											"end": 1007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1006,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1007,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1007,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 986,
											"end": 1007,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1007,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1007,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1007,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 986,
											"end": 1007,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1007,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1017,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 845,
											"end": 1025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 313,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 259,
											"end": 313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 293,
											"end": 313,
											"name": "PUSH",
											"source": 11,
											"value": "F45223FC822E0A02A042BB2EEC36A76AF2A028CC55539C3A40AB438D1089E1C0"
										},
										{
											"begin": 259,
											"end": 313,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 259,
											"end": 313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 200,
											"end": 252,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 233,
											"end": 252,
											"name": "PUSH",
											"source": 11,
											"value": "64B1D43F4E53241BCE58C6F9670F08A22934A523ACF2A5359FA7C904FF98BD97"
										},
										{
											"begin": 200,
											"end": 252,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 200,
											"end": 252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 621,
											"end": 669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 652,
											"end": 669,
											"name": "PUSH",
											"source": 11,
											"value": "1CF54708AAA392DBEBA88D1A07E69FEABA67586ACD469366B89B52BF44132258"
										},
										{
											"begin": 621,
											"end": 669,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 621,
											"end": 669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 678,
											"end": 729,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 678,
											"end": 729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 564,
											"end": 614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 596,
											"end": 614,
											"name": "PUSH",
											"source": 11,
											"value": "96706879D29C248EDFB2A2563A8A9D571C49634C0F82013E6F5A7CDE739D35D4"
										},
										{
											"begin": 564,
											"end": 614,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 564,
											"end": 614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 557,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 511,
											"end": 557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 541,
											"end": 557,
											"name": "PUSH",
											"source": 11,
											"value": "CD0C49D5C8438D0944F64E0D3825BED3B606F318474213A77860C93BCA5ED999"
										},
										{
											"begin": 511,
											"end": 557,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 511,
											"end": 557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 504,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 448,
											"end": 504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 483,
											"end": 504,
											"name": "PUSH",
											"source": 11,
											"value": "4AF58918E2C6F17F8B6DA7260D8669FA63150FFD279395662A723476F776F76A"
										},
										{
											"begin": 448,
											"end": 504,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 448,
											"end": 504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1242,
											"end": 1249,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1268,
											"end": 1290,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1261,
											"end": 1290,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1261,
											"end": 1290,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 320,
											"end": 372,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 353,
											"end": 372,
											"name": "PUSH",
											"source": 11,
											"value": "23ACC66832FF38A7CE3C1CAF89922410F4374BA8FD897FFA98F088747997BC6D"
										},
										{
											"begin": 320,
											"end": 372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 320,
											"end": 372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1911,
											"end": 1918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1993,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1944,
											"end": 1949,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1994,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 1994,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 1994,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2043,
											"end": 2050,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 2090,
											"end": 2095,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 2072,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2061,
											"end": 2096,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2061,
											"end": 2096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2006,
											"end": 2102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 2199,
											"end": 2204,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 2181,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2171,
											"end": 2206,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2210,
											"end": 2222,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 2336,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2449,
											"end": 2455,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2463,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 2512,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2632,
											"end": 2633,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2682,
											"end": 2691,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2678,
											"end": 2700,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 2657,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2647,
											"end": 2710,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2647,
											"end": 2710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2603,
											"end": 2720,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 2830,
											"end": 2837,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2821,
											"end": 2827,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2806,
											"end": 2828,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 2785,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2775,
											"end": 2838,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2775,
											"end": 2838,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2861,
											"end": 2979,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2861,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2948,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 2966,
											"end": 2971,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2948,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 2948,
											"end": 2972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2948,
											"end": 2972,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 2948,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 2946,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 2973,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2861,
											"end": 2979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2861,
											"end": 2979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2861,
											"end": 2979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2985,
											"end": 3207,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 2985,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3078,
											"end": 3082,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3118,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3129,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3129,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 3129,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3129,
											"end": 3200,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 3129,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2985,
											"end": 3207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2985,
											"end": 3207,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2985,
											"end": 3207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2985,
											"end": 3207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2985,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3666,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 3548,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3635,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 3653,
											"end": 3658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3635,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 3635,
											"end": 3659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3635,
											"end": 3659,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 3635,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3630,
											"end": 3633,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3660,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3672,
											"end": 3894,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 3672,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3765,
											"end": 3769,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3805,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3792,
											"end": 3801,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3780,
											"end": 3806,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3780,
											"end": 3806,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3816,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 3884,
											"end": 3885,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3886,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3816,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 3816,
											"end": 3887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3816,
											"end": 3887,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 3816,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3672,
											"end": 3894,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3672,
											"end": 3894,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3672,
											"end": 3894,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3672,
											"end": 3894,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3672,
											"end": 3894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3900,
											"end": 4069,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 3900,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3984,
											"end": 3995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4024,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4013,
											"end": 4016,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4006,
											"end": 4025,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4058,
											"end": 4062,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4053,
											"end": 4056,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4034,
											"end": 4063,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4034,
											"end": 4063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3900,
											"end": 4069,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3900,
											"end": 4069,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3900,
											"end": 4069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3900,
											"end": 4069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3900,
											"end": 4069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4247,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 4075,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4215,
											"end": 4239,
											"name": "PUSH",
											"source": 12,
											"value": "52656769737465723A20494E56414C49445F524F4C4500000000000000000000"
										},
										{
											"begin": 4211,
											"end": 4212,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4209,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4199,
											"end": 4213,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4192,
											"end": 4240,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4253,
											"end": 4619,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 4253,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4395,
											"end": 4398,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4416,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 4480,
											"end": 4482,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 4475,
											"end": 4478,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4416,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 4416,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4416,
											"end": 4483,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 4416,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4409,
											"end": 4483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4409,
											"end": 4483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4492,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 4581,
											"end": 4584,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4492,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 4492,
											"end": 4585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4492,
											"end": 4585,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 4492,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4610,
											"end": 4612,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4601,
											"end": 4613,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4594,
											"end": 4613,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4594,
											"end": 4613,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4253,
											"end": 4619,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4253,
											"end": 4619,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4253,
											"end": 4619,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4253,
											"end": 4619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5044,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 4625,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4791,
											"end": 4795,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4831,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4818,
											"end": 4827,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4832,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4806,
											"end": 4832,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4806,
											"end": 4832,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4878,
											"end": 4887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4872,
											"end": 4876,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4868,
											"end": 4888,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4864,
											"end": 4865,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4842,
											"end": 4889,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 5032,
											"end": 5036,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 4906,
											"end": 5037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 5037,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 4906,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4898,
											"end": 5037,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4898,
											"end": 5037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5044,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5050,
											"end": 5382,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 5050,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5171,
											"end": 5175,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5209,
											"end": 5211,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5198,
											"end": 5207,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5212,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5212,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5222,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 5290,
											"end": 5291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5279,
											"end": 5288,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5275,
											"end": 5292,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5266,
											"end": 5272,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5222,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 5222,
											"end": 5293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5222,
											"end": 5293,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 5222,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5303,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 5371,
											"end": 5373,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5360,
											"end": 5369,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5303,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 5303,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5303,
											"end": 5375,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 5303,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5050,
											"end": 5382,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5050,
											"end": 5382,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5050,
											"end": 5382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5050,
											"end": 5382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5050,
											"end": 5382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5050,
											"end": 5382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interfaces/IFomo3d.sol",
								"contracts/periphery/Fomo3d.sol",
								"contracts/periphery/Register.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"DRAW()": "619d36ef",
							"FOMO3D()": "4e2164c9",
							"JACKPOT()": "43c5cd74",
							"MARKET()": "f46f16c2",
							"PRIZE_ITEMS()": "20987a7e",
							"REFERRAL()": "c63568c7",
							"TOKEN()": "82bfefc8",
							"VRF()": "a126285b",
							"checkRole(bytes32,address)": "12d9a6ad",
							"currentContract(bytes32)": "74d16f5c",
							"getContract(bytes32)": "e16c7d98",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialAdmin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DRAW\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FOMO3D\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JACKPOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARKET\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRIZE_ITEMS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REFERRAL\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VRF\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"checkRole\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"currentContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_role\",\"type\":\"bytes32\"}],\"name\":\"getContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Register.sol\":\"Register\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/periphery/Register.sol\":{\"keccak256\":\"0xc5acce36f5a5a4f525f0e0f7f969d7b3d06d8aea06a2c6a8fdb13445ddcf2871\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921d2d569fac5c7f4b15fa6b5b5776449cca15990eaa08daead6025eb20235e1\",\"dweb:/ipfs/Qmb1LcTFiEXfXUQ2WgPkgiYbPnZXwUa9g3JZc3nMVnzSUx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/periphery/Register.sol:Register",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1763,
								"contract": "contracts/periphery/Register.sol:Register",
								"label": "currentContract",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_address)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/periphery/Register.sol:Register",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/periphery/Register.sol:Register",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1164
						],
						"ERC165": [
							1188
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1165,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1189,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1188,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1188,
								1200,
								378,
								1164
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1187,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 516,
							"src": "278:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 516,
							"src": "2186:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 516,
							"src": "4424:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1164
						],
						"ERC20": [
							1030
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 1031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1109,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 518,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1135,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 520,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1134,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1165,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 516,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "1428:7:3"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 529,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "1437:6:3"
									},
									"id": 530,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 531,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1134,
										"src": "1445:14:3"
									},
									"id": 532,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 533,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1461:12:3"
									},
									"id": 534,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030,
								420,
								1134,
								1108,
								1164
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 537,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 535,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 536,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 544,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 543,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 542,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 540,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 546,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 547,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 549,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 559,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 567,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 1030,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1121
									],
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 573,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 572,
												"id": 574,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 1030,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1127
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 582,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 1030,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1133
									],
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 590,
												"id": 592,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 588,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 1030,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 600,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 546,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 601,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 1030,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1065
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 611,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 613,
													"indexExpression": {
														"id": 612,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 614,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 1030,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 626,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 628,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 625,
												"id": 638,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 1030,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 650,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 652,
														"indexExpression": {
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 654,
													"indexExpression": {
														"id": 653,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 655,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 1030,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1095
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 669,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 921,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 666,
												"id": 679,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 1030,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1107
									],
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 693,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 711,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 1030,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 730,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 729,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 735,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 739,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 745,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 744,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 1030,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																782
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 782,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 807,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 786,
															"initialValue": {
																"baseExpression": {
																	"id": 783,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"id": 784,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 787,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 797,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 796,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 791,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 792,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 793,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 790,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 795,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 806,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 798,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 800,
																			"indexExpression": {
																				"id": 799,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 801,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 802,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 805,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 776,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 777,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 809,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 810,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 827,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 821,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 822,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 824,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 826,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 829,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 819,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 815,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 818,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 831,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 830,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 1030,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 852,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 851,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 857,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 860,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 1030,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 1030,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 914,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 913,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 981,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 1030,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 933,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 946,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 940,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 939,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 945,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 948,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 949,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 955,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 954,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 960,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 963,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 966,
															"indexExpression": {
																"id": 964,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 967,
														"indexExpression": {
															"id": 965,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 968,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 971,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 973,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 974,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 975,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 972,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 1030,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 993,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 999,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1005,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1015,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 1014,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1009,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1010,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1008,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1013,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 1025,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1019,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1020,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1016,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				921,
																				981
																			],
																			"referencedDeclaration": 981,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1024,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 1030,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1031,
							"src": "1401:9741:3",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						]
					},
					"id": 1109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1033,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1108,
							"linearizedBaseContracts": [
								1108
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1042,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1051,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 1108,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 1108,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 1108,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 1108,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 1108,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 1108,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1109,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 1135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1135,
							"sourceUnit": 1109,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1111,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1114,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "305:6:5"
									},
									"id": 1115,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1113,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1134,
							"linearizedBaseContracts": [
								1134,
								1108
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 1134,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 1134,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1130,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 1134,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1135,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1164
						]
					},
					"id": 1165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1137,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1164,
							"linearizedBaseContracts": [
								1164
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1142,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1144,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1164,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1151,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1150,
												"id": 1153,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1164,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1159,
												"id": 1161,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1164,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1165,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1188
						],
						"IERC165": [
							1200
						]
					},
					"id": 1189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 1201,
							"src": "140:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1167,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1200,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1170,
										"name": "IERC165",
										"nameLocations": [
											"687:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1200,
										"src": "687:7:7"
									},
									"id": 1171,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1169,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1188,
							"linearizedBaseContracts": [
								1188,
								1200
							],
							"name": "ERC165",
							"nameLocation": "677:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1199
									],
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "844:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1179,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "861:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1181,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "881:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1200_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1200_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1180,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1200",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1185,
												"nodeType": "Return",
												"src": "854:47:7"
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "789:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1173,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:7"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "838:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:7"
									},
									"scope": 1188,
									"src": "762:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1189,
							"src": "659:251:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1200
						]
					},
					"id": 1201,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1191,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1200,
							"linearizedBaseContracts": [
								1200
							],
							"name": "IERC165",
							"nameLocation": "431:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "817:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1193,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:8"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "860:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:8"
									},
									"scope": 1200,
									"src": "790:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1201,
							"src": "421:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:8"
				},
				"id": 8
			},
			"contracts/interfaces/IFomo3d.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IFomo3d.sol",
					"exportedSymbols": {
						"IFomo3d": [
							1296
						]
					},
					"id": 1297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1202,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFomo3d",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1203,
								"nodeType": "StructuredDocumentation",
								"src": "64:43:9",
								"text": " @title Interface of Fomo3d.sol"
							},
							"fullyImplemented": false,
							"id": 1296,
							"linearizedBaseContracts": [
								1296
							],
							"name": "IFomo3d",
							"nameLocation": "121:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0f0d29b5d4cebe99e2c93ffec39876a8b37c77ba767270f4f489daede43aea4e",
									"id": 1211,
									"name": "Fomo3dDeposit",
									"nameLocation": "157:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "187:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "171:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "201:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "193:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "216:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "208:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "208:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "170:53:9"
									},
									"src": "151:73:9"
								},
								{
									"anonymous": false,
									"eventSelector": "3488c34059d2e654b3b166b5ec4ee17bbd37297b906d39c704104a7dc2459b31",
									"id": 1217,
									"name": "Fomo3dClaim",
									"nameLocation": "236:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "264:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "248:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "248:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "278:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "270:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "247:37:9"
									},
									"src": "230:55:9"
								},
								{
									"errorSelector": "e6c4247b",
									"id": 1219,
									"name": "InvalidAddress",
									"nameLocation": "316:14:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "330:2:9"
									},
									"src": "310:23:9"
								},
								{
									"errorSelector": "aa7feadc",
									"id": 1221,
									"name": "InvalidValue",
									"nameLocation": "345:12:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "357:2:9"
									},
									"src": "339:21:9"
								},
								{
									"errorSelector": "2c5211c6",
									"id": 1223,
									"name": "InvalidAmount",
									"nameLocation": "372:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:2:9"
									},
									"src": "366:22:9"
								},
								{
									"errorSelector": "13be252b",
									"id": 1225,
									"name": "InsufficientAllowance",
									"nameLocation": "400:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "421:2:9"
									},
									"src": "394:30:9"
								},
								{
									"errorSelector": "f4d678b8",
									"id": 1227,
									"name": "InsufficientBalance",
									"nameLocation": "436:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "455:2:9"
									},
									"src": "430:28:9"
								},
								{
									"canonicalName": "IFomo3d.HistoryInfo",
									"id": 1234,
									"members": [
										{
											"constant": false,
											"id": 1229,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "504:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 1234,
											"src": "496:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1228,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "496:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1231,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "527:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1234,
											"src": "519:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1230,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "519:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1233,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "551:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1234,
											"src": "543:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1232,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "543:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "HistoryInfo",
									"nameLocation": "473:11:9",
									"nodeType": "StructDefinition",
									"scope": 1296,
									"src": "466:99:9",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "573:244:9",
										"text": " @notice Deposit from the user\n @notice Only the admin role can call this function\n @param _user The user address\n @param _value The value of the deposit\n @param _amount The amount of the deposit"
									},
									"functionSelector": "0efe6a8b",
									"id": 1244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "832:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "848:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "840:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "863:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "855:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "879:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "871:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:48:9"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "896:0:9"
									},
									"scope": 1296,
									"src": "823:74:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "905:73:9",
										"text": " @notice Withdraw all the value from the unclaim part"
									},
									"functionSelector": "4e71d92d",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "993:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:2:9"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:0:9"
									},
									"scope": 1296,
									"src": "984:26:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "1018:184:9",
										"text": " @notice Return how much the user can get when he put more amount here\n @param _user The user address\n @param _amount The amount of user put more here"
									},
									"functionSelector": "13da0777",
									"id": 1258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPredict",
									"nameLocation": "1217:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "1236:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1228:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1251:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1243:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:32:9"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1291:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1283:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:9"
									},
									"scope": 1296,
									"src": "1208:90:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "1306:80:9",
										"text": " @notice get user info\n @param _user The user address"
									},
									"functionSelector": "480a4262",
									"id": 1266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUnclaim",
									"nameLocation": "1401:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "1420:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "1412:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1411:15:9"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1458:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "1450:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1449:15:9"
									},
									"scope": 1296,
									"src": "1392:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "eb46260e",
									"id": 1273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimed",
									"nameLocation": "1480:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "1499:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1491:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:15:9"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1537:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1529:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:15:9"
									},
									"scope": 1296,
									"src": "1471:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8233fbcb",
									"id": 1280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalProfit",
									"nameLocation": "1559:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "1582:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1574:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1573:15:9"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1620:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1612:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:15:9"
									},
									"scope": 1296,
									"src": "1550:77:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "1635:87:9",
										"text": " @notice get history current nonce. (The nonce of the last history)"
									},
									"functionSelector": "6d1c6041",
									"id": 1286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentHistoryNonce",
									"nameLocation": "1737:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1759:2:9"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1792:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1785:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1283,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1785:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:14:9"
									},
									"scope": 1296,
									"src": "1728:71:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "1805:103:9",
										"text": " @notice get history info with nonce\n @param _nonce The nonce of the history"
									},
									"functionSelector": "07040e91",
									"id": 1295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getHistory",
									"nameLocation": "1923:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "1941:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1934:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1288,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1934:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1933:15:9"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1972:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HistoryInfo_$1234_memory_ptr",
													"typeString": "struct IFomo3d.HistoryInfo"
												},
												"typeName": {
													"id": 1292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1291,
														"name": "HistoryInfo",
														"nameLocations": [
															"1972:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1234,
														"src": "1972:11:9"
													},
													"referencedDeclaration": 1234,
													"src": "1972:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HistoryInfo_$1234_storage_ptr",
														"typeString": "struct IFomo3d.HistoryInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:20:9"
									},
									"scope": 1296,
									"src": "1914:78:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1297,
							"src": "111:1886:9",
							"usedErrors": [
								1219,
								1221,
								1223,
								1225,
								1227
							],
							"usedEvents": [
								1211,
								1217
							]
						}
					],
					"src": "33:1964:9"
				},
				"id": 9
			},
			"contracts/periphery/Fomo3d.sol": {
				"ast": {
					"absolutePath": "contracts/periphery/Fomo3d.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"ERC20": [
							1030
						],
						"Fomo3d": [
							1713
						],
						"IFomo3d": [
							1296
						],
						"Register": [
							1828
						]
					},
					"id": 1714,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1298,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1714,
							"sourceUnit": 1031,
							"src": "62:68:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1299,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1030,
										"src": "70:5:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IFomo3d.sol",
							"file": "../interfaces/IFomo3d.sol",
							"id": 1301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1714,
							"sourceUnit": 1297,
							"src": "132:35:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/periphery/Register.sol",
							"file": "./Register.sol",
							"id": 1302,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1714,
							"sourceUnit": 1829,
							"src": "169:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1304,
										"name": "IFomo3d",
										"nameLocations": [
											"281:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1296,
										"src": "281:7:10"
									},
									"id": 1305,
									"nodeType": "InheritanceSpecifier",
									"src": "281:7:10"
								}
							],
							"canonicalName": "Fomo3d",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1303,
								"nodeType": "StructuredDocumentation",
								"src": "197:61:10",
								"text": " @title \n @author SeekersAlliance\n @notice"
							},
							"fullyImplemented": true,
							"id": 1713,
							"linearizedBaseContracts": [
								1713,
								1296
							],
							"name": "Fomo3d",
							"nameLocation": "271:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3013ce29",
									"id": 1308,
									"mutability": "mutable",
									"name": "paymentToken",
									"nameLocation": "310:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1713,
									"src": "297:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$1030",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 1307,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1306,
											"name": "ERC20",
											"nameLocations": [
												"297:5:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1030,
											"src": "297:5:10"
										},
										"referencedDeclaration": 1030,
										"src": "297:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1030",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1aa3a008",
									"id": 1311,
									"mutability": "mutable",
									"name": "register",
									"nameLocation": "345:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1713,
									"src": "329:24:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Register_$1828",
										"typeString": "contract Register"
									},
									"typeName": {
										"id": 1310,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1309,
											"name": "Register",
											"nameLocations": [
												"329:8:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1828,
											"src": "329:8:10"
										},
										"referencedDeclaration": 1828,
										"src": "329:8:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Register_$1828",
											"typeString": "contract Register"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b9f0bf66",
									"id": 1315,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "398:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1713,
									"src": "362:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1314,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1312,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "371:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "362:28:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1313,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "382:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eeda71d5",
									"id": 1319,
									"mutability": "mutable",
									"name": "mask",
									"nameLocation": "447:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1713,
									"src": "411:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1318,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1316,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "420:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "411:28:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1317,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "431:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1161e582",
									"id": 1323,
									"mutability": "mutable",
									"name": "unclaim",
									"nameLocation": "494:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1713,
									"src": "458:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1322,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1320,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "467:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "458:28:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1321,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "478:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c884ef83",
									"id": 1327,
									"mutability": "mutable",
									"name": "claimed",
									"nameLocation": "544:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1713,
									"src": "508:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1326,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1324,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "517:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "508:28:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1325,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "528:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f54f0a8d",
									"id": 1332,
									"mutability": "mutable",
									"name": "historyInfo",
									"nameLocation": "597:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1713,
									"src": "558:50:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_HistoryInfo_$1234_storage_$",
										"typeString": "mapping(uint32 => struct IFomo3d.HistoryInfo)"
									},
									"typeName": {
										"id": 1331,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1328,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "567:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										},
										"nodeType": "Mapping",
										"src": "558:31:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_HistoryInfo_$1234_storage_$",
											"typeString": "mapping(uint32 => struct IFomo3d.HistoryInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1330,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1329,
												"name": "HistoryInfo",
												"nameLocations": [
													"577:11:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1234,
												"src": "577:11:10"
											},
											"referencedDeclaration": 1234,
											"src": "577:11:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_HistoryInfo_$1234_storage_ptr",
												"typeString": "struct IFomo3d.HistoryInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cdf033f3",
									"id": 1334,
									"mutability": "mutable",
									"name": "historyNonce",
									"nameLocation": "631:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1713,
									"src": "617:26:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 1333,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "617:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1a39d8ef",
									"id": 1336,
									"mutability": "mutable",
									"name": "totalAmount",
									"nameLocation": "665:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1713,
									"src": "650:26:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1335,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "650:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4c3eea0",
									"id": 1338,
									"mutability": "mutable",
									"name": "totalValue",
									"nameLocation": "698:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1713,
									"src": "683:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "683:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a19a488",
									"id": 1340,
									"mutability": "mutable",
									"name": "valuePerAmount",
									"nameLocation": "730:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1713,
									"src": "715:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1339,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "715:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "76809ce3",
									"id": 1342,
									"mutability": "mutable",
									"name": "decimal",
									"nameLocation": "765:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1713,
									"src": "751:21:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 1341,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "751:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a035b1fe",
									"id": 1344,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "794:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1713,
									"src": "779:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1343,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "779:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "921:285:10",
										"statements": [
											{
												"expression": {
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1353,
														"name": "paymentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "932:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$1030",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1355,
																"name": "_basePaymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "953:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1354,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "947:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$1030_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "947:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$1030",
															"typeString": "contract ERC20"
														}
													},
													"src": "932:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1030",
														"typeString": "contract ERC20"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "932:39:10"
											},
											{
												"expression": {
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1359,
														"name": "decimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "982:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1360,
																"name": "paymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "992:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC20_$1030",
																	"typeString": "contract ERC20"
																}
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1005:8:10",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 594,
															"src": "992:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "992:23:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "982:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1364,
												"nodeType": "ExpressionStatement",
												"src": "982:33:10"
											},
											{
												"expression": {
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1365,
														"name": "historyNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "1026:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1041:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1026:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1368,
												"nodeType": "ExpressionStatement",
												"src": "1026:16:10"
											},
											{
												"expression": {
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1369,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "1143:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1370,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "1151:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1143:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "1143:14:10"
											},
											{
												"expression": {
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1373,
														"name": "register",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "1168:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Register_$1828",
															"typeString": "contract Register"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1375,
																"name": "_register",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "1188:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1374,
															"name": "Register",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "1179:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Register_$1828_$",
																"typeString": "type(contract Register)"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1179:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Register_$1828",
															"typeString": "contract Register"
														}
													},
													"src": "1168:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Register_$1828",
														"typeString": "contract Register"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "1168:30:10"
											}
										]
									},
									"id": 1380,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "_basePaymentToken",
												"nameLocation": "844:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "836:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "_register",
												"nameLocation": "880:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "872:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "908:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "900:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "825:96:10"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "921:0:10"
									},
									"scope": 1713,
									"src": "814:392:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1244
									],
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "1324:694:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1393,
																	"name": "register",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "1354:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Register_$1828",
																		"typeString": "contract Register"
																	}
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1363:6:10",
																"memberName": "MARKET",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1734,
																"src": "1354:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view external returns (bytes32)"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1354:17:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1396,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1373:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1377:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1373:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1390,
															"name": "register",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "1335:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Register_$1828",
																"typeString": "contract Register"
															}
														},
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1344:9:10",
														"memberName": "checkRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1815,
														"src": "1335:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view external"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1335:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "1335:49:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1400,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "1398:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1415:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1407:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1401,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1407:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1407:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1398:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1409,
												"nodeType": "IfStatement",
												"src": "1395:47:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1406,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "1426:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1426:16:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1408,
													"nodeType": "RevertStatement",
													"src": "1419:23:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1410,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "1456:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1466:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1456:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1416,
												"nodeType": "IfStatement",
												"src": "1453:37:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1413,
															"name": "InvalidValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "1476:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1476:14:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1415,
													"nodeType": "RevertStatement",
													"src": "1469:21:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1417,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "1504:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1515:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1504:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1423,
												"nodeType": "IfStatement",
												"src": "1501:39:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1420,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "1525:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1525:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1422,
													"nodeType": "RevertStatement",
													"src": "1518:22:10"
												}
											},
											{
												"expression": {
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1424,
															"name": "unclaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "1561:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1426,
														"indexExpression": {
															"id": 1425,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "1569:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1561:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1427,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "1580:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1429,
																		"indexExpression": {
																			"id": 1428,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1382,
																			"src": "1587:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1580:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1430,
																					"name": "valuePerAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1340,
																					"src": "1597:14:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"baseExpression": {
																						"id": 1431,
																						"name": "mask",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1319,
																						"src": "1612:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1433,
																					"indexExpression": {
																						"id": 1432,
																						"name": "_user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1382,
																						"src": "1617:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1612:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1597:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1435,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1596:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1580:44:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1437,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1579:46:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1627:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 1439,
																		"name": "decimal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "1631:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "1627:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1441,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1626:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1579:60:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1561:78:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "1561:78:10"
											},
											{
												"expression": {
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1445,
														"name": "totalValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "1650:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1446,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "1664:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1650:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "1650:20:10"
											},
											{
												"expression": {
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1449,
															"name": "mask",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "1681:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1451,
														"indexExpression": {
															"id": 1450,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "1686:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1681:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1452,
														"name": "valuePerAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "1695:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1681:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "1681:28:10"
											},
											{
												"expression": {
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1455,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "1720:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1457,
														"indexExpression": {
															"id": 1456,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "1727:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1720:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1458,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "1737:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1720:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "1720:24:10"
											},
											{
												"expression": {
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1461,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "1755:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1462,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "1770:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1755:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1464,
												"nodeType": "ExpressionStatement",
												"src": "1755:22:10"
											},
											{
												"expression": {
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1465,
														"name": "valuePerAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "1788:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1466,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1384,
																		"src": "1807:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1469,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 1467,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1815:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 1468,
																					"name": "decimal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1342,
																					"src": "1819:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "1815:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1470,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1814:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1807:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1472,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "1828:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1807:32:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1474,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1806:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1788:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "1788:52:10"
											},
											{
												"expression": {
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1477,
															"name": "historyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "1851:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_HistoryInfo_$1234_storage_$",
																"typeString": "mapping(uint32 => struct IFomo3d.HistoryInfo storage ref)"
															}
														},
														"id": 1479,
														"indexExpression": {
															"id": 1478,
															"name": "historyNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "1863:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1851:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_HistoryInfo_$1234_storage",
															"typeString": "struct IFomo3d.HistoryInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1481,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "1891:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1484,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1384,
																		"src": "1906:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1898:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1482,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1898:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1898:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1488,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1386,
																		"src": "1923:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1915:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1486,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1915:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1915:16:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1480,
															"name": "HistoryInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "1879:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_HistoryInfo_$1234_storage_ptr_$",
																"typeString": "type(struct IFomo3d.HistoryInfo storage pointer)"
															}
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1879:53:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_HistoryInfo_$1234_memory_ptr",
															"typeString": "struct IFomo3d.HistoryInfo memory"
														}
													},
													"src": "1851:81:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HistoryInfo_$1234_storage",
														"typeString": "struct IFomo3d.HistoryInfo storage ref"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "1851:81:10"
											},
											{
												"expression": {
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1943:14:10",
													"subExpression": {
														"id": 1493,
														"name": "historyNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "1943:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "1943:14:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1497,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "1987:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1498,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "1994:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1499,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "2002:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1496,
														"name": "Fomo3dDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "1973:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1973:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1501,
												"nodeType": "EmitStatement",
												"src": "1968:42:10"
											}
										]
									},
									"functionSelector": "0efe6a8b",
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1251:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1388,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1316:8:10"
									},
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "1267:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "1259:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1282:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "1274:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1298:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "1290:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:48:10"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1324:0:10"
									},
									"scope": 1713,
									"src": "1242:776:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1248
									],
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "2083:273:10",
										"statements": [
											{
												"assignments": [
													1507
												],
												"declarations": [
													{
														"constant": false,
														"id": 1507,
														"mutability": "mutable",
														"name": "_user",
														"nameLocation": "2102:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1545,
														"src": "2094:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1506,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2094:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1510,
												"initialValue": {
													"expression": {
														"id": 1508,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2110:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2114:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2110:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2094:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1511,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "2134:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2151:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2143:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2143:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2143:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2134:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1520,
												"nodeType": "IfStatement",
												"src": "2131:47:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1517,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "2162:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2162:16:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1519,
													"nodeType": "RevertStatement",
													"src": "2155:23:10"
												}
											},
											{
												"assignments": [
													1522
												],
												"declarations": [
													{
														"constant": false,
														"id": 1522,
														"mutability": "mutable",
														"name": "_value",
														"nameLocation": "2197:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1545,
														"src": "2189:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2189:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1526,
												"initialValue": {
													"arguments": [
														{
															"id": 1524,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "2218:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1523,
														"name": "_getUnclaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "2206:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2206:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2189:35:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1530,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "2257:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1531,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "2264:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1527,
															"name": "paymentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "2235:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1030",
																"typeString": "contract ERC20"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2248:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 640,
														"src": "2235:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "2235:36:10"
											},
											{
												"expression": {
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1534,
															"name": "claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "2282:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1536,
														"indexExpression": {
															"id": 1535,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "2290:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2282:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1537,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "2300:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2282:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "2282:24:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1541,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "2334:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1542,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "2341:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1540,
														"name": "Fomo3dClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "2322:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2322:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "EmitStatement",
												"src": "2317:31:10"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "2067:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2072:2:10"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:10"
									},
									"scope": 1713,
									"src": "2058:298:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1258
									],
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "2481:298:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1555,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "2495:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2512:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2504:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1556,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2504:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2504:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2495:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1564,
												"nodeType": "IfStatement",
												"src": "2492:47:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1561,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "2523:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2523:16:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1563,
													"nodeType": "RevertStatement",
													"src": "2516:23:10"
												}
											},
											{
												"assignments": [
													1566
												],
												"declarations": [
													{
														"constant": false,
														"id": 1566,
														"mutability": "mutable",
														"name": "userAmount",
														"nameLocation": "2558:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1609,
														"src": "2550:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1565,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2550:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1572,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1567,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "2571:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1569,
														"indexExpression": {
															"id": 1568,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "2578:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2571:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1570,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "2587:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2571:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2550:44:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1573,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "2608:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1574,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "2620:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2608:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2631:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2608:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1580,
												"nodeType": "IfStatement",
												"src": "2605:37:10",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2641:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1554,
													"id": 1579,
													"nodeType": "Return",
													"src": "2634:8:10"
												}
											},
											{
												"assignments": [
													1582
												],
												"declarations": [
													{
														"constant": false,
														"id": 1582,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "2661:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1609,
														"src": "2653:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1581,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2653:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1595,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1583,
																	"name": "userAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "2670:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2682:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 1585,
																				"name": "decimal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1342,
																				"src": "2686:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"src": "2682:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1587,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2681:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2670:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1589,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2669:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1590,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "2697:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1591,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "2709:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2697:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1593,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2696:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2669:48:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2653:64:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1596,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1582,
																	"src": "2737:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1597,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1344,
																				"src": "2746:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3130",
																				"id": 1598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2752:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"src": "2746:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1600,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2745:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2737:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1602,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2736:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2759:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 1604,
																	"name": "decimal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "2763:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "2759:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1606,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2758:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2736:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1554,
												"id": 1608,
												"nodeType": "Return",
												"src": "2728:43:10"
											}
										]
									},
									"functionSelector": "13da0777",
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPredict",
									"nameLocation": "2401:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2420:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2412:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2412:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2435:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2427:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2411:32:10"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2475:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2467:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2467:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:15:10"
									},
									"scope": 1713,
									"src": "2392:387:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1266
									],
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "2885:44:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1618,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "2915:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1617,
														"name": "_getUnclaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "2903:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2903:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1616,
												"id": 1620,
												"nodeType": "Return",
												"src": "2896:25:10"
											}
										]
									},
									"functionSelector": "480a4262",
									"id": 1622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUnclaim",
									"nameLocation": "2822:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2841:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "2833:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2833:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2832:15:10"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2879:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "2871:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:15:10"
									},
									"scope": 1713,
									"src": "2813:116:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1273
									],
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "3035:40:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1629,
														"name": "claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "3053:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1631,
													"indexExpression": {
														"id": 1630,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "3061:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3053:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1628,
												"id": 1632,
												"nodeType": "Return",
												"src": "3046:21:10"
											}
										]
									},
									"functionSelector": "eb46260e",
									"id": 1634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimed",
									"nameLocation": "2972:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2991:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "2983:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2983:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2982:15:10"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3029:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "3021:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3021:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3020:15:10"
									},
									"scope": 1713,
									"src": "2963:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1280
									],
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "3185:61:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1641,
															"name": "claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "3203:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1643,
														"indexExpression": {
															"id": 1642,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "3211:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3203:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"id": 1645,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "3232:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1644,
															"name": "_getUnclaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "3220:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3220:18:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3203:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1640,
												"id": 1648,
												"nodeType": "Return",
												"src": "3196:42:10"
											}
										]
									},
									"functionSelector": "8233fbcb",
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalProfit",
									"nameLocation": "3118:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3141:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "3133:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3133:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3132:15:10"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3179:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "3171:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3171:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3170:15:10"
									},
									"scope": 1713,
									"src": "3109:137:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1286
									],
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "3350:81:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1655,
														"name": "historyNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "3364:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3380:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3364:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1660,
												"nodeType": "IfStatement",
												"src": "3361:30:10",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1658,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3390:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1654,
													"id": 1659,
													"nodeType": "Return",
													"src": "3383:8:10"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1661,
														"name": "historyNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "3409:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3422:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3409:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1654,
												"id": 1664,
												"nodeType": "Return",
												"src": "3402:21:10"
											}
										]
									},
									"functionSelector": "6d1c6041",
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentHistoryNonce",
									"nameLocation": "3289:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3311:2:10"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "3344:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "3337:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1652,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3337:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3336:14:10"
									},
									"scope": 1713,
									"src": "3280:151:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1295
									],
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "3542:45:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1674,
														"name": "historyInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "3560:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_HistoryInfo_$1234_storage_$",
															"typeString": "mapping(uint32 => struct IFomo3d.HistoryInfo storage ref)"
														}
													},
													"id": 1676,
													"indexExpression": {
														"id": 1675,
														"name": "_nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "3572:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3560:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HistoryInfo_$1234_storage",
														"typeString": "struct IFomo3d.HistoryInfo storage ref"
													}
												},
												"functionReturnParameters": 1673,
												"id": 1677,
												"nodeType": "Return",
												"src": "3553:26:10"
											}
										]
									},
									"functionSelector": "07040e91",
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHistory",
									"nameLocation": "3474:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "3492:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3485:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1667,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3485:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:15:10"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3523:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HistoryInfo_$1234_memory_ptr",
													"typeString": "struct IFomo3d.HistoryInfo"
												},
												"typeName": {
													"id": 1671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1670,
														"name": "HistoryInfo",
														"nameLocations": [
															"3523:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1234,
														"src": "3523:11:10"
													},
													"referencedDeclaration": 1234,
													"src": "3523:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HistoryInfo_$1234_storage_ptr",
														"typeString": "struct IFomo3d.HistoryInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:20:10"
									},
									"scope": 1713,
									"src": "3465:122:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "3676:120:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1686,
																"name": "unclaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "3694:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1688,
															"indexExpression": {
																"id": 1687,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1681,
																"src": "3702:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3694:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1689,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1315,
																				"src": "3712:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1691,
																			"indexExpression": {
																				"id": 1690,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1681,
																				"src": "3719:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3712:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1696,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1692,
																						"name": "valuePerAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1340,
																						"src": "3729:14:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"baseExpression": {
																							"id": 1693,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1319,
																							"src": "3744:4:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1695,
																						"indexExpression": {
																							"id": 1694,
																							"name": "_user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1681,
																							"src": "3749:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3744:11:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3729:26:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1697,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3728:28:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3712:44:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1699,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3711:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3759:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"id": 1701,
																			"name": "decimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1342,
																			"src": "3763:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"src": "3759:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1703,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3758:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3711:60:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3694:77:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1706,
															"name": "claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "3774:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1708,
														"indexExpression": {
															"id": 1707,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "3782:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3774:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3694:94:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1685,
												"id": 1710,
												"nodeType": "Return",
												"src": "3687:101:10"
											}
										]
									},
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getUnclaim",
									"nameLocation": "3612:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3632:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "3624:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3624:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3623:15:10"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3670:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "3662:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3662:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3661:15:10"
									},
									"scope": 1713,
									"src": "3603:193:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1714,
							"src": "262:3539:10",
							"usedErrors": [
								1219,
								1221,
								1223,
								1225,
								1227
							],
							"usedEvents": [
								1211,
								1217
							]
						}
					],
					"src": "33:3774:10"
				},
				"id": 10
			},
			"contracts/periphery/Register.sol": {
				"ast": {
					"absolutePath": "contracts/periphery/Register.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Register": [
							1828
						]
					},
					"id": 1829,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1715,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1717,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1829,
							"sourceUnit": 296,
							"src": "62:79:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1716,
										"name": "AccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 295,
										"src": "70:13:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1718,
										"name": "AccessControl",
										"nameLocations": [
											"166:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "166:13:11"
									},
									"id": 1719,
									"nodeType": "InheritanceSpecifier",
									"src": "166:13:11"
								}
							],
							"canonicalName": "Register",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1828,
							"linearizedBaseContracts": [
								1828,
								295,
								1188,
								1200,
								378,
								1164
							],
							"name": "Register",
							"nameLocation": "154:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "4e2164c9",
									"id": 1724,
									"mutability": "constant",
									"name": "FOMO3D",
									"nameLocation": "224:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "200:52:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1720,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "200:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "464f4d4f3344",
												"id": 1722,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "243:8:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_64b1d43f4e53241bce58c6f9670f08a22934a523acf2a5359fa7c904ff98bd97",
													"typeString": "literal_string \"FOMO3D\""
												},
												"value": "FOMO3D"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_64b1d43f4e53241bce58c6f9670f08a22934a523acf2a5359fa7c904ff98bd97",
													"typeString": "literal_string \"FOMO3D\""
												}
											],
											"id": 1721,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "233:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1723,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "233:19:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "43c5cd74",
									"id": 1729,
									"mutability": "constant",
									"name": "JACKPOT",
									"nameLocation": "283:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "259:54:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1725,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "259:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4a41434b504f54",
												"id": 1727,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "303:9:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f45223fc822e0a02a042bb2eec36a76af2a028cc55539c3a40ab438d1089e1c0",
													"typeString": "literal_string \"JACKPOT\""
												},
												"value": "JACKPOT"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_f45223fc822e0a02a042bb2eec36a76af2a028cc55539c3a40ab438d1089e1c0",
													"typeString": "literal_string \"JACKPOT\""
												}
											],
											"id": 1726,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "293:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1728,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "293:20:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f46f16c2",
									"id": 1734,
									"mutability": "constant",
									"name": "MARKET",
									"nameLocation": "344:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "320:52:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1730,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "320:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d41524b4554",
												"id": 1732,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "363:8:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_23acc66832ff38a7ce3c1caf89922410f4374ba8fd897ffa98f088747997bc6d",
													"typeString": "literal_string \"MARKET\""
												},
												"value": "MARKET"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_23acc66832ff38a7ce3c1caf89922410f4374ba8fd897ffa98f088747997bc6d",
													"typeString": "literal_string \"MARKET\""
												}
											],
											"id": 1731,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "353:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1733,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "353:19:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "20987a7e",
									"id": 1739,
									"mutability": "constant",
									"name": "PRIZE_ITEMS",
									"nameLocation": "403:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "379:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1735,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "379:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5052495a455f4954454d53",
												"id": 1737,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "427:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_dc56da5a1587a4cd75ea240b3d5cd7c4a0eaac792d95a49979f1c23a0cf8895f",
													"typeString": "literal_string \"PRIZE_ITEMS\""
												},
												"value": "PRIZE_ITEMS"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_dc56da5a1587a4cd75ea240b3d5cd7c4a0eaac792d95a49979f1c23a0cf8895f",
													"typeString": "literal_string \"PRIZE_ITEMS\""
												}
											],
											"id": 1736,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "417:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1738,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "417:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c63568c7",
									"id": 1744,
									"mutability": "constant",
									"name": "REFERRAL",
									"nameLocation": "472:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "448:56:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1740,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "448:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "524546455252414c",
												"id": 1742,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "493:10:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_4af58918e2c6f17f8b6da7260d8669fa63150ffd279395662a723476f776f76a",
													"typeString": "literal_string \"REFERRAL\""
												},
												"value": "REFERRAL"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_4af58918e2c6f17f8b6da7260d8669fa63150ffd279395662a723476f776f76a",
													"typeString": "literal_string \"REFERRAL\""
												}
											],
											"id": 1741,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "483:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1743,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "483:21:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a126285b",
									"id": 1749,
									"mutability": "constant",
									"name": "VRF",
									"nameLocation": "535:3:11",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "511:46:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1745,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "511:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "565246",
												"id": 1747,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "551:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_cd0c49d5c8438d0944f64e0d3825bed3b606f318474213a77860c93bca5ed999",
													"typeString": "literal_string \"VRF\""
												},
												"value": "VRF"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_cd0c49d5c8438d0944f64e0d3825bed3b606f318474213a77860c93bca5ed999",
													"typeString": "literal_string \"VRF\""
												}
											],
											"id": 1746,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "541:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1748,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "541:16:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "82bfefc8",
									"id": 1754,
									"mutability": "constant",
									"name": "TOKEN",
									"nameLocation": "588:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "564:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1750,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "564:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "544f4b454e",
												"id": 1752,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "606:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_96706879d29c248edfb2a2563a8a9d571c49634c0f82013e6f5a7cde739d35d4",
													"typeString": "literal_string \"TOKEN\""
												},
												"value": "TOKEN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_96706879d29c248edfb2a2563a8a9d571c49634c0f82013e6f5a7cde739d35d4",
													"typeString": "literal_string \"TOKEN\""
												}
											],
											"id": 1751,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "596:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1753,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "596:18:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "619d36ef",
									"id": 1759,
									"mutability": "constant",
									"name": "DRAW",
									"nameLocation": "645:4:11",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "621:48:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1755,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "621:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "44524157",
												"id": 1757,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "662:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_1cf54708aaa392dbeba88d1a07e69feaba67586acd469366b89b52bf44132258",
													"typeString": "literal_string \"DRAW\""
												},
												"value": "DRAW"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_1cf54708aaa392dbeba88d1a07e69feaba67586acd469366b89b52bf44132258",
													"typeString": "literal_string \"DRAW\""
												}
											],
											"id": 1756,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "652:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1758,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "652:17:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "74d16f5c",
									"id": 1763,
									"mutability": "mutable",
									"name": "currentContract",
									"nameLocation": "714:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "678:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
										"typeString": "mapping(bytes32 => address)"
									},
									"typeName": {
										"id": 1762,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1760,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "687:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "678:28:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
											"typeString": "mapping(bytes32 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1761,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "698:7:11",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "773:64:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1769,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "795:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1770,
															"name": "_initialAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "815:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1768,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "784:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "784:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1772,
												"nodeType": "ExpressionStatement",
												"src": "784:45:11"
											}
										]
									},
									"id": 1774,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "_initialAdmin",
												"nameLocation": "758:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "750:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "749:23:11"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:0:11"
									},
									"scope": 1828,
									"src": "738:99:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										147
									],
									"body": {
										"id": 1798,
										"nodeType": "Block",
										"src": "939:86:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1788,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "961:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1789,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1778,
															"src": "967:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1787,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "950:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "950:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "950:25:11"
											},
											{
												"expression": {
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1792,
															"name": "currentContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "986:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 1794,
														"indexExpression": {
															"id": 1793,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "1002:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "986:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1795,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1778,
														"src": "1010:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "986:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1797,
												"nodeType": "ExpressionStatement",
												"src": "986:31:11"
											}
										]
									},
									"functionSelector": "2f2ff15d",
									"id": 1799,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 1783,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "933:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1782,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "920:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "920:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1785,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1781,
												"name": "onlyRole",
												"nameLocations": [
													"911:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "911:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "911:28:11"
										}
									],
									"name": "grantRole",
									"nameLocation": "854:9:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1780,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "902:8:11"
									},
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "872:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "864:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1775,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "886:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "878:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "863:31:11"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "939:0:11"
									},
									"scope": 1828,
									"src": "845:180:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "1101:78:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1808,
																	"name": "_role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "1128:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1809,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1803,
																	"src": "1135:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1807,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1120:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1120:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52656769737465723a20494e56414c49445f524f4c45",
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1146:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9",
																"typeString": "literal_string \"Register: INVALID_ROLE\""
															},
															"value": "Register: INVALID_ROLE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9",
																"typeString": "literal_string \"Register: INVALID_ROLE\""
															}
														],
														"id": 1806,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1112:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:59:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "1112:59:11"
											}
										]
									},
									"functionSelector": "12d9a6ad",
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkRole",
									"nameLocation": "1046:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "_role",
												"nameLocation": "1064:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "1056:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1800,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "1079:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "1071:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:33:11"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1101:0:11"
									},
									"scope": 1828,
									"src": "1037:142:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "1250:48:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1822,
														"name": "currentContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "1268:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
															"typeString": "mapping(bytes32 => address)"
														}
													},
													"id": 1824,
													"indexExpression": {
														"id": 1823,
														"name": "_role",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1817,
														"src": "1284:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1268:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1821,
												"id": 1825,
												"nodeType": "Return",
												"src": "1261:29:11"
											}
										]
									},
									"functionSelector": "e16c7d98",
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContract",
									"nameLocation": "1194:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "_role",
												"nameLocation": "1214:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "1206:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1816,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:15:11"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "1242:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1241:9:11"
									},
									"scope": 1828,
									"src": "1185:113:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1829,
							"src": "145:1170:11",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "33:1282:11"
				},
				"id": 11
			}
		}
	}
}