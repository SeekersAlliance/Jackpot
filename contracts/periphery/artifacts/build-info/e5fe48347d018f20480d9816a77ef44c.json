{
	"id": "e5fe48347d018f20480d9816a77ef44c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/periphery/Fomo3d_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/access/IAccessControl.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n\n// File: contracts/interfaces/IFomo3d.sol\n\n\npragma solidity = 0.8.23;\n\n\n/**\n * @title Interface of Fomo3d.sol\n */\n\ninterface IFomo3d {\n    // Events\n    event Fomo3dDeposit(address indexed user, uint256 value, uint256 amount);\n    event Fomo3dClaim(address indexed user, uint256 value);\n\n\n    // Errors\n    error InvalidAddress();\n    error InvalidValue();\n    error InvalidAmount();\n    error InsufficientAllowance();\n    error InsufficientBalance();\n\n    struct HistoryInfo {\n        address user;\n        uint256 value;\n        uint256 amount;\n    }\n\n    /** \n     * @notice Deposit from the user\n     * @notice Only the admin role can call this function\n     * @param _user The user address\n     * @param _value The value of the deposit\n     * @param _amount The amount of the deposit\n     */\n    function deposit(address _user, uint256 _value, uint256 _amount) external;\n\n    /**\n     * @notice Withdraw all the value from the unclaim part\n     */\n    function claim() external;\n\n    /**\n     * @notice Return how much the user can get when he put more amount here\n     * @param _user The user address\n     * @param _amount The amount of user put more here\n     */\n    function getPredict(address _user, uint256 _amount) external view returns (uint256 value);\n\n    /**\n     * @notice get user info\n     * @param _user The user address\n     */\n    function getUnclaim(address _user) external view returns (uint256 value);\n    function getClaimed(address _user) external view returns (uint256 value);\n    function getTotalProfit(address _user) external view returns (uint256 value);\n\n    /**\n     * @notice get history current nonce. (The nonce of the last history)\n     */\n    function getCurrentHistoryNonce() external view returns (uint32 nonce);\n    /**\n     * @notice get history info with nonce\n     * @param _nonce The nonce of the history\n     */\n    function getHistory(uint32 _nonce) external view returns (HistoryInfo memory);\n\n}\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/access/AccessControl.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\n// File: contracts/periphery/Register.sol\n\n\npragma solidity = 0.8.23;\n\n\ncontract Register is AccessControl{\n    // ROLES\n    bytes32 public constant FOMO3D = keccak256(\"FOMO3D\");\n    bytes32 public constant JACKPOT = keccak256(\"JACKPOT\");\n    bytes32 public constant MARKET = keccak256(\"MARKET\");\n    bytes32 public constant PRIZE_ITEMS = keccak256(\"PRIZE_ITEMS\");\n    bytes32 public constant REFERRAL = keccak256(\"REFERRAL\");\n    bytes32 public constant VRF = keccak256(\"VRF\");\n    bytes32 public constant TOKEN = keccak256(\"TOKEN\");\n    bytes32 public constant DRAW = keccak256(\"DRAW\");\n\n    mapping (bytes32 => address) public currentContract;\n\n    constructor(address _initialAdmin) {\n        _grantRole(DEFAULT_ADMIN_ROLE, _initialAdmin);\n    }\n\n    function grantRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)){\n        _grantRole(role, account);\n        currentContract[role] = account;\n    }\n    \n    function checkRole(bytes32 _role, address _account) public view {\n        require(hasRole(_role, _account), \"Register: INVALID_ROLE\");\n    }\n    function getContract(bytes32 _role) public view returns (address){\n        return currentContract[_role];\n    }\n\n    \n    \n}\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: contracts/periphery/Fomo3d.sol\n\n\npragma solidity = 0.8.23;\n\n\n\n\n/** \n * @title \n * @author SeekersAlliance\n * @notice\n */\n\ncontract Fomo3d is IFomo3d{\n\n    ERC20 public paymentToken;\n    Register public register;\n\n    mapping (address => uint256) public amount;\n    mapping (address => uint256) public mask;\n    mapping (address => uint256) public unclaim;\n    mapping (address => uint256) public claimed;\n    mapping (uint32 => HistoryInfo) public historyInfo;\n\n    uint32 public historyNonce;\n    uint256 public totalAmount;\n    uint256 public totalValue;\n    uint256 public valuePerAmount;\n    uint32 public decimal;\n    uint256 public price;\n    \n\n    constructor(\n        address _basePaymentToken,\n        address _register,\n        uint256 _price\n    ){\n        paymentToken = ERC20(_basePaymentToken);\n        decimal = paymentToken.decimals();\n        historyNonce = 0;\n        // This _price is part of the price of a pack which is distributed to the fomo3d\n        price = _price;\n        register = Register(_register);\n    }\n\n    // @inheritdoc IFomo3d\n    function deposit(address _user, uint256 _value, uint256 _amount) external override{\n        register.checkRole(register.MARKET(), msg.sender);\n        if(_user == address(0)) revert InvalidAddress();\n        if(_value == 0) revert InvalidValue();\n        if(_amount == 0) revert InvalidAmount();\n        \n        unclaim[_user] += (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal);\n        totalValue += _value;\n        mask[_user] = valuePerAmount;\n        amount[_user] += _amount;\n        totalAmount += _amount;\n        valuePerAmount += (_value*(10**decimal)/totalAmount);\n        historyInfo[historyNonce] = HistoryInfo(_user, uint256(_value), uint256(_amount));\n        historyNonce++;\n        emit Fomo3dDeposit(_user, _value, _amount);\n    }\n    \n    // @inheritdoc IFomo3d\n    function claim() external{\n        address _user = msg.sender;\n        if(_user == address(0)) revert InvalidAddress();\n        uint256 _value = _getUnclaim(_user);\n        paymentToken.transfer(_user, _value);\n        claimed[_user] += _value;\n        emit Fomo3dClaim(_user, _value);\n    }\n\n    // @inheritdoc IFomo3d\n    function getPredict(address _user, uint256 _amount) external view returns (uint256 value){\n        if(_user == address(0)) revert InvalidAddress();\n        uint256 userAmount = amount[_user] + _amount;\n        if(totalAmount+_amount == 0) return 0;\n        uint256 ratio = (userAmount*(10**decimal))/(totalAmount+_amount);\n        return  (ratio * (price/10))/ (10**decimal);\n    }\n    // @inheritdoc IFomo3d\n    function getUnclaim(address _user) external view returns (uint256 value){\n        return _getUnclaim(_user);\n    }\n    // @inheritdoc IFomo3d\n    function getClaimed(address _user) external view returns (uint256 value){\n        return claimed[_user];\n    }\n    // @inheritdoc IFomo3d\n    function getTotalProfit(address _user) external view returns (uint256 value){\n        return claimed[_user] + _getUnclaim(_user);\n    }\n    // @inheritdoc IFomo3d\n    function getCurrentHistoryNonce() external view returns (uint32 nonce){\n        if(historyNonce == 0) return 0;\n        return historyNonce-1;\n    }\n    // @inheritdoc IFomo3d\n    function getHistory(uint32 _nonce) external view returns (HistoryInfo memory){\n        return historyInfo[_nonce];\n    }\n\n\n\n\n\n    function _getUnclaim(address _user) internal view returns (uint256 value){\n        return unclaim[_user] + (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal) - claimed[_user];\n    }\n\n}\n    "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/periphery/Fomo3d_flattened.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Fomo3d_flattened.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/periphery/Fomo3d_flattened.sol\":{\"keccak256\":\"0xf9c20ba16e565b16c74076ff14ce0bdc8aa2cd5b5178d144fc03b8518b5c7595\",\"urls\":[\"bzz-raw://5d3ff73968ee29bf0ebf5b52e0b662a58aac35e3645e82a74ddca5839d3f0274\",\"dweb:/ipfs/QmZjUjMYatCSrJrBgjNz8uHYH1bnQSiYdu1GEzBYaFawwv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 394,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)389_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)389_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)389_storage"
							},
							"t_struct(RoleData)389_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 386,
										"contract": "contracts/periphery/Fomo3d_flattened.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 388,
										"contract": "contracts/periphery/Fomo3d_flattened.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Fomo3d_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/periphery/Fomo3d_flattened.sol\":{\"keccak256\":\"0xf9c20ba16e565b16c74076ff14ce0bdc8aa2cd5b5178d144fc03b8518b5c7595\",\"urls\":[\"bzz-raw://5d3ff73968ee29bf0ebf5b52e0b662a58aac35e3645e82a74ddca5839d3f0274\",\"dweb:/ipfs/QmZjUjMYatCSrJrBgjNz8uHYH1bnQSiYdu1GEzBYaFawwv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Fomo3d_flattened.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/periphery/Fomo3d_flattened.sol\":{\"keccak256\":\"0xf9c20ba16e565b16c74076ff14ce0bdc8aa2cd5b5178d144fc03b8518b5c7595\",\"urls\":[\"bzz-raw://5d3ff73968ee29bf0ebf5b52e0b662a58aac35e3645e82a74ddca5839d3f0274\",\"dweb:/ipfs/QmZjUjMYatCSrJrBgjNz8uHYH1bnQSiYdu1GEzBYaFawwv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Fomo3d_flattened.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/periphery/Fomo3d_flattened.sol\":{\"keccak256\":\"0xf9c20ba16e565b16c74076ff14ce0bdc8aa2cd5b5178d144fc03b8518b5c7595\",\"urls\":[\"bzz-raw://5d3ff73968ee29bf0ebf5b52e0b662a58aac35e3645e82a74ddca5839d3f0274\",\"dweb:/ipfs/QmZjUjMYatCSrJrBgjNz8uHYH1bnQSiYdu1GEzBYaFawwv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 889,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 895,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 897,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 899,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 901,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Fomo3d": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_basePaymentToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_register",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidValue",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Fomo3dClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Fomo3dDeposit",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "amount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimal",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getClaimed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentHistoryNonce",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_nonce",
									"type": "uint32"
								}
							],
							"name": "getHistory",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "user",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct IFomo3d.HistoryInfo",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "getPredict",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getTotalProfit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUnclaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "historyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "historyNonce",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "mask",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paymentToken",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "register",
							"outputs": [
								{
									"internalType": "contract Register",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "unclaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "valuePerAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "SeekersAlliance",
						"kind": "dev",
						"methods": {
							"deposit(address,uint256,uint256)": {
								"params": {
									"_amount": "The amount of the deposit",
									"_user": "The user address",
									"_value": "The value of the deposit"
								}
							},
							"getHistory(uint32)": {
								"params": {
									"_nonce": "The nonce of the history"
								}
							},
							"getPredict(address,uint256)": {
								"params": {
									"_amount": "The amount of user put more here",
									"_user": "The user address"
								}
							},
							"getUnclaim(address)": {
								"params": {
									"_user": "The user address"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/periphery/Fomo3d_flattened.sol\":37317:40758  contract Fomo3d is IFomo3d{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":37850:38231  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":37984:38001  _basePaymentToken */\n  dup3\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":37963:37975  paymentToken */\n  0x00\n  dup1\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":37963:38002  paymentToken = ERC20(_basePaymentToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":38022:38034  paymentToken */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":38022:38043  paymentToken.decimals */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x313ce567\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":38022:38045  paymentToken.decimals() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_7\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_7:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":38012:38045  decimal = paymentToken.decimals() */\n  0xff\n  and\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":38012:38019  decimal */\n  0x0b\n  0x00\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":38012:38045  decimal = paymentToken.decimals() */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":38070:38071  0 */\n  0x00\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":38055:38067  historyNonce */\n  0x07\n  0x00\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":38055:38071  historyNonce = 0 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":38178:38184  _price */\n  dup1\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":38170:38175  price */\n  0x0c\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":38170:38184  price = _price */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":38214:38223  _register */\n  dup2\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":38194:38202  register */\n  0x01\n  0x00\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":38194:38224  register = Register(_register) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":37850:38231  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":37317:40758  contract Fomo3d is IFomo3d{... */\n  jump(tag_10)\n    /* \"#utility.yul\":88:205   */\ntag_12:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_14:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_15:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_30\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_14\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_16:\n    /* \"#utility.yul\":641:665   */\n  tag_32\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_15\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_33:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_17:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_35\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_16\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_18:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_19:\n    /* \"#utility.yul\":1001:1025   */\n  tag_38\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_39:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_20:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_41\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_19\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_44\n  tag_12\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1326:1445   */\ntag_43:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_45\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_17\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_46\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_17\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_47\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_20\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1960   */\ntag_21:\n    /* \"#utility.yul\":1909:1916   */\n  0x00\n    /* \"#utility.yul\":1949:1953   */\n  0xff\n    /* \"#utility.yul\":1942:1947   */\n  dup3\n    /* \"#utility.yul\":1938:1954   */\n  and\n    /* \"#utility.yul\":1927:1954   */\n  swap1\n  pop\n    /* \"#utility.yul\":1874:1960   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1966:2084   */\ntag_22:\n    /* \"#utility.yul\":2037:2059   */\n  tag_50\n    /* \"#utility.yul\":2053:2058   */\n  dup2\n    /* \"#utility.yul\":2037:2059   */\n  tag_21\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2030:2035   */\n  dup2\n    /* \"#utility.yul\":2027:2060   */\n  eq\n    /* \"#utility.yul\":2017:2078   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2074:2075   */\n  0x00\n    /* \"#utility.yul\":2071:2072   */\n  dup1\n    /* \"#utility.yul\":2064:2076   */\n  revert\n    /* \"#utility.yul\":2017:2078   */\ntag_51:\n    /* \"#utility.yul\":1966:2084   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2090:2229   */\ntag_23:\n    /* \"#utility.yul\":2145:2150   */\n  0x00\n    /* \"#utility.yul\":2176:2182   */\n  dup2\n    /* \"#utility.yul\":2170:2183   */\n  mload\n    /* \"#utility.yul\":2161:2183   */\n  swap1\n  pop\n    /* \"#utility.yul\":2192:2223   */\n  tag_53\n    /* \"#utility.yul\":2217:2222   */\n  dup2\n    /* \"#utility.yul\":2192:2223   */\n  tag_22\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2090:2229   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2235:2582   */\ntag_9:\n    /* \"#utility.yul\":2303:2309   */\n  0x00\n    /* \"#utility.yul\":2352:2354   */\n  0x20\n    /* \"#utility.yul\":2340:2349   */\n  dup3\n    /* \"#utility.yul\":2331:2338   */\n  dup5\n    /* \"#utility.yul\":2327:2350   */\n  sub\n    /* \"#utility.yul\":2323:2355   */\n  slt\n    /* \"#utility.yul\":2320:2439   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2358:2437   */\n  tag_56\n  tag_12\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2320:2439   */\ntag_55:\n    /* \"#utility.yul\":2478:2479   */\n  0x00\n    /* \"#utility.yul\":2503:2565   */\n  tag_57\n    /* \"#utility.yul\":2557:2564   */\n  dup5\n    /* \"#utility.yul\":2548:2554   */\n  dup3\n    /* \"#utility.yul\":2537:2546   */\n  dup6\n    /* \"#utility.yul\":2533:2555   */\n  add\n    /* \"#utility.yul\":2503:2565   */\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2493:2565   */\n  swap2\n  pop\n    /* \"#utility.yul\":2449:2575   */\n  pop\n    /* \"#utility.yul\":2235:2582   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":37317:40758  contract Fomo3d is IFomo3d{... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37317:40758  contract Fomo3d is IFomo3d{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x76809ce3\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xc884ef83\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xc884ef83\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xcdf033f3\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd4c3eea0\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xeb46260e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xeeda71d5\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf54f0a8d\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x76809ce3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7a19a488\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8233fbcb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa035b1fe\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb9f0bf66\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x1aa3a008\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x1aa3a008\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3013ce29\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x480a4262\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6d1c6041\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x07040e91\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0efe6a8b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1161e582\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x13da0777\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1a39d8ef\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40434:40554  function getHistory(uint32 _nonce) external view returns (HistoryInfo memory){... */\n    tag_3:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38264:39025  function deposit(address _user, uint256 _value, uint256 _amount) external override{... */\n    tag_4:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37506:37549  mapping (address => uint256) public unclaim */\n    tag_5:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39386:39767  function getPredict(address _user, uint256 _amount) external view returns (uint256 value){... */\n    tag_6:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37693:37719  uint256 public totalAmount */\n    tag_7:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37381:37405  Register public register */\n    tag_8:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37350:37375  ERC20 public paymentToken */\n    tag_9:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39799:39913  function getUnclaim(address _user) external view returns (uint256 value){... */\n    tag_10:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39062:39353  function claim() external{... */\n    tag_11:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40254:40402  function getCurrentHistoryNonce() external view returns (uint32 nonce){... */\n    tag_12:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37791:37812  uint32 public decimal */\n    tag_13:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37756:37785  uint256 public valuePerAmount */\n    tag_14:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40087:40222  function getTotalProfit(address _user) external view returns (uint256 value){... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37818:37838  uint256 public price */\n    tag_16:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37412:37454  mapping (address => uint256) public amount */\n    tag_17:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37555:37598  mapping (address => uint256) public claimed */\n    tag_18:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37661:37687  uint32 public historyNonce */\n    tag_19:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37725:37750  uint256 public totalValue */\n    tag_20:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39945:40055  function getClaimed(address _user) external view returns (uint256 value){... */\n    tag_21:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37460:37500  mapping (address => uint256) public mask */\n    tag_22:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37604:37654  mapping (uint32 => HistoryInfo) public historyInfo */\n    tag_23:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40434:40554  function getHistory(uint32 _nonce) external view returns (HistoryInfo memory){... */\n    tag_30:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40492:40510  HistoryInfo memory */\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40528:40539  historyInfo */\n      0x06\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40528:40547  historyInfo[_nonce] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40540:40546  _nonce */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40528:40547  historyInfo[_nonce] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40521:40547  return historyInfo[_nonce] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40434:40554  function getHistory(uint32 _nonce) external view returns (HistoryInfo memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38264:39025  function deposit(address _user, uint256 _value, uint256 _amount) external override{... */\n    tag_36:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38356:38364  register */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38356:38374  register.checkRole */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x12d9a6ad\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38375:38383  register */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38375:38390  register.MARKET */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf46f16c2\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38375:38392  register.MARKET() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38394:38404  msg.sender */\n      caller\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38356:38405  register.checkRole(register.MARKET(), msg.sender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38435:38436  0 */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38418:38437  _user == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38418:38423  _user */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38418:38437  _user == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38415:38462  if(_user == address(0)) revert InvalidAddress() */\n      tag_122\n      jumpi\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38446:38462  InvalidAddress() */\n      mload(0x40)\n      0xe6c4247b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38415:38462  if(_user == address(0)) revert InvalidAddress() */\n    tag_122:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38485:38486  0 */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38475:38481  _value */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38475:38486  _value == 0 */\n      sub\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38472:38509  if(_value == 0) revert InvalidValue() */\n      tag_123\n      jumpi\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38495:38509  InvalidValue() */\n      mload(0x40)\n      0xaa7feadc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38472:38509  if(_value == 0) revert InvalidValue() */\n    tag_123:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38533:38534  0 */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38522:38529  _amount */\n      dup2\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38522:38534  _amount == 0 */\n      sub\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38519:38558  if(_amount == 0) revert InvalidAmount() */\n      tag_124\n      jumpi\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38543:38558  InvalidAmount() */\n      mload(0x40)\n      0x2c5211c600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38519:38558  if(_amount == 0) revert InvalidAmount() */\n    tag_124:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38647:38654  decimal */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38643:38645  10 */\n      0x0a\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38643:38654  10**decimal */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38628:38632  mask */\n      0x03\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38628:38639  mask[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38633:38638  _user */\n      dup6\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38628:38639  mask[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38613:38627  valuePerAmount */\n      sload(0x0a)\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38613:38639  valuePerAmount-mask[_user] */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38596:38602  amount */\n      0x02\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38596:38609  amount[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38603:38608  _user */\n      dup7\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38596:38609  amount[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38596:38640  amount[_user] * (valuePerAmount-mask[_user]) */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38595:38655  (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal) */\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38577:38584  unclaim */\n      0x04\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38577:38591  unclaim[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38585:38590  _user */\n      dup6\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38577:38591  unclaim[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38577:38655  unclaim[_user] += (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal) */\n      dup3\n      dup3\n      sload\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38679:38685  _value */\n      dup2\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38665:38675  totalValue */\n      0x09\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38665:38685  totalValue += _value */\n      dup3\n      dup3\n      sload\n      tag_135\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38709:38723  valuePerAmount */\n      sload(0x0a)\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38695:38699  mask */\n      0x03\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38695:38706  mask[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38700:38705  _user */\n      dup6\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38695:38706  mask[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38695:38723  mask[_user] = valuePerAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38750:38757  _amount */\n      dup1\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38733:38739  amount */\n      0x02\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38733:38746  amount[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38740:38745  _user */\n      dup6\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38733:38746  amount[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38733:38757  amount[_user] += _amount */\n      dup3\n      dup3\n      sload\n      tag_136\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_136:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38782:38789  _amount */\n      dup1\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38767:38778  totalAmount */\n      0x08\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38767:38789  totalAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_137\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38839:38850  totalAmount */\n      sload(0x08)\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38830:38837  decimal */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38826:38828  10 */\n      0x0a\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38826:38837  10**decimal */\n      tag_138\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_138:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38818:38824  _value */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38818:38838  _value*(10**decimal) */\n      tag_139\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_139:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38818:38850  _value*(10**decimal)/totalAmount */\n      tag_140\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_140:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38799:38813  valuePerAmount */\n      0x0a\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38799:38851  valuePerAmount += (_value*(10**decimal)/totalAmount) */\n      dup3\n      dup3\n      sload\n      tag_141\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_141:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38889:38942  HistoryInfo(_user, uint256(_value), uint256(_amount)) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38901:38906  _user */\n      dup5\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38889:38942  HistoryInfo(_user, uint256(_value), uint256(_amount)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38916:38922  _value */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38889:38942  HistoryInfo(_user, uint256(_value), uint256(_amount)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38933:38940  _amount */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38889:38942  HistoryInfo(_user, uint256(_value), uint256(_amount)) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38861:38872  historyInfo */\n      0x06\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38861:38886  historyInfo[historyNonce] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38873:38885  historyNonce */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38861:38886  historyInfo[historyNonce] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38861:38942  historyInfo[historyNonce] = HistoryInfo(_user, uint256(_value), uint256(_amount)) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38952:38964  historyNonce */\n      0x07\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38952:38966  historyNonce++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38995:39000  _user */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38981:39018  Fomo3dDeposit(_user, _value, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f0d29b5d4cebe99e2c93ffec39876a8b37c77ba767270f4f489daede43aea4e\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39002:39008  _value */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39010:39017  _amount */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38981:39018  Fomo3dDeposit(_user, _value, _amount) */\n      mload(0x40)\n      tag_144\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":38264:39025  function deposit(address _user, uint256 _value, uint256 _amount) external override{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37506:37549  mapping (address => uint256) public unclaim */\n    tag_40:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39386:39767  function getPredict(address _user, uint256 _amount) external view returns (uint256 value){... */\n    tag_46:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39461:39474  uint256 value */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39505:39506  0 */\n      dup1\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39488:39507  _user == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39488:39493  _user */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39488:39507  _user == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39485:39532  if(_user == address(0)) revert InvalidAddress() */\n      tag_147\n      jumpi\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39516:39532  InvalidAddress() */\n      mload(0x40)\n      0xe6c4247b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39485:39532  if(_user == address(0)) revert InvalidAddress() */\n    tag_147:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39542:39560  uint256 userAmount */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39579:39586  _amount */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39563:39569  amount */\n      0x02\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39563:39576  amount[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39570:39575  _user */\n      dup7\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39563:39576  amount[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39563:39586  amount[_user] + _amount */\n      tag_148\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_148:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39542:39586  uint256 userAmount = amount[_user] + _amount */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39622:39623  0 */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39611:39618  _amount */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39599:39610  totalAmount */\n      sload(0x08)\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39599:39618  totalAmount+_amount */\n      tag_149\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_149:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39599:39623  totalAmount+_amount == 0 */\n      sub\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39596:39633  if(totalAmount+_amount == 0) return 0 */\n      tag_150\n      jumpi\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39632:39633  0 */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39625:39633  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_146)\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39596:39633  if(totalAmount+_amount == 0) return 0 */\n    tag_150:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39643:39656  uint256 ratio */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39699:39706  _amount */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39687:39698  totalAmount */\n      sload(0x08)\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39687:39706  totalAmount+_amount */\n      tag_151\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_151:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39676:39683  decimal */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39672:39674  10 */\n      0x0a\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39672:39683  10**decimal */\n      tag_152\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_152:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39660:39670  userAmount */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39660:39684  userAmount*(10**decimal) */\n      tag_153\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_153:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39659:39707  (userAmount*(10**decimal))/(totalAmount+_amount) */\n      tag_154\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_154:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39643:39707  uint256 ratio = (userAmount*(10**decimal))/(totalAmount+_amount) */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39752:39759  decimal */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39748:39750  10 */\n      0x0a\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39748:39759  10**decimal */\n      tag_155\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_155:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39741:39743  10 */\n      0x0a\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39735:39740  price */\n      sload(0x0c)\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39735:39743  price/10 */\n      tag_156\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_156:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39726:39731  ratio */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39726:39744  ratio * (price/10) */\n      tag_157\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_157:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39725:39760  (ratio * (price/10))/ (10**decimal) */\n      tag_158\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_158:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39717:39760  return  (ratio * (price/10))/ (10**decimal) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39386:39767  function getPredict(address _user, uint256 _amount) external view returns (uint256 value){... */\n    tag_146:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37693:37719  uint256 public totalAmount */\n    tag_49:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37381:37405  Register public register */\n    tag_52:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37350:37375  ERC20 public paymentToken */\n    tag_56:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39799:39913  function getUnclaim(address _user) external view returns (uint256 value){... */\n    tag_61:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39857:39870  uint256 value */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39888:39906  _getUnclaim(_user) */\n      tag_160\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39900:39905  _user */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39888:39899  _getUnclaim */\n      tag_161\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39888:39906  _getUnclaim(_user) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39881:39906  return _getUnclaim(_user) */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39799:39913  function getUnclaim(address _user) external view returns (uint256 value){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39062:39353  function claim() external{... */\n    tag_64:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39097:39110  address _user */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39113:39123  msg.sender */\n      caller\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39097:39123  address _user = msg.sender */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39153:39154  0 */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39136:39155  _user == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39136:39141  _user */\n      dup2\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39136:39155  _user == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39133:39180  if(_user == address(0)) revert InvalidAddress() */\n      tag_163\n      jumpi\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39164:39180  InvalidAddress() */\n      mload(0x40)\n      0xe6c4247b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39133:39180  if(_user == address(0)) revert InvalidAddress() */\n    tag_163:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39190:39204  uint256 _value */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39207:39225  _getUnclaim(_user) */\n      tag_164\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39219:39224  _user */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39207:39218  _getUnclaim */\n      tag_161\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39207:39225  _getUnclaim(_user) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39190:39225  uint256 _value = _getUnclaim(_user) */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39235:39247  paymentToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39235:39256  paymentToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39257:39262  _user */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39264:39270  _value */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39235:39271  paymentToken.transfer(_user, _value) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39299:39305  _value */\n      dup1\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39281:39288  claimed */\n      0x05\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39281:39295  claimed[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39289:39294  _user */\n      dup5\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39281:39295  claimed[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39281:39305  claimed[_user] += _value */\n      dup3\n      dup3\n      sload\n      tag_171\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_171:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39332:39337  _user */\n      dup2\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39320:39346  Fomo3dClaim(_user, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3488c34059d2e654b3b166b5ec4ee17bbd37297b906d39c704104a7dc2459b31\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39339:39345  _value */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39320:39346  Fomo3dClaim(_user, _value) */\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39087:39353  {... */\n      pop\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39062:39353  function claim() external{... */\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40254:40402  function getCurrentHistoryNonce() external view returns (uint32 nonce){... */\n    tag_66:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40311:40323  uint32 nonce */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40353:40354  0 */\n      dup1\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40337:40349  historyNonce */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40337:40354  historyNonce == 0 */\n      0xffffffff\n      and\n      sub\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40334:40364  if(historyNonce == 0) return 0 */\n      tag_174\n      jumpi\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40363:40364  0 */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40356:40364  return 0 */\n      swap1\n      pop\n      jump(tag_173)\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40334:40364  if(historyNonce == 0) return 0 */\n    tag_174:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40394:40395  1 */\n      0x01\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40381:40393  historyNonce */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40381:40395  historyNonce-1 */\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40374:40395  return historyNonce-1 */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40254:40402  function getCurrentHistoryNonce() external view returns (uint32 nonce){... */\n    tag_173:\n      swap1\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37791:37812  uint32 public decimal */\n    tag_70:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37756:37785  uint256 public valuePerAmount */\n    tag_73:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40087:40222  function getTotalProfit(address _user) external view returns (uint256 value){... */\n    tag_77:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40149:40162  uint256 value */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40197:40215  _getUnclaim(_user) */\n      tag_178\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40209:40214  _user */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40197:40208  _getUnclaim */\n      tag_161\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40197:40215  _getUnclaim(_user) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40180:40187  claimed */\n      0x05\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40180:40194  claimed[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40188:40193  _user */\n      dup5\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40180:40194  claimed[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40180:40215  claimed[_user] + _getUnclaim(_user) */\n      tag_179\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_179:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40173:40215  return claimed[_user] + _getUnclaim(_user) */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40087:40222  function getTotalProfit(address _user) external view returns (uint256 value){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37818:37838  uint256 public price */\n    tag_80:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37412:37454  mapping (address => uint256) public amount */\n    tag_84:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37555:37598  mapping (address => uint256) public claimed */\n    tag_88:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37661:37687  uint32 public historyNonce */\n    tag_91:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37725:37750  uint256 public totalValue */\n    tag_94:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39945:40055  function getClaimed(address _user) external view returns (uint256 value){... */\n    tag_98:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40003:40016  uint256 value */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40034:40041  claimed */\n      0x05\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40034:40048  claimed[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40042:40047  _user */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40034:40048  claimed[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40027:40048  return claimed[_user] */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":39945:40055  function getClaimed(address _user) external view returns (uint256 value){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37460:37500  mapping (address => uint256) public mask */\n    tag_102:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":37604:37654  mapping (uint32 => HistoryInfo) public historyInfo */\n    tag_106:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40564:40755  function _getUnclaim(address _user) internal view returns (uint256 value){... */\n    tag_161:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40623:40636  uint256 value */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40734:40741  claimed */\n      0x05\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40734:40748  claimed[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40742:40747  _user */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40734:40748  claimed[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40723:40730  decimal */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40719:40721  10 */\n      0x0a\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40719:40730  10**decimal */\n      tag_182\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_182:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40704:40708  mask */\n      0x03\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40704:40715  mask[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40709:40714  _user */\n      dup6\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40704:40715  mask[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40689:40703  valuePerAmount */\n      sload(0x0a)\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40689:40715  valuePerAmount-mask[_user] */\n      tag_183\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_183:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40672:40678  amount */\n      0x02\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40672:40685  amount[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40679:40684  _user */\n      dup7\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40672:40685  amount[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40672:40716  amount[_user] * (valuePerAmount-mask[_user]) */\n      tag_184\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_184:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40671:40731  (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal) */\n      tag_185\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_185:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40654:40661  unclaim */\n      0x04\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40654:40668  unclaim[_user] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40662:40667  _user */\n      dup6\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40654:40668  unclaim[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40654:40731  unclaim[_user] + (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal) */\n      tag_186\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_186:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40654:40748  unclaim[_user] + (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal) - claimed[_user] */\n      tag_187\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_187:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40647:40748  return unclaim[_user] + (amount[_user] * (valuePerAmount-mask[_user]))/(10**decimal) - claimed[_user] */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":40564:40755  function _getUnclaim(address _user) internal view returns (uint256 value){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_110:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_189:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:427   */\n    tag_191:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:420   */\n      0xffffffff\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:421   */\n      and\n        /* \"#utility.yul\":388:421   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":433:553   */\n    tag_192:\n        /* \"#utility.yul\":505:528   */\n      tag_232\n        /* \"#utility.yul\":522:527   */\n      dup2\n        /* \"#utility.yul\":505:528   */\n      tag_191\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":498:503   */\n      dup2\n        /* \"#utility.yul\":495:529   */\n      eq\n        /* \"#utility.yul\":485:547   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":543:544   */\n      0x00\n        /* \"#utility.yul\":540:541   */\n      dup1\n        /* \"#utility.yul\":533:545   */\n      revert\n        /* \"#utility.yul\":485:547   */\n    tag_233:\n        /* \"#utility.yul\":433:553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":559:696   */\n    tag_193:\n        /* \"#utility.yul\":604:609   */\n      0x00\n        /* \"#utility.yul\":642:648   */\n      dup2\n        /* \"#utility.yul\":629:649   */\n      calldataload\n        /* \"#utility.yul\":620:649   */\n      swap1\n      pop\n        /* \"#utility.yul\":658:690   */\n      tag_235\n        /* \"#utility.yul\":684:689   */\n      dup2\n        /* \"#utility.yul\":658:690   */\n      tag_192\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":559:696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":702:1029   */\n    tag_29:\n        /* \"#utility.yul\":760:766   */\n      0x00\n        /* \"#utility.yul\":809:811   */\n      0x20\n        /* \"#utility.yul\":797:806   */\n      dup3\n        /* \"#utility.yul\":788:795   */\n      dup5\n        /* \"#utility.yul\":784:807   */\n      sub\n        /* \"#utility.yul\":780:812   */\n      slt\n        /* \"#utility.yul\":777:896   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":815:894   */\n      tag_238\n      tag_189\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":777:896   */\n    tag_237:\n        /* \"#utility.yul\":935:936   */\n      0x00\n        /* \"#utility.yul\":960:1012   */\n      tag_239\n        /* \"#utility.yul\":1004:1011   */\n      dup5\n        /* \"#utility.yul\":995:1001   */\n      dup3\n        /* \"#utility.yul\":984:993   */\n      dup6\n        /* \"#utility.yul\":980:1002   */\n      add\n        /* \"#utility.yul\":960:1012   */\n      tag_193\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":950:1012   */\n      swap2\n      pop\n        /* \"#utility.yul\":906:1022   */\n      pop\n        /* \"#utility.yul\":702:1029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1035:1161   */\n    tag_194:\n        /* \"#utility.yul\":1072:1079   */\n      0x00\n        /* \"#utility.yul\":1112:1154   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1105:1110   */\n      dup3\n        /* \"#utility.yul\":1101:1155   */\n      and\n        /* \"#utility.yul\":1090:1155   */\n      swap1\n      pop\n        /* \"#utility.yul\":1035:1161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1167:1263   */\n    tag_195:\n        /* \"#utility.yul\":1204:1211   */\n      0x00\n        /* \"#utility.yul\":1233:1257   */\n      tag_242\n        /* \"#utility.yul\":1251:1256   */\n      dup3\n        /* \"#utility.yul\":1233:1257   */\n      tag_194\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":1222:1257   */\n      swap1\n      pop\n        /* \"#utility.yul\":1167:1263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1269:1377   */\n    tag_196:\n        /* \"#utility.yul\":1346:1370   */\n      tag_244\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_195\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1269:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1460   */\n    tag_197:\n        /* \"#utility.yul\":1420:1427   */\n      0x00\n        /* \"#utility.yul\":1449:1454   */\n      dup2\n        /* \"#utility.yul\":1438:1454   */\n      swap1\n      pop\n        /* \"#utility.yul\":1383:1460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1466:1574   */\n    tag_198:\n        /* \"#utility.yul\":1543:1567   */\n      tag_247\n        /* \"#utility.yul\":1561:1566   */\n      dup2\n        /* \"#utility.yul\":1543:1567   */\n      tag_197\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1538:1541   */\n      dup3\n        /* \"#utility.yul\":1531:1568   */\n      mstore\n        /* \"#utility.yul\":1466:1574   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1644:2334   */\n    tag_199:\n        /* \"#utility.yul\":1797:1801   */\n      0x60\n        /* \"#utility.yul\":1792:1795   */\n      dup3\n        /* \"#utility.yul\":1788:1802   */\n      add\n        /* \"#utility.yul\":1884:1888   */\n      0x00\n        /* \"#utility.yul\":1877:1882   */\n      dup3\n        /* \"#utility.yul\":1873:1889   */\n      add\n        /* \"#utility.yul\":1867:1890   */\n      mload\n        /* \"#utility.yul\":1903:1966   */\n      tag_249\n        /* \"#utility.yul\":1960:1964   */\n      0x00\n        /* \"#utility.yul\":1955:1958   */\n      dup6\n        /* \"#utility.yul\":1951:1965   */\n      add\n        /* \"#utility.yul\":1937:1949   */\n      dup3\n        /* \"#utility.yul\":1903:1966   */\n      tag_196\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1812:1976   */\n      pop\n        /* \"#utility.yul\":2059:2063   */\n      0x20\n        /* \"#utility.yul\":2052:2057   */\n      dup3\n        /* \"#utility.yul\":2048:2064   */\n      add\n        /* \"#utility.yul\":2042:2065   */\n      mload\n        /* \"#utility.yul\":2078:2141   */\n      tag_250\n        /* \"#utility.yul\":2135:2139   */\n      0x20\n        /* \"#utility.yul\":2130:2133   */\n      dup6\n        /* \"#utility.yul\":2126:2140   */\n      add\n        /* \"#utility.yul\":2112:2124   */\n      dup3\n        /* \"#utility.yul\":2078:2141   */\n      tag_198\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":1986:2151   */\n      pop\n        /* \"#utility.yul\":2235:2239   */\n      0x40\n        /* \"#utility.yul\":2228:2233   */\n      dup3\n        /* \"#utility.yul\":2224:2240   */\n      add\n        /* \"#utility.yul\":2218:2241   */\n      mload\n        /* \"#utility.yul\":2254:2317   */\n      tag_251\n        /* \"#utility.yul\":2311:2315   */\n      0x40\n        /* \"#utility.yul\":2306:2309   */\n      dup6\n        /* \"#utility.yul\":2302:2316   */\n      add\n        /* \"#utility.yul\":2288:2300   */\n      dup3\n        /* \"#utility.yul\":2254:2317   */\n      tag_198\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2161:2327   */\n      pop\n        /* \"#utility.yul\":1766:2334   */\n      pop\n        /* \"#utility.yul\":1644:2334   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2340:2674   */\n    tag_32:\n        /* \"#utility.yul\":2489:2493   */\n      0x00\n        /* \"#utility.yul\":2527:2529   */\n      0x60\n        /* \"#utility.yul\":2516:2525   */\n      dup3\n        /* \"#utility.yul\":2512:2530   */\n      add\n        /* \"#utility.yul\":2504:2530   */\n      swap1\n      pop\n        /* \"#utility.yul\":2540:2667   */\n      tag_253\n        /* \"#utility.yul\":2664:2665   */\n      0x00\n        /* \"#utility.yul\":2653:2662   */\n      dup4\n        /* \"#utility.yul\":2649:2666   */\n      add\n        /* \"#utility.yul\":2640:2646   */\n      dup5\n        /* \"#utility.yul\":2540:2667   */\n      tag_199\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2340:2674   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2680:2802   */\n    tag_200:\n        /* \"#utility.yul\":2753:2777   */\n      tag_255\n        /* \"#utility.yul\":2771:2776   */\n      dup2\n        /* \"#utility.yul\":2753:2777   */\n      tag_195\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2746:2751   */\n      dup2\n        /* \"#utility.yul\":2743:2778   */\n      eq\n        /* \"#utility.yul\":2733:2796   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2789:2790   */\n      dup1\n        /* \"#utility.yul\":2782:2794   */\n      revert\n        /* \"#utility.yul\":2733:2796   */\n    tag_256:\n        /* \"#utility.yul\":2680:2802   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2808:2947   */\n    tag_201:\n        /* \"#utility.yul\":2854:2859   */\n      0x00\n        /* \"#utility.yul\":2892:2898   */\n      dup2\n        /* \"#utility.yul\":2879:2899   */\n      calldataload\n        /* \"#utility.yul\":2870:2899   */\n      swap1\n      pop\n        /* \"#utility.yul\":2908:2941   */\n      tag_258\n        /* \"#utility.yul\":2935:2940   */\n      dup2\n        /* \"#utility.yul\":2908:2941   */\n      tag_200\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2808:2947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2953:3075   */\n    tag_202:\n        /* \"#utility.yul\":3026:3050   */\n      tag_260\n        /* \"#utility.yul\":3044:3049   */\n      dup2\n        /* \"#utility.yul\":3026:3050   */\n      tag_197\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3019:3024   */\n      dup2\n        /* \"#utility.yul\":3016:3051   */\n      eq\n        /* \"#utility.yul\":3006:3069   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":3065:3066   */\n      0x00\n        /* \"#utility.yul\":3062:3063   */\n      dup1\n        /* \"#utility.yul\":3055:3067   */\n      revert\n        /* \"#utility.yul\":3006:3069   */\n    tag_261:\n        /* \"#utility.yul\":2953:3075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3081:3220   */\n    tag_203:\n        /* \"#utility.yul\":3127:3132   */\n      0x00\n        /* \"#utility.yul\":3165:3171   */\n      dup2\n        /* \"#utility.yul\":3152:3172   */\n      calldataload\n        /* \"#utility.yul\":3143:3172   */\n      swap1\n      pop\n        /* \"#utility.yul\":3181:3214   */\n      tag_263\n        /* \"#utility.yul\":3208:3213   */\n      dup2\n        /* \"#utility.yul\":3181:3214   */\n      tag_202\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3081:3220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3226:3845   */\n    tag_35:\n        /* \"#utility.yul\":3303:3309   */\n      0x00\n        /* \"#utility.yul\":3311:3317   */\n      dup1\n        /* \"#utility.yul\":3319:3325   */\n      0x00\n        /* \"#utility.yul\":3368:3370   */\n      0x60\n        /* \"#utility.yul\":3356:3365   */\n      dup5\n        /* \"#utility.yul\":3347:3354   */\n      dup7\n        /* \"#utility.yul\":3343:3366   */\n      sub\n        /* \"#utility.yul\":3339:3371   */\n      slt\n        /* \"#utility.yul\":3336:3455   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":3374:3453   */\n      tag_266\n      tag_189\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3336:3455   */\n    tag_265:\n        /* \"#utility.yul\":3494:3495   */\n      0x00\n        /* \"#utility.yul\":3519:3572   */\n      tag_267\n        /* \"#utility.yul\":3564:3571   */\n      dup7\n        /* \"#utility.yul\":3555:3561   */\n      dup3\n        /* \"#utility.yul\":3544:3553   */\n      dup8\n        /* \"#utility.yul\":3540:3562   */\n      add\n        /* \"#utility.yul\":3519:3572   */\n      tag_201\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3509:3572   */\n      swap4\n      pop\n        /* \"#utility.yul\":3465:3582   */\n      pop\n        /* \"#utility.yul\":3621:3623   */\n      0x20\n        /* \"#utility.yul\":3647:3700   */\n      tag_268\n        /* \"#utility.yul\":3692:3699   */\n      dup7\n        /* \"#utility.yul\":3683:3689   */\n      dup3\n        /* \"#utility.yul\":3672:3681   */\n      dup8\n        /* \"#utility.yul\":3668:3690   */\n      add\n        /* \"#utility.yul\":3647:3700   */\n      tag_203\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3637:3700   */\n      swap3\n      pop\n        /* \"#utility.yul\":3592:3710   */\n      pop\n        /* \"#utility.yul\":3749:3751   */\n      0x40\n        /* \"#utility.yul\":3775:3828   */\n      tag_269\n        /* \"#utility.yul\":3820:3827   */\n      dup7\n        /* \"#utility.yul\":3811:3817   */\n      dup3\n        /* \"#utility.yul\":3800:3809   */\n      dup8\n        /* \"#utility.yul\":3796:3818   */\n      add\n        /* \"#utility.yul\":3775:3828   */\n      tag_203\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3765:3828   */\n      swap2\n      pop\n        /* \"#utility.yul\":3720:3838   */\n      pop\n        /* \"#utility.yul\":3226:3845   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3851:4180   */\n    tag_39:\n        /* \"#utility.yul\":3910:3916   */\n      0x00\n        /* \"#utility.yul\":3959:3961   */\n      0x20\n        /* \"#utility.yul\":3947:3956   */\n      dup3\n        /* \"#utility.yul\":3938:3945   */\n      dup5\n        /* \"#utility.yul\":3934:3957   */\n      sub\n        /* \"#utility.yul\":3930:3962   */\n      slt\n        /* \"#utility.yul\":3927:4046   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":3965:4044   */\n      tag_272\n      tag_189\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3927:4046   */\n    tag_271:\n        /* \"#utility.yul\":4085:4086   */\n      0x00\n        /* \"#utility.yul\":4110:4163   */\n      tag_273\n        /* \"#utility.yul\":4155:4162   */\n      dup5\n        /* \"#utility.yul\":4146:4152   */\n      dup3\n        /* \"#utility.yul\":4135:4144   */\n      dup6\n        /* \"#utility.yul\":4131:4153   */\n      add\n        /* \"#utility.yul\":4110:4163   */\n      tag_201\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4100:4163   */\n      swap2\n      pop\n        /* \"#utility.yul\":4056:4173   */\n      pop\n        /* \"#utility.yul\":3851:4180   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4186:4304   */\n    tag_204:\n        /* \"#utility.yul\":4273:4297   */\n      tag_275\n        /* \"#utility.yul\":4291:4296   */\n      dup2\n        /* \"#utility.yul\":4273:4297   */\n      tag_197\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4268:4271   */\n      dup3\n        /* \"#utility.yul\":4261:4298   */\n      mstore\n        /* \"#utility.yul\":4186:4304   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4310:4532   */\n    tag_42:\n        /* \"#utility.yul\":4403:4407   */\n      0x00\n        /* \"#utility.yul\":4441:4443   */\n      0x20\n        /* \"#utility.yul\":4430:4439   */\n      dup3\n        /* \"#utility.yul\":4426:4444   */\n      add\n        /* \"#utility.yul\":4418:4444   */\n      swap1\n      pop\n        /* \"#utility.yul\":4454:4525   */\n      tag_277\n        /* \"#utility.yul\":4522:4523   */\n      0x00\n        /* \"#utility.yul\":4511:4520   */\n      dup4\n        /* \"#utility.yul\":4507:4524   */\n      add\n        /* \"#utility.yul\":4498:4504   */\n      dup5\n        /* \"#utility.yul\":4454:4525   */\n      tag_204\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4310:4532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4538:5012   */\n    tag_45:\n        /* \"#utility.yul\":4606:4612   */\n      0x00\n        /* \"#utility.yul\":4614:4620   */\n      dup1\n        /* \"#utility.yul\":4663:4665   */\n      0x40\n        /* \"#utility.yul\":4651:4660   */\n      dup4\n        /* \"#utility.yul\":4642:4649   */\n      dup6\n        /* \"#utility.yul\":4638:4661   */\n      sub\n        /* \"#utility.yul\":4634:4666   */\n      slt\n        /* \"#utility.yul\":4631:4750   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":4669:4748   */\n      tag_280\n      tag_189\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4631:4750   */\n    tag_279:\n        /* \"#utility.yul\":4789:4790   */\n      0x00\n        /* \"#utility.yul\":4814:4867   */\n      tag_281\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_201\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4804:4867   */\n      swap3\n      pop\n        /* \"#utility.yul\":4760:4877   */\n      pop\n        /* \"#utility.yul\":4916:4918   */\n      0x20\n        /* \"#utility.yul\":4942:4995   */\n      tag_282\n        /* \"#utility.yul\":4987:4994   */\n      dup6\n        /* \"#utility.yul\":4978:4984   */\n      dup3\n        /* \"#utility.yul\":4967:4976   */\n      dup7\n        /* \"#utility.yul\":4963:4985   */\n      add\n        /* \"#utility.yul\":4942:4995   */\n      tag_203\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4932:4995   */\n      swap2\n      pop\n        /* \"#utility.yul\":4887:5005   */\n      pop\n        /* \"#utility.yul\":4538:5012   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5018:5078   */\n    tag_205:\n        /* \"#utility.yul\":5046:5049   */\n      0x00\n        /* \"#utility.yul\":5067:5072   */\n      dup2\n        /* \"#utility.yul\":5060:5072   */\n      swap1\n      pop\n        /* \"#utility.yul\":5018:5078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5084:5226   */\n    tag_206:\n        /* \"#utility.yul\":5134:5143   */\n      0x00\n        /* \"#utility.yul\":5167:5220   */\n      tag_285\n        /* \"#utility.yul\":5185:5219   */\n      tag_286\n        /* \"#utility.yul\":5194:5218   */\n      tag_287\n        /* \"#utility.yul\":5212:5217   */\n      dup5\n        /* \"#utility.yul\":5194:5218   */\n      tag_194\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5185:5219   */\n      tag_205\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5167:5220   */\n      tag_194\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5154:5220   */\n      swap1\n      pop\n        /* \"#utility.yul\":5084:5226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5232:5358   */\n    tag_207:\n        /* \"#utility.yul\":5282:5291   */\n      0x00\n        /* \"#utility.yul\":5315:5352   */\n      tag_289\n        /* \"#utility.yul\":5346:5351   */\n      dup3\n        /* \"#utility.yul\":5315:5352   */\n      tag_206\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":5302:5352   */\n      swap1\n      pop\n        /* \"#utility.yul\":5232:5358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5364:5506   */\n    tag_208:\n        /* \"#utility.yul\":5430:5439   */\n      0x00\n        /* \"#utility.yul\":5463:5500   */\n      tag_291\n        /* \"#utility.yul\":5494:5499   */\n      dup3\n        /* \"#utility.yul\":5463:5500   */\n      tag_207\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5450:5500   */\n      swap1\n      pop\n        /* \"#utility.yul\":5364:5506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5512:5675   */\n    tag_209:\n        /* \"#utility.yul\":5615:5668   */\n      tag_293\n        /* \"#utility.yul\":5662:5667   */\n      dup2\n        /* \"#utility.yul\":5615:5668   */\n      tag_208\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5610:5613   */\n      dup3\n        /* \"#utility.yul\":5603:5669   */\n      mstore\n        /* \"#utility.yul\":5512:5675   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5681:5935   */\n    tag_54:\n        /* \"#utility.yul\":5790:5794   */\n      0x00\n        /* \"#utility.yul\":5828:5830   */\n      0x20\n        /* \"#utility.yul\":5817:5826   */\n      dup3\n        /* \"#utility.yul\":5813:5831   */\n      add\n        /* \"#utility.yul\":5805:5831   */\n      swap1\n      pop\n        /* \"#utility.yul\":5841:5928   */\n      tag_295\n        /* \"#utility.yul\":5925:5926   */\n      0x00\n        /* \"#utility.yul\":5914:5923   */\n      dup4\n        /* \"#utility.yul\":5910:5927   */\n      add\n        /* \"#utility.yul\":5901:5907   */\n      dup5\n        /* \"#utility.yul\":5841:5928   */\n      tag_209\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5681:5935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5941:6081   */\n    tag_210:\n        /* \"#utility.yul\":6005:6014   */\n      0x00\n        /* \"#utility.yul\":6038:6075   */\n      tag_297\n        /* \"#utility.yul\":6069:6074   */\n      dup3\n        /* \"#utility.yul\":6038:6075   */\n      tag_207\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":6025:6075   */\n      swap1\n      pop\n        /* \"#utility.yul\":5941:6081   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6087:6246   */\n    tag_211:\n        /* \"#utility.yul\":6188:6239   */\n      tag_299\n        /* \"#utility.yul\":6233:6238   */\n      dup2\n        /* \"#utility.yul\":6188:6239   */\n      tag_210\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":6183:6186   */\n      dup3\n        /* \"#utility.yul\":6176:6240   */\n      mstore\n        /* \"#utility.yul\":6087:6246   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6252:6502   */\n    tag_58:\n        /* \"#utility.yul\":6359:6363   */\n      0x00\n        /* \"#utility.yul\":6397:6399   */\n      0x20\n        /* \"#utility.yul\":6386:6395   */\n      dup3\n        /* \"#utility.yul\":6382:6400   */\n      add\n        /* \"#utility.yul\":6374:6400   */\n      swap1\n      pop\n        /* \"#utility.yul\":6410:6495   */\n      tag_301\n        /* \"#utility.yul\":6492:6493   */\n      0x00\n        /* \"#utility.yul\":6481:6490   */\n      dup4\n        /* \"#utility.yul\":6477:6494   */\n      add\n        /* \"#utility.yul\":6468:6474   */\n      dup5\n        /* \"#utility.yul\":6410:6495   */\n      tag_211\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":6252:6502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6508:6623   */\n    tag_212:\n        /* \"#utility.yul\":6593:6616   */\n      tag_303\n        /* \"#utility.yul\":6610:6615   */\n      dup2\n        /* \"#utility.yul\":6593:6616   */\n      tag_191\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":6588:6591   */\n      dup3\n        /* \"#utility.yul\":6581:6617   */\n      mstore\n        /* \"#utility.yul\":6508:6623   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6629:6847   */\n    tag_68:\n        /* \"#utility.yul\":6720:6724   */\n      0x00\n        /* \"#utility.yul\":6758:6760   */\n      0x20\n        /* \"#utility.yul\":6747:6756   */\n      dup3\n        /* \"#utility.yul\":6743:6761   */\n      add\n        /* \"#utility.yul\":6735:6761   */\n      swap1\n      pop\n        /* \"#utility.yul\":6771:6840   */\n      tag_305\n        /* \"#utility.yul\":6837:6838   */\n      0x00\n        /* \"#utility.yul\":6826:6835   */\n      dup4\n        /* \"#utility.yul\":6822:6839   */\n      add\n        /* \"#utility.yul\":6813:6819   */\n      dup5\n        /* \"#utility.yul\":6771:6840   */\n      tag_212\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":6629:6847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6853:6971   */\n    tag_213:\n        /* \"#utility.yul\":6940:6964   */\n      tag_307\n        /* \"#utility.yul\":6958:6963   */\n      dup2\n        /* \"#utility.yul\":6940:6964   */\n      tag_195\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":6935:6938   */\n      dup3\n        /* \"#utility.yul\":6928:6965   */\n      mstore\n        /* \"#utility.yul\":6853:6971   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6977:7419   */\n    tag_108:\n        /* \"#utility.yul\":7126:7130   */\n      0x00\n        /* \"#utility.yul\":7164:7166   */\n      0x60\n        /* \"#utility.yul\":7153:7162   */\n      dup3\n        /* \"#utility.yul\":7149:7167   */\n      add\n        /* \"#utility.yul\":7141:7167   */\n      swap1\n      pop\n        /* \"#utility.yul\":7177:7248   */\n      tag_309\n        /* \"#utility.yul\":7245:7246   */\n      0x00\n        /* \"#utility.yul\":7234:7243   */\n      dup4\n        /* \"#utility.yul\":7230:7247   */\n      add\n        /* \"#utility.yul\":7221:7227   */\n      dup7\n        /* \"#utility.yul\":7177:7248   */\n      tag_213\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7258:7330   */\n      tag_310\n        /* \"#utility.yul\":7326:7328   */\n      0x20\n        /* \"#utility.yul\":7315:7324   */\n      dup4\n        /* \"#utility.yul\":7311:7329   */\n      add\n        /* \"#utility.yul\":7302:7308   */\n      dup6\n        /* \"#utility.yul\":7258:7330   */\n      tag_204\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":7340:7412   */\n      tag_311\n        /* \"#utility.yul\":7408:7410   */\n      0x40\n        /* \"#utility.yul\":7397:7406   */\n      dup4\n        /* \"#utility.yul\":7393:7411   */\n      add\n        /* \"#utility.yul\":7384:7390   */\n      dup5\n        /* \"#utility.yul\":7340:7412   */\n      tag_204\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":6977:7419   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7425:7502   */\n    tag_214:\n        /* \"#utility.yul\":7462:7469   */\n      0x00\n        /* \"#utility.yul\":7491:7496   */\n      dup2\n        /* \"#utility.yul\":7480:7496   */\n      swap1\n      pop\n        /* \"#utility.yul\":7425:7502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7508:7630   */\n    tag_215:\n        /* \"#utility.yul\":7581:7605   */\n      tag_314\n        /* \"#utility.yul\":7599:7604   */\n      dup2\n        /* \"#utility.yul\":7581:7605   */\n      tag_214\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":7574:7579   */\n      dup2\n        /* \"#utility.yul\":7571:7606   */\n      eq\n        /* \"#utility.yul\":7561:7624   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":7620:7621   */\n      0x00\n        /* \"#utility.yul\":7617:7618   */\n      dup1\n        /* \"#utility.yul\":7610:7622   */\n      revert\n        /* \"#utility.yul\":7561:7624   */\n    tag_315:\n        /* \"#utility.yul\":7508:7630   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7636:7779   */\n    tag_216:\n        /* \"#utility.yul\":7693:7698   */\n      0x00\n        /* \"#utility.yul\":7724:7730   */\n      dup2\n        /* \"#utility.yul\":7718:7731   */\n      mload\n        /* \"#utility.yul\":7709:7731   */\n      swap1\n      pop\n        /* \"#utility.yul\":7740:7773   */\n      tag_317\n        /* \"#utility.yul\":7767:7772   */\n      dup2\n        /* \"#utility.yul\":7740:7773   */\n      tag_215\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":7636:7779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7785:8136   */\n    tag_116:\n        /* \"#utility.yul\":7855:7861   */\n      0x00\n        /* \"#utility.yul\":7904:7906   */\n      0x20\n        /* \"#utility.yul\":7892:7901   */\n      dup3\n        /* \"#utility.yul\":7883:7890   */\n      dup5\n        /* \"#utility.yul\":7879:7902   */\n      sub\n        /* \"#utility.yul\":7875:7907   */\n      slt\n        /* \"#utility.yul\":7872:7991   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":7910:7989   */\n      tag_320\n      tag_189\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":7872:7991   */\n    tag_319:\n        /* \"#utility.yul\":8030:8031   */\n      0x00\n        /* \"#utility.yul\":8055:8119   */\n      tag_321\n        /* \"#utility.yul\":8111:8118   */\n      dup5\n        /* \"#utility.yul\":8102:8108   */\n      dup3\n        /* \"#utility.yul\":8091:8100   */\n      dup6\n        /* \"#utility.yul\":8087:8109   */\n      add\n        /* \"#utility.yul\":8055:8119   */\n      tag_216\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8045:8119   */\n      swap2\n      pop\n        /* \"#utility.yul\":8001:8129   */\n      pop\n        /* \"#utility.yul\":7785:8136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8142:8260   */\n    tag_217:\n        /* \"#utility.yul\":8229:8253   */\n      tag_323\n        /* \"#utility.yul\":8247:8252   */\n      dup2\n        /* \"#utility.yul\":8229:8253   */\n      tag_214\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":8224:8227   */\n      dup3\n        /* \"#utility.yul\":8217:8254   */\n      mstore\n        /* \"#utility.yul\":8142:8260   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8266:8598   */\n    tag_118:\n        /* \"#utility.yul\":8387:8391   */\n      0x00\n        /* \"#utility.yul\":8425:8427   */\n      0x40\n        /* \"#utility.yul\":8414:8423   */\n      dup3\n        /* \"#utility.yul\":8410:8428   */\n      add\n        /* \"#utility.yul\":8402:8428   */\n      swap1\n      pop\n        /* \"#utility.yul\":8438:8509   */\n      tag_325\n        /* \"#utility.yul\":8506:8507   */\n      0x00\n        /* \"#utility.yul\":8495:8504   */\n      dup4\n        /* \"#utility.yul\":8491:8508   */\n      add\n        /* \"#utility.yul\":8482:8488   */\n      dup6\n        /* \"#utility.yul\":8438:8509   */\n      tag_217\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":8519:8591   */\n      tag_326\n        /* \"#utility.yul\":8587:8589   */\n      0x20\n        /* \"#utility.yul\":8576:8585   */\n      dup4\n        /* \"#utility.yul\":8572:8590   */\n      add\n        /* \"#utility.yul\":8563:8569   */\n      dup5\n        /* \"#utility.yul\":8519:8591   */\n      tag_213\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":8266:8598   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8604:8784   */\n    tag_218:\n        /* \"#utility.yul\":8652:8729   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8649:8650   */\n      0x00\n        /* \"#utility.yul\":8642:8730   */\n      mstore\n        /* \"#utility.yul\":8749:8753   */\n      0x11\n        /* \"#utility.yul\":8746:8747   */\n      0x04\n        /* \"#utility.yul\":8739:8754   */\n      mstore\n        /* \"#utility.yul\":8773:8777   */\n      0x24\n        /* \"#utility.yul\":8770:8771   */\n      0x00\n        /* \"#utility.yul\":8763:8778   */\n      revert\n        /* \"#utility.yul\":8790:8892   */\n    tag_219:\n        /* \"#utility.yul\":8832:8840   */\n      0x00\n        /* \"#utility.yul\":8879:8884   */\n      dup2\n        /* \"#utility.yul\":8876:8877   */\n      0x01\n        /* \"#utility.yul\":8872:8885   */\n      shr\n        /* \"#utility.yul\":8851:8885   */\n      swap1\n      pop\n        /* \"#utility.yul\":8790:8892   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8898:9746   */\n    tag_220:\n        /* \"#utility.yul\":8959:8964   */\n      0x00\n        /* \"#utility.yul\":8966:8970   */\n      dup1\n        /* \"#utility.yul\":8990:8996   */\n      dup3\n        /* \"#utility.yul\":8981:8996   */\n      swap2\n      pop\n        /* \"#utility.yul\":9014:9019   */\n      dup4\n        /* \"#utility.yul\":9005:9019   */\n      swap1\n      pop\n        /* \"#utility.yul\":9028:9740   */\n    tag_330:\n        /* \"#utility.yul\":9049:9050   */\n      0x01\n        /* \"#utility.yul\":9039:9047   */\n      dup6\n        /* \"#utility.yul\":9036:9051   */\n      gt\n        /* \"#utility.yul\":9028:9740   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":9144:9148   */\n      dup1\n        /* \"#utility.yul\":9139:9142   */\n      dup7\n        /* \"#utility.yul\":9135:9149   */\n      div\n        /* \"#utility.yul\":9129:9133   */\n      dup2\n        /* \"#utility.yul\":9126:9150   */\n      gt\n        /* \"#utility.yul\":9123:9173   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":9153:9171   */\n      tag_334\n      tag_218\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":9123:9173   */\n    tag_333:\n        /* \"#utility.yul\":9203:9204   */\n      0x01\n        /* \"#utility.yul\":9193:9201   */\n      dup6\n        /* \"#utility.yul\":9189:9205   */\n      and\n        /* \"#utility.yul\":9186:9637   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":9618:9622   */\n      dup1\n        /* \"#utility.yul\":9611:9616   */\n      dup3\n        /* \"#utility.yul\":9607:9623   */\n      mul\n        /* \"#utility.yul\":9598:9623   */\n      swap2\n      pop\n        /* \"#utility.yul\":9186:9637   */\n    tag_335:\n        /* \"#utility.yul\":9668:9672   */\n      dup1\n        /* \"#utility.yul\":9662:9666   */\n      dup2\n        /* \"#utility.yul\":9658:9673   */\n      mul\n        /* \"#utility.yul\":9650:9673   */\n      swap1\n      pop\n        /* \"#utility.yul\":9698:9730   */\n      tag_336\n        /* \"#utility.yul\":9721:9729   */\n      dup6\n        /* \"#utility.yul\":9698:9730   */\n      tag_219\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":9686:9730   */\n      swap5\n      pop\n        /* \"#utility.yul\":9028:9740   */\n      jump(tag_330)\n    tag_332:\n        /* \"#utility.yul\":8898:9746   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9752:10825   */\n    tag_221:\n        /* \"#utility.yul\":9806:9811   */\n      0x00\n        /* \"#utility.yul\":9997:10005   */\n      dup3\n        /* \"#utility.yul\":9987:10027   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":10018:10019   */\n      0x01\n        /* \"#utility.yul\":10009:10019   */\n      swap1\n      pop\n        /* \"#utility.yul\":10020:10025   */\n      jump(tag_337)\n        /* \"#utility.yul\":9987:10027   */\n    tag_338:\n        /* \"#utility.yul\":10046:10050   */\n      dup2\n        /* \"#utility.yul\":10036:10072   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":10063:10064   */\n      0x00\n        /* \"#utility.yul\":10054:10064   */\n      swap1\n      pop\n        /* \"#utility.yul\":10065:10070   */\n      jump(tag_337)\n        /* \"#utility.yul\":10036:10072   */\n    tag_339:\n        /* \"#utility.yul\":10132:10136   */\n      dup2\n        /* \"#utility.yul\":10180:10181   */\n      0x01\n        /* \"#utility.yul\":10175:10202   */\n      dup2\n      eq\n      tag_341\n      jumpi\n        /* \"#utility.yul\":10216:10217   */\n      0x02\n        /* \"#utility.yul\":10211:10402   */\n      dup2\n      eq\n      tag_342\n      jumpi\n        /* \"#utility.yul\":10125:10402   */\n      jump(tag_340)\n        /* \"#utility.yul\":10175:10202   */\n    tag_341:\n        /* \"#utility.yul\":10193:10194   */\n      0x01\n        /* \"#utility.yul\":10184:10194   */\n      swap2\n      pop\n        /* \"#utility.yul\":10195:10200   */\n      pop\n      jump(tag_337)\n        /* \"#utility.yul\":10211:10402   */\n    tag_342:\n        /* \"#utility.yul\":10256:10259   */\n      0xff\n        /* \"#utility.yul\":10246:10254   */\n      dup5\n        /* \"#utility.yul\":10243:10260   */\n      gt\n        /* \"#utility.yul\":10240:10283   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":10263:10281   */\n      tag_344\n      tag_218\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":10240:10283   */\n    tag_343:\n        /* \"#utility.yul\":10312:10320   */\n      dup4\n        /* \"#utility.yul\":10309:10310   */\n      0x02\n        /* \"#utility.yul\":10305:10321   */\n      exp\n        /* \"#utility.yul\":10296:10321   */\n      swap2\n      pop\n        /* \"#utility.yul\":10347:10350   */\n      dup5\n        /* \"#utility.yul\":10340:10345   */\n      dup3\n        /* \"#utility.yul\":10337:10351   */\n      gt\n        /* \"#utility.yul\":10334:10374   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":10354:10372   */\n      tag_346\n      tag_218\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":10334:10374   */\n    tag_345:\n        /* \"#utility.yul\":10387:10392   */\n      pop\n      jump(tag_337)\n        /* \"#utility.yul\":10125:10402   */\n    tag_340:\n      pop\n        /* \"#utility.yul\":10511:10513   */\n      0x20\n        /* \"#utility.yul\":10501:10509   */\n      dup4\n        /* \"#utility.yul\":10498:10514   */\n      lt\n        /* \"#utility.yul\":10492:10495   */\n      0x0133\n        /* \"#utility.yul\":10486:10490   */\n      dup4\n        /* \"#utility.yul\":10483:10496   */\n      lt\n        /* \"#utility.yul\":10479:10515   */\n      and\n        /* \"#utility.yul\":10461:10463   */\n      0x4e\n        /* \"#utility.yul\":10451:10459   */\n      dup5\n        /* \"#utility.yul\":10448:10464   */\n      lt\n        /* \"#utility.yul\":10443:10445   */\n      0x0b\n        /* \"#utility.yul\":10437:10441   */\n      dup5\n        /* \"#utility.yul\":10434:10446   */\n      lt\n        /* \"#utility.yul\":10430:10465   */\n      and\n        /* \"#utility.yul\":10414:10525   */\n      or\n        /* \"#utility.yul\":10411:10657   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":10567:10575   */\n      dup3\n        /* \"#utility.yul\":10561:10565   */\n      dup3\n        /* \"#utility.yul\":10557:10576   */\n      exp\n        /* \"#utility.yul\":10548:10576   */\n      swap1\n      pop\n        /* \"#utility.yul\":10602:10605   */\n      dup4\n        /* \"#utility.yul\":10595:10600   */\n      dup2\n        /* \"#utility.yul\":10592:10606   */\n      gt\n        /* \"#utility.yul\":10589:10629   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":10609:10627   */\n      tag_349\n      tag_218\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":10589:10629   */\n    tag_348:\n        /* \"#utility.yul\":10642:10647   */\n      jump(tag_337)\n        /* \"#utility.yul\":10411:10657   */\n    tag_347:\n        /* \"#utility.yul\":10682:10724   */\n      tag_350\n        /* \"#utility.yul\":10720:10723   */\n      dup5\n        /* \"#utility.yul\":10710:10718   */\n      dup5\n        /* \"#utility.yul\":10704:10708   */\n      dup5\n        /* \"#utility.yul\":10701:10702   */\n      0x01\n        /* \"#utility.yul\":10682:10724   */\n      tag_220\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":10667:10724   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":10756:10760   */\n      dup2\n        /* \"#utility.yul\":10751:10754   */\n      dup5\n        /* \"#utility.yul\":10747:10761   */\n      div\n        /* \"#utility.yul\":10740:10745   */\n      dup2\n        /* \"#utility.yul\":10737:10762   */\n      gt\n        /* \"#utility.yul\":10734:10785   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":10765:10783   */\n      tag_352\n      tag_218\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":10734:10785   */\n    tag_351:\n        /* \"#utility.yul\":10814:10818   */\n      dup2\n        /* \"#utility.yul\":10807:10812   */\n      dup2\n        /* \"#utility.yul\":10803:10819   */\n      mul\n        /* \"#utility.yul\":10794:10819   */\n      swap1\n      pop\n        /* \"#utility.yul\":9752:10825   */\n    tag_337:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10831:11114   */\n    tag_126:\n        /* \"#utility.yul\":10890:10895   */\n      0x00\n        /* \"#utility.yul\":10914:10937   */\n      tag_354\n        /* \"#utility.yul\":10932:10936   */\n      dup3\n        /* \"#utility.yul\":10914:10937   */\n      tag_197\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":10906:10937   */\n      swap2\n      pop\n        /* \"#utility.yul\":10958:10984   */\n      tag_355\n        /* \"#utility.yul\":10975:10983   */\n      dup4\n        /* \"#utility.yul\":10958:10984   */\n      tag_191\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":10946:10984   */\n      swap3\n      pop\n        /* \"#utility.yul\":11003:11107   */\n      tag_356\n        /* \"#utility.yul\":11040:11106   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11030:11038   */\n      dup5\n        /* \"#utility.yul\":11024:11028   */\n      dup5\n        /* \"#utility.yul\":11003:11107   */\n      tag_221\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":10994:11107   */\n      swap1\n      pop\n        /* \"#utility.yul\":10831:11114   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11120:11314   */\n    tag_128:\n        /* \"#utility.yul\":11160:11164   */\n      0x00\n        /* \"#utility.yul\":11180:11200   */\n      tag_358\n        /* \"#utility.yul\":11198:11199   */\n      dup3\n        /* \"#utility.yul\":11180:11200   */\n      tag_197\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":11175:11200   */\n      swap2\n      pop\n        /* \"#utility.yul\":11214:11234   */\n      tag_359\n        /* \"#utility.yul\":11232:11233   */\n      dup4\n        /* \"#utility.yul\":11214:11234   */\n      tag_197\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":11209:11234   */\n      swap3\n      pop\n        /* \"#utility.yul\":11258:11259   */\n      dup3\n        /* \"#utility.yul\":11255:11256   */\n      dup3\n        /* \"#utility.yul\":11251:11260   */\n      sub\n        /* \"#utility.yul\":11243:11260   */\n      swap1\n      pop\n        /* \"#utility.yul\":11282:11283   */\n      dup2\n        /* \"#utility.yul\":11276:11280   */\n      dup2\n        /* \"#utility.yul\":11273:11284   */\n      gt\n        /* \"#utility.yul\":11270:11307   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":11287:11305   */\n      tag_361\n      tag_218\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":11270:11307   */\n    tag_360:\n        /* \"#utility.yul\":11120:11314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11320:11730   */\n    tag_130:\n        /* \"#utility.yul\":11360:11367   */\n      0x00\n        /* \"#utility.yul\":11383:11403   */\n      tag_363\n        /* \"#utility.yul\":11401:11402   */\n      dup3\n        /* \"#utility.yul\":11383:11403   */\n      tag_197\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":11378:11403   */\n      swap2\n      pop\n        /* \"#utility.yul\":11417:11437   */\n      tag_364\n        /* \"#utility.yul\":11435:11436   */\n      dup4\n        /* \"#utility.yul\":11417:11437   */\n      tag_197\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":11412:11437   */\n      swap3\n      pop\n        /* \"#utility.yul\":11472:11473   */\n      dup3\n        /* \"#utility.yul\":11469:11470   */\n      dup3\n        /* \"#utility.yul\":11465:11474   */\n      mul\n        /* \"#utility.yul\":11494:11524   */\n      tag_365\n        /* \"#utility.yul\":11512:11523   */\n      dup2\n        /* \"#utility.yul\":11494:11524   */\n      tag_197\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":11483:11524   */\n      swap2\n      pop\n        /* \"#utility.yul\":11673:11674   */\n      dup3\n        /* \"#utility.yul\":11664:11671   */\n      dup3\n        /* \"#utility.yul\":11660:11675   */\n      div\n        /* \"#utility.yul\":11657:11658   */\n      dup5\n        /* \"#utility.yul\":11654:11676   */\n      eq\n        /* \"#utility.yul\":11634:11635   */\n      dup4\n        /* \"#utility.yul\":11627:11636   */\n      iszero\n        /* \"#utility.yul\":11607:11690   */\n      or\n        /* \"#utility.yul\":11584:11723   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":11703:11721   */\n      tag_367\n      tag_218\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":11584:11723   */\n    tag_366:\n        /* \"#utility.yul\":11368:11730   */\n      pop\n        /* \"#utility.yul\":11320:11730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11736:11916   */\n    tag_222:\n        /* \"#utility.yul\":11784:11861   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11781:11782   */\n      0x00\n        /* \"#utility.yul\":11774:11862   */\n      mstore\n        /* \"#utility.yul\":11881:11885   */\n      0x12\n        /* \"#utility.yul\":11878:11879   */\n      0x04\n        /* \"#utility.yul\":11871:11886   */\n      mstore\n        /* \"#utility.yul\":11905:11909   */\n      0x24\n        /* \"#utility.yul\":11902:11903   */\n      0x00\n        /* \"#utility.yul\":11895:11910   */\n      revert\n        /* \"#utility.yul\":11922:12107   */\n    tag_132:\n        /* \"#utility.yul\":11962:11963   */\n      0x00\n        /* \"#utility.yul\":11979:11999   */\n      tag_370\n        /* \"#utility.yul\":11997:11998   */\n      dup3\n        /* \"#utility.yul\":11979:11999   */\n      tag_197\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":11974:11999   */\n      swap2\n      pop\n        /* \"#utility.yul\":12013:12033   */\n      tag_371\n        /* \"#utility.yul\":12031:12032   */\n      dup4\n        /* \"#utility.yul\":12013:12033   */\n      tag_197\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":12008:12033   */\n      swap3\n      pop\n        /* \"#utility.yul\":12052:12053   */\n      dup3\n        /* \"#utility.yul\":12042:12077   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":12057:12075   */\n      tag_373\n      tag_222\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":12042:12077   */\n    tag_372:\n        /* \"#utility.yul\":12099:12100   */\n      dup3\n        /* \"#utility.yul\":12096:12097   */\n      dup3\n        /* \"#utility.yul\":12092:12101   */\n      div\n        /* \"#utility.yul\":12087:12101   */\n      swap1\n      pop\n        /* \"#utility.yul\":11922:12107   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12113:12304   */\n    tag_134:\n        /* \"#utility.yul\":12153:12156   */\n      0x00\n        /* \"#utility.yul\":12172:12192   */\n      tag_375\n        /* \"#utility.yul\":12190:12191   */\n      dup3\n        /* \"#utility.yul\":12172:12192   */\n      tag_197\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":12167:12192   */\n      swap2\n      pop\n        /* \"#utility.yul\":12206:12226   */\n      tag_376\n        /* \"#utility.yul\":12224:12225   */\n      dup4\n        /* \"#utility.yul\":12206:12226   */\n      tag_197\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":12201:12226   */\n      swap3\n      pop\n        /* \"#utility.yul\":12249:12250   */\n      dup3\n        /* \"#utility.yul\":12246:12247   */\n      dup3\n        /* \"#utility.yul\":12242:12251   */\n      add\n        /* \"#utility.yul\":12235:12251   */\n      swap1\n      pop\n        /* \"#utility.yul\":12270:12273   */\n      dup1\n        /* \"#utility.yul\":12267:12268   */\n      dup3\n        /* \"#utility.yul\":12264:12274   */\n      gt\n        /* \"#utility.yul\":12261:12297   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":12277:12295   */\n      tag_378\n      tag_218\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":12261:12297   */\n    tag_377:\n        /* \"#utility.yul\":12113:12304   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12310:12485   */\n    tag_143:\n        /* \"#utility.yul\":12348:12351   */\n      0x00\n        /* \"#utility.yul\":12371:12394   */\n      tag_380\n        /* \"#utility.yul\":12388:12393   */\n      dup3\n        /* \"#utility.yul\":12371:12394   */\n      tag_191\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":12362:12394   */\n      swap2\n      pop\n        /* \"#utility.yul\":12416:12426   */\n      0xffffffff\n        /* \"#utility.yul\":12409:12414   */\n      dup3\n        /* \"#utility.yul\":12406:12427   */\n      sub\n        /* \"#utility.yul\":12403:12450   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":12430:12448   */\n      tag_382\n      tag_218\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":12403:12450   */\n    tag_381:\n        /* \"#utility.yul\":12477:12478   */\n      0x01\n        /* \"#utility.yul\":12470:12475   */\n      dup3\n        /* \"#utility.yul\":12466:12479   */\n      add\n        /* \"#utility.yul\":12459:12479   */\n      swap1\n      pop\n        /* \"#utility.yul\":12310:12485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12491:12823   */\n    tag_145:\n        /* \"#utility.yul\":12612:12616   */\n      0x00\n        /* \"#utility.yul\":12650:12652   */\n      0x40\n        /* \"#utility.yul\":12639:12648   */\n      dup3\n        /* \"#utility.yul\":12635:12653   */\n      add\n        /* \"#utility.yul\":12627:12653   */\n      swap1\n      pop\n        /* \"#utility.yul\":12663:12734   */\n      tag_384\n        /* \"#utility.yul\":12731:12732   */\n      0x00\n        /* \"#utility.yul\":12720:12729   */\n      dup4\n        /* \"#utility.yul\":12716:12733   */\n      add\n        /* \"#utility.yul\":12707:12713   */\n      dup6\n        /* \"#utility.yul\":12663:12734   */\n      tag_204\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":12744:12816   */\n      tag_385\n        /* \"#utility.yul\":12812:12814   */\n      0x20\n        /* \"#utility.yul\":12801:12810   */\n      dup4\n        /* \"#utility.yul\":12797:12815   */\n      add\n        /* \"#utility.yul\":12788:12794   */\n      dup5\n        /* \"#utility.yul\":12744:12816   */\n      tag_204\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":12491:12823   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12829:13161   */\n    tag_166:\n        /* \"#utility.yul\":12950:12954   */\n      0x00\n        /* \"#utility.yul\":12988:12990   */\n      0x40\n        /* \"#utility.yul\":12977:12986   */\n      dup3\n        /* \"#utility.yul\":12973:12991   */\n      add\n        /* \"#utility.yul\":12965:12991   */\n      swap1\n      pop\n        /* \"#utility.yul\":13001:13072   */\n      tag_387\n        /* \"#utility.yul\":13069:13070   */\n      0x00\n        /* \"#utility.yul\":13058:13067   */\n      dup4\n        /* \"#utility.yul\":13054:13071   */\n      add\n        /* \"#utility.yul\":13045:13051   */\n      dup6\n        /* \"#utility.yul\":13001:13072   */\n      tag_213\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":13082:13154   */\n      tag_388\n        /* \"#utility.yul\":13150:13152   */\n      0x20\n        /* \"#utility.yul\":13139:13148   */\n      dup4\n        /* \"#utility.yul\":13135:13153   */\n      add\n        /* \"#utility.yul\":13126:13132   */\n      dup5\n        /* \"#utility.yul\":13082:13154   */\n      tag_204\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":12829:13161   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13167:13257   */\n    tag_223:\n        /* \"#utility.yul\":13201:13208   */\n      0x00\n        /* \"#utility.yul\":13244:13249   */\n      dup2\n        /* \"#utility.yul\":13237:13250   */\n      iszero\n        /* \"#utility.yul\":13230:13251   */\n      iszero\n        /* \"#utility.yul\":13219:13251   */\n      swap1\n      pop\n        /* \"#utility.yul\":13167:13257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13263:13379   */\n    tag_224:\n        /* \"#utility.yul\":13333:13354   */\n      tag_391\n        /* \"#utility.yul\":13348:13353   */\n      dup2\n        /* \"#utility.yul\":13333:13354   */\n      tag_223\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":13326:13331   */\n      dup2\n        /* \"#utility.yul\":13323:13355   */\n      eq\n        /* \"#utility.yul\":13313:13373   */\n      tag_392\n      jumpi\n        /* \"#utility.yul\":13369:13370   */\n      0x00\n        /* \"#utility.yul\":13366:13367   */\n      dup1\n        /* \"#utility.yul\":13359:13371   */\n      revert\n        /* \"#utility.yul\":13313:13373   */\n    tag_392:\n        /* \"#utility.yul\":13263:13379   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13385:13522   */\n    tag_225:\n        /* \"#utility.yul\":13439:13444   */\n      0x00\n        /* \"#utility.yul\":13470:13476   */\n      dup2\n        /* \"#utility.yul\":13464:13477   */\n      mload\n        /* \"#utility.yul\":13455:13477   */\n      swap1\n      pop\n        /* \"#utility.yul\":13486:13516   */\n      tag_394\n        /* \"#utility.yul\":13510:13515   */\n      dup2\n        /* \"#utility.yul\":13486:13516   */\n      tag_224\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":13385:13522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13528:13873   */\n    tag_170:\n        /* \"#utility.yul\":13595:13601   */\n      0x00\n        /* \"#utility.yul\":13644:13646   */\n      0x20\n        /* \"#utility.yul\":13632:13641   */\n      dup3\n        /* \"#utility.yul\":13623:13630   */\n      dup5\n        /* \"#utility.yul\":13619:13642   */\n      sub\n        /* \"#utility.yul\":13615:13647   */\n      slt\n        /* \"#utility.yul\":13612:13731   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":13650:13729   */\n      tag_397\n      tag_189\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":13612:13731   */\n    tag_396:\n        /* \"#utility.yul\":13770:13771   */\n      0x00\n        /* \"#utility.yul\":13795:13856   */\n      tag_398\n        /* \"#utility.yul\":13848:13855   */\n      dup5\n        /* \"#utility.yul\":13839:13845   */\n      dup3\n        /* \"#utility.yul\":13828:13837   */\n      dup6\n        /* \"#utility.yul\":13824:13846   */\n      add\n        /* \"#utility.yul\":13795:13856   */\n      tag_225\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":13785:13856   */\n      swap2\n      pop\n        /* \"#utility.yul\":13741:13866   */\n      pop\n        /* \"#utility.yul\":13528:13873   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13879:14079   */\n    tag_176:\n        /* \"#utility.yul\":13918:13922   */\n      0x00\n        /* \"#utility.yul\":13938:13957   */\n      tag_400\n        /* \"#utility.yul\":13955:13956   */\n      dup3\n        /* \"#utility.yul\":13938:13957   */\n      tag_191\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":13933:13957   */\n      swap2\n      pop\n        /* \"#utility.yul\":13971:13990   */\n      tag_401\n        /* \"#utility.yul\":13988:13989   */\n      dup4\n        /* \"#utility.yul\":13971:13990   */\n      tag_191\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":13966:13990   */\n      swap3\n      pop\n        /* \"#utility.yul\":14014:14015   */\n      dup3\n        /* \"#utility.yul\":14011:14012   */\n      dup3\n        /* \"#utility.yul\":14007:14016   */\n      sub\n        /* \"#utility.yul\":13999:14016   */\n      swap1\n      pop\n        /* \"#utility.yul\":14038:14048   */\n      0xffffffff\n        /* \"#utility.yul\":14032:14036   */\n      dup2\n        /* \"#utility.yul\":14029:14049   */\n      gt\n        /* \"#utility.yul\":14026:14072   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":14052:14070   */\n      tag_403\n      tag_218\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":14026:14072   */\n    tag_402:\n        /* \"#utility.yul\":13879:14079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200aa0bb092fda1cb136c30cea76c85ee779b4fd8225b48a493eef573f6fd02b2564736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1460": {
									"entryPoint": null,
									"id": 1460,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2585:1",
										"nodeType": "YulBlock",
										"src": "0:2585:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "890:32:1",
													"nodeType": "YulBlock",
													"src": "890:32:1",
													"statements": [
														{
															"nativeSrc": "900:16:1",
															"nodeType": "YulAssignment",
															"src": "900:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:1",
																"nodeType": "YulIdentifier",
																"src": "911:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:1",
														"nodeType": "YulTypedName",
														"src": "872:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:1",
														"nodeType": "YulTypedName",
														"src": "882:7:1",
														"type": ""
													}
												],
												"src": "845:77:1"
											},
											{
												"body": {
													"nativeSrc": "971:79:1",
													"nodeType": "YulBlock",
													"src": "971:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:1",
																"nodeType": "YulBlock",
																"src": "1028:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:1"
																			},
																			"nativeSrc": "1030:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:1"
																		},
																		"nativeSrc": "1030:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:1"
																				},
																				"nativeSrc": "1001:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:1"
																		},
																		"nativeSrc": "991:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:1"
																},
																"nativeSrc": "984:43:1",
																"nodeType": "YulFunctionCall",
																"src": "984:43:1"
															},
															"nativeSrc": "981:63:1",
															"nodeType": "YulIf",
															"src": "981:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:1",
														"nodeType": "YulTypedName",
														"src": "964:5:1",
														"type": ""
													}
												],
												"src": "928:122:1"
											},
											{
												"body": {
													"nativeSrc": "1119:80:1",
													"nodeType": "YulBlock",
													"src": "1119:80:1",
													"statements": [
														{
															"nativeSrc": "1129:22:1",
															"nodeType": "YulAssignment",
															"src": "1129:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:1"
																},
																"nativeSrc": "1138:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:1"
																},
																"nativeSrc": "1160:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:1"
															},
															"nativeSrc": "1160:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:1",
														"nodeType": "YulTypedName",
														"src": "1097:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:1",
														"nodeType": "YulTypedName",
														"src": "1105:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:1",
														"nodeType": "YulTypedName",
														"src": "1113:5:1",
														"type": ""
													}
												],
												"src": "1056:143:1"
											},
											{
												"body": {
													"nativeSrc": "1316:552:1",
													"nodeType": "YulBlock",
													"src": "1316:552:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:1",
																"nodeType": "YulBlock",
																"src": "1362:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:1"
																			},
																			"nativeSrc": "1364:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:1"
																		},
																		"nativeSrc": "1364:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:1"
																		},
																		"nativeSrc": "1333:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:1"
																},
																"nativeSrc": "1329:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:1"
															},
															"nativeSrc": "1326:119:1",
															"nodeType": "YulIf",
															"src": "1326:119:1"
														},
														{
															"nativeSrc": "1455:128:1",
															"nodeType": "YulBlock",
															"src": "1455:128:1",
															"statements": [
																{
																	"nativeSrc": "1470:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:1"
																				},
																				"nativeSrc": "1541:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1509:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:1"
																		},
																		"nativeSrc": "1509:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:1",
															"nodeType": "YulBlock",
															"src": "1593:129:1",
															"statements": [
																{
																	"nativeSrc": "1608:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:1"
																				},
																				"nativeSrc": "1680:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1648:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:1"
																		},
																		"nativeSrc": "1648:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:1",
															"nodeType": "YulBlock",
															"src": "1732:129:1",
															"statements": [
																{
																	"nativeSrc": "1747:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:1"
																				},
																				"nativeSrc": "1819:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1787:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:1"
																		},
																		"nativeSrc": "1787:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "1205:663:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:1",
														"nodeType": "YulTypedName",
														"src": "1270:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:1",
														"nodeType": "YulTypedName",
														"src": "1281:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:1",
														"nodeType": "YulTypedName",
														"src": "1293:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:1",
														"nodeType": "YulTypedName",
														"src": "1301:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:1",
														"nodeType": "YulTypedName",
														"src": "1309:6:1",
														"type": ""
													}
												],
												"src": "1205:663:1"
											},
											{
												"body": {
													"nativeSrc": "1917:43:1",
													"nodeType": "YulBlock",
													"src": "1917:43:1",
													"statements": [
														{
															"nativeSrc": "1927:27:1",
															"nodeType": "YulAssignment",
															"src": "1927:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1942:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1942:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1938:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1938:3:1"
																},
																"nativeSrc": "1938:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1938:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1927:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1927:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "1874:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1899:5:1",
														"nodeType": "YulTypedName",
														"src": "1899:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1909:7:1",
														"nodeType": "YulTypedName",
														"src": "1909:7:1",
														"type": ""
													}
												],
												"src": "1874:86:1"
											},
											{
												"body": {
													"nativeSrc": "2007:77:1",
													"nodeType": "YulBlock",
													"src": "2007:77:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2062:16:1",
																"nodeType": "YulBlock",
																"src": "2062:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2071:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2071:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2074:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2064:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2064:6:1"
																			},
																			"nativeSrc": "2064:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2064:12:1"
																		},
																		"nativeSrc": "2064:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2064:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2030:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2030:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2053:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2053:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "2037:15:1",
																					"nodeType": "YulIdentifier",
																					"src": "2037:15:1"
																				},
																				"nativeSrc": "2037:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2037:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2027:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2027:2:1"
																		},
																		"nativeSrc": "2027:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2027:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2020:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2020:6:1"
																},
																"nativeSrc": "2020:41:1",
																"nodeType": "YulFunctionCall",
																"src": "2020:41:1"
															},
															"nativeSrc": "2017:61:1",
															"nodeType": "YulIf",
															"src": "2017:61:1"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "1966:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2000:5:1",
														"nodeType": "YulTypedName",
														"src": "2000:5:1",
														"type": ""
													}
												],
												"src": "1966:118:1"
											},
											{
												"body": {
													"nativeSrc": "2151:78:1",
													"nodeType": "YulBlock",
													"src": "2151:78:1",
													"statements": [
														{
															"nativeSrc": "2161:22:1",
															"nodeType": "YulAssignment",
															"src": "2161:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2176:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2170:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2170:5:1"
																},
																"nativeSrc": "2170:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2170:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2161:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2161:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2217:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2217:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "2192:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "2192:24:1"
																},
																"nativeSrc": "2192:31:1",
																"nodeType": "YulFunctionCall",
																"src": "2192:31:1"
															},
															"nativeSrc": "2192:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "2192:31:1"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "2090:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2129:6:1",
														"nodeType": "YulTypedName",
														"src": "2129:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2137:3:1",
														"nodeType": "YulTypedName",
														"src": "2137:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2145:5:1",
														"nodeType": "YulTypedName",
														"src": "2145:5:1",
														"type": ""
													}
												],
												"src": "2090:139:1"
											},
											{
												"body": {
													"nativeSrc": "2310:272:1",
													"nodeType": "YulBlock",
													"src": "2310:272:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2356:83:1",
																"nodeType": "YulBlock",
																"src": "2356:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2358:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2358:77:1"
																			},
																			"nativeSrc": "2358:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2358:79:1"
																		},
																		"nativeSrc": "2358:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2358:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2331:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2331:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2340:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2340:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2327:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2327:3:1"
																		},
																		"nativeSrc": "2327:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2327:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2352:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2352:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2323:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2323:3:1"
																},
																"nativeSrc": "2323:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2323:32:1"
															},
															"nativeSrc": "2320:119:1",
															"nodeType": "YulIf",
															"src": "2320:119:1"
														},
														{
															"nativeSrc": "2449:126:1",
															"nodeType": "YulBlock",
															"src": "2449:126:1",
															"statements": [
																{
																	"nativeSrc": "2464:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2464:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2478:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2478:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2468:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2468:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2493:72:1",
																	"nodeType": "YulAssignment",
																	"src": "2493:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2537:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2537:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2548:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2548:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2533:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2533:3:1"
																				},
																				"nativeSrc": "2533:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2533:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2557:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2557:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "2503:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "2503:29:1"
																		},
																		"nativeSrc": "2503:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2503:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2493:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2493:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "2235:347:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2280:9:1",
														"nodeType": "YulTypedName",
														"src": "2280:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2291:7:1",
														"nodeType": "YulTypedName",
														"src": "2291:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2303:6:1",
														"nodeType": "YulTypedName",
														"src": "2303:6:1",
														"type": ""
													}
												],
												"src": "2235:347:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001bf338038062001bf3833981810160405281019062000036919062000233565b825f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000de573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620001049190620002c7565b60ff16600b5f6101000a81548163ffffffff021916908363ffffffff1602179055505f60075f6101000a81548163ffffffff021916908363ffffffff16021790555080600c819055508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620002f7565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001c5826200019a565b9050919050565b620001d781620001b9565b8114620001e2575f80fd5b50565b5f81519050620001f581620001cc565b92915050565b5f819050919050565b6200020f81620001fb565b81146200021a575f80fd5b50565b5f815190506200022d8162000204565b92915050565b5f805f606084860312156200024d576200024c62000196565b5b5f6200025c86828701620001e5565b93505060206200026f86828701620001e5565b925050604062000282868287016200021d565b9150509250925092565b5f60ff82169050919050565b620002a3816200028c565b8114620002ae575f80fd5b50565b5f81519050620002c18162000298565b92915050565b5f60208284031215620002df57620002de62000196565b5b5f620002ee84828501620002b1565b91505092915050565b6118ee80620003055f395ff3fe608060405234801561000f575f80fd5b5060043610610135575f3560e01c806376809ce3116100b6578063c884ef831161007a578063c884ef8314610351578063cdf033f314610381578063d4c3eea01461039f578063eb46260e146103bd578063eeda71d5146103ed578063f54f0a8d1461041d57610135565b806376809ce3146102975780637a19a488146102b55780638233fbcb146102d3578063a035b1fe14610303578063b9f0bf661461032157610135565b80631aa3a008116100fd5780631aa3a008146102035780633013ce2914610221578063480a42621461023f5780634e71d92d1461026f5780636d1c60411461027957610135565b806307040e91146101395780630efe6a8b146101695780631161e5821461018557806313da0777146101b55780631a39d8ef146101e5575b5f80fd5b610153600480360381019061014e9190611141565b61044f565b6040516101609190611203565b60405180910390f35b610183600480360381019061017e9190611270565b6104ee565b005b61019f600480360381019061019a91906112c0565b610a4a565b6040516101ac91906112fa565b60405180910390f35b6101cf60048036038101906101ca9190611313565b610a5f565b6040516101dc91906112fa565b60405180910390f35b6101ed610bbf565b6040516101fa91906112fa565b60405180910390f35b61020b610bc5565b60405161021891906113ac565b60405180910390f35b610229610bea565b60405161023691906113e5565b60405180910390f35b610259600480360381019061025491906112c0565b610c0d565b60405161026691906112fa565b60405180910390f35b610277610c1e565b005b610281610dd3565b60405161028e919061140d565b60405180910390f35b61029f610e1e565b6040516102ac919061140d565b60405180910390f35b6102bd610e33565b6040516102ca91906112fa565b60405180910390f35b6102ed60048036038101906102e891906112c0565b610e39565b6040516102fa91906112fa565b60405180910390f35b61030b610e92565b60405161031891906112fa565b60405180910390f35b61033b600480360381019061033691906112c0565b610e98565b60405161034891906112fa565b60405180910390f35b61036b600480360381019061036691906112c0565b610ead565b60405161037891906112fa565b60405180910390f35b610389610ec2565b604051610396919061140d565b60405180910390f35b6103a7610ed7565b6040516103b491906112fa565b60405180910390f35b6103d760048036038101906103d291906112c0565b610edd565b6040516103e491906112fa565b60405180910390f35b610407600480360381019061040291906112c0565b610f23565b60405161041491906112fa565b60405180910390f35b61043760048036038101906104329190611141565b610f38565b60405161044693929190611435565b60405180910390f35b6104576110d0565b60065f8363ffffffff1663ffffffff1681526020019081526020015f206040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250509050919050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312d9a6ad60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f46f16c26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610595573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b9919061149d565b336040518363ffffffff1660e01b81526004016105d79291906114d7565b5f6040518083038186803b1580156105ed575f80fd5b505afa1580156105ff573d5f803e3d5ffd5b505050505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610668576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f82036106a1576040517faa7feadc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81036106da576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b5f9054906101000a900463ffffffff16600a6106f8919061165a565b60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600a5461074391906116a4565b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461078b91906116d7565b6107959190611745565b60045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107e09190611775565b925050819055508160095f8282546107f89190611775565b92505081905550600a5460035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461088f9190611775565b925050819055508060085f8282546108a79190611775565b92505081905550600854600b5f9054906101000a900463ffffffff16600a6108cf919061165a565b836108da91906116d7565b6108e49190611745565b600a5f8282546108f49190611775565b9250508190555060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281525060065f60075f9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015590505060075f81819054906101000a900463ffffffff16809291906109d6906117a8565b91906101000a81548163ffffffff021916908363ffffffff160217905550508273ffffffffffffffffffffffffffffffffffffffff167f0f0d29b5d4cebe99e2c93ffec39876a8b37c77ba767270f4f489daede43aea4e8383604051610a3d9291906117d3565b60405180910390a2505050565b6004602052805f5260405f205f915090505481565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ac5576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8260025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b0f9190611775565b90505f83600854610b209190611775565b03610b2e575f915050610bb9565b5f83600854610b3d9190611775565b600b5f9054906101000a900463ffffffff16600a610b5b919061165a565b83610b6691906116d7565b610b709190611745565b9050600b5f9054906101000a900463ffffffff16600a610b90919061165a565b600a600c54610b9f9190611745565b82610baa91906116d7565b610bb49190611745565b925050505b92915050565b60085481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610c1782610f7d565b9050919050565b5f3390505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c87576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610c9182610f7d565b90505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610ced9291906117fa565b6020604051808303815f875af1158015610d09573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d2d9190611856565b508060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d7a9190611775565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f3488c34059d2e654b3b166b5ec4ee17bbd37297b906d39c704104a7dc2459b3182604051610dc791906112fa565b60405180910390a25050565b5f8060075f9054906101000a900463ffffffff1663ffffffff1603610dfa575f9050610e1b565b600160075f9054906101000a900463ffffffff16610e189190611881565b90505b90565b600b5f9054906101000a900463ffffffff1681565b600a5481565b5f610e4382610f7d565b60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610e8b9190611775565b9050919050565b600c5481565b6002602052805f5260405f205f915090505481565b6005602052805f5260405f205f915090505481565b60075f9054906101000a900463ffffffff1681565b60095481565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6003602052805f5260405f205f915090505481565b6006602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600b5f9054906101000a900463ffffffff16600a610fda919061165a565b60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600a5461102591906116a4565b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461106d91906116d7565b6110779190611745565b60045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546110bf9190611775565b6110c991906116a4565b9050919050565b60405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81525090565b5f80fd5b5f63ffffffff82169050919050565b61112081611108565b811461112a575f80fd5b50565b5f8135905061113b81611117565b92915050565b5f6020828403121561115657611155611104565b5b5f6111638482850161112d565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111958261116c565b9050919050565b6111a58161118b565b82525050565b5f819050919050565b6111bd816111ab565b82525050565b606082015f8201516111d75f85018261119c565b5060208201516111ea60208501826111b4565b5060408201516111fd60408501826111b4565b50505050565b5f6060820190506112165f8301846111c3565b92915050565b6112258161118b565b811461122f575f80fd5b50565b5f813590506112408161121c565b92915050565b61124f816111ab565b8114611259575f80fd5b50565b5f8135905061126a81611246565b92915050565b5f805f6060848603121561128757611286611104565b5b5f61129486828701611232565b93505060206112a58682870161125c565b92505060406112b68682870161125c565b9150509250925092565b5f602082840312156112d5576112d4611104565b5b5f6112e284828501611232565b91505092915050565b6112f4816111ab565b82525050565b5f60208201905061130d5f8301846112eb565b92915050565b5f806040838503121561132957611328611104565b5b5f61133685828601611232565b92505060206113478582860161125c565b9150509250929050565b5f819050919050565b5f61137461136f61136a8461116c565b611351565b61116c565b9050919050565b5f6113858261135a565b9050919050565b5f6113968261137b565b9050919050565b6113a68161138c565b82525050565b5f6020820190506113bf5f83018461139d565b92915050565b5f6113cf8261137b565b9050919050565b6113df816113c5565b82525050565b5f6020820190506113f85f8301846113d6565b92915050565b61140781611108565b82525050565b5f6020820190506114205f8301846113fe565b92915050565b61142f8161118b565b82525050565b5f6060820190506114485f830186611426565b61145560208301856112eb565b61146260408301846112eb565b949350505050565b5f819050919050565b61147c8161146a565b8114611486575f80fd5b50565b5f8151905061149781611473565b92915050565b5f602082840312156114b2576114b1611104565b5b5f6114bf84828501611489565b91505092915050565b6114d18161146a565b82525050565b5f6040820190506114ea5f8301856114c8565b6114f76020830184611426565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156115805780860481111561155c5761155b6114fe565b5b600185161561156b5780820291505b80810290506115798561152b565b9450611540565b94509492505050565b5f826115985760019050611653565b816115a5575f9050611653565b81600181146115bb57600281146115c5576115f4565b6001915050611653565b60ff8411156115d7576115d66114fe565b5b8360020a9150848211156115ee576115ed6114fe565b5b50611653565b5060208310610133831016604e8410600b84101617156116295782820a905083811115611624576116236114fe565b5b611653565b6116368484846001611537565b9250905081840481111561164d5761164c6114fe565b5b81810290505b9392505050565b5f611664826111ab565b915061166f83611108565b925061169c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611589565b905092915050565b5f6116ae826111ab565b91506116b9836111ab565b92508282039050818111156116d1576116d06114fe565b5b92915050565b5f6116e1826111ab565b91506116ec836111ab565b92508282026116fa816111ab565b91508282048414831517611711576117106114fe565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61174f826111ab565b915061175a836111ab565b92508261176a57611769611718565b5b828204905092915050565b5f61177f826111ab565b915061178a836111ab565b92508282019050808211156117a2576117a16114fe565b5b92915050565b5f6117b282611108565b915063ffffffff82036117c8576117c76114fe565b5b600182019050919050565b5f6040820190506117e65f8301856112eb565b6117f360208301846112eb565b9392505050565b5f60408201905061180d5f830185611426565b61181a60208301846112eb565b9392505050565b5f8115159050919050565b61183581611821565b811461183f575f80fd5b50565b5f815190506118508161182c565b92915050565b5f6020828403121561186b5761186a611104565b5b5f61187884828501611842565b91505092915050565b5f61188b82611108565b915061189683611108565b9250828203905063ffffffff8111156118b2576118b16114fe565b5b9291505056fea26469706673582212200aa0bb092fda1cb136c30cea76c85ee779b4fd8225b48a493eef573f6fd02b2564736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1BF3 CODESIZE SUB DUP1 PUSH3 0x1BF3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x233 JUMP JUMPDEST DUP3 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xDE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x104 SWAP2 SWAP1 PUSH3 0x2C7 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x2F7 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1C5 DUP3 PUSH3 0x19A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1D7 DUP2 PUSH3 0x1B9 JUMP JUMPDEST DUP2 EQ PUSH3 0x1E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F5 DUP2 PUSH3 0x1CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x20F DUP2 PUSH3 0x1FB JUMP JUMPDEST DUP2 EQ PUSH3 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x22D DUP2 PUSH3 0x204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x24D JUMPI PUSH3 0x24C PUSH3 0x196 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x25C DUP7 DUP3 DUP8 ADD PUSH3 0x1E5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x26F DUP7 DUP3 DUP8 ADD PUSH3 0x1E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x282 DUP7 DUP3 DUP8 ADD PUSH3 0x21D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2A3 DUP2 PUSH3 0x28C JUMP JUMPDEST DUP2 EQ PUSH3 0x2AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2C1 DUP2 PUSH3 0x298 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2DF JUMPI PUSH3 0x2DE PUSH3 0x196 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x2EE DUP5 DUP3 DUP6 ADD PUSH3 0x2B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18EE DUP1 PUSH3 0x305 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76809CE3 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC884EF83 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xCDF033F3 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xD4C3EEA0 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xEB46260E EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xEEDA71D5 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF54F0A8D EQ PUSH2 0x41D JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x76809CE3 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x7A19A488 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x8233FBCB EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xB9F0BF66 EQ PUSH2 0x321 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1AA3A008 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x480A4262 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x6D1C6041 EQ PUSH2 0x279 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x7040E91 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xEFE6A8B EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x1161E582 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x13DA0777 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x1E5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1270 JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0xC1E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30B PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x437 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x446 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12D9A6AD PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF46F16C2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D7 SWAP3 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SUB PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA7FEADC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xA SLOAD PUSH2 0x743 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x78B SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x795 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST DUP4 PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x7 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x9D6 SWAP1 PUSH2 0x17A8 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF0D29B5D4CEBE99E2C93FFEC39876A8B37C77BA767270F4F489DAEDE43AEA4E DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA3D SWAP3 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x8 SLOAD PUSH2 0xB20 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SUB PUSH2 0xB2E JUMPI PUSH0 SWAP2 POP POP PUSH2 0xBB9 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x8 SLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0xB5B SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST DUP4 PUSH2 0xB66 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0xB70 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0xB90 SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH1 0xA PUSH1 0xC SLOAD PUSH2 0xB9F SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST DUP3 PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0xBB4 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xC17 DUP3 PUSH2 0xF7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC87 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xC91 DUP3 PUSH2 0xF7D JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCED SWAP3 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD09 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x1856 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD7A SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3488C34059D2E654B3B166B5EC4EE17BBD37297B906D39C704104A7DC2459B31 DUP3 PUSH1 0x40 MLOAD PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SUB PUSH2 0xDFA JUMPI PUSH0 SWAP1 POP PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x1881 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xE43 DUP3 PUSH2 0xF7D JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xE8B SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0xFDA SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xA SLOAD PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x106D SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x1077 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x10BF SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x10C9 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1120 DUP2 PUSH2 0x1108 JUMP JUMPDEST DUP2 EQ PUSH2 0x112A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x113B DUP2 PUSH2 0x1117 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1156 JUMPI PUSH2 0x1155 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1163 DUP5 DUP3 DUP6 ADD PUSH2 0x112D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1195 DUP3 PUSH2 0x116C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A5 DUP2 PUSH2 0x118B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11BD DUP2 PUSH2 0x11AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x11D7 PUSH0 DUP6 ADD DUP3 PUSH2 0x119C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x11EA PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x11B4 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x11FD PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x11B4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1216 PUSH0 DUP4 ADD DUP5 PUSH2 0x11C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1225 DUP2 PUSH2 0x118B JUMP JUMPDEST DUP2 EQ PUSH2 0x122F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1240 DUP2 PUSH2 0x121C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x124F DUP2 PUSH2 0x11AB JUMP JUMPDEST DUP2 EQ PUSH2 0x1259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x126A DUP2 PUSH2 0x1246 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1294 DUP7 DUP3 DUP8 ADD PUSH2 0x1232 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12A5 DUP7 DUP3 DUP8 ADD PUSH2 0x125C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12B6 DUP7 DUP3 DUP8 ADD PUSH2 0x125C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D5 JUMPI PUSH2 0x12D4 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12E2 DUP5 DUP3 DUP6 ADD PUSH2 0x1232 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F4 DUP2 PUSH2 0x11AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x130D PUSH0 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1329 JUMPI PUSH2 0x1328 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1336 DUP6 DUP3 DUP7 ADD PUSH2 0x1232 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1347 DUP6 DUP3 DUP7 ADD PUSH2 0x125C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1374 PUSH2 0x136F PUSH2 0x136A DUP5 PUSH2 0x116C JUMP JUMPDEST PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x116C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1385 DUP3 PUSH2 0x135A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1396 DUP3 PUSH2 0x137B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A6 DUP2 PUSH2 0x138C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BF PUSH0 DUP4 ADD DUP5 PUSH2 0x139D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13CF DUP3 PUSH2 0x137B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13DF DUP2 PUSH2 0x13C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F8 PUSH0 DUP4 ADD DUP5 PUSH2 0x13D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1407 DUP2 PUSH2 0x1108 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1420 PUSH0 DUP4 ADD DUP5 PUSH2 0x13FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x142F DUP2 PUSH2 0x118B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1448 PUSH0 DUP4 ADD DUP7 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x1455 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0x1462 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147C DUP2 PUSH2 0x146A JUMP JUMPDEST DUP2 EQ PUSH2 0x1486 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1497 DUP2 PUSH2 0x1473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14BF DUP5 DUP3 DUP6 ADD PUSH2 0x1489 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x146A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14EA PUSH0 DUP4 ADD DUP6 PUSH2 0x14C8 JUMP JUMPDEST PUSH2 0x14F7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1426 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1580 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x155C JUMPI PUSH2 0x155B PUSH2 0x14FE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x156B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1579 DUP6 PUSH2 0x152B JUMP JUMPDEST SWAP5 POP PUSH2 0x1540 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1598 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1653 JUMP JUMPDEST DUP2 PUSH2 0x15A5 JUMPI PUSH0 SWAP1 POP PUSH2 0x1653 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x15BB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x15C5 JUMPI PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1653 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x15D7 JUMPI PUSH2 0x15D6 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x15EE JUMPI PUSH2 0x15ED PUSH2 0x14FE JUMP JUMPDEST JUMPDEST POP PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1629 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1624 JUMPI PUSH2 0x1623 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST PUSH2 0x1653 JUMP JUMPDEST PUSH2 0x1636 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1537 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x164D JUMPI PUSH2 0x164C PUSH2 0x14FE JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1664 DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x166F DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP3 POP PUSH2 0x169C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16AE DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x16B9 DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x16D1 JUMPI PUSH2 0x16D0 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16E1 DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x16EC DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x16FA DUP2 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1711 JUMPI PUSH2 0x1710 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x174F DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x175A DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x176A JUMPI PUSH2 0x1769 PUSH2 0x1718 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x177F DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x178A DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17A2 JUMPI PUSH2 0x17A1 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17B2 DUP3 PUSH2 0x1108 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x17C8 JUMPI PUSH2 0x17C7 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17E6 PUSH0 DUP4 ADD DUP6 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0x17F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x180D PUSH0 DUP4 ADD DUP6 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x181A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1835 DUP2 PUSH2 0x1821 JUMP JUMPDEST DUP2 EQ PUSH2 0x183F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1850 DUP2 PUSH2 0x182C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186B JUMPI PUSH2 0x186A PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1878 DUP5 DUP3 DUP6 ADD PUSH2 0x1842 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x188B DUP3 PUSH2 0x1108 JUMP JUMPDEST SWAP2 POP PUSH2 0x1896 DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B2 JUMPI PUSH2 0x18B1 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP LOG0 0xBB MULMOD 0x2F 0xDA SHR 0xB1 CALLDATASIZE 0xC3 0xC 0xEA PUSH23 0xC85EE779B4FD8225B48A493EEF573F6FD02B2564736F6C PUSH4 0x43000817 STOP CALLER ",
							"sourceMap": "37317:3441:0:-:0;;;37850:381;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37984:17;37963:12;;:39;;;;;;;;;;;;;;;;;;38022:12;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;38012:33;;:7;;:33;;;;;;;;;;;;;;;;;;38070:1;38055:12;;:16;;;;;;;;;;;;;;;;;;38178:6;38170:5;:14;;;;38214:9;38194:8;;:30;;;;;;;;;;;;;;;;;;37850:381;;;37317:3441;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:86::-;1909:7;1949:4;1942:5;1938:16;1927:27;;1874:86;;;:::o;1966:118::-;2037:22;2053:5;2037:22;:::i;:::-;2030:5;2027:33;2017:61;;2074:1;2071;2064:12;2017:61;1966:118;:::o;2090:139::-;2145:5;2176:6;2170:13;2161:22;;2192:31;2217:5;2192:31;:::i;:::-;2090:139;;;;:::o;2235:347::-;2303:6;2352:2;2340:9;2331:7;2327:23;2323:32;2320:119;;;2358:79;;:::i;:::-;2320:119;2478:1;2503:62;2557:7;2548:6;2537:9;2533:22;2503:62;:::i;:::-;2493:72;;2449:126;2235:347;;;;:::o;37317:3441:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getUnclaim_1792": {
									"entryPoint": 3965,
									"id": 1792,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@amount_1395": {
									"entryPoint": 3736,
									"id": 1395,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_1626": {
									"entryPoint": 3102,
									"id": 1626,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimed_1407": {
									"entryPoint": 3757,
									"id": 1407,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimal_1422": {
									"entryPoint": 3614,
									"id": 1422,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1583": {
									"entryPoint": 1262,
									"id": 1583,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getClaimed_1714": {
									"entryPoint": 3805,
									"id": 1714,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCurrentHistoryNonce_1746": {
									"entryPoint": 3539,
									"id": 1746,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getHistory_1759": {
									"entryPoint": 1103,
									"id": 1759,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPredict_1690": {
									"entryPoint": 2655,
									"id": 1690,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getTotalProfit_1730": {
									"entryPoint": 3641,
									"id": 1730,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUnclaim_1702": {
									"entryPoint": 3085,
									"id": 1702,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@historyInfo_1412": {
									"entryPoint": 3896,
									"id": 1412,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@historyNonce_1414": {
									"entryPoint": 3778,
									"id": 1414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mask_1399": {
									"entryPoint": 3875,
									"id": 1399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paymentToken_1388": {
									"entryPoint": 3050,
									"id": 1388,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@price_1424": {
									"entryPoint": 3730,
									"id": 1424,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@register_1391": {
									"entryPoint": 3013,
									"id": 1391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAmount_1416": {
									"entryPoint": 3007,
									"id": 1416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalValue_1418": {
									"entryPoint": 3799,
									"id": 1418,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unclaim_1403": {
									"entryPoint": 2634,
									"id": 1403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@valuePerAmount_1420": {
									"entryPoint": 3635,
									"id": 1420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 5257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 4397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 4720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 5277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 4417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ERC20_$1381_to_t_address_fromStack": {
									"entryPoint": 5078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_Register_$775_to_t_address_fromStack": {
									"entryPoint": 5021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_HistoryInfo_$147_memory_ptr_to_t_struct$_HistoryInfo_$147_memory_ptr_fromStack": {
									"entryPoint": 4547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 5118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6138,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": 5335,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$1381__to_t_address__fromStack_reversed": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Register_$775__to_t_address__fromStack_reversed": {
									"entryPoint": 5036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_HistoryInfo_$147_memory_ptr__to_t_struct$_HistoryInfo_$147_memory_ptr__fromStack_reversed": {
									"entryPoint": 4611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6099,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": 5133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 5431,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint32": {
									"entryPoint": 5722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 5513,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint32": {
									"entryPoint": 6273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 4360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$1381_to_t_address": {
									"entryPoint": 5061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_Register_$775_to_t_address": {
									"entryPoint": 5004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint32": {
									"entryPoint": 6056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5912,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4356,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 5419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 4375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14082:1",
										"nodeType": "YulBlock",
										"src": "0:14082:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "378:49:1",
													"nodeType": "YulBlock",
													"src": "378:49:1",
													"statements": [
														{
															"nativeSrc": "388:33:1",
															"nodeType": "YulAssignment",
															"src": "388:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:10:1",
																		"nodeType": "YulLiteral",
																		"src": "410:10:1",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nativeSrc": "399:22:1",
																"nodeType": "YulFunctionCall",
																"src": "399:22:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "334:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:1",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:1",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:93:1"
											},
											{
												"body": {
													"nativeSrc": "475:78:1",
													"nodeType": "YulBlock",
													"src": "475:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "531:16:1",
																"nodeType": "YulBlock",
																"src": "531:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "540:1:1",
																					"nodeType": "YulLiteral",
																					"src": "540:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "543:1:1",
																					"nodeType": "YulLiteral",
																					"src": "543:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "533:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "533:6:1"
																			},
																			"nativeSrc": "533:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "533:12:1"
																		},
																		"nativeSrc": "533:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "533:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "498:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "498:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "522:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "522:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nativeSrc": "505:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "505:16:1"
																				},
																				"nativeSrc": "505:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "505:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "495:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "495:2:1"
																		},
																		"nativeSrc": "495:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "495:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "488:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:1"
																},
																"nativeSrc": "488:42:1",
																"nodeType": "YulFunctionCall",
																"src": "488:42:1"
															},
															"nativeSrc": "485:62:1",
															"nodeType": "YulIf",
															"src": "485:62:1"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nativeSrc": "433:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "468:5:1",
														"nodeType": "YulTypedName",
														"src": "468:5:1",
														"type": ""
													}
												],
												"src": "433:120:1"
											},
											{
												"body": {
													"nativeSrc": "610:86:1",
													"nodeType": "YulBlock",
													"src": "610:86:1",
													"statements": [
														{
															"nativeSrc": "620:29:1",
															"nodeType": "YulAssignment",
															"src": "620:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "642:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "629:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "629:12:1"
																},
																"nativeSrc": "629:20:1",
																"nodeType": "YulFunctionCall",
																"src": "629:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "620:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "620:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "684:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "684:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nativeSrc": "658:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "658:25:1"
																},
																"nativeSrc": "658:32:1",
																"nodeType": "YulFunctionCall",
																"src": "658:32:1"
															},
															"nativeSrc": "658:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "658:32:1"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nativeSrc": "559:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "588:6:1",
														"nodeType": "YulTypedName",
														"src": "588:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "596:3:1",
														"nodeType": "YulTypedName",
														"src": "596:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "559:137:1"
											},
											{
												"body": {
													"nativeSrc": "767:262:1",
													"nodeType": "YulBlock",
													"src": "767:262:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "813:83:1",
																"nodeType": "YulBlock",
																"src": "813:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "815:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "815:77:1"
																			},
																			"nativeSrc": "815:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "815:79:1"
																		},
																		"nativeSrc": "815:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "815:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "788:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "788:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "797:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "797:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "784:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "784:3:1"
																		},
																		"nativeSrc": "784:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "784:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "809:2:1",
																		"nodeType": "YulLiteral",
																		"src": "809:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "780:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "780:3:1"
																},
																"nativeSrc": "780:32:1",
																"nodeType": "YulFunctionCall",
																"src": "780:32:1"
															},
															"nativeSrc": "777:119:1",
															"nodeType": "YulIf",
															"src": "777:119:1"
														},
														{
															"nativeSrc": "906:116:1",
															"nodeType": "YulBlock",
															"src": "906:116:1",
															"statements": [
																{
																	"nativeSrc": "921:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "921:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "935:1:1",
																		"nodeType": "YulLiteral",
																		"src": "935:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "925:6:1",
																			"nodeType": "YulTypedName",
																			"src": "925:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "950:62:1",
																	"nodeType": "YulAssignment",
																	"src": "950:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "984:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "984:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "995:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "995:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "980:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "980:3:1"
																				},
																				"nativeSrc": "980:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "980:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1004:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1004:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nativeSrc": "960:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "960:19:1"
																		},
																		"nativeSrc": "960:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "960:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "950:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "950:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nativeSrc": "702:327:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "737:9:1",
														"nodeType": "YulTypedName",
														"src": "737:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "748:7:1",
														"nodeType": "YulTypedName",
														"src": "748:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "760:6:1",
														"nodeType": "YulTypedName",
														"src": "760:6:1",
														"type": ""
													}
												],
												"src": "702:327:1"
											},
											{
												"body": {
													"nativeSrc": "1080:81:1",
													"nodeType": "YulBlock",
													"src": "1080:81:1",
													"statements": [
														{
															"nativeSrc": "1090:65:1",
															"nodeType": "YulAssignment",
															"src": "1090:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1105:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1105:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1112:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1112:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1101:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1101:3:1"
																},
																"nativeSrc": "1101:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1101:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1090:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1090:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1035:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1062:5:1",
														"nodeType": "YulTypedName",
														"src": "1062:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1072:7:1",
														"nodeType": "YulTypedName",
														"src": "1072:7:1",
														"type": ""
													}
												],
												"src": "1035:126:1"
											},
											{
												"body": {
													"nativeSrc": "1212:51:1",
													"nodeType": "YulBlock",
													"src": "1212:51:1",
													"statements": [
														{
															"nativeSrc": "1222:35:1",
															"nodeType": "YulAssignment",
															"src": "1222:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1251:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1251:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1233:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1233:17:1"
																},
																"nativeSrc": "1233:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1233:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1222:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1222:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1167:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1194:5:1",
														"nodeType": "YulTypedName",
														"src": "1194:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1204:7:1",
														"nodeType": "YulTypedName",
														"src": "1204:7:1",
														"type": ""
													}
												],
												"src": "1167:96:1"
											},
											{
												"body": {
													"nativeSrc": "1324:53:1",
													"nodeType": "YulBlock",
													"src": "1324:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1346:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:1"
																		},
																		"nativeSrc": "1346:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:1"
																},
																"nativeSrc": "1334:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:1"
															},
															"nativeSrc": "1334:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "1269:108:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:1",
														"nodeType": "YulTypedName",
														"src": "1312:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:1",
														"nodeType": "YulTypedName",
														"src": "1319:3:1",
														"type": ""
													}
												],
												"src": "1269:108:1"
											},
											{
												"body": {
													"nativeSrc": "1428:32:1",
													"nodeType": "YulBlock",
													"src": "1428:32:1",
													"statements": [
														{
															"nativeSrc": "1438:16:1",
															"nodeType": "YulAssignment",
															"src": "1438:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1449:5:1",
																"nodeType": "YulIdentifier",
																"src": "1449:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1438:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1438:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1383:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1410:5:1",
														"nodeType": "YulTypedName",
														"src": "1410:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1420:7:1",
														"nodeType": "YulTypedName",
														"src": "1420:7:1",
														"type": ""
													}
												],
												"src": "1383:77:1"
											},
											{
												"body": {
													"nativeSrc": "1521:53:1",
													"nodeType": "YulBlock",
													"src": "1521:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1538:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1538:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1561:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1561:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1543:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1543:17:1"
																		},
																		"nativeSrc": "1543:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1543:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:1"
																},
																"nativeSrc": "1531:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1531:37:1"
															},
															"nativeSrc": "1531:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1531:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "1466:108:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1509:5:1",
														"nodeType": "YulTypedName",
														"src": "1509:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1516:3:1",
														"nodeType": "YulTypedName",
														"src": "1516:3:1",
														"type": ""
													}
												],
												"src": "1466:108:1"
											},
											{
												"body": {
													"nativeSrc": "1766:568:1",
													"nodeType": "YulBlock",
													"src": "1766:568:1",
													"statements": [
														{
															"nativeSrc": "1776:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1776:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1792:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1792:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1797:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1797:4:1",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:1"
																},
																"nativeSrc": "1788:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1788:14:1"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:1",
																	"nodeType": "YulTypedName",
																	"src": "1780:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1812:164:1",
															"nodeType": "YulBlock",
															"src": "1812:164:1",
															"statements": [
																{
																	"nativeSrc": "1847:43:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1847:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1877:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1877:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1884:4:1",
																						"nodeType": "YulLiteral",
																						"src": "1884:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1873:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1873:3:1"
																				},
																				"nativeSrc": "1873:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1873:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1867:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "1867:5:1"
																		},
																		"nativeSrc": "1867:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1867:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "1851:12:1",
																			"nodeType": "YulTypedName",
																			"src": "1851:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "1937:12:1",
																				"nodeType": "YulIdentifier",
																				"src": "1937:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "1955:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1955:3:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1960:4:1",
																						"nodeType": "YulLiteral",
																						"src": "1960:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1951:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1951:3:1"
																				},
																				"nativeSrc": "1951:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1951:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "1903:33:1",
																			"nodeType": "YulIdentifier",
																			"src": "1903:33:1"
																		},
																		"nativeSrc": "1903:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1903:63:1"
																	},
																	"nativeSrc": "1903:63:1",
																	"nodeType": "YulExpressionStatement",
																	"src": "1903:63:1"
																}
															]
														},
														{
															"nativeSrc": "1986:165:1",
															"nodeType": "YulBlock",
															"src": "1986:165:1",
															"statements": [
																{
																	"nativeSrc": "2022:43:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2022:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2052:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2052:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2059:4:1",
																						"nodeType": "YulLiteral",
																						"src": "2059:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2048:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2048:3:1"
																				},
																				"nativeSrc": "2048:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2048:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2042:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "2042:5:1"
																		},
																		"nativeSrc": "2042:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2042:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2026:12:1",
																			"nodeType": "YulTypedName",
																			"src": "2026:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2112:12:1",
																				"nodeType": "YulIdentifier",
																				"src": "2112:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2130:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2130:3:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2135:4:1",
																						"nodeType": "YulLiteral",
																						"src": "2135:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2126:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2126:3:1"
																				},
																				"nativeSrc": "2126:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2126:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2078:33:1",
																			"nodeType": "YulIdentifier",
																			"src": "2078:33:1"
																		},
																		"nativeSrc": "2078:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2078:63:1"
																	},
																	"nativeSrc": "2078:63:1",
																	"nodeType": "YulExpressionStatement",
																	"src": "2078:63:1"
																}
															]
														},
														{
															"nativeSrc": "2161:166:1",
															"nodeType": "YulBlock",
															"src": "2161:166:1",
															"statements": [
																{
																	"nativeSrc": "2198:43:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2198:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2228:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2228:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2235:4:1",
																						"nodeType": "YulLiteral",
																						"src": "2235:4:1",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2224:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2224:3:1"
																				},
																				"nativeSrc": "2224:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2224:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2218:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "2218:5:1"
																		},
																		"nativeSrc": "2218:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2218:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2202:12:1",
																			"nodeType": "YulTypedName",
																			"src": "2202:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2288:12:1",
																				"nodeType": "YulIdentifier",
																				"src": "2288:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2306:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2306:3:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2311:4:1",
																						"nodeType": "YulLiteral",
																						"src": "2311:4:1",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2302:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2302:3:1"
																				},
																				"nativeSrc": "2302:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2302:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2254:33:1",
																			"nodeType": "YulIdentifier",
																			"src": "2254:33:1"
																		},
																		"nativeSrc": "2254:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2254:63:1"
																	},
																	"nativeSrc": "2254:63:1",
																	"nodeType": "YulExpressionStatement",
																	"src": "2254:63:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_HistoryInfo_$147_memory_ptr_to_t_struct$_HistoryInfo_$147_memory_ptr_fromStack",
												"nativeSrc": "1644:690:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1753:5:1",
														"nodeType": "YulTypedName",
														"src": "1753:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1760:3:1",
														"nodeType": "YulTypedName",
														"src": "1760:3:1",
														"type": ""
													}
												],
												"src": "1644:690:1"
											},
											{
												"body": {
													"nativeSrc": "2494:180:1",
													"nodeType": "YulBlock",
													"src": "2494:180:1",
													"statements": [
														{
															"nativeSrc": "2504:26:1",
															"nodeType": "YulAssignment",
															"src": "2504:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2516:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2516:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2527:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2527:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2512:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2512:3:1"
																},
																"nativeSrc": "2512:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2512:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2504:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2504:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2640:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2640:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2653:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2653:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2664:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2664:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2649:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2649:3:1"
																		},
																		"nativeSrc": "2649:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2649:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_HistoryInfo_$147_memory_ptr_to_t_struct$_HistoryInfo_$147_memory_ptr_fromStack",
																	"nativeSrc": "2540:99:1",
																	"nodeType": "YulIdentifier",
																	"src": "2540:99:1"
																},
																"nativeSrc": "2540:127:1",
																"nodeType": "YulFunctionCall",
																"src": "2540:127:1"
															},
															"nativeSrc": "2540:127:1",
															"nodeType": "YulExpressionStatement",
															"src": "2540:127:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_HistoryInfo_$147_memory_ptr__to_t_struct$_HistoryInfo_$147_memory_ptr__fromStack_reversed",
												"nativeSrc": "2340:334:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2466:9:1",
														"nodeType": "YulTypedName",
														"src": "2466:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2478:6:1",
														"nodeType": "YulTypedName",
														"src": "2478:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2489:4:1",
														"nodeType": "YulTypedName",
														"src": "2489:4:1",
														"type": ""
													}
												],
												"src": "2340:334:1"
											},
											{
												"body": {
													"nativeSrc": "2723:79:1",
													"nodeType": "YulBlock",
													"src": "2723:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2780:16:1",
																"nodeType": "YulBlock",
																"src": "2780:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2789:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2789:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2792:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2792:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2782:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2782:6:1"
																			},
																			"nativeSrc": "2782:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2782:12:1"
																		},
																		"nativeSrc": "2782:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2782:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2746:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2746:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2771:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2771:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2753:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2753:17:1"
																				},
																				"nativeSrc": "2753:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2753:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2743:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2743:2:1"
																		},
																		"nativeSrc": "2743:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2743:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2736:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2736:6:1"
																},
																"nativeSrc": "2736:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2736:43:1"
															},
															"nativeSrc": "2733:63:1",
															"nodeType": "YulIf",
															"src": "2733:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2680:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2716:5:1",
														"nodeType": "YulTypedName",
														"src": "2716:5:1",
														"type": ""
													}
												],
												"src": "2680:122:1"
											},
											{
												"body": {
													"nativeSrc": "2860:87:1",
													"nodeType": "YulBlock",
													"src": "2860:87:1",
													"statements": [
														{
															"nativeSrc": "2870:29:1",
															"nodeType": "YulAssignment",
															"src": "2870:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2892:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2892:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2879:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2879:12:1"
																},
																"nativeSrc": "2879:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2879:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2870:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2870:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2935:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2935:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2908:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2908:26:1"
																},
																"nativeSrc": "2908:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2908:33:1"
															},
															"nativeSrc": "2908:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2908:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2808:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2838:6:1",
														"nodeType": "YulTypedName",
														"src": "2838:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2846:3:1",
														"nodeType": "YulTypedName",
														"src": "2846:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2854:5:1",
														"nodeType": "YulTypedName",
														"src": "2854:5:1",
														"type": ""
													}
												],
												"src": "2808:139:1"
											},
											{
												"body": {
													"nativeSrc": "2996:79:1",
													"nodeType": "YulBlock",
													"src": "2996:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3053:16:1",
																"nodeType": "YulBlock",
																"src": "3053:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3062:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3062:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3065:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3065:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3055:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3055:6:1"
																			},
																			"nativeSrc": "3055:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3055:12:1"
																		},
																		"nativeSrc": "3055:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3055:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3019:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3019:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3044:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3044:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3026:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3026:17:1"
																				},
																				"nativeSrc": "3026:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3026:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3016:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3016:2:1"
																		},
																		"nativeSrc": "3016:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3016:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3009:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3009:6:1"
																},
																"nativeSrc": "3009:43:1",
																"nodeType": "YulFunctionCall",
																"src": "3009:43:1"
															},
															"nativeSrc": "3006:63:1",
															"nodeType": "YulIf",
															"src": "3006:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2953:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2989:5:1",
														"nodeType": "YulTypedName",
														"src": "2989:5:1",
														"type": ""
													}
												],
												"src": "2953:122:1"
											},
											{
												"body": {
													"nativeSrc": "3133:87:1",
													"nodeType": "YulBlock",
													"src": "3133:87:1",
													"statements": [
														{
															"nativeSrc": "3143:29:1",
															"nodeType": "YulAssignment",
															"src": "3143:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3165:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3165:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3152:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3152:12:1"
																},
																"nativeSrc": "3152:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3152:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3143:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3143:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3208:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3208:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3181:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "3181:26:1"
																},
																"nativeSrc": "3181:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3181:33:1"
															},
															"nativeSrc": "3181:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3181:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3081:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3111:6:1",
														"nodeType": "YulTypedName",
														"src": "3111:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3119:3:1",
														"nodeType": "YulTypedName",
														"src": "3119:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3127:5:1",
														"nodeType": "YulTypedName",
														"src": "3127:5:1",
														"type": ""
													}
												],
												"src": "3081:139:1"
											},
											{
												"body": {
													"nativeSrc": "3326:519:1",
													"nodeType": "YulBlock",
													"src": "3326:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3372:83:1",
																"nodeType": "YulBlock",
																"src": "3372:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3374:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3374:77:1"
																			},
																			"nativeSrc": "3374:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3374:79:1"
																		},
																		"nativeSrc": "3374:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3374:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3347:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3347:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3356:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3356:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3343:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3343:3:1"
																		},
																		"nativeSrc": "3343:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3343:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3368:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3368:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3339:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3339:3:1"
																},
																"nativeSrc": "3339:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3339:32:1"
															},
															"nativeSrc": "3336:119:1",
															"nodeType": "YulIf",
															"src": "3336:119:1"
														},
														{
															"nativeSrc": "3465:117:1",
															"nodeType": "YulBlock",
															"src": "3465:117:1",
															"statements": [
																{
																	"nativeSrc": "3480:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3480:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3494:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3494:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3484:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3484:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3509:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3509:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3544:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3544:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3555:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3555:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3540:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3540:3:1"
																				},
																				"nativeSrc": "3540:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3540:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3564:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3564:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3519:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3519:20:1"
																		},
																		"nativeSrc": "3519:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3519:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3509:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3509:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3592:118:1",
															"nodeType": "YulBlock",
															"src": "3592:118:1",
															"statements": [
																{
																	"nativeSrc": "3607:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3607:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3621:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3621:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3611:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3611:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3637:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3637:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3672:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3672:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3683:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3683:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3668:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3668:3:1"
																				},
																				"nativeSrc": "3668:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3668:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3692:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3692:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3647:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3647:20:1"
																		},
																		"nativeSrc": "3647:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3647:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3637:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3637:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3720:118:1",
															"nodeType": "YulBlock",
															"src": "3720:118:1",
															"statements": [
																{
																	"nativeSrc": "3735:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3735:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3749:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3739:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3739:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3765:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3765:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3800:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3800:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3811:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3811:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3796:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3796:3:1"
																				},
																				"nativeSrc": "3796:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3796:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3820:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3820:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3775:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3775:20:1"
																		},
																		"nativeSrc": "3775:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3775:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3765:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3765:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "3226:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3280:9:1",
														"nodeType": "YulTypedName",
														"src": "3280:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3291:7:1",
														"nodeType": "YulTypedName",
														"src": "3291:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3303:6:1",
														"nodeType": "YulTypedName",
														"src": "3303:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3311:6:1",
														"nodeType": "YulTypedName",
														"src": "3311:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3319:6:1",
														"nodeType": "YulTypedName",
														"src": "3319:6:1",
														"type": ""
													}
												],
												"src": "3226:619:1"
											},
											{
												"body": {
													"nativeSrc": "3917:263:1",
													"nodeType": "YulBlock",
													"src": "3917:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3963:83:1",
																"nodeType": "YulBlock",
																"src": "3963:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3965:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3965:77:1"
																			},
																			"nativeSrc": "3965:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3965:79:1"
																		},
																		"nativeSrc": "3965:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3965:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3938:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3938:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3947:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3947:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3934:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3934:3:1"
																		},
																		"nativeSrc": "3934:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3934:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3959:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3959:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3930:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3930:3:1"
																},
																"nativeSrc": "3930:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3930:32:1"
															},
															"nativeSrc": "3927:119:1",
															"nodeType": "YulIf",
															"src": "3927:119:1"
														},
														{
															"nativeSrc": "4056:117:1",
															"nodeType": "YulBlock",
															"src": "4056:117:1",
															"statements": [
																{
																	"nativeSrc": "4071:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4071:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4085:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4085:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4075:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4075:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4100:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4100:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4135:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4135:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4146:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4146:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4131:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4131:3:1"
																				},
																				"nativeSrc": "4131:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4131:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4155:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4155:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4110:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4110:20:1"
																		},
																		"nativeSrc": "4110:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4110:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4100:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4100:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3851:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3887:9:1",
														"nodeType": "YulTypedName",
														"src": "3887:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3898:7:1",
														"nodeType": "YulTypedName",
														"src": "3898:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3910:6:1",
														"nodeType": "YulTypedName",
														"src": "3910:6:1",
														"type": ""
													}
												],
												"src": "3851:329:1"
											},
											{
												"body": {
													"nativeSrc": "4251:53:1",
													"nodeType": "YulBlock",
													"src": "4251:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4268:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4268:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4291:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4291:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4273:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "4273:17:1"
																		},
																		"nativeSrc": "4273:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4273:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4261:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4261:6:1"
																},
																"nativeSrc": "4261:37:1",
																"nodeType": "YulFunctionCall",
																"src": "4261:37:1"
															},
															"nativeSrc": "4261:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "4261:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4186:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4239:5:1",
														"nodeType": "YulTypedName",
														"src": "4239:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4246:3:1",
														"nodeType": "YulTypedName",
														"src": "4246:3:1",
														"type": ""
													}
												],
												"src": "4186:118:1"
											},
											{
												"body": {
													"nativeSrc": "4408:124:1",
													"nodeType": "YulBlock",
													"src": "4408:124:1",
													"statements": [
														{
															"nativeSrc": "4418:26:1",
															"nodeType": "YulAssignment",
															"src": "4418:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4430:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4430:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4441:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4441:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4426:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4426:3:1"
																},
																"nativeSrc": "4426:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4426:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4418:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4418:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4498:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4498:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4511:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4511:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4522:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4522:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4507:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4507:3:1"
																		},
																		"nativeSrc": "4507:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4507:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4454:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "4454:43:1"
																},
																"nativeSrc": "4454:71:1",
																"nodeType": "YulFunctionCall",
																"src": "4454:71:1"
															},
															"nativeSrc": "4454:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "4454:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4310:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4380:9:1",
														"nodeType": "YulTypedName",
														"src": "4380:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4392:6:1",
														"nodeType": "YulTypedName",
														"src": "4392:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4403:4:1",
														"nodeType": "YulTypedName",
														"src": "4403:4:1",
														"type": ""
													}
												],
												"src": "4310:222:1"
											},
											{
												"body": {
													"nativeSrc": "4621:391:1",
													"nodeType": "YulBlock",
													"src": "4621:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4667:83:1",
																"nodeType": "YulBlock",
																"src": "4667:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4669:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4669:77:1"
																			},
																			"nativeSrc": "4669:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4669:79:1"
																		},
																		"nativeSrc": "4669:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4669:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4642:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4642:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4651:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4651:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4638:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:1"
																		},
																		"nativeSrc": "4638:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4638:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4663:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4663:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4634:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4634:3:1"
																},
																"nativeSrc": "4634:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4634:32:1"
															},
															"nativeSrc": "4631:119:1",
															"nodeType": "YulIf",
															"src": "4631:119:1"
														},
														{
															"nativeSrc": "4760:117:1",
															"nodeType": "YulBlock",
															"src": "4760:117:1",
															"statements": [
																{
																	"nativeSrc": "4775:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4775:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4789:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4789:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4779:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4779:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:1"
																				},
																				"nativeSrc": "4835:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4814:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:1"
																		},
																		"nativeSrc": "4814:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4804:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4887:118:1",
															"nodeType": "YulBlock",
															"src": "4887:118:1",
															"statements": [
																{
																	"nativeSrc": "4902:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4902:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4916:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4916:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4906:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4906:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4932:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4932:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4967:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4967:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4978:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4978:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4963:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4963:3:1"
																				},
																				"nativeSrc": "4963:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4963:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4987:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4987:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4942:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4942:20:1"
																		},
																		"nativeSrc": "4942:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4942:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4932:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4932:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4538:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4583:9:1",
														"nodeType": "YulTypedName",
														"src": "4583:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4594:7:1",
														"nodeType": "YulTypedName",
														"src": "4594:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4606:6:1",
														"nodeType": "YulTypedName",
														"src": "4606:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4614:6:1",
														"nodeType": "YulTypedName",
														"src": "4614:6:1",
														"type": ""
													}
												],
												"src": "4538:474:1"
											},
											{
												"body": {
													"nativeSrc": "5050:28:1",
													"nodeType": "YulBlock",
													"src": "5050:28:1",
													"statements": [
														{
															"nativeSrc": "5060:12:1",
															"nodeType": "YulAssignment",
															"src": "5060:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "5067:5:1",
																"nodeType": "YulIdentifier",
																"src": "5067:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5060:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5060:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5018:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5036:5:1",
														"nodeType": "YulTypedName",
														"src": "5036:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5046:3:1",
														"nodeType": "YulTypedName",
														"src": "5046:3:1",
														"type": ""
													}
												],
												"src": "5018:60:1"
											},
											{
												"body": {
													"nativeSrc": "5144:82:1",
													"nodeType": "YulBlock",
													"src": "5144:82:1",
													"statements": [
														{
															"nativeSrc": "5154:66:1",
															"nodeType": "YulAssignment",
															"src": "5154:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5212:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5212:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5194:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "5194:17:1"
																				},
																				"nativeSrc": "5194:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5194:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5185:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "5185:8:1"
																		},
																		"nativeSrc": "5185:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5185:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5167:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5167:17:1"
																},
																"nativeSrc": "5167:53:1",
																"nodeType": "YulFunctionCall",
																"src": "5167:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5154:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5154:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5084:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5124:5:1",
														"nodeType": "YulTypedName",
														"src": "5124:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5134:9:1",
														"nodeType": "YulTypedName",
														"src": "5134:9:1",
														"type": ""
													}
												],
												"src": "5084:142:1"
											},
											{
												"body": {
													"nativeSrc": "5292:66:1",
													"nodeType": "YulBlock",
													"src": "5292:66:1",
													"statements": [
														{
															"nativeSrc": "5302:50:1",
															"nodeType": "YulAssignment",
															"src": "5302:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5346:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5346:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5315:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "5315:30:1"
																},
																"nativeSrc": "5315:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5315:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5302:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5302:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5232:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5272:5:1",
														"nodeType": "YulTypedName",
														"src": "5272:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5282:9:1",
														"nodeType": "YulTypedName",
														"src": "5282:9:1",
														"type": ""
													}
												],
												"src": "5232:126:1"
											},
											{
												"body": {
													"nativeSrc": "5440:66:1",
													"nodeType": "YulBlock",
													"src": "5440:66:1",
													"statements": [
														{
															"nativeSrc": "5450:50:1",
															"nodeType": "YulAssignment",
															"src": "5450:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5494:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5494:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5463:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "5463:30:1"
																},
																"nativeSrc": "5463:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5463:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5450:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5450:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_Register_$775_to_t_address",
												"nativeSrc": "5364:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5420:5:1",
														"nodeType": "YulTypedName",
														"src": "5420:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5430:9:1",
														"nodeType": "YulTypedName",
														"src": "5430:9:1",
														"type": ""
													}
												],
												"src": "5364:142:1"
											},
											{
												"body": {
													"nativeSrc": "5593:82:1",
													"nodeType": "YulBlock",
													"src": "5593:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5610:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5610:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5662:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5662:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_Register_$775_to_t_address",
																			"nativeSrc": "5615:46:1",
																			"nodeType": "YulIdentifier",
																			"src": "5615:46:1"
																		},
																		"nativeSrc": "5615:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5615:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5603:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:1"
																},
																"nativeSrc": "5603:66:1",
																"nodeType": "YulFunctionCall",
																"src": "5603:66:1"
															},
															"nativeSrc": "5603:66:1",
															"nodeType": "YulExpressionStatement",
															"src": "5603:66:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_Register_$775_to_t_address_fromStack",
												"nativeSrc": "5512:163:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5581:5:1",
														"nodeType": "YulTypedName",
														"src": "5581:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5588:3:1",
														"nodeType": "YulTypedName",
														"src": "5588:3:1",
														"type": ""
													}
												],
												"src": "5512:163:1"
											},
											{
												"body": {
													"nativeSrc": "5795:140:1",
													"nodeType": "YulBlock",
													"src": "5795:140:1",
													"statements": [
														{
															"nativeSrc": "5805:26:1",
															"nodeType": "YulAssignment",
															"src": "5805:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5817:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5817:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5828:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5828:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5813:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5813:3:1"
																},
																"nativeSrc": "5813:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5813:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5805:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5805:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5901:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5901:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5914:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5914:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5925:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5925:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5910:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5910:3:1"
																		},
																		"nativeSrc": "5910:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5910:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_Register_$775_to_t_address_fromStack",
																	"nativeSrc": "5841:59:1",
																	"nodeType": "YulIdentifier",
																	"src": "5841:59:1"
																},
																"nativeSrc": "5841:87:1",
																"nodeType": "YulFunctionCall",
																"src": "5841:87:1"
															},
															"nativeSrc": "5841:87:1",
															"nodeType": "YulExpressionStatement",
															"src": "5841:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Register_$775__to_t_address__fromStack_reversed",
												"nativeSrc": "5681:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5767:9:1",
														"nodeType": "YulTypedName",
														"src": "5767:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5779:6:1",
														"nodeType": "YulTypedName",
														"src": "5779:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5790:4:1",
														"nodeType": "YulTypedName",
														"src": "5790:4:1",
														"type": ""
													}
												],
												"src": "5681:254:1"
											},
											{
												"body": {
													"nativeSrc": "6015:66:1",
													"nodeType": "YulBlock",
													"src": "6015:66:1",
													"statements": [
														{
															"nativeSrc": "6025:50:1",
															"nodeType": "YulAssignment",
															"src": "6025:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6069:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6069:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6038:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "6038:30:1"
																},
																"nativeSrc": "6038:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6038:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6025:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "6025:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$1381_to_t_address",
												"nativeSrc": "5941:140:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5995:5:1",
														"nodeType": "YulTypedName",
														"src": "5995:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6005:9:1",
														"nodeType": "YulTypedName",
														"src": "6005:9:1",
														"type": ""
													}
												],
												"src": "5941:140:1"
											},
											{
												"body": {
													"nativeSrc": "6166:80:1",
													"nodeType": "YulBlock",
													"src": "6166:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6183:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6183:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6233:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6233:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$1381_to_t_address",
																			"nativeSrc": "6188:44:1",
																			"nodeType": "YulIdentifier",
																			"src": "6188:44:1"
																		},
																		"nativeSrc": "6188:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6188:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6176:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6176:6:1"
																},
																"nativeSrc": "6176:64:1",
																"nodeType": "YulFunctionCall",
																"src": "6176:64:1"
															},
															"nativeSrc": "6176:64:1",
															"nodeType": "YulExpressionStatement",
															"src": "6176:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$1381_to_t_address_fromStack",
												"nativeSrc": "6087:159:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6154:5:1",
														"nodeType": "YulTypedName",
														"src": "6154:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6161:3:1",
														"nodeType": "YulTypedName",
														"src": "6161:3:1",
														"type": ""
													}
												],
												"src": "6087:159:1"
											},
											{
												"body": {
													"nativeSrc": "6364:138:1",
													"nodeType": "YulBlock",
													"src": "6364:138:1",
													"statements": [
														{
															"nativeSrc": "6374:26:1",
															"nodeType": "YulAssignment",
															"src": "6374:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6386:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6386:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6397:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6397:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6382:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6382:3:1"
																},
																"nativeSrc": "6382:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6382:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6374:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6374:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6468:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6481:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6481:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6492:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6492:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6477:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6477:3:1"
																		},
																		"nativeSrc": "6477:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6477:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$1381_to_t_address_fromStack",
																	"nativeSrc": "6410:57:1",
																	"nodeType": "YulIdentifier",
																	"src": "6410:57:1"
																},
																"nativeSrc": "6410:85:1",
																"nodeType": "YulFunctionCall",
																"src": "6410:85:1"
															},
															"nativeSrc": "6410:85:1",
															"nodeType": "YulExpressionStatement",
															"src": "6410:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$1381__to_t_address__fromStack_reversed",
												"nativeSrc": "6252:250:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6336:9:1",
														"nodeType": "YulTypedName",
														"src": "6336:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6348:6:1",
														"nodeType": "YulTypedName",
														"src": "6348:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6359:4:1",
														"nodeType": "YulTypedName",
														"src": "6359:4:1",
														"type": ""
													}
												],
												"src": "6252:250:1"
											},
											{
												"body": {
													"nativeSrc": "6571:52:1",
													"nodeType": "YulBlock",
													"src": "6571:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6588:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6588:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6610:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6610:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nativeSrc": "6593:16:1",
																			"nodeType": "YulIdentifier",
																			"src": "6593:16:1"
																		},
																		"nativeSrc": "6593:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6593:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6581:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6581:6:1"
																},
																"nativeSrc": "6581:36:1",
																"nodeType": "YulFunctionCall",
																"src": "6581:36:1"
															},
															"nativeSrc": "6581:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "6581:36:1"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nativeSrc": "6508:115:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6559:5:1",
														"nodeType": "YulTypedName",
														"src": "6559:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6566:3:1",
														"nodeType": "YulTypedName",
														"src": "6566:3:1",
														"type": ""
													}
												],
												"src": "6508:115:1"
											},
											{
												"body": {
													"nativeSrc": "6725:122:1",
													"nodeType": "YulBlock",
													"src": "6725:122:1",
													"statements": [
														{
															"nativeSrc": "6735:26:1",
															"nodeType": "YulAssignment",
															"src": "6735:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6747:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6747:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6758:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6758:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6743:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6743:3:1"
																},
																"nativeSrc": "6743:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6743:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6735:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6735:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6813:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6813:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6826:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6826:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6837:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6837:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6822:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6822:3:1"
																		},
																		"nativeSrc": "6822:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6822:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nativeSrc": "6771:41:1",
																	"nodeType": "YulIdentifier",
																	"src": "6771:41:1"
																},
																"nativeSrc": "6771:69:1",
																"nodeType": "YulFunctionCall",
																"src": "6771:69:1"
															},
															"nativeSrc": "6771:69:1",
															"nodeType": "YulExpressionStatement",
															"src": "6771:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nativeSrc": "6629:218:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6697:9:1",
														"nodeType": "YulTypedName",
														"src": "6697:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6709:6:1",
														"nodeType": "YulTypedName",
														"src": "6709:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6720:4:1",
														"nodeType": "YulTypedName",
														"src": "6720:4:1",
														"type": ""
													}
												],
												"src": "6629:218:1"
											},
											{
												"body": {
													"nativeSrc": "6918:53:1",
													"nodeType": "YulBlock",
													"src": "6918:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6935:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6935:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6958:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6958:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6940:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6940:17:1"
																		},
																		"nativeSrc": "6940:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6940:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6928:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6928:6:1"
																},
																"nativeSrc": "6928:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6928:37:1"
															},
															"nativeSrc": "6928:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6928:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6853:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6906:5:1",
														"nodeType": "YulTypedName",
														"src": "6906:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6913:3:1",
														"nodeType": "YulTypedName",
														"src": "6913:3:1",
														"type": ""
													}
												],
												"src": "6853:118:1"
											},
											{
												"body": {
													"nativeSrc": "7131:288:1",
													"nodeType": "YulBlock",
													"src": "7131:288:1",
													"statements": [
														{
															"nativeSrc": "7141:26:1",
															"nodeType": "YulAssignment",
															"src": "7141:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7153:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7153:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7164:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7164:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7149:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7149:3:1"
																},
																"nativeSrc": "7149:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7149:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7141:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7141:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7221:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7221:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7234:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7234:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7245:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7245:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7230:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7230:3:1"
																		},
																		"nativeSrc": "7230:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7230:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7177:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7177:43:1"
																},
																"nativeSrc": "7177:71:1",
																"nodeType": "YulFunctionCall",
																"src": "7177:71:1"
															},
															"nativeSrc": "7177:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "7177:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7302:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7302:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7315:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7315:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7326:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7326:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7311:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7311:3:1"
																		},
																		"nativeSrc": "7311:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7311:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7258:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7258:43:1"
																},
																"nativeSrc": "7258:72:1",
																"nodeType": "YulFunctionCall",
																"src": "7258:72:1"
															},
															"nativeSrc": "7258:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "7258:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7384:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7384:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7397:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7397:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7408:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7408:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7393:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7393:3:1"
																		},
																		"nativeSrc": "7393:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7393:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7340:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7340:43:1"
																},
																"nativeSrc": "7340:72:1",
																"nodeType": "YulFunctionCall",
																"src": "7340:72:1"
															},
															"nativeSrc": "7340:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "7340:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6977:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7087:9:1",
														"nodeType": "YulTypedName",
														"src": "7087:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7099:6:1",
														"nodeType": "YulTypedName",
														"src": "7099:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7107:6:1",
														"nodeType": "YulTypedName",
														"src": "7107:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7115:6:1",
														"nodeType": "YulTypedName",
														"src": "7115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7126:4:1",
														"nodeType": "YulTypedName",
														"src": "7126:4:1",
														"type": ""
													}
												],
												"src": "6977:442:1"
											},
											{
												"body": {
													"nativeSrc": "7470:32:1",
													"nodeType": "YulBlock",
													"src": "7470:32:1",
													"statements": [
														{
															"nativeSrc": "7480:16:1",
															"nodeType": "YulAssignment",
															"src": "7480:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "7491:5:1",
																"nodeType": "YulIdentifier",
																"src": "7491:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7480:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "7480:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "7425:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7452:5:1",
														"nodeType": "YulTypedName",
														"src": "7452:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7462:7:1",
														"nodeType": "YulTypedName",
														"src": "7462:7:1",
														"type": ""
													}
												],
												"src": "7425:77:1"
											},
											{
												"body": {
													"nativeSrc": "7551:79:1",
													"nodeType": "YulBlock",
													"src": "7551:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7608:16:1",
																"nodeType": "YulBlock",
																"src": "7608:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7617:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7617:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7620:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7620:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7610:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7610:6:1"
																			},
																			"nativeSrc": "7610:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7610:12:1"
																		},
																		"nativeSrc": "7610:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7610:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7574:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7574:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7599:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "7599:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "7581:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "7581:17:1"
																				},
																				"nativeSrc": "7581:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7581:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7571:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7571:2:1"
																		},
																		"nativeSrc": "7571:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7571:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7564:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7564:6:1"
																},
																"nativeSrc": "7564:43:1",
																"nodeType": "YulFunctionCall",
																"src": "7564:43:1"
															},
															"nativeSrc": "7561:63:1",
															"nodeType": "YulIf",
															"src": "7561:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "7508:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7544:5:1",
														"nodeType": "YulTypedName",
														"src": "7544:5:1",
														"type": ""
													}
												],
												"src": "7508:122:1"
											},
											{
												"body": {
													"nativeSrc": "7699:80:1",
													"nodeType": "YulBlock",
													"src": "7699:80:1",
													"statements": [
														{
															"nativeSrc": "7709:22:1",
															"nodeType": "YulAssignment",
															"src": "7709:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7724:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7724:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7718:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7718:5:1"
																},
																"nativeSrc": "7718:13:1",
																"nodeType": "YulFunctionCall",
																"src": "7718:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7709:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7709:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7767:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7767:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "7740:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "7740:26:1"
																},
																"nativeSrc": "7740:33:1",
																"nodeType": "YulFunctionCall",
																"src": "7740:33:1"
															},
															"nativeSrc": "7740:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "7740:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "7636:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7677:6:1",
														"nodeType": "YulTypedName",
														"src": "7677:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7685:3:1",
														"nodeType": "YulTypedName",
														"src": "7685:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7693:5:1",
														"nodeType": "YulTypedName",
														"src": "7693:5:1",
														"type": ""
													}
												],
												"src": "7636:143:1"
											},
											{
												"body": {
													"nativeSrc": "7862:274:1",
													"nodeType": "YulBlock",
													"src": "7862:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7908:83:1",
																"nodeType": "YulBlock",
																"src": "7908:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7910:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "7910:77:1"
																			},
																			"nativeSrc": "7910:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7910:79:1"
																		},
																		"nativeSrc": "7910:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7910:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7883:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7883:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7892:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7892:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7879:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7879:3:1"
																		},
																		"nativeSrc": "7879:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7879:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7904:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7904:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7875:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7875:3:1"
																},
																"nativeSrc": "7875:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7875:32:1"
															},
															"nativeSrc": "7872:119:1",
															"nodeType": "YulIf",
															"src": "7872:119:1"
														},
														{
															"nativeSrc": "8001:128:1",
															"nodeType": "YulBlock",
															"src": "8001:128:1",
															"statements": [
																{
																	"nativeSrc": "8016:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8016:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8030:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8030:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8020:6:1",
																			"nodeType": "YulTypedName",
																			"src": "8020:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8045:74:1",
																	"nodeType": "YulAssignment",
																	"src": "8045:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8091:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "8091:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8102:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8102:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8087:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8087:3:1"
																				},
																				"nativeSrc": "8087:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8087:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8111:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "8111:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "8055:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "8055:31:1"
																		},
																		"nativeSrc": "8055:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8055:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8045:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "8045:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "7785:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7832:9:1",
														"nodeType": "YulTypedName",
														"src": "7832:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7843:7:1",
														"nodeType": "YulTypedName",
														"src": "7843:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7855:6:1",
														"nodeType": "YulTypedName",
														"src": "7855:6:1",
														"type": ""
													}
												],
												"src": "7785:351:1"
											},
											{
												"body": {
													"nativeSrc": "8207:53:1",
													"nodeType": "YulBlock",
													"src": "8207:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8224:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8224:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8247:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8247:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8229:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "8229:17:1"
																		},
																		"nativeSrc": "8229:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8229:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:1"
																},
																"nativeSrc": "8217:37:1",
																"nodeType": "YulFunctionCall",
																"src": "8217:37:1"
															},
															"nativeSrc": "8217:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "8217:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "8142:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8195:5:1",
														"nodeType": "YulTypedName",
														"src": "8195:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8202:3:1",
														"nodeType": "YulTypedName",
														"src": "8202:3:1",
														"type": ""
													}
												],
												"src": "8142:118:1"
											},
											{
												"body": {
													"nativeSrc": "8392:206:1",
													"nodeType": "YulBlock",
													"src": "8392:206:1",
													"statements": [
														{
															"nativeSrc": "8402:26:1",
															"nodeType": "YulAssignment",
															"src": "8402:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8414:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8414:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8425:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8425:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8410:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8410:3:1"
																},
																"nativeSrc": "8410:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8410:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8402:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8402:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8482:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8482:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8495:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8495:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8506:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8506:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8491:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8491:3:1"
																		},
																		"nativeSrc": "8491:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8491:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8438:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8438:43:1"
																},
																"nativeSrc": "8438:71:1",
																"nodeType": "YulFunctionCall",
																"src": "8438:71:1"
															},
															"nativeSrc": "8438:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "8438:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8563:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8563:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8576:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8576:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8587:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8587:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8572:3:1"
																		},
																		"nativeSrc": "8572:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8572:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8519:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8519:43:1"
																},
																"nativeSrc": "8519:72:1",
																"nodeType": "YulFunctionCall",
																"src": "8519:72:1"
															},
															"nativeSrc": "8519:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "8519:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
												"nativeSrc": "8266:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8356:9:1",
														"nodeType": "YulTypedName",
														"src": "8356:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8368:6:1",
														"nodeType": "YulTypedName",
														"src": "8368:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8376:6:1",
														"nodeType": "YulTypedName",
														"src": "8376:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8387:4:1",
														"nodeType": "YulTypedName",
														"src": "8387:4:1",
														"type": ""
													}
												],
												"src": "8266:332:1"
											},
											{
												"body": {
													"nativeSrc": "8632:152:1",
													"nodeType": "YulBlock",
													"src": "8632:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8649:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8649:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8652:77:1",
																		"nodeType": "YulLiteral",
																		"src": "8652:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8642:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8642:6:1"
																},
																"nativeSrc": "8642:88:1",
																"nodeType": "YulFunctionCall",
																"src": "8642:88:1"
															},
															"nativeSrc": "8642:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "8642:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8746:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8746:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8749:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8749:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8739:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8739:6:1"
																},
																"nativeSrc": "8739:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8739:15:1"
															},
															"nativeSrc": "8739:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8739:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8770:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8770:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8773:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8773:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8763:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8763:6:1"
																},
																"nativeSrc": "8763:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8763:15:1"
															},
															"nativeSrc": "8763:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8763:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8604:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "8604:180:1"
											},
											{
												"body": {
													"nativeSrc": "8841:51:1",
													"nodeType": "YulBlock",
													"src": "8841:51:1",
													"statements": [
														{
															"nativeSrc": "8851:34:1",
															"nodeType": "YulAssignment",
															"src": "8851:34:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8876:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8876:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8879:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8879:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8872:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8872:3:1"
																},
																"nativeSrc": "8872:13:1",
																"nodeType": "YulFunctionCall",
																"src": "8872:13:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8851:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "8851:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "8790:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8822:5:1",
														"nodeType": "YulTypedName",
														"src": "8822:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8832:8:1",
														"nodeType": "YulTypedName",
														"src": "8832:8:1",
														"type": ""
													}
												],
												"src": "8790:102:1"
											},
											{
												"body": {
													"nativeSrc": "8971:775:1",
													"nodeType": "YulBlock",
													"src": "8971:775:1",
													"statements": [
														{
															"nativeSrc": "8981:15:1",
															"nodeType": "YulAssignment",
															"src": "8981:15:1",
															"value": {
																"name": "_power",
																"nativeSrc": "8990:6:1",
																"nodeType": "YulIdentifier",
																"src": "8990:6:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8981:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8981:5:1"
																}
															]
														},
														{
															"nativeSrc": "9005:14:1",
															"nodeType": "YulAssignment",
															"src": "9005:14:1",
															"value": {
																"name": "_base",
																"nativeSrc": "9014:5:1",
																"nodeType": "YulIdentifier",
																"src": "9014:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9005:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9005:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9063:677:1",
																"nodeType": "YulBlock",
																"src": "9063:677:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "9151:22:1",
																			"nodeType": "YulBlock",
																			"src": "9151:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9153:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "9153:16:1"
																						},
																						"nativeSrc": "9153:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "9153:18:1"
																					},
																					"nativeSrc": "9153:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "9153:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9129:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "9129:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "9139:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "9139:3:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "9144:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "9144:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "9135:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "9135:3:1"
																					},
																					"nativeSrc": "9135:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9135:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9126:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "9126:2:1"
																			},
																			"nativeSrc": "9126:24:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9126:24:1"
																		},
																		"nativeSrc": "9123:50:1",
																		"nodeType": "YulIf",
																		"src": "9123:50:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "9218:419:1",
																			"nodeType": "YulBlock",
																			"src": "9218:419:1",
																			"statements": [
																				{
																					"nativeSrc": "9598:25:1",
																					"nodeType": "YulAssignment",
																					"src": "9598:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "9611:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "9611:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "9618:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "9618:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "9607:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "9607:3:1"
																						},
																						"nativeSrc": "9607:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "9607:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "9598:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "9598:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9193:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "9193:8:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9203:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9203:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9189:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "9189:3:1"
																			},
																			"nativeSrc": "9189:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9189:16:1"
																		},
																		"nativeSrc": "9186:451:1",
																		"nodeType": "YulIf",
																		"src": "9186:451:1"
																	},
																	{
																		"nativeSrc": "9650:23:1",
																		"nodeType": "YulAssignment",
																		"src": "9650:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9662:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "9662:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "9668:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "9668:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "9658:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "9658:3:1"
																			},
																			"nativeSrc": "9658:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9658:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "9650:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "9650:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9686:44:1",
																		"nodeType": "YulAssignment",
																		"src": "9686:44:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9721:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "9721:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "9698:22:1",
																				"nodeType": "YulIdentifier",
																				"src": "9698:22:1"
																			},
																			"nativeSrc": "9698:32:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9698:32:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "9686:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "9686:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9039:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "9039:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9049:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9049:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9036:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9036:2:1"
																},
																"nativeSrc": "9036:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9036:15:1"
															},
															"nativeSrc": "9028:712:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9052:2:1",
																"nodeType": "YulBlock",
																"src": "9052:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "9032:3:1",
																"nodeType": "YulBlock",
																"src": "9032:3:1",
																"statements": []
															},
															"src": "9028:712:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "8898:848:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "8926:6:1",
														"nodeType": "YulTypedName",
														"src": "8926:6:1",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "8934:5:1",
														"nodeType": "YulTypedName",
														"src": "8934:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8941:8:1",
														"nodeType": "YulTypedName",
														"src": "8941:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8951:3:1",
														"nodeType": "YulTypedName",
														"src": "8951:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8959:5:1",
														"nodeType": "YulTypedName",
														"src": "8959:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "8966:4:1",
														"nodeType": "YulTypedName",
														"src": "8966:4:1",
														"type": ""
													}
												],
												"src": "8898:848:1"
											},
											{
												"body": {
													"nativeSrc": "9812:1013:1",
													"nodeType": "YulBlock",
													"src": "9812:1013:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10007:20:1",
																"nodeType": "YulBlock",
																"src": "10007:20:1",
																"statements": [
																	{
																		"nativeSrc": "10009:10:1",
																		"nodeType": "YulAssignment",
																		"src": "10009:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10018:1:1",
																			"nodeType": "YulLiteral",
																			"src": "10018:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10009:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "10009:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10020:5:1",
																		"nodeType": "YulLeave",
																		"src": "10020:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9997:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "9997:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9990:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9990:6:1"
																},
																"nativeSrc": "9990:16:1",
																"nodeType": "YulFunctionCall",
																"src": "9990:16:1"
															},
															"nativeSrc": "9987:40:1",
															"nodeType": "YulIf",
															"src": "9987:40:1"
														},
														{
															"body": {
																"nativeSrc": "10052:20:1",
																"nodeType": "YulBlock",
																"src": "10052:20:1",
																"statements": [
																	{
																		"nativeSrc": "10054:10:1",
																		"nodeType": "YulAssignment",
																		"src": "10054:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10063:1:1",
																			"nodeType": "YulLiteral",
																			"src": "10063:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10054:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "10054:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10065:5:1",
																		"nodeType": "YulLeave",
																		"src": "10065:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10046:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10046:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10039:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10039:6:1"
																},
																"nativeSrc": "10039:12:1",
																"nodeType": "YulFunctionCall",
																"src": "10039:12:1"
															},
															"nativeSrc": "10036:36:1",
															"nodeType": "YulIf",
															"src": "10036:36:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10182:20:1",
																		"nodeType": "YulBlock",
																		"src": "10182:20:1",
																		"statements": [
																			{
																				"nativeSrc": "10184:10:1",
																				"nodeType": "YulAssignment",
																				"src": "10184:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10193:1:1",
																					"nodeType": "YulLiteral",
																					"src": "10193:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10184:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "10184:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10195:5:1",
																				"nodeType": "YulLeave",
																				"src": "10195:5:1"
																			}
																		]
																	},
																	"nativeSrc": "10175:27:1",
																	"nodeType": "YulCase",
																	"src": "10175:27:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10180:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10180:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10226:176:1",
																		"nodeType": "YulBlock",
																		"src": "10226:176:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "10261:22:1",
																					"nodeType": "YulBlock",
																					"src": "10261:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10263:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "10263:16:1"
																								},
																								"nativeSrc": "10263:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "10263:18:1"
																							},
																							"nativeSrc": "10263:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "10263:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "10246:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "10246:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10256:3:1",
																							"nodeType": "YulLiteral",
																							"src": "10256:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10243:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "10243:2:1"
																					},
																					"nativeSrc": "10243:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "10243:17:1"
																				},
																				"nativeSrc": "10240:43:1",
																				"nodeType": "YulIf",
																				"src": "10240:43:1"
																			},
																			{
																				"nativeSrc": "10296:25:1",
																				"nodeType": "YulAssignment",
																				"src": "10296:25:1",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10309:1:1",
																							"nodeType": "YulLiteral",
																							"src": "10309:1:1",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "10312:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "10312:8:1"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "10305:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "10305:3:1"
																					},
																					"nativeSrc": "10305:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "10305:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10296:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "10296:5:1"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10352:22:1",
																					"nodeType": "YulBlock",
																					"src": "10352:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10354:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "10354:16:1"
																								},
																								"nativeSrc": "10354:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "10354:18:1"
																							},
																							"nativeSrc": "10354:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "10354:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "10340:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "10340:5:1"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "10347:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "10347:3:1"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10337:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "10337:2:1"
																					},
																					"nativeSrc": "10337:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "10337:14:1"
																				},
																				"nativeSrc": "10334:40:1",
																				"nodeType": "YulIf",
																				"src": "10334:40:1"
																			},
																			{
																				"nativeSrc": "10387:5:1",
																				"nodeType": "YulLeave",
																				"src": "10387:5:1"
																			}
																		]
																	},
																	"nativeSrc": "10211:191:1",
																	"nodeType": "YulCase",
																	"src": "10211:191:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10216:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10216:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "10132:4:1",
																"nodeType": "YulIdentifier",
																"src": "10132:4:1"
															},
															"nativeSrc": "10125:277:1",
															"nodeType": "YulSwitch",
															"src": "10125:277:1"
														},
														{
															"body": {
																"nativeSrc": "10534:123:1",
																"nodeType": "YulBlock",
																"src": "10534:123:1",
																"statements": [
																	{
																		"nativeSrc": "10548:28:1",
																		"nodeType": "YulAssignment",
																		"src": "10548:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10561:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "10561:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "10567:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "10567:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "10557:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "10557:3:1"
																			},
																			"nativeSrc": "10557:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10557:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10548:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "10548:5:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "10607:22:1",
																			"nodeType": "YulBlock",
																			"src": "10607:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "10609:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "10609:16:1"
																						},
																						"nativeSrc": "10609:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "10609:18:1"
																					},
																					"nativeSrc": "10609:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "10609:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "10595:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "10595:5:1"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "10602:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10602:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10592:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "10592:2:1"
																			},
																			"nativeSrc": "10592:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10592:14:1"
																		},
																		"nativeSrc": "10589:40:1",
																		"nodeType": "YulIf",
																		"src": "10589:40:1"
																	},
																	{
																		"nativeSrc": "10642:5:1",
																		"nodeType": "YulLeave",
																		"src": "10642:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10437:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "10437:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10443:2:1",
																						"nodeType": "YulLiteral",
																						"src": "10443:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10434:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "10434:2:1"
																				},
																				"nativeSrc": "10434:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10434:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10451:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "10451:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10461:2:1",
																						"nodeType": "YulLiteral",
																						"src": "10461:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10448:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "10448:2:1"
																				},
																				"nativeSrc": "10448:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10448:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10430:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10430:3:1"
																		},
																		"nativeSrc": "10430:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10430:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10486:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "10486:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10492:3:1",
																						"nodeType": "YulLiteral",
																						"src": "10492:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10483:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "10483:2:1"
																				},
																				"nativeSrc": "10483:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10483:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10501:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "10501:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10511:2:1",
																						"nodeType": "YulLiteral",
																						"src": "10511:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10498:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "10498:2:1"
																				},
																				"nativeSrc": "10498:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10498:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10479:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10479:3:1"
																		},
																		"nativeSrc": "10479:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10479:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10414:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10414:2:1"
																},
																"nativeSrc": "10414:111:1",
																"nodeType": "YulFunctionCall",
																"src": "10414:111:1"
															},
															"nativeSrc": "10411:246:1",
															"nodeType": "YulIf",
															"src": "10411:246:1"
														},
														{
															"nativeSrc": "10667:57:1",
															"nodeType": "YulAssignment",
															"src": "10667:57:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10701:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10701:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10704:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10704:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10710:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "10710:8:1"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "10720:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10720:3:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "10682:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "10682:18:1"
																},
																"nativeSrc": "10682:42:1",
																"nodeType": "YulFunctionCall",
																"src": "10682:42:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10667:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "10667:5:1"
																},
																{
																	"name": "base",
																	"nativeSrc": "10674:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10674:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10763:22:1",
																"nodeType": "YulBlock",
																"src": "10763:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10765:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "10765:16:1"
																			},
																			"nativeSrc": "10765:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10765:18:1"
																		},
																		"nativeSrc": "10765:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10765:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10740:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "10740:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "10751:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "10751:3:1"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "10756:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "10756:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "10747:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10747:3:1"
																		},
																		"nativeSrc": "10747:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10747:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10737:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10737:2:1"
																},
																"nativeSrc": "10737:25:1",
																"nodeType": "YulFunctionCall",
																"src": "10737:25:1"
															},
															"nativeSrc": "10734:51:1",
															"nodeType": "YulIf",
															"src": "10734:51:1"
														},
														{
															"nativeSrc": "10794:25:1",
															"nodeType": "YulAssignment",
															"src": "10794:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10807:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "10807:5:1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10814:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10814:4:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10803:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10803:3:1"
																},
																"nativeSrc": "10803:16:1",
																"nodeType": "YulFunctionCall",
																"src": "10803:16:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10794:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "10794:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "9752:1073:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9782:4:1",
														"nodeType": "YulTypedName",
														"src": "9782:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9788:8:1",
														"nodeType": "YulTypedName",
														"src": "9788:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9798:3:1",
														"nodeType": "YulTypedName",
														"src": "9798:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9806:5:1",
														"nodeType": "YulTypedName",
														"src": "9806:5:1",
														"type": ""
													}
												],
												"src": "9752:1073:1"
											},
											{
												"body": {
													"nativeSrc": "10896:218:1",
													"nodeType": "YulBlock",
													"src": "10896:218:1",
													"statements": [
														{
															"nativeSrc": "10906:31:1",
															"nodeType": "YulAssignment",
															"src": "10906:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10932:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10932:4:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10914:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10914:17:1"
																},
																"nativeSrc": "10914:23:1",
																"nodeType": "YulFunctionCall",
																"src": "10914:23:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10906:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10906:4:1"
																}
															]
														},
														{
															"nativeSrc": "10946:38:1",
															"nodeType": "YulAssignment",
															"src": "10946:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10975:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "10975:8:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nativeSrc": "10958:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "10958:16:1"
																},
																"nativeSrc": "10958:26:1",
																"nodeType": "YulFunctionCall",
																"src": "10958:26:1"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "10946:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "10946:8:1"
																}
															]
														},
														{
															"nativeSrc": "10994:113:1",
															"nodeType": "YulAssignment",
															"src": "10994:113:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11024:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11024:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11030:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "11030:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11040:66:1",
																		"nodeType": "YulLiteral",
																		"src": "11040:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "11003:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "11003:20:1"
																},
																"nativeSrc": "11003:104:1",
																"nodeType": "YulFunctionCall",
																"src": "11003:104:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10994:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "10994:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint32",
												"nativeSrc": "10831:283:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10871:4:1",
														"nodeType": "YulTypedName",
														"src": "10871:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10877:8:1",
														"nodeType": "YulTypedName",
														"src": "10877:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10890:5:1",
														"nodeType": "YulTypedName",
														"src": "10890:5:1",
														"type": ""
													}
												],
												"src": "10831:283:1"
											},
											{
												"body": {
													"nativeSrc": "11165:149:1",
													"nodeType": "YulBlock",
													"src": "11165:149:1",
													"statements": [
														{
															"nativeSrc": "11175:25:1",
															"nodeType": "YulAssignment",
															"src": "11175:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11198:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11198:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11180:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11180:17:1"
																},
																"nativeSrc": "11180:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11180:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11175:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11175:1:1"
																}
															]
														},
														{
															"nativeSrc": "11209:25:1",
															"nodeType": "YulAssignment",
															"src": "11209:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11232:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11232:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11214:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11214:17:1"
																},
																"nativeSrc": "11214:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11214:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11209:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11209:1:1"
																}
															]
														},
														{
															"nativeSrc": "11243:17:1",
															"nodeType": "YulAssignment",
															"src": "11243:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11255:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11255:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11258:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11258:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11251:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11251:3:1"
																},
																"nativeSrc": "11251:9:1",
																"nodeType": "YulFunctionCall",
																"src": "11251:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11243:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11243:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11285:22:1",
																"nodeType": "YulBlock",
																"src": "11285:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11287:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11287:16:1"
																			},
																			"nativeSrc": "11287:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11287:18:1"
																		},
																		"nativeSrc": "11287:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11287:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11276:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11276:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11282:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11282:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11273:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11273:2:1"
																},
																"nativeSrc": "11273:11:1",
																"nodeType": "YulFunctionCall",
																"src": "11273:11:1"
															},
															"nativeSrc": "11270:37:1",
															"nodeType": "YulIf",
															"src": "11270:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11120:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11151:1:1",
														"nodeType": "YulTypedName",
														"src": "11151:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11154:1:1",
														"nodeType": "YulTypedName",
														"src": "11154:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11160:4:1",
														"nodeType": "YulTypedName",
														"src": "11160:4:1",
														"type": ""
													}
												],
												"src": "11120:194:1"
											},
											{
												"body": {
													"nativeSrc": "11368:362:1",
													"nodeType": "YulBlock",
													"src": "11368:362:1",
													"statements": [
														{
															"nativeSrc": "11378:25:1",
															"nodeType": "YulAssignment",
															"src": "11378:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11401:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11401:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11383:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11383:17:1"
																},
																"nativeSrc": "11383:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11383:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11378:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11378:1:1"
																}
															]
														},
														{
															"nativeSrc": "11412:25:1",
															"nodeType": "YulAssignment",
															"src": "11412:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11435:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11435:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11417:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11417:17:1"
																},
																"nativeSrc": "11417:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11417:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11412:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11412:1:1"
																}
															]
														},
														{
															"nativeSrc": "11446:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11446:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11469:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11469:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11472:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11472:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11465:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11465:3:1"
																},
																"nativeSrc": "11465:9:1",
																"nodeType": "YulFunctionCall",
																"src": "11465:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11450:11:1",
																	"nodeType": "YulTypedName",
																	"src": "11450:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11483:41:1",
															"nodeType": "YulAssignment",
															"src": "11483:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11512:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "11512:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11494:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11494:17:1"
																},
																"nativeSrc": "11494:30:1",
																"nodeType": "YulFunctionCall",
																"src": "11494:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11483:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "11483:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11701:22:1",
																"nodeType": "YulBlock",
																"src": "11701:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11703:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11703:16:1"
																			},
																			"nativeSrc": "11703:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11703:18:1"
																		},
																		"nativeSrc": "11703:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11703:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11634:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "11634:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11627:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "11627:6:1"
																				},
																				"nativeSrc": "11627:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11627:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11657:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "11657:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11664:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "11664:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11673:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "11673:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11660:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "11660:3:1"
																						},
																						"nativeSrc": "11660:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "11660:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11654:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "11654:2:1"
																				},
																				"nativeSrc": "11654:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11654:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11607:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "11607:2:1"
																		},
																		"nativeSrc": "11607:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11607:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11587:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11587:6:1"
																},
																"nativeSrc": "11587:113:1",
																"nodeType": "YulFunctionCall",
																"src": "11587:113:1"
															},
															"nativeSrc": "11584:139:1",
															"nodeType": "YulIf",
															"src": "11584:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11320:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11351:1:1",
														"nodeType": "YulTypedName",
														"src": "11351:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11354:1:1",
														"nodeType": "YulTypedName",
														"src": "11354:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11360:7:1",
														"nodeType": "YulTypedName",
														"src": "11360:7:1",
														"type": ""
													}
												],
												"src": "11320:410:1"
											},
											{
												"body": {
													"nativeSrc": "11764:152:1",
													"nodeType": "YulBlock",
													"src": "11764:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11781:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11781:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11784:77:1",
																		"nodeType": "YulLiteral",
																		"src": "11784:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11774:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11774:6:1"
																},
																"nativeSrc": "11774:88:1",
																"nodeType": "YulFunctionCall",
																"src": "11774:88:1"
															},
															"nativeSrc": "11774:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "11774:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11878:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11878:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11881:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11881:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11871:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11871:6:1"
																},
																"nativeSrc": "11871:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11871:15:1"
															},
															"nativeSrc": "11871:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11871:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11902:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11902:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11905:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11905:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11895:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11895:6:1"
																},
																"nativeSrc": "11895:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11895:15:1"
															},
															"nativeSrc": "11895:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11895:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11736:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "11736:180:1"
											},
											{
												"body": {
													"nativeSrc": "11964:143:1",
													"nodeType": "YulBlock",
													"src": "11964:143:1",
													"statements": [
														{
															"nativeSrc": "11974:25:1",
															"nodeType": "YulAssignment",
															"src": "11974:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11997:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11997:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11979:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11979:17:1"
																},
																"nativeSrc": "11979:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11979:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11974:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11974:1:1"
																}
															]
														},
														{
															"nativeSrc": "12008:25:1",
															"nodeType": "YulAssignment",
															"src": "12008:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12031:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12031:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12013:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "12013:17:1"
																},
																"nativeSrc": "12013:20:1",
																"nodeType": "YulFunctionCall",
																"src": "12013:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12008:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "12008:1:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12055:22:1",
																"nodeType": "YulBlock",
																"src": "12055:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12057:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "12057:16:1"
																			},
																			"nativeSrc": "12057:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12057:18:1"
																		},
																		"nativeSrc": "12057:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12057:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12052:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12052:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12045:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12045:6:1"
																},
																"nativeSrc": "12045:9:1",
																"nodeType": "YulFunctionCall",
																"src": "12045:9:1"
															},
															"nativeSrc": "12042:35:1",
															"nodeType": "YulIf",
															"src": "12042:35:1"
														},
														{
															"nativeSrc": "12087:14:1",
															"nodeType": "YulAssignment",
															"src": "12087:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12096:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12096:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12099:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12099:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12092:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12092:3:1"
																},
																"nativeSrc": "12092:9:1",
																"nodeType": "YulFunctionCall",
																"src": "12092:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12087:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "12087:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11922:185:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11953:1:1",
														"nodeType": "YulTypedName",
														"src": "11953:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11956:1:1",
														"nodeType": "YulTypedName",
														"src": "11956:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11962:1:1",
														"nodeType": "YulTypedName",
														"src": "11962:1:1",
														"type": ""
													}
												],
												"src": "11922:185:1"
											},
											{
												"body": {
													"nativeSrc": "12157:147:1",
													"nodeType": "YulBlock",
													"src": "12157:147:1",
													"statements": [
														{
															"nativeSrc": "12167:25:1",
															"nodeType": "YulAssignment",
															"src": "12167:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12190:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12190:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12172:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "12172:17:1"
																},
																"nativeSrc": "12172:20:1",
																"nodeType": "YulFunctionCall",
																"src": "12172:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12167:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "12167:1:1"
																}
															]
														},
														{
															"nativeSrc": "12201:25:1",
															"nodeType": "YulAssignment",
															"src": "12201:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12224:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12224:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12206:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "12206:17:1"
																},
																"nativeSrc": "12206:20:1",
																"nodeType": "YulFunctionCall",
																"src": "12206:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12201:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "12201:1:1"
																}
															]
														},
														{
															"nativeSrc": "12235:16:1",
															"nodeType": "YulAssignment",
															"src": "12235:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12246:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12246:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12249:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12249:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12242:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12242:3:1"
																},
																"nativeSrc": "12242:9:1",
																"nodeType": "YulFunctionCall",
																"src": "12242:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12235:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12235:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12275:22:1",
																"nodeType": "YulBlock",
																"src": "12275:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12277:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "12277:16:1"
																			},
																			"nativeSrc": "12277:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12277:18:1"
																		},
																		"nativeSrc": "12277:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12277:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12267:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12267:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12270:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12270:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12264:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12264:2:1"
																},
																"nativeSrc": "12264:10:1",
																"nodeType": "YulFunctionCall",
																"src": "12264:10:1"
															},
															"nativeSrc": "12261:36:1",
															"nodeType": "YulIf",
															"src": "12261:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12113:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12144:1:1",
														"nodeType": "YulTypedName",
														"src": "12144:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12147:1:1",
														"nodeType": "YulTypedName",
														"src": "12147:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12153:3:1",
														"nodeType": "YulTypedName",
														"src": "12153:3:1",
														"type": ""
													}
												],
												"src": "12113:191:1"
											},
											{
												"body": {
													"nativeSrc": "12352:133:1",
													"nodeType": "YulBlock",
													"src": "12352:133:1",
													"statements": [
														{
															"nativeSrc": "12362:32:1",
															"nodeType": "YulAssignment",
															"src": "12362:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12388:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12388:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nativeSrc": "12371:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "12371:16:1"
																},
																"nativeSrc": "12371:23:1",
																"nodeType": "YulFunctionCall",
																"src": "12371:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12362:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12362:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12428:22:1",
																"nodeType": "YulBlock",
																"src": "12428:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12430:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "12430:16:1"
																			},
																			"nativeSrc": "12430:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12430:18:1"
																		},
																		"nativeSrc": "12430:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12430:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12409:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12409:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12416:10:1",
																		"nodeType": "YulLiteral",
																		"src": "12416:10:1",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12406:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12406:2:1"
																},
																"nativeSrc": "12406:21:1",
																"nodeType": "YulFunctionCall",
																"src": "12406:21:1"
															},
															"nativeSrc": "12403:47:1",
															"nodeType": "YulIf",
															"src": "12403:47:1"
														},
														{
															"nativeSrc": "12459:20:1",
															"nodeType": "YulAssignment",
															"src": "12459:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12470:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12470:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12477:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12477:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12466:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12466:3:1"
																},
																"nativeSrc": "12466:13:1",
																"nodeType": "YulFunctionCall",
																"src": "12466:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12459:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12459:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint32",
												"nativeSrc": "12310:175:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12338:5:1",
														"nodeType": "YulTypedName",
														"src": "12338:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12348:3:1",
														"nodeType": "YulTypedName",
														"src": "12348:3:1",
														"type": ""
													}
												],
												"src": "12310:175:1"
											},
											{
												"body": {
													"nativeSrc": "12617:206:1",
													"nodeType": "YulBlock",
													"src": "12617:206:1",
													"statements": [
														{
															"nativeSrc": "12627:26:1",
															"nodeType": "YulAssignment",
															"src": "12627:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12639:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12639:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12650:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12650:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12635:3:1"
																},
																"nativeSrc": "12635:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12635:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12627:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12627:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12707:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12707:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12720:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12720:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12731:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12731:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12716:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12716:3:1"
																		},
																		"nativeSrc": "12716:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12716:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12663:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12663:43:1"
																},
																"nativeSrc": "12663:71:1",
																"nodeType": "YulFunctionCall",
																"src": "12663:71:1"
															},
															"nativeSrc": "12663:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "12663:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12788:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12788:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12801:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12801:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12812:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12812:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12797:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12797:3:1"
																		},
																		"nativeSrc": "12797:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12797:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12744:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12744:43:1"
																},
																"nativeSrc": "12744:72:1",
																"nodeType": "YulFunctionCall",
																"src": "12744:72:1"
															},
															"nativeSrc": "12744:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "12744:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12491:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12581:9:1",
														"nodeType": "YulTypedName",
														"src": "12581:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12593:6:1",
														"nodeType": "YulTypedName",
														"src": "12593:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12601:6:1",
														"nodeType": "YulTypedName",
														"src": "12601:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12612:4:1",
														"nodeType": "YulTypedName",
														"src": "12612:4:1",
														"type": ""
													}
												],
												"src": "12491:332:1"
											},
											{
												"body": {
													"nativeSrc": "12955:206:1",
													"nodeType": "YulBlock",
													"src": "12955:206:1",
													"statements": [
														{
															"nativeSrc": "12965:26:1",
															"nodeType": "YulAssignment",
															"src": "12965:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12977:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12977:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12988:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12988:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12973:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12973:3:1"
																},
																"nativeSrc": "12973:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12973:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12965:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12965:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13045:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13045:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13058:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13058:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13069:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13069:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13054:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13054:3:1"
																		},
																		"nativeSrc": "13054:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13054:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13001:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13001:43:1"
																},
																"nativeSrc": "13001:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13001:71:1"
															},
															"nativeSrc": "13001:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13001:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13126:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13126:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13139:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13139:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13150:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13150:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13135:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13135:3:1"
																		},
																		"nativeSrc": "13135:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13135:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13082:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13082:43:1"
																},
																"nativeSrc": "13082:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13082:72:1"
															},
															"nativeSrc": "13082:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13082:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12829:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12919:9:1",
														"nodeType": "YulTypedName",
														"src": "12919:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12931:6:1",
														"nodeType": "YulTypedName",
														"src": "12931:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12939:6:1",
														"nodeType": "YulTypedName",
														"src": "12939:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12950:4:1",
														"nodeType": "YulTypedName",
														"src": "12950:4:1",
														"type": ""
													}
												],
												"src": "12829:332:1"
											},
											{
												"body": {
													"nativeSrc": "13209:48:1",
													"nodeType": "YulBlock",
													"src": "13209:48:1",
													"statements": [
														{
															"nativeSrc": "13219:32:1",
															"nodeType": "YulAssignment",
															"src": "13219:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13244:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "13244:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "13237:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "13237:6:1"
																		},
																		"nativeSrc": "13237:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13237:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13230:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13230:6:1"
																},
																"nativeSrc": "13230:21:1",
																"nodeType": "YulFunctionCall",
																"src": "13230:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13219:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "13219:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "13167:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13191:5:1",
														"nodeType": "YulTypedName",
														"src": "13191:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13201:7:1",
														"nodeType": "YulTypedName",
														"src": "13201:7:1",
														"type": ""
													}
												],
												"src": "13167:90:1"
											},
											{
												"body": {
													"nativeSrc": "13303:76:1",
													"nodeType": "YulBlock",
													"src": "13303:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "13357:16:1",
																"nodeType": "YulBlock",
																"src": "13357:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13366:1:1",
																					"nodeType": "YulLiteral",
																					"src": "13366:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13369:1:1",
																					"nodeType": "YulLiteral",
																					"src": "13369:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13359:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13359:6:1"
																			},
																			"nativeSrc": "13359:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13359:12:1"
																		},
																		"nativeSrc": "13359:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13359:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13326:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "13326:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13348:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "13348:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "13333:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "13333:14:1"
																				},
																				"nativeSrc": "13333:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "13333:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13323:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "13323:2:1"
																		},
																		"nativeSrc": "13323:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13323:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13316:6:1"
																},
																"nativeSrc": "13316:40:1",
																"nodeType": "YulFunctionCall",
																"src": "13316:40:1"
															},
															"nativeSrc": "13313:60:1",
															"nodeType": "YulIf",
															"src": "13313:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13263:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13296:5:1",
														"nodeType": "YulTypedName",
														"src": "13296:5:1",
														"type": ""
													}
												],
												"src": "13263:116:1"
											},
											{
												"body": {
													"nativeSrc": "13445:77:1",
													"nodeType": "YulBlock",
													"src": "13445:77:1",
													"statements": [
														{
															"nativeSrc": "13455:22:1",
															"nodeType": "YulAssignment",
															"src": "13455:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13470:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13470:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13464:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "13464:5:1"
																},
																"nativeSrc": "13464:13:1",
																"nodeType": "YulFunctionCall",
																"src": "13464:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13455:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "13455:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13510:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "13510:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13486:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "13486:23:1"
																},
																"nativeSrc": "13486:30:1",
																"nodeType": "YulFunctionCall",
																"src": "13486:30:1"
															},
															"nativeSrc": "13486:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "13486:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "13385:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13423:6:1",
														"nodeType": "YulTypedName",
														"src": "13423:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13431:3:1",
														"nodeType": "YulTypedName",
														"src": "13431:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13439:5:1",
														"nodeType": "YulTypedName",
														"src": "13439:5:1",
														"type": ""
													}
												],
												"src": "13385:137:1"
											},
											{
												"body": {
													"nativeSrc": "13602:271:1",
													"nodeType": "YulBlock",
													"src": "13602:271:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "13648:83:1",
																"nodeType": "YulBlock",
																"src": "13648:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13650:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "13650:77:1"
																			},
																			"nativeSrc": "13650:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13650:79:1"
																		},
																		"nativeSrc": "13650:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13650:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13623:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13623:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13632:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13632:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13619:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13619:3:1"
																		},
																		"nativeSrc": "13619:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13619:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13644:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13644:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13615:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13615:3:1"
																},
																"nativeSrc": "13615:32:1",
																"nodeType": "YulFunctionCall",
																"src": "13615:32:1"
															},
															"nativeSrc": "13612:119:1",
															"nodeType": "YulIf",
															"src": "13612:119:1"
														},
														{
															"nativeSrc": "13741:125:1",
															"nodeType": "YulBlock",
															"src": "13741:125:1",
															"statements": [
																{
																	"nativeSrc": "13756:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13756:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13770:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13770:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13760:6:1",
																			"nodeType": "YulTypedName",
																			"src": "13760:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13785:71:1",
																	"nodeType": "YulAssignment",
																	"src": "13785:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13828:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "13828:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13839:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "13839:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13824:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "13824:3:1"
																				},
																				"nativeSrc": "13824:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "13824:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13848:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13848:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "13795:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "13795:28:1"
																		},
																		"nativeSrc": "13795:61:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13795:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13785:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "13785:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "13528:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13572:9:1",
														"nodeType": "YulTypedName",
														"src": "13572:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13583:7:1",
														"nodeType": "YulTypedName",
														"src": "13583:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13595:6:1",
														"nodeType": "YulTypedName",
														"src": "13595:6:1",
														"type": ""
													}
												],
												"src": "13528:345:1"
											},
											{
												"body": {
													"nativeSrc": "13923:156:1",
													"nodeType": "YulBlock",
													"src": "13923:156:1",
													"statements": [
														{
															"nativeSrc": "13933:24:1",
															"nodeType": "YulAssignment",
															"src": "13933:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13955:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13955:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nativeSrc": "13938:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "13938:16:1"
																},
																"nativeSrc": "13938:19:1",
																"nodeType": "YulFunctionCall",
																"src": "13938:19:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13933:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "13933:1:1"
																}
															]
														},
														{
															"nativeSrc": "13966:24:1",
															"nodeType": "YulAssignment",
															"src": "13966:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13988:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13988:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nativeSrc": "13971:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "13971:16:1"
																},
																"nativeSrc": "13971:19:1",
																"nodeType": "YulFunctionCall",
																"src": "13971:19:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13966:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "13966:1:1"
																}
															]
														},
														{
															"nativeSrc": "13999:17:1",
															"nodeType": "YulAssignment",
															"src": "13999:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14011:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14011:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14014:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "14014:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14007:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14007:3:1"
																},
																"nativeSrc": "14007:9:1",
																"nodeType": "YulFunctionCall",
																"src": "14007:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "13999:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13999:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14050:22:1",
																"nodeType": "YulBlock",
																"src": "14050:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14052:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "14052:16:1"
																			},
																			"nativeSrc": "14052:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14052:18:1"
																		},
																		"nativeSrc": "14052:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "14052:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14032:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "14032:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14038:10:1",
																		"nodeType": "YulLiteral",
																		"src": "14038:10:1",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14029:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "14029:2:1"
																},
																"nativeSrc": "14029:20:1",
																"nodeType": "YulFunctionCall",
																"src": "14029:20:1"
															},
															"nativeSrc": "14026:46:1",
															"nodeType": "YulIf",
															"src": "14026:46:1"
														}
													]
												},
												"name": "checked_sub_t_uint32",
												"nativeSrc": "13879:200:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13909:1:1",
														"nodeType": "YulTypedName",
														"src": "13909:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13912:1:1",
														"nodeType": "YulTypedName",
														"src": "13912:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13918:4:1",
														"nodeType": "YulTypedName",
														"src": "13918:4:1",
														"type": ""
													}
												],
												"src": "13879:200:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct IFomo3d.HistoryInfo -> struct IFomo3d.HistoryInfo\n    function abi_encode_t_struct$_HistoryInfo_$147_memory_ptr_to_t_struct$_HistoryInfo_$147_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // value\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_HistoryInfo_$147_memory_ptr__to_t_struct$_HistoryInfo_$147_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_struct$_HistoryInfo_$147_memory_ptr_to_t_struct$_HistoryInfo_$147_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Register_$775_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Register_$775_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Register_$775_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Register_$775__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Register_$775_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ERC20_$1381_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$1381_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$1381_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$1381__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$1381_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint32(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint32(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint32(value) -> ret {\n        value := cleanup_t_uint32(value)\n        if eq(value, 0xffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint32(x, y) -> diff {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffff) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610135575f3560e01c806376809ce3116100b6578063c884ef831161007a578063c884ef8314610351578063cdf033f314610381578063d4c3eea01461039f578063eb46260e146103bd578063eeda71d5146103ed578063f54f0a8d1461041d57610135565b806376809ce3146102975780637a19a488146102b55780638233fbcb146102d3578063a035b1fe14610303578063b9f0bf661461032157610135565b80631aa3a008116100fd5780631aa3a008146102035780633013ce2914610221578063480a42621461023f5780634e71d92d1461026f5780636d1c60411461027957610135565b806307040e91146101395780630efe6a8b146101695780631161e5821461018557806313da0777146101b55780631a39d8ef146101e5575b5f80fd5b610153600480360381019061014e9190611141565b61044f565b6040516101609190611203565b60405180910390f35b610183600480360381019061017e9190611270565b6104ee565b005b61019f600480360381019061019a91906112c0565b610a4a565b6040516101ac91906112fa565b60405180910390f35b6101cf60048036038101906101ca9190611313565b610a5f565b6040516101dc91906112fa565b60405180910390f35b6101ed610bbf565b6040516101fa91906112fa565b60405180910390f35b61020b610bc5565b60405161021891906113ac565b60405180910390f35b610229610bea565b60405161023691906113e5565b60405180910390f35b610259600480360381019061025491906112c0565b610c0d565b60405161026691906112fa565b60405180910390f35b610277610c1e565b005b610281610dd3565b60405161028e919061140d565b60405180910390f35b61029f610e1e565b6040516102ac919061140d565b60405180910390f35b6102bd610e33565b6040516102ca91906112fa565b60405180910390f35b6102ed60048036038101906102e891906112c0565b610e39565b6040516102fa91906112fa565b60405180910390f35b61030b610e92565b60405161031891906112fa565b60405180910390f35b61033b600480360381019061033691906112c0565b610e98565b60405161034891906112fa565b60405180910390f35b61036b600480360381019061036691906112c0565b610ead565b60405161037891906112fa565b60405180910390f35b610389610ec2565b604051610396919061140d565b60405180910390f35b6103a7610ed7565b6040516103b491906112fa565b60405180910390f35b6103d760048036038101906103d291906112c0565b610edd565b6040516103e491906112fa565b60405180910390f35b610407600480360381019061040291906112c0565b610f23565b60405161041491906112fa565b60405180910390f35b61043760048036038101906104329190611141565b610f38565b60405161044693929190611435565b60405180910390f35b6104576110d0565b60065f8363ffffffff1663ffffffff1681526020019081526020015f206040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250509050919050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312d9a6ad60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f46f16c26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610595573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b9919061149d565b336040518363ffffffff1660e01b81526004016105d79291906114d7565b5f6040518083038186803b1580156105ed575f80fd5b505afa1580156105ff573d5f803e3d5ffd5b505050505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610668576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f82036106a1576040517faa7feadc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81036106da576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b5f9054906101000a900463ffffffff16600a6106f8919061165a565b60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600a5461074391906116a4565b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461078b91906116d7565b6107959190611745565b60045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107e09190611775565b925050819055508160095f8282546107f89190611775565b92505081905550600a5460035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461088f9190611775565b925050819055508060085f8282546108a79190611775565b92505081905550600854600b5f9054906101000a900463ffffffff16600a6108cf919061165a565b836108da91906116d7565b6108e49190611745565b600a5f8282546108f49190611775565b9250508190555060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281525060065f60075f9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015590505060075f81819054906101000a900463ffffffff16809291906109d6906117a8565b91906101000a81548163ffffffff021916908363ffffffff160217905550508273ffffffffffffffffffffffffffffffffffffffff167f0f0d29b5d4cebe99e2c93ffec39876a8b37c77ba767270f4f489daede43aea4e8383604051610a3d9291906117d3565b60405180910390a2505050565b6004602052805f5260405f205f915090505481565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ac5576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8260025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b0f9190611775565b90505f83600854610b209190611775565b03610b2e575f915050610bb9565b5f83600854610b3d9190611775565b600b5f9054906101000a900463ffffffff16600a610b5b919061165a565b83610b6691906116d7565b610b709190611745565b9050600b5f9054906101000a900463ffffffff16600a610b90919061165a565b600a600c54610b9f9190611745565b82610baa91906116d7565b610bb49190611745565b925050505b92915050565b60085481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610c1782610f7d565b9050919050565b5f3390505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c87576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610c9182610f7d565b90505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610ced9291906117fa565b6020604051808303815f875af1158015610d09573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d2d9190611856565b508060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d7a9190611775565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f3488c34059d2e654b3b166b5ec4ee17bbd37297b906d39c704104a7dc2459b3182604051610dc791906112fa565b60405180910390a25050565b5f8060075f9054906101000a900463ffffffff1663ffffffff1603610dfa575f9050610e1b565b600160075f9054906101000a900463ffffffff16610e189190611881565b90505b90565b600b5f9054906101000a900463ffffffff1681565b600a5481565b5f610e4382610f7d565b60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610e8b9190611775565b9050919050565b600c5481565b6002602052805f5260405f205f915090505481565b6005602052805f5260405f205f915090505481565b60075f9054906101000a900463ffffffff1681565b60095481565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6003602052805f5260405f205f915090505481565b6006602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600b5f9054906101000a900463ffffffff16600a610fda919061165a565b60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600a5461102591906116a4565b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461106d91906116d7565b6110779190611745565b60045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546110bf9190611775565b6110c991906116a4565b9050919050565b60405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81525090565b5f80fd5b5f63ffffffff82169050919050565b61112081611108565b811461112a575f80fd5b50565b5f8135905061113b81611117565b92915050565b5f6020828403121561115657611155611104565b5b5f6111638482850161112d565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111958261116c565b9050919050565b6111a58161118b565b82525050565b5f819050919050565b6111bd816111ab565b82525050565b606082015f8201516111d75f85018261119c565b5060208201516111ea60208501826111b4565b5060408201516111fd60408501826111b4565b50505050565b5f6060820190506112165f8301846111c3565b92915050565b6112258161118b565b811461122f575f80fd5b50565b5f813590506112408161121c565b92915050565b61124f816111ab565b8114611259575f80fd5b50565b5f8135905061126a81611246565b92915050565b5f805f6060848603121561128757611286611104565b5b5f61129486828701611232565b93505060206112a58682870161125c565b92505060406112b68682870161125c565b9150509250925092565b5f602082840312156112d5576112d4611104565b5b5f6112e284828501611232565b91505092915050565b6112f4816111ab565b82525050565b5f60208201905061130d5f8301846112eb565b92915050565b5f806040838503121561132957611328611104565b5b5f61133685828601611232565b92505060206113478582860161125c565b9150509250929050565b5f819050919050565b5f61137461136f61136a8461116c565b611351565b61116c565b9050919050565b5f6113858261135a565b9050919050565b5f6113968261137b565b9050919050565b6113a68161138c565b82525050565b5f6020820190506113bf5f83018461139d565b92915050565b5f6113cf8261137b565b9050919050565b6113df816113c5565b82525050565b5f6020820190506113f85f8301846113d6565b92915050565b61140781611108565b82525050565b5f6020820190506114205f8301846113fe565b92915050565b61142f8161118b565b82525050565b5f6060820190506114485f830186611426565b61145560208301856112eb565b61146260408301846112eb565b949350505050565b5f819050919050565b61147c8161146a565b8114611486575f80fd5b50565b5f8151905061149781611473565b92915050565b5f602082840312156114b2576114b1611104565b5b5f6114bf84828501611489565b91505092915050565b6114d18161146a565b82525050565b5f6040820190506114ea5f8301856114c8565b6114f76020830184611426565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156115805780860481111561155c5761155b6114fe565b5b600185161561156b5780820291505b80810290506115798561152b565b9450611540565b94509492505050565b5f826115985760019050611653565b816115a5575f9050611653565b81600181146115bb57600281146115c5576115f4565b6001915050611653565b60ff8411156115d7576115d66114fe565b5b8360020a9150848211156115ee576115ed6114fe565b5b50611653565b5060208310610133831016604e8410600b84101617156116295782820a905083811115611624576116236114fe565b5b611653565b6116368484846001611537565b9250905081840481111561164d5761164c6114fe565b5b81810290505b9392505050565b5f611664826111ab565b915061166f83611108565b925061169c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611589565b905092915050565b5f6116ae826111ab565b91506116b9836111ab565b92508282039050818111156116d1576116d06114fe565b5b92915050565b5f6116e1826111ab565b91506116ec836111ab565b92508282026116fa816111ab565b91508282048414831517611711576117106114fe565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61174f826111ab565b915061175a836111ab565b92508261176a57611769611718565b5b828204905092915050565b5f61177f826111ab565b915061178a836111ab565b92508282019050808211156117a2576117a16114fe565b5b92915050565b5f6117b282611108565b915063ffffffff82036117c8576117c76114fe565b5b600182019050919050565b5f6040820190506117e65f8301856112eb565b6117f360208301846112eb565b9392505050565b5f60408201905061180d5f830185611426565b61181a60208301846112eb565b9392505050565b5f8115159050919050565b61183581611821565b811461183f575f80fd5b50565b5f815190506118508161182c565b92915050565b5f6020828403121561186b5761186a611104565b5b5f61187884828501611842565b91505092915050565b5f61188b82611108565b915061189683611108565b9250828203905063ffffffff8111156118b2576118b16114fe565b5b9291505056fea26469706673582212200aa0bb092fda1cb136c30cea76c85ee779b4fd8225b48a493eef573f6fd02b2564736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76809CE3 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC884EF83 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xCDF033F3 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xD4C3EEA0 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xEB46260E EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xEEDA71D5 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF54F0A8D EQ PUSH2 0x41D JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x76809CE3 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x7A19A488 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x8233FBCB EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xB9F0BF66 EQ PUSH2 0x321 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1AA3A008 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x480A4262 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x6D1C6041 EQ PUSH2 0x279 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x7040E91 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xEFE6A8B EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x1161E582 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x13DA0777 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x1E5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1270 JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0xC1E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30B PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x437 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x446 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12D9A6AD PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF46F16C2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D7 SWAP3 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SUB PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA7FEADC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xA SLOAD PUSH2 0x743 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x78B SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x795 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST DUP4 PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x7 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x9D6 SWAP1 PUSH2 0x17A8 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF0D29B5D4CEBE99E2C93FFEC39876A8B37C77BA767270F4F489DAEDE43AEA4E DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA3D SWAP3 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x8 SLOAD PUSH2 0xB20 SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SUB PUSH2 0xB2E JUMPI PUSH0 SWAP2 POP POP PUSH2 0xBB9 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x8 SLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0xB5B SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST DUP4 PUSH2 0xB66 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0xB70 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0xB90 SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH1 0xA PUSH1 0xC SLOAD PUSH2 0xB9F SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST DUP3 PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0xBB4 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xC17 DUP3 PUSH2 0xF7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC87 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xC91 DUP3 PUSH2 0xF7D JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCED SWAP3 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD09 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x1856 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD7A SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3488C34059D2E654B3B166B5EC4EE17BBD37297B906D39C704104A7DC2459B31 DUP3 PUSH1 0x40 MLOAD PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SUB PUSH2 0xDFA JUMPI PUSH0 SWAP1 POP PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x1881 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xE43 DUP3 PUSH2 0xF7D JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xE8B SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA PUSH2 0xFDA SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xA SLOAD PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x106D SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x1077 SWAP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x10BF SWAP2 SWAP1 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x10C9 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1120 DUP2 PUSH2 0x1108 JUMP JUMPDEST DUP2 EQ PUSH2 0x112A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x113B DUP2 PUSH2 0x1117 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1156 JUMPI PUSH2 0x1155 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1163 DUP5 DUP3 DUP6 ADD PUSH2 0x112D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1195 DUP3 PUSH2 0x116C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A5 DUP2 PUSH2 0x118B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11BD DUP2 PUSH2 0x11AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x11D7 PUSH0 DUP6 ADD DUP3 PUSH2 0x119C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x11EA PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x11B4 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x11FD PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x11B4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1216 PUSH0 DUP4 ADD DUP5 PUSH2 0x11C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1225 DUP2 PUSH2 0x118B JUMP JUMPDEST DUP2 EQ PUSH2 0x122F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1240 DUP2 PUSH2 0x121C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x124F DUP2 PUSH2 0x11AB JUMP JUMPDEST DUP2 EQ PUSH2 0x1259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x126A DUP2 PUSH2 0x1246 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1294 DUP7 DUP3 DUP8 ADD PUSH2 0x1232 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12A5 DUP7 DUP3 DUP8 ADD PUSH2 0x125C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12B6 DUP7 DUP3 DUP8 ADD PUSH2 0x125C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D5 JUMPI PUSH2 0x12D4 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12E2 DUP5 DUP3 DUP6 ADD PUSH2 0x1232 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F4 DUP2 PUSH2 0x11AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x130D PUSH0 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1329 JUMPI PUSH2 0x1328 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1336 DUP6 DUP3 DUP7 ADD PUSH2 0x1232 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1347 DUP6 DUP3 DUP7 ADD PUSH2 0x125C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1374 PUSH2 0x136F PUSH2 0x136A DUP5 PUSH2 0x116C JUMP JUMPDEST PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x116C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1385 DUP3 PUSH2 0x135A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1396 DUP3 PUSH2 0x137B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A6 DUP2 PUSH2 0x138C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BF PUSH0 DUP4 ADD DUP5 PUSH2 0x139D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13CF DUP3 PUSH2 0x137B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13DF DUP2 PUSH2 0x13C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F8 PUSH0 DUP4 ADD DUP5 PUSH2 0x13D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1407 DUP2 PUSH2 0x1108 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1420 PUSH0 DUP4 ADD DUP5 PUSH2 0x13FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x142F DUP2 PUSH2 0x118B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1448 PUSH0 DUP4 ADD DUP7 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x1455 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0x1462 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147C DUP2 PUSH2 0x146A JUMP JUMPDEST DUP2 EQ PUSH2 0x1486 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1497 DUP2 PUSH2 0x1473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14BF DUP5 DUP3 DUP6 ADD PUSH2 0x1489 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x146A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14EA PUSH0 DUP4 ADD DUP6 PUSH2 0x14C8 JUMP JUMPDEST PUSH2 0x14F7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1426 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1580 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x155C JUMPI PUSH2 0x155B PUSH2 0x14FE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x156B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1579 DUP6 PUSH2 0x152B JUMP JUMPDEST SWAP5 POP PUSH2 0x1540 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1598 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1653 JUMP JUMPDEST DUP2 PUSH2 0x15A5 JUMPI PUSH0 SWAP1 POP PUSH2 0x1653 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x15BB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x15C5 JUMPI PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1653 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x15D7 JUMPI PUSH2 0x15D6 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x15EE JUMPI PUSH2 0x15ED PUSH2 0x14FE JUMP JUMPDEST JUMPDEST POP PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1629 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1624 JUMPI PUSH2 0x1623 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST PUSH2 0x1653 JUMP JUMPDEST PUSH2 0x1636 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1537 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x164D JUMPI PUSH2 0x164C PUSH2 0x14FE JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1664 DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x166F DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP3 POP PUSH2 0x169C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16AE DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x16B9 DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x16D1 JUMPI PUSH2 0x16D0 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16E1 DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x16EC DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x16FA DUP2 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1711 JUMPI PUSH2 0x1710 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x174F DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x175A DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x176A JUMPI PUSH2 0x1769 PUSH2 0x1718 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x177F DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x178A DUP4 PUSH2 0x11AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17A2 JUMPI PUSH2 0x17A1 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17B2 DUP3 PUSH2 0x1108 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x17C8 JUMPI PUSH2 0x17C7 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17E6 PUSH0 DUP4 ADD DUP6 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0x17F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x180D PUSH0 DUP4 ADD DUP6 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x181A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1835 DUP2 PUSH2 0x1821 JUMP JUMPDEST DUP2 EQ PUSH2 0x183F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1850 DUP2 PUSH2 0x182C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186B JUMPI PUSH2 0x186A PUSH2 0x1104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1878 DUP5 DUP3 DUP6 ADD PUSH2 0x1842 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x188B DUP3 PUSH2 0x1108 JUMP JUMPDEST SWAP2 POP PUSH2 0x1896 DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B2 JUMPI PUSH2 0x18B1 PUSH2 0x14FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP LOG0 0xBB MULMOD 0x2F 0xDA SHR 0xB1 CALLDATASIZE 0xC3 0xC 0xEA PUSH23 0xC85EE779B4FD8225B48A493EEF573F6FD02B2564736F6C PUSH4 0x43000817 STOP CALLER ",
							"sourceMap": "37317:3441:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40434:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38264:761;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;37506:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;39386:381;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37693:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37381:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37350:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;39799:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;39062:291;;;:::i;:::-;;40254:148;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37791:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37756:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;40087:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37818:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37412:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37555:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37661:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37725:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;39945:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37460:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37604:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;40434:120;40492:18;;:::i;:::-;40528:11;:19;40540:6;40528:19;;;;;;;;;;;;;;;40521:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40434:120;;;:::o;38264:761::-;38356:8;;;;;;;;;;;:18;;;38375:8;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;38394:10;38356:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38435:1;38418:19;;:5;:19;;;38415:47;;38446:16;;;;;;;;;;;;;;38415:47;38485:1;38475:6;:11;38472:37;;38495:14;;;;;;;;;;;;;;38472:37;38533:1;38522:7;:12;38519:39;;38543:15;;;;;;;;;;;;;;38519:39;38647:7;;;;;;;;;;;38643:2;:11;;;;:::i;:::-;38628:4;:11;38633:5;38628:11;;;;;;;;;;;;;;;;38613:14;;:26;;;;:::i;:::-;38596:6;:13;38603:5;38596:13;;;;;;;;;;;;;;;;:44;;;;:::i;:::-;38595:60;;;;:::i;:::-;38577:7;:14;38585:5;38577:14;;;;;;;;;;;;;;;;:78;;;;;;;:::i;:::-;;;;;;;;38679:6;38665:10;;:20;;;;;;;:::i;:::-;;;;;;;;38709:14;;38695:4;:11;38700:5;38695:11;;;;;;;;;;;;;;;:28;;;;38750:7;38733:6;:13;38740:5;38733:13;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;38782:7;38767:11;;:22;;;;;;;:::i;:::-;;;;;;;;38839:11;;38830:7;;;;;;;;;;;38826:2;:11;;;;:::i;:::-;38818:6;:20;;;;:::i;:::-;:32;;;;:::i;:::-;38799:14;;:52;;;;;;;:::i;:::-;;;;;;;;38889:53;;;;;;;;38901:5;38889:53;;;;;;38916:6;38889:53;;;;38933:7;38889:53;;;38861:11;:25;38873:12;;;;;;;;;;;38861:25;;;;;;;;;;;;;;;:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38952:12;;:14;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;38995:5;38981:37;;;39002:6;39010:7;38981:37;;;;;;;:::i;:::-;;;;;;;;38264:761;;;:::o;37506:43::-;;;;;;;;;;;;;;;;;:::o;39386:381::-;39461:13;39505:1;39488:19;;:5;:19;;;39485:47;;39516:16;;;;;;;;;;;;;;39485:47;39542:18;39579:7;39563:6;:13;39570:5;39563:13;;;;;;;;;;;;;;;;:23;;;;:::i;:::-;39542:44;;39622:1;39611:7;39599:11;;:19;;;;:::i;:::-;:24;39596:37;;39632:1;39625:8;;;;;39596:37;39643:13;39699:7;39687:11;;:19;;;;:::i;:::-;39676:7;;;;;;;;;;;39672:2;:11;;;;:::i;:::-;39660:10;:24;;;;:::i;:::-;39659:48;;;;:::i;:::-;39643:64;;39752:7;;;;;;;;;;;39748:2;:11;;;;:::i;:::-;39741:2;39735:5;;:8;;;;:::i;:::-;39726:5;:18;;;;:::i;:::-;39725:35;;;;:::i;:::-;39717:43;;;;39386:381;;;;;:::o;37693:26::-;;;;:::o;37381:24::-;;;;;;;;;;;;;:::o;37350:25::-;;;;;;;;;;;;:::o;39799:114::-;39857:13;39888:18;39900:5;39888:11;:18::i;:::-;39881:25;;39799:114;;;:::o;39062:291::-;39097:13;39113:10;39097:26;;39153:1;39136:19;;:5;:19;;;39133:47;;39164:16;;;;;;;;;;;;;;39133:47;39190:14;39207:18;39219:5;39207:11;:18::i;:::-;39190:35;;39235:12;;;;;;;;;;:21;;;39257:5;39264:6;39235:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;39299:6;39281:7;:14;39289:5;39281:14;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;39332:5;39320:26;;;39339:6;39320:26;;;;;;:::i;:::-;;;;;;;;39087:266;;39062:291::o;40254:148::-;40311:12;40353:1;40337:12;;;;;;;;;;;:17;;;40334:30;;40363:1;40356:8;;;;40334:30;40394:1;40381:12;;;;;;;;;;;:14;;;;:::i;:::-;40374:21;;40254:148;;:::o;37791:21::-;;;;;;;;;;;;;:::o;37756:29::-;;;;:::o;40087:135::-;40149:13;40197:18;40209:5;40197:11;:18::i;:::-;40180:7;:14;40188:5;40180:14;;;;;;;;;;;;;;;;:35;;;;:::i;:::-;40173:42;;40087:135;;;:::o;37818:20::-;;;;:::o;37412:42::-;;;;;;;;;;;;;;;;;:::o;37555:43::-;;;;;;;;;;;;;;;;;:::o;37661:26::-;;;;;;;;;;;;;:::o;37725:25::-;;;;:::o;39945:110::-;40003:13;40034:7;:14;40042:5;40034:14;;;;;;;;;;;;;;;;40027:21;;39945:110;;;:::o;37460:40::-;;;;;;;;;;;;;;;;;:::o;37604:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;40564:191::-;40623:13;40734:7;:14;40742:5;40734:14;;;;;;;;;;;;;;;;40723:7;;;;;;;;;;;40719:2;:11;;;;:::i;:::-;40704:4;:11;40709:5;40704:11;;;;;;;;;;;;;;;;40689:14;;:26;;;;:::i;:::-;40672:6;:13;40679:5;40672:13;;;;;;;;;;;;;;;;:44;;;;:::i;:::-;40671:60;;;;:::i;:::-;40654:7;:14;40662:5;40654:14;;;;;;;;;;;;;;;;:77;;;;:::i;:::-;:94;;;;:::i;:::-;40647:101;;40564:191;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:137::-;604:5;642:6;629:20;620:29;;658:32;684:5;658:32;:::i;:::-;559:137;;;;:::o;702:327::-;760:6;809:2;797:9;788:7;784:23;780:32;777:119;;;815:79;;:::i;:::-;777:119;935:1;960:52;1004:7;995:6;984:9;980:22;960:52;:::i;:::-;950:62;;906:116;702:327;;;;:::o;1035:126::-;1072:7;1112:42;1105:5;1101:54;1090:65;;1035:126;;;:::o;1167:96::-;1204:7;1233:24;1251:5;1233:24;:::i;:::-;1222:35;;1167:96;;;:::o;1269:108::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1269:108;;:::o;1383:77::-;1420:7;1449:5;1438:16;;1383:77;;;:::o;1466:108::-;1543:24;1561:5;1543:24;:::i;:::-;1538:3;1531:37;1466:108;;:::o;1644:690::-;1797:4;1792:3;1788:14;1884:4;1877:5;1873:16;1867:23;1903:63;1960:4;1955:3;1951:14;1937:12;1903:63;:::i;:::-;1812:164;2059:4;2052:5;2048:16;2042:23;2078:63;2135:4;2130:3;2126:14;2112:12;2078:63;:::i;:::-;1986:165;2235:4;2228:5;2224:16;2218:23;2254:63;2311:4;2306:3;2302:14;2288:12;2254:63;:::i;:::-;2161:166;1766:568;1644:690;;:::o;2340:334::-;2489:4;2527:2;2516:9;2512:18;2504:26;;2540:127;2664:1;2653:9;2649:17;2640:6;2540:127;:::i;:::-;2340:334;;;;:::o;2680:122::-;2753:24;2771:5;2753:24;:::i;:::-;2746:5;2743:35;2733:63;;2792:1;2789;2782:12;2733:63;2680:122;:::o;2808:139::-;2854:5;2892:6;2879:20;2870:29;;2908:33;2935:5;2908:33;:::i;:::-;2808:139;;;;:::o;2953:122::-;3026:24;3044:5;3026:24;:::i;:::-;3019:5;3016:35;3006:63;;3065:1;3062;3055:12;3006:63;2953:122;:::o;3081:139::-;3127:5;3165:6;3152:20;3143:29;;3181:33;3208:5;3181:33;:::i;:::-;3081:139;;;;:::o;3226:619::-;3303:6;3311;3319;3368:2;3356:9;3347:7;3343:23;3339:32;3336:119;;;3374:79;;:::i;:::-;3336:119;3494:1;3519:53;3564:7;3555:6;3544:9;3540:22;3519:53;:::i;:::-;3509:63;;3465:117;3621:2;3647:53;3692:7;3683:6;3672:9;3668:22;3647:53;:::i;:::-;3637:63;;3592:118;3749:2;3775:53;3820:7;3811:6;3800:9;3796:22;3775:53;:::i;:::-;3765:63;;3720:118;3226:619;;;;;:::o;3851:329::-;3910:6;3959:2;3947:9;3938:7;3934:23;3930:32;3927:119;;;3965:79;;:::i;:::-;3927:119;4085:1;4110:53;4155:7;4146:6;4135:9;4131:22;4110:53;:::i;:::-;4100:63;;4056:117;3851:329;;;;:::o;4186:118::-;4273:24;4291:5;4273:24;:::i;:::-;4268:3;4261:37;4186:118;;:::o;4310:222::-;4403:4;4441:2;4430:9;4426:18;4418:26;;4454:71;4522:1;4511:9;4507:17;4498:6;4454:71;:::i;:::-;4310:222;;;;:::o;4538:474::-;4606:6;4614;4663:2;4651:9;4642:7;4638:23;4634:32;4631:119;;;4669:79;;:::i;:::-;4631:119;4789:1;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4760:117;4916:2;4942:53;4987:7;4978:6;4967:9;4963:22;4942:53;:::i;:::-;4932:63;;4887:118;4538:474;;;;;:::o;5018:60::-;5046:3;5067:5;5060:12;;5018:60;;;:::o;5084:142::-;5134:9;5167:53;5185:34;5194:24;5212:5;5194:24;:::i;:::-;5185:34;:::i;:::-;5167:53;:::i;:::-;5154:66;;5084:142;;;:::o;5232:126::-;5282:9;5315:37;5346:5;5315:37;:::i;:::-;5302:50;;5232:126;;;:::o;5364:142::-;5430:9;5463:37;5494:5;5463:37;:::i;:::-;5450:50;;5364:142;;;:::o;5512:163::-;5615:53;5662:5;5615:53;:::i;:::-;5610:3;5603:66;5512:163;;:::o;5681:254::-;5790:4;5828:2;5817:9;5813:18;5805:26;;5841:87;5925:1;5914:9;5910:17;5901:6;5841:87;:::i;:::-;5681:254;;;;:::o;5941:140::-;6005:9;6038:37;6069:5;6038:37;:::i;:::-;6025:50;;5941:140;;;:::o;6087:159::-;6188:51;6233:5;6188:51;:::i;:::-;6183:3;6176:64;6087:159;;:::o;6252:250::-;6359:4;6397:2;6386:9;6382:18;6374:26;;6410:85;6492:1;6481:9;6477:17;6468:6;6410:85;:::i;:::-;6252:250;;;;:::o;6508:115::-;6593:23;6610:5;6593:23;:::i;:::-;6588:3;6581:36;6508:115;;:::o;6629:218::-;6720:4;6758:2;6747:9;6743:18;6735:26;;6771:69;6837:1;6826:9;6822:17;6813:6;6771:69;:::i;:::-;6629:218;;;;:::o;6853:118::-;6940:24;6958:5;6940:24;:::i;:::-;6935:3;6928:37;6853:118;;:::o;6977:442::-;7126:4;7164:2;7153:9;7149:18;7141:26;;7177:71;7245:1;7234:9;7230:17;7221:6;7177:71;:::i;:::-;7258:72;7326:2;7315:9;7311:18;7302:6;7258:72;:::i;:::-;7340;7408:2;7397:9;7393:18;7384:6;7340:72;:::i;:::-;6977:442;;;;;;:::o;7425:77::-;7462:7;7491:5;7480:16;;7425:77;;;:::o;7508:122::-;7581:24;7599:5;7581:24;:::i;:::-;7574:5;7571:35;7561:63;;7620:1;7617;7610:12;7561:63;7508:122;:::o;7636:143::-;7693:5;7724:6;7718:13;7709:22;;7740:33;7767:5;7740:33;:::i;:::-;7636:143;;;;:::o;7785:351::-;7855:6;7904:2;7892:9;7883:7;7879:23;7875:32;7872:119;;;7910:79;;:::i;:::-;7872:119;8030:1;8055:64;8111:7;8102:6;8091:9;8087:22;8055:64;:::i;:::-;8045:74;;8001:128;7785:351;;;;:::o;8142:118::-;8229:24;8247:5;8229:24;:::i;:::-;8224:3;8217:37;8142:118;;:::o;8266:332::-;8387:4;8425:2;8414:9;8410:18;8402:26;;8438:71;8506:1;8495:9;8491:17;8482:6;8438:71;:::i;:::-;8519:72;8587:2;8576:9;8572:18;8563:6;8519:72;:::i;:::-;8266:332;;;;;:::o;8604:180::-;8652:77;8649:1;8642:88;8749:4;8746:1;8739:15;8773:4;8770:1;8763:15;8790:102;8832:8;8879:5;8876:1;8872:13;8851:34;;8790:102;;;:::o;8898:848::-;8959:5;8966:4;8990:6;8981:15;;9014:5;9005:14;;9028:712;9049:1;9039:8;9036:15;9028:712;;;9144:4;9139:3;9135:14;9129:4;9126:24;9123:50;;;9153:18;;:::i;:::-;9123:50;9203:1;9193:8;9189:16;9186:451;;;9618:4;9611:5;9607:16;9598:25;;9186:451;9668:4;9662;9658:15;9650:23;;9698:32;9721:8;9698:32;:::i;:::-;9686:44;;9028:712;;;8898:848;;;;;;;:::o;9752:1073::-;9806:5;9997:8;9987:40;;10018:1;10009:10;;10020:5;;9987:40;10046:4;10036:36;;10063:1;10054:10;;10065:5;;10036:36;10132:4;10180:1;10175:27;;;;10216:1;10211:191;;;;10125:277;;10175:27;10193:1;10184:10;;10195:5;;;10211:191;10256:3;10246:8;10243:17;10240:43;;;10263:18;;:::i;:::-;10240:43;10312:8;10309:1;10305:16;10296:25;;10347:3;10340:5;10337:14;10334:40;;;10354:18;;:::i;:::-;10334:40;10387:5;;;10125:277;;10511:2;10501:8;10498:16;10492:3;10486:4;10483:13;10479:36;10461:2;10451:8;10448:16;10443:2;10437:4;10434:12;10430:35;10414:111;10411:246;;;10567:8;10561:4;10557:19;10548:28;;10602:3;10595:5;10592:14;10589:40;;;10609:18;;:::i;:::-;10589:40;10642:5;;10411:246;10682:42;10720:3;10710:8;10704:4;10701:1;10682:42;:::i;:::-;10667:57;;;;10756:4;10751:3;10747:14;10740:5;10737:25;10734:51;;;10765:18;;:::i;:::-;10734:51;10814:4;10807:5;10803:16;10794:25;;9752:1073;;;;;;:::o;10831:283::-;10890:5;10914:23;10932:4;10914:23;:::i;:::-;10906:31;;10958:26;10975:8;10958:26;:::i;:::-;10946:38;;11003:104;11040:66;11030:8;11024:4;11003:104;:::i;:::-;10994:113;;10831:283;;;;:::o;11120:194::-;11160:4;11180:20;11198:1;11180:20;:::i;:::-;11175:25;;11214:20;11232:1;11214:20;:::i;:::-;11209:25;;11258:1;11255;11251:9;11243:17;;11282:1;11276:4;11273:11;11270:37;;;11287:18;;:::i;:::-;11270:37;11120:194;;;;:::o;11320:410::-;11360:7;11383:20;11401:1;11383:20;:::i;:::-;11378:25;;11417:20;11435:1;11417:20;:::i;:::-;11412:25;;11472:1;11469;11465:9;11494:30;11512:11;11494:30;:::i;:::-;11483:41;;11673:1;11664:7;11660:15;11657:1;11654:22;11634:1;11627:9;11607:83;11584:139;;11703:18;;:::i;:::-;11584:139;11368:362;11320:410;;;;:::o;11736:180::-;11784:77;11781:1;11774:88;11881:4;11878:1;11871:15;11905:4;11902:1;11895:15;11922:185;11962:1;11979:20;11997:1;11979:20;:::i;:::-;11974:25;;12013:20;12031:1;12013:20;:::i;:::-;12008:25;;12052:1;12042:35;;12057:18;;:::i;:::-;12042:35;12099:1;12096;12092:9;12087:14;;11922:185;;;;:::o;12113:191::-;12153:3;12172:20;12190:1;12172:20;:::i;:::-;12167:25;;12206:20;12224:1;12206:20;:::i;:::-;12201:25;;12249:1;12246;12242:9;12235:16;;12270:3;12267:1;12264:10;12261:36;;;12277:18;;:::i;:::-;12261:36;12113:191;;;;:::o;12310:175::-;12348:3;12371:23;12388:5;12371:23;:::i;:::-;12362:32;;12416:10;12409:5;12406:21;12403:47;;12430:18;;:::i;:::-;12403:47;12477:1;12470:5;12466:13;12459:20;;12310:175;;;:::o;12491:332::-;12612:4;12650:2;12639:9;12635:18;12627:26;;12663:71;12731:1;12720:9;12716:17;12707:6;12663:71;:::i;:::-;12744:72;12812:2;12801:9;12797:18;12788:6;12744:72;:::i;:::-;12491:332;;;;;:::o;12829:::-;12950:4;12988:2;12977:9;12973:18;12965:26;;13001:71;13069:1;13058:9;13054:17;13045:6;13001:71;:::i;:::-;13082:72;13150:2;13139:9;13135:18;13126:6;13082:72;:::i;:::-;12829:332;;;;;:::o;13167:90::-;13201:7;13244:5;13237:13;13230:21;13219:32;;13167:90;;;:::o;13263:116::-;13333:21;13348:5;13333:21;:::i;:::-;13326:5;13323:32;13313:60;;13369:1;13366;13359:12;13313:60;13263:116;:::o;13385:137::-;13439:5;13470:6;13464:13;13455:22;;13486:30;13510:5;13486:30;:::i;:::-;13385:137;;;;:::o;13528:345::-;13595:6;13644:2;13632:9;13623:7;13619:23;13615:32;13612:119;;;13650:79;;:::i;:::-;13612:119;13770:1;13795:61;13848:7;13839:6;13828:9;13824:22;13795:61;:::i;:::-;13785:71;;13741:125;13528:345;;;;:::o;13879:200::-;13918:4;13938:19;13955:1;13938:19;:::i;:::-;13933:24;;13971:19;13988:1;13971:19;:::i;:::-;13966:24;;14014:1;14011;14007:9;13999:17;;14038:10;14032:4;14029:20;14026:46;;;14052:18;;:::i;:::-;14026:46;13879:200;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1276400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"amount(address)": "2913",
								"claim()": "infinite",
								"claimed(address)": "2824",
								"decimal()": "2489",
								"deposit(address,uint256,uint256)": "infinite",
								"getClaimed(address)": "2917",
								"getCurrentHistoryNonce()": "infinite",
								"getHistory(uint32)": "infinite",
								"getPredict(address,uint256)": "infinite",
								"getTotalProfit(address)": "infinite",
								"getUnclaim(address)": "infinite",
								"historyInfo(uint32)": "infinite",
								"historyNonce()": "2510",
								"mask(address)": "2912",
								"paymentToken()": "infinite",
								"price()": "2514",
								"register()": "infinite",
								"totalAmount()": "2537",
								"totalValue()": "2491",
								"unclaim(address)": "2870",
								"valuePerAmount()": "2470"
							},
							"internal": {
								"_getUnclaim(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 37317,
									"end": 40758,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 37317,
									"end": 40758,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37317,
									"end": 40758,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 37850,
									"end": 38231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37984,
									"end": 38001,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 37975,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37963,
									"end": 37975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 37963,
									"end": 38002,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38034,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38022,
									"end": 38034,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38034,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38034,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38034,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 38022,
									"end": 38034,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38034,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38034,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38034,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 38022,
									"end": 38034,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38043,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 38022,
									"end": 38043,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38043,
									"name": "PUSH",
									"source": 0,
									"value": "313CE567"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 38022,
									"end": 38045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 38022,
									"end": 38045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38019,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 38012,
									"end": 38019,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38012,
									"end": 38045,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38070,
									"end": 38071,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38055,
									"end": 38067,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 38055,
									"end": 38067,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38055,
									"end": 38071,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38178,
									"end": 38184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38170,
									"end": 38175,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 38170,
									"end": 38184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38170,
									"end": 38184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38170,
									"end": 38184,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38170,
									"end": 38184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38214,
									"end": 38223,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38194,
									"end": 38202,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38194,
									"end": 38202,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38194,
									"end": 38224,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 38231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37317,
									"end": 40758,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 37317,
									"end": 40758,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1874,
									"end": 1960,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1874,
									"end": 1960,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1916,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1953,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1942,
									"end": 1947,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1938,
									"end": 1954,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1927,
									"end": 1954,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1927,
									"end": 1954,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1874,
									"end": 1960,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1874,
									"end": 1960,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1874,
									"end": 1960,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1874,
									"end": 1960,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1966,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2037,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2053,
									"end": 2058,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2037,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2037,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2037,
									"end": 2059,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2037,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2030,
									"end": 2035,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2027,
									"end": 2060,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2074,
									"end": 2075,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2071,
									"end": 2072,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2064,
									"end": 2076,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 2084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2090,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2090,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2150,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2170,
									"end": 2183,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2161,
									"end": 2183,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2161,
									"end": 2183,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2192,
									"end": 2223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2217,
									"end": 2222,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2192,
									"end": 2223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2192,
									"end": 2223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2192,
									"end": 2223,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2192,
									"end": 2223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2090,
									"end": 2229,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2090,
									"end": 2229,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2090,
									"end": 2229,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2090,
									"end": 2229,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2090,
									"end": 2229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2235,
									"end": 2582,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2235,
									"end": 2582,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2303,
									"end": 2309,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2354,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2340,
									"end": 2349,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2331,
									"end": 2338,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2327,
									"end": 2350,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2323,
									"end": 2355,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 2320,
									"end": 2439,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2320,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2320,
									"end": 2439,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2358,
									"end": 2437,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2358,
									"end": 2437,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2358,
									"end": 2437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2358,
									"end": 2437,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2358,
									"end": 2437,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2320,
									"end": 2439,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2320,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2478,
									"end": 2479,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2503,
									"end": 2565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2557,
									"end": 2564,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2554,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2537,
									"end": 2546,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2533,
									"end": 2555,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2503,
									"end": 2565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2503,
									"end": 2565,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2503,
									"end": 2565,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2503,
									"end": 2565,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2493,
									"end": 2565,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2493,
									"end": 2565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2449,
									"end": 2575,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2235,
									"end": 2582,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2235,
									"end": 2582,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2235,
									"end": 2582,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2235,
									"end": 2582,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2235,
									"end": 2582,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 37317,
									"end": 40758,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 37317,
									"end": 40758,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37317,
									"end": 40758,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37317,
									"end": 40758,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37317,
									"end": 40758,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37317,
									"end": 40758,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37317,
									"end": 40758,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 37317,
									"end": 40758,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37317,
									"end": 40758,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200aa0bb092fda1cb136c30cea76c85ee779b4fd8225b48a493eef573f6fd02b2564736f6c63430008170033",
									".code": [
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "76809CE3"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "C884EF83"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "C884EF83"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "CDF033F3"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "D4C3EEA0"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "EB46260E"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "EEDA71D5"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "F54F0A8D"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "76809CE3"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "7A19A488"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "8233FBCB"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "A035B1FE"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "B9F0BF66"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "1AA3A008"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "1AA3A008"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "3013CE29"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "480A4262"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "4E71D92D"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "6D1C6041"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "7040E91"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "EFE6A8B"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "1161E582"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "13DA0777"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "1A39D8EF"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37317,
											"end": 40758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 40434,
											"end": 40554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 40434,
											"end": 40554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 40434,
											"end": 40554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 38264,
											"end": 39025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 38264,
											"end": 39025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 37506,
											"end": 37549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37506,
											"end": 37549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37506,
											"end": 37549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 39386,
											"end": 39767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 39386,
											"end": 39767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 39386,
											"end": 39767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 37693,
											"end": 37719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37693,
											"end": 37719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 37381,
											"end": 37405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 37381,
											"end": 37405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 37350,
											"end": 37375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 37350,
											"end": 37375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 39799,
											"end": 39913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 39799,
											"end": 39913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 39799,
											"end": 39913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 39062,
											"end": 39353,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 39062,
											"end": 39353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39062,
											"end": 39353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 39062,
											"end": 39353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 39062,
											"end": 39353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39062,
											"end": 39353,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 39062,
											"end": 39353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39062,
											"end": 39353,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 40254,
											"end": 40402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 40254,
											"end": 40402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 37791,
											"end": 37812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 37791,
											"end": 37812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 37756,
											"end": 37785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37756,
											"end": 37785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 40087,
											"end": 40222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 40087,
											"end": 40222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 40087,
											"end": 40222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37818,
											"end": 37838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37818,
											"end": 37838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 37412,
											"end": 37454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 37412,
											"end": 37454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37412,
											"end": 37454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 37555,
											"end": 37598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 37555,
											"end": 37598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37555,
											"end": 37598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 37661,
											"end": 37687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 37661,
											"end": 37687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 37725,
											"end": 37750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37725,
											"end": 37750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 39945,
											"end": 40055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 39945,
											"end": 40055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 39945,
											"end": 40055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 37460,
											"end": 37500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 37460,
											"end": 37500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37460,
											"end": 37500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 37604,
											"end": 37654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 37604,
											"end": 37654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 37604,
											"end": 37654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40492,
											"end": 40510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 40492,
											"end": 40510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 40492,
											"end": 40510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40492,
											"end": 40510,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 40492,
											"end": 40510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40528,
											"end": 40539,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40540,
											"end": 40546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40528,
											"end": 40547,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40521,
											"end": 40547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40434,
											"end": 40554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38356,
											"end": 38364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38356,
											"end": 38364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38364,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38356,
											"end": 38364,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38364,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38356,
											"end": 38364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38356,
											"end": 38374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38374,
											"name": "PUSH",
											"source": 0,
											"value": "12D9A6AD"
										},
										{
											"begin": 38375,
											"end": 38383,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38375,
											"end": 38383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38375,
											"end": 38383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38383,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38375,
											"end": 38383,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38383,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38375,
											"end": 38383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38375,
											"end": 38390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38390,
											"name": "PUSH",
											"source": 0,
											"value": "F46F16C2"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 38375,
											"end": 38392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 38375,
											"end": 38392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38394,
											"end": 38404,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 38356,
											"end": 38405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38356,
											"end": 38405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38435,
											"end": 38436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38418,
											"end": 38437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38418,
											"end": 38437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38418,
											"end": 38423,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38418,
											"end": 38437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38418,
											"end": 38437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38418,
											"end": 38437,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38415,
											"end": 38462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 38415,
											"end": 38462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "PUSH",
											"source": 0,
											"value": "E6C4247B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38415,
											"end": 38462,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 38415,
											"end": 38462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38485,
											"end": 38486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38475,
											"end": 38481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38475,
											"end": 38486,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 38472,
											"end": 38509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38495,
											"end": 38509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38495,
											"end": 38509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38495,
											"end": 38509,
											"name": "PUSH",
											"source": 0,
											"value": "AA7FEADC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38495,
											"end": 38509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38495,
											"end": 38509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38495,
											"end": 38509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38495,
											"end": 38509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38495,
											"end": 38509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38495,
											"end": 38509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38495,
											"end": 38509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38495,
											"end": 38509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38495,
											"end": 38509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38495,
											"end": 38509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38495,
											"end": 38509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38509,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 38472,
											"end": 38509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38533,
											"end": 38534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38522,
											"end": 38529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38522,
											"end": 38534,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38519,
											"end": 38558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 38519,
											"end": 38558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38543,
											"end": 38558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38543,
											"end": 38558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38543,
											"end": 38558,
											"name": "PUSH",
											"source": 0,
											"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38543,
											"end": 38558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38543,
											"end": 38558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38543,
											"end": 38558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38543,
											"end": 38558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38543,
											"end": 38558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38543,
											"end": 38558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38543,
											"end": 38558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38543,
											"end": 38558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38543,
											"end": 38558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38543,
											"end": 38558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38543,
											"end": 38558,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38519,
											"end": 38558,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 38519,
											"end": 38558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38647,
											"end": 38654,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 38647,
											"end": 38654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38647,
											"end": 38654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38647,
											"end": 38654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38647,
											"end": 38654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38647,
											"end": 38654,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38647,
											"end": 38654,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38647,
											"end": 38654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38647,
											"end": 38654,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38647,
											"end": 38654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38647,
											"end": 38654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38643,
											"end": 38645,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 38643,
											"end": 38654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 38643,
											"end": 38654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38643,
											"end": 38654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38643,
											"end": 38654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 38643,
											"end": 38654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38643,
											"end": 38654,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 38643,
											"end": 38654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38628,
											"end": 38632,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38633,
											"end": 38638,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38628,
											"end": 38639,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38613,
											"end": 38627,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 38613,
											"end": 38627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38613,
											"end": 38639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 38613,
											"end": 38639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38613,
											"end": 38639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38613,
											"end": 38639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 38613,
											"end": 38639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38613,
											"end": 38639,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 38613,
											"end": 38639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38602,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38603,
											"end": 38608,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 38596,
											"end": 38640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 38596,
											"end": 38640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38596,
											"end": 38640,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 38596,
											"end": 38640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38595,
											"end": 38655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 38595,
											"end": 38655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38595,
											"end": 38655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38595,
											"end": 38655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 38595,
											"end": 38655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38595,
											"end": 38655,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 38595,
											"end": 38655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38584,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38585,
											"end": 38590,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 38577,
											"end": 38655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38577,
											"end": 38655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38679,
											"end": 38685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38665,
											"end": 38675,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 38665,
											"end": 38675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 38665,
											"end": 38685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38665,
											"end": 38685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38709,
											"end": 38723,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 38709,
											"end": 38723,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38695,
											"end": 38699,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38700,
											"end": 38705,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38695,
											"end": 38706,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38695,
											"end": 38723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38695,
											"end": 38723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38695,
											"end": 38723,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38695,
											"end": 38723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38750,
											"end": 38757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38739,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38740,
											"end": 38745,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 38733,
											"end": 38757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38733,
											"end": 38757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38782,
											"end": 38789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38767,
											"end": 38778,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 38767,
											"end": 38778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 38767,
											"end": 38789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38767,
											"end": 38789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38839,
											"end": 38850,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 38839,
											"end": 38850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38830,
											"end": 38837,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 38830,
											"end": 38837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38830,
											"end": 38837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38830,
											"end": 38837,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38830,
											"end": 38837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38830,
											"end": 38837,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38830,
											"end": 38837,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38830,
											"end": 38837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38830,
											"end": 38837,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38830,
											"end": 38837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38830,
											"end": 38837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38826,
											"end": 38828,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 38826,
											"end": 38837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 38826,
											"end": 38837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38826,
											"end": 38837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38826,
											"end": 38837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 38826,
											"end": 38837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38826,
											"end": 38837,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 38826,
											"end": 38837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38818,
											"end": 38824,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38818,
											"end": 38838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 38818,
											"end": 38838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38818,
											"end": 38838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38818,
											"end": 38838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 38818,
											"end": 38838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38818,
											"end": 38838,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 38818,
											"end": 38838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38818,
											"end": 38850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 38818,
											"end": 38850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38818,
											"end": 38850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38818,
											"end": 38850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 38818,
											"end": 38850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38818,
											"end": 38850,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 38818,
											"end": 38850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38813,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 38799,
											"end": 38813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 38799,
											"end": 38851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38901,
											"end": 38906,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38916,
											"end": 38922,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38933,
											"end": 38940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38889,
											"end": 38942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38872,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38873,
											"end": 38885,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 38873,
											"end": 38885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38873,
											"end": 38885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38873,
											"end": 38885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38873,
											"end": 38885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38873,
											"end": 38885,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38873,
											"end": 38885,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38873,
											"end": 38885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38873,
											"end": 38885,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38873,
											"end": 38885,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38873,
											"end": 38885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38861,
											"end": 38886,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38964,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 38952,
											"end": 38964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 38952,
											"end": 38966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 38966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38995,
											"end": 39000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "PUSH",
											"source": 0,
											"value": "F0D29B5D4CEBE99E2C93FFEC39876A8B37C77BA767270F4F489DAEDE43AEA4E"
										},
										{
											"begin": 39002,
											"end": 39008,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39010,
											"end": 39017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 38981,
											"end": 39018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38981,
											"end": 39018,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38264,
											"end": 39025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37506,
											"end": 37549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39461,
											"end": 39474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39505,
											"end": 39506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39488,
											"end": 39507,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39488,
											"end": 39507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39488,
											"end": 39493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39488,
											"end": 39507,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39488,
											"end": 39507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39488,
											"end": 39507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39485,
											"end": 39532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 39485,
											"end": 39532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39516,
											"end": 39532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39516,
											"end": 39532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39516,
											"end": 39532,
											"name": "PUSH",
											"source": 0,
											"value": "E6C4247B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39516,
											"end": 39532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39516,
											"end": 39532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39516,
											"end": 39532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39516,
											"end": 39532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39516,
											"end": 39532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39516,
											"end": 39532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39516,
											"end": 39532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39516,
											"end": 39532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39516,
											"end": 39532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39516,
											"end": 39532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39516,
											"end": 39532,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39485,
											"end": 39532,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 39485,
											"end": 39532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39542,
											"end": 39560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39579,
											"end": 39586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39569,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39570,
											"end": 39575,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 39563,
											"end": 39586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 39563,
											"end": 39586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39563,
											"end": 39586,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 39563,
											"end": 39586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39542,
											"end": 39586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39542,
											"end": 39586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39622,
											"end": 39623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39611,
											"end": 39618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39610,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 39599,
											"end": 39610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 39599,
											"end": 39618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 39599,
											"end": 39618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39618,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 39599,
											"end": 39618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39623,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39596,
											"end": 39633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 39596,
											"end": 39633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39632,
											"end": 39633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39625,
											"end": 39633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39625,
											"end": 39633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39625,
											"end": 39633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39625,
											"end": 39633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 39625,
											"end": 39633,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39596,
											"end": 39633,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 39596,
											"end": 39633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39643,
											"end": 39656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39699,
											"end": 39706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39687,
											"end": 39698,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 39687,
											"end": 39698,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39687,
											"end": 39706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 39687,
											"end": 39706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39687,
											"end": 39706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39687,
											"end": 39706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 39687,
											"end": 39706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39687,
											"end": 39706,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 39687,
											"end": 39706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39676,
											"end": 39683,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 39676,
											"end": 39683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39676,
											"end": 39683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39676,
											"end": 39683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39676,
											"end": 39683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39676,
											"end": 39683,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39676,
											"end": 39683,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 39676,
											"end": 39683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39676,
											"end": 39683,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39676,
											"end": 39683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 39676,
											"end": 39683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39672,
											"end": 39674,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 39672,
											"end": 39683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 39672,
											"end": 39683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39672,
											"end": 39683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39672,
											"end": 39683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 39672,
											"end": 39683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39672,
											"end": 39683,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 39672,
											"end": 39683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39660,
											"end": 39670,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39660,
											"end": 39684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 39660,
											"end": 39684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39660,
											"end": 39684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39660,
											"end": 39684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 39660,
											"end": 39684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39660,
											"end": 39684,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 39660,
											"end": 39684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39659,
											"end": 39707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 39659,
											"end": 39707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39659,
											"end": 39707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39659,
											"end": 39707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 39659,
											"end": 39707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39659,
											"end": 39707,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 39659,
											"end": 39707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39643,
											"end": 39707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39643,
											"end": 39707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39752,
											"end": 39759,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 39752,
											"end": 39759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39752,
											"end": 39759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39752,
											"end": 39759,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39752,
											"end": 39759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39752,
											"end": 39759,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39752,
											"end": 39759,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 39752,
											"end": 39759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39752,
											"end": 39759,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39752,
											"end": 39759,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 39752,
											"end": 39759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39748,
											"end": 39750,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 39748,
											"end": 39759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 39748,
											"end": 39759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39748,
											"end": 39759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39748,
											"end": 39759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 39748,
											"end": 39759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39748,
											"end": 39759,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 39748,
											"end": 39759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39741,
											"end": 39743,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 39735,
											"end": 39740,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 39735,
											"end": 39740,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39735,
											"end": 39743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 39735,
											"end": 39743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39735,
											"end": 39743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39735,
											"end": 39743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 39735,
											"end": 39743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39735,
											"end": 39743,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 39735,
											"end": 39743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39726,
											"end": 39731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39726,
											"end": 39744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 39726,
											"end": 39744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39726,
											"end": 39744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39726,
											"end": 39744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 39726,
											"end": 39744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39726,
											"end": 39744,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 39726,
											"end": 39744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39725,
											"end": 39760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 39725,
											"end": 39760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39725,
											"end": 39760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39725,
											"end": 39760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 39725,
											"end": 39760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39725,
											"end": 39760,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 39725,
											"end": 39760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39717,
											"end": 39760,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39717,
											"end": 39760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39717,
											"end": 39760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39717,
											"end": 39760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39386,
											"end": 39767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37350,
											"end": 37375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39857,
											"end": 39870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39888,
											"end": 39906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 39900,
											"end": 39905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39888,
											"end": 39899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 39888,
											"end": 39906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39888,
											"end": 39906,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 39888,
											"end": 39906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39881,
											"end": 39906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39799,
											"end": 39913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39062,
											"end": 39353,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 39062,
											"end": 39353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39113,
											"end": 39123,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39153,
											"end": 39154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39136,
											"end": 39155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39136,
											"end": 39155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39136,
											"end": 39155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39133,
											"end": 39180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 39133,
											"end": 39180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39164,
											"end": 39180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39164,
											"end": 39180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39164,
											"end": 39180,
											"name": "PUSH",
											"source": 0,
											"value": "E6C4247B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39164,
											"end": 39180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39164,
											"end": 39180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39164,
											"end": 39180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39164,
											"end": 39180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39164,
											"end": 39180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39164,
											"end": 39180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39164,
											"end": 39180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39164,
											"end": 39180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39164,
											"end": 39180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39164,
											"end": 39180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39164,
											"end": 39180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39133,
											"end": 39180,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 39133,
											"end": 39180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39190,
											"end": 39204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39207,
											"end": 39225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 39219,
											"end": 39224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39207,
											"end": 39218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 39207,
											"end": 39225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39207,
											"end": 39225,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 39207,
											"end": 39225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39190,
											"end": 39225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39190,
											"end": 39225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39235,
											"end": 39247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39235,
											"end": 39247,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39235,
											"end": 39247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39235,
											"end": 39256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39256,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 39257,
											"end": 39262,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39264,
											"end": 39270,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 39235,
											"end": 39271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 39235,
											"end": 39271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39235,
											"end": 39271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39299,
											"end": 39305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39288,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39289,
											"end": 39294,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 39281,
											"end": 39305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39281,
											"end": 39305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39332,
											"end": 39337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "PUSH",
											"source": 0,
											"value": "3488C34059D2E654B3B166B5EC4EE17BBD37297B906D39C704104A7DC2459B31"
										},
										{
											"begin": 39339,
											"end": 39345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 39320,
											"end": 39346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39320,
											"end": 39346,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 39087,
											"end": 39353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39087,
											"end": 39353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39062,
											"end": 39353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40311,
											"end": 40323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40353,
											"end": 40354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40337,
											"end": 40349,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 40337,
											"end": 40349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40337,
											"end": 40349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40337,
											"end": 40349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40337,
											"end": 40349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40337,
											"end": 40349,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40337,
											"end": 40349,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 40337,
											"end": 40349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40337,
											"end": 40349,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40337,
											"end": 40349,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 40337,
											"end": 40349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40337,
											"end": 40354,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 40337,
											"end": 40354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40337,
											"end": 40354,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40334,
											"end": 40364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 40334,
											"end": 40364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40363,
											"end": 40364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40356,
											"end": 40364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40356,
											"end": 40364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40356,
											"end": 40364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 40356,
											"end": 40364,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40334,
											"end": 40364,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 40334,
											"end": 40364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40394,
											"end": 40395,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40381,
											"end": 40393,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 40381,
											"end": 40393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40381,
											"end": 40393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40381,
											"end": 40393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40381,
											"end": 40393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40381,
											"end": 40393,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40381,
											"end": 40393,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 40381,
											"end": 40393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40381,
											"end": 40393,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40381,
											"end": 40393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 40381,
											"end": 40393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40381,
											"end": 40395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 40381,
											"end": 40395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40381,
											"end": 40395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40381,
											"end": 40395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 40381,
											"end": 40395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40381,
											"end": 40395,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 40381,
											"end": 40395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40374,
											"end": 40395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40374,
											"end": 40395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40254,
											"end": 40402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37791,
											"end": 37812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37756,
											"end": 37785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40149,
											"end": 40162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40197,
											"end": 40215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 40209,
											"end": 40214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40197,
											"end": 40208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 40197,
											"end": 40215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40197,
											"end": 40215,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 40197,
											"end": 40215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40187,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40188,
											"end": 40193,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 40180,
											"end": 40215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 40180,
											"end": 40215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40180,
											"end": 40215,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 40180,
											"end": 40215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40173,
											"end": 40215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40173,
											"end": 40215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37818,
											"end": 37838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37412,
											"end": 37454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40003,
											"end": 40016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40034,
											"end": 40041,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40042,
											"end": 40047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40034,
											"end": 40048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40027,
											"end": 40048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40027,
											"end": 40048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 40055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37604,
											"end": 37654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40564,
											"end": 40755,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 40564,
											"end": 40755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40734,
											"end": 40741,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40742,
											"end": 40747,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40734,
											"end": 40748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40723,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 40723,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40723,
											"end": 40730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40723,
											"end": 40730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40723,
											"end": 40730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40723,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40723,
											"end": 40730,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 40723,
											"end": 40730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40723,
											"end": 40730,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40723,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 40723,
											"end": 40730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40719,
											"end": 40721,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 40719,
											"end": 40730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 40719,
											"end": 40730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40719,
											"end": 40730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40719,
											"end": 40730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 40719,
											"end": 40730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40719,
											"end": 40730,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 40719,
											"end": 40730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40704,
											"end": 40708,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40709,
											"end": 40714,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40704,
											"end": 40715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40689,
											"end": 40703,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 40689,
											"end": 40703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40689,
											"end": 40715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 40689,
											"end": 40715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40689,
											"end": 40715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40689,
											"end": 40715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 40689,
											"end": 40715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40689,
											"end": 40715,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 40689,
											"end": 40715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40678,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40679,
											"end": 40684,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 40672,
											"end": 40716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 40672,
											"end": 40716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40672,
											"end": 40716,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 40672,
											"end": 40716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40671,
											"end": 40731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 40671,
											"end": 40731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40671,
											"end": 40731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40671,
											"end": 40731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 40671,
											"end": 40731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40671,
											"end": 40731,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 40671,
											"end": 40731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40662,
											"end": 40667,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40668,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 40654,
											"end": 40731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 40654,
											"end": 40731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40731,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 40654,
											"end": 40731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 40654,
											"end": 40748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 40654,
											"end": 40748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40748,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 40654,
											"end": 40748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40647,
											"end": 40748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40647,
											"end": 40748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40564,
											"end": 40755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40564,
											"end": 40755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40564,
											"end": 40755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40564,
											"end": 40755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "110"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 427,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 334,
											"end": 427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 420,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 433,
											"end": 553,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 433,
											"end": 553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 505,
											"end": 528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 505,
											"end": 528,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 498,
											"end": 503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 495,
											"end": 529,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 485,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 533,
											"end": 545,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 485,
											"end": 547,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 433,
											"end": 553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 433,
											"end": 553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 559,
											"end": 696,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 559,
											"end": 696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 604,
											"end": 609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 629,
											"end": 649,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 620,
											"end": 649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 620,
											"end": 649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 684,
											"end": 689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 658,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 658,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 559,
											"end": 696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 760,
											"end": 766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 788,
											"end": 795,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 780,
											"end": 812,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 777,
											"end": 896,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 777,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 815,
											"end": 894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 777,
											"end": 896,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 1004,
											"end": 1011,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 960,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 906,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 702,
											"end": 1029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1155,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1263,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1167,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1233,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1257,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1233,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1377,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 1269,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1460,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 1383,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1574,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1466,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1561,
											"end": 1566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 1543,
											"end": 1567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 2334,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1644,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1801,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1792,
											"end": 1795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 1888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1890,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1960,
											"end": 1964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1958,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 1903,
											"end": 1966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1966,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1903,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2065,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2135,
											"end": 2139,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2130,
											"end": 2133,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 2078,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2141,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2078,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2311,
											"end": 2315,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2306,
											"end": 2309,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 2254,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2317,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2254,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 2334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 2334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 2334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 2334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2674,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2340,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2529,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2516,
											"end": 2525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2664,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2662,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2646,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2540,
											"end": 2667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2667,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2540,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2674,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2802,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2680,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2771,
											"end": 2776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2753,
											"end": 2777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2777,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2753,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2733,
											"end": 2796,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2790,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2794,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2796,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2733,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2947,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2808,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2899,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2935,
											"end": 2940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2908,
											"end": 2941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2941,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2908,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2947,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3075,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2953,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3044,
											"end": 3049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3026,
											"end": 3050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3051,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3006,
											"end": 3069,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3067,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3069,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3006,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3171,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3152,
											"end": 3172,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3208,
											"end": 3213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 3181,
											"end": 3214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3214,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3181,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3845,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3226,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3370,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3356,
											"end": 3365,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3354,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3371,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3336,
											"end": 3455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3374,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 3374,
											"end": 3453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3453,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3374,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3455,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3336,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3553,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 3519,
											"end": 3572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3572,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3519,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3572,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3623,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3647,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3692,
											"end": 3699,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3681,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3690,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3647,
											"end": 3700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3700,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3647,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3700,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3751,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3775,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3809,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3775,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3828,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3775,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3828,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 4180,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3851,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 3961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 3956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3945,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3957,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3962,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3927,
											"end": 4046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3965,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 3965,
											"end": 4044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4044,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3965,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4046,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3927,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4085,
											"end": 4086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4155,
											"end": 4162,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4144,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4110,
											"end": 4163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4163,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4110,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4100,
											"end": 4163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4100,
											"end": 4163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 4180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 4180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 4180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 4180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 4180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4304,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4186,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4291,
											"end": 4296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 4273,
											"end": 4297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4297,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4273,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4532,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4310,
											"end": 4532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4443,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4430,
											"end": 4439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4426,
											"end": 4444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4522,
											"end": 4523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4511,
											"end": 4520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4507,
											"end": 4524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4454,
											"end": 4525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4525,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4454,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4532,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 5012,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4538,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 4620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4663,
											"end": 4665,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4651,
											"end": 4660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4649,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4666,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 4750,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4631,
											"end": 4750,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4669,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4669,
											"end": 4748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4748,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4669,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 4750,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4631,
											"end": 4750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4760,
											"end": 4877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4918,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4987,
											"end": 4994,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4978,
											"end": 4984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4976,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4942,
											"end": 4995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 5005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 5012,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 5012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 5012,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 5012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 5012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 5012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5078,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5018,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5067,
											"end": 5072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5084,
											"end": 5226,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 5084,
											"end": 5226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5194,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5212,
											"end": 5217,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 5194,
											"end": 5218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5218,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5194,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5185,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 5167,
											"end": 5220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5220,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5167,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5084,
											"end": 5226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5084,
											"end": 5226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5084,
											"end": 5226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5084,
											"end": 5226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5358,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 5232,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5315,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 5315,
											"end": 5352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5352,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5315,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5506,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 5364,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5463,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 5494,
											"end": 5499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 5463,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5500,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 5463,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5675,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5512,
											"end": 5675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 5662,
											"end": 5667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 5615,
											"end": 5668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5668,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 5615,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5603,
											"end": 5669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5681,
											"end": 5935,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5681,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5790,
											"end": 5794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5830,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5817,
											"end": 5826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5805,
											"end": 5831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5805,
											"end": 5831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5841,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 5925,
											"end": 5926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5923,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5910,
											"end": 5927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5901,
											"end": 5907,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5841,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5841,
											"end": 5928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5841,
											"end": 5928,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 5841,
											"end": 5928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5681,
											"end": 5935,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5681,
											"end": 5935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5681,
											"end": 5935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5681,
											"end": 5935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5681,
											"end": 5935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6081,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 5941,
											"end": 6081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6005,
											"end": 6014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6069,
											"end": 6074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6038,
											"end": 6075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6075,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6038,
											"end": 6075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6246,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6087,
											"end": 6246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 6233,
											"end": 6238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6188,
											"end": 6239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6239,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 6188,
											"end": 6239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6183,
											"end": 6186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6176,
											"end": 6240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6502,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 6252,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6359,
											"end": 6363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6399,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6386,
											"end": 6395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6410,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6492,
											"end": 6493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6481,
											"end": 6490,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6468,
											"end": 6474,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6410,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6410,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6410,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6410,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6502,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6508,
											"end": 6623,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6508,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 6616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 6610,
											"end": 6615,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 6616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6593,
											"end": 6616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 6616,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 6593,
											"end": 6616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6508,
											"end": 6623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6508,
											"end": 6623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6508,
											"end": 6623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6847,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6629,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6758,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6747,
											"end": 6756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6735,
											"end": 6761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6735,
											"end": 6761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 6837,
											"end": 6838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6822,
											"end": 6839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6813,
											"end": 6819,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6771,
											"end": 6840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6840,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 6771,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6847,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6971,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6853,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6940,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6958,
											"end": 6963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6940,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 6940,
											"end": 6964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6940,
											"end": 6964,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6940,
											"end": 6964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6935,
											"end": 6938,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6977,
											"end": 7419,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6977,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7126,
											"end": 7130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7166,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7153,
											"end": 7162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7141,
											"end": 7167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7141,
											"end": 7167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7245,
											"end": 7246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7243,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7230,
											"end": 7247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7227,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 7177,
											"end": 7248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7248,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7177,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7326,
											"end": 7328,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7315,
											"end": 7324,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7311,
											"end": 7329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7308,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 7258,
											"end": 7330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7330,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7258,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7340,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7408,
											"end": 7410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7397,
											"end": 7406,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7384,
											"end": 7390,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7340,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 7340,
											"end": 7412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7340,
											"end": 7412,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7340,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6977,
											"end": 7419,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6977,
											"end": 7419,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6977,
											"end": 7419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6977,
											"end": 7419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6977,
											"end": 7419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6977,
											"end": 7419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6977,
											"end": 7419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7425,
											"end": 7502,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7425,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7491,
											"end": 7496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7425,
											"end": 7502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7425,
											"end": 7502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7425,
											"end": 7502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7425,
											"end": 7502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7630,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 7508,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 7599,
											"end": 7604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7581,
											"end": 7605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7605,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 7581,
											"end": 7605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7574,
											"end": 7579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7571,
											"end": 7606,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 7561,
											"end": 7624,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7620,
											"end": 7621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7617,
											"end": 7618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7610,
											"end": 7622,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7624,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 7561,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7779,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 7636,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7724,
											"end": 7730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7718,
											"end": 7731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7709,
											"end": 7731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7709,
											"end": 7731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7740,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 7767,
											"end": 7772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7740,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 7740,
											"end": 7773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7740,
											"end": 7773,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 7740,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7779,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 8136,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 7785,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7904,
											"end": 7906,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7883,
											"end": 7890,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7879,
											"end": 7902,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 7907,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7872,
											"end": 7991,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7872,
											"end": 7991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 7872,
											"end": 7991,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7910,
											"end": 7989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 7910,
											"end": 7989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 7910,
											"end": 7989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7910,
											"end": 7989,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 7910,
											"end": 7989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7872,
											"end": 7991,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 7872,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8030,
											"end": 8031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8055,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 8111,
											"end": 8118,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8102,
											"end": 8108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8091,
											"end": 8100,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8055,
											"end": 8119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8119,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 8055,
											"end": 8119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8119,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8001,
											"end": 8129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 8136,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 8136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 8136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 8136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 8136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8260,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 8142,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8229,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 8247,
											"end": 8252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8229,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 8229,
											"end": 8253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8229,
											"end": 8253,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 8229,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8217,
											"end": 8254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8598,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 8266,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8387,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8425,
											"end": 8427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8414,
											"end": 8423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8402,
											"end": 8428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8402,
											"end": 8428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8438,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 8506,
											"end": 8507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8495,
											"end": 8504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8491,
											"end": 8508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8488,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8438,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 8438,
											"end": 8509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8438,
											"end": 8509,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 8438,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8519,
											"end": 8591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 8587,
											"end": 8589,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8576,
											"end": 8585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8519,
											"end": 8591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 8519,
											"end": 8591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8519,
											"end": 8591,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 8519,
											"end": 8591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8598,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8598,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8604,
											"end": 8784,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 8604,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8652,
											"end": 8729,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8649,
											"end": 8650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8642,
											"end": 8730,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8753,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8746,
											"end": 8747,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8739,
											"end": 8754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8773,
											"end": 8777,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8770,
											"end": 8771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8763,
											"end": 8778,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8892,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8790,
											"end": 8892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8832,
											"end": 8840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8876,
											"end": 8877,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8872,
											"end": 8885,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 8851,
											"end": 8885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8851,
											"end": 8885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8898,
											"end": 9746,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 8898,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 8964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8966,
											"end": 8970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8990,
											"end": 8996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8981,
											"end": 8996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8981,
											"end": 8996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9014,
											"end": 9019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9740,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 9028,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9049,
											"end": 9050,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9039,
											"end": 9047,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9036,
											"end": 9051,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9740,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 9028,
											"end": 9740,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9144,
											"end": 9148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9139,
											"end": 9142,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9149,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9150,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9173,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 9123,
											"end": 9173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 9153,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 9153,
											"end": 9171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9171,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 9153,
											"end": 9171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9173,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 9123,
											"end": 9173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9203,
											"end": 9204,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9193,
											"end": 9201,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9637,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 9186,
											"end": 9637,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9618,
											"end": 9622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9611,
											"end": 9616,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9607,
											"end": 9623,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9598,
											"end": 9623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9598,
											"end": 9623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9637,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 9186,
											"end": 9637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9668,
											"end": 9672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9662,
											"end": 9666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9658,
											"end": 9673,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9650,
											"end": 9673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9650,
											"end": 9673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9698,
											"end": 9730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 9721,
											"end": 9729,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9698,
											"end": 9730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 9698,
											"end": 9730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9698,
											"end": 9730,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 9698,
											"end": 9730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9686,
											"end": 9730,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9686,
											"end": 9730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 9028,
											"end": 9740,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9740,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 9028,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8898,
											"end": 9746,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8898,
											"end": 9746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8898,
											"end": 9746,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8898,
											"end": 9746,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8898,
											"end": 9746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8898,
											"end": 9746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8898,
											"end": 9746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8898,
											"end": 9746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 10825,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 9752,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9997,
											"end": 10005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 9987,
											"end": 10027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10019,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10009,
											"end": 10019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10020,
											"end": 10025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 10020,
											"end": 10025,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10027,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 9987,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10046,
											"end": 10050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 10036,
											"end": 10072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10063,
											"end": 10064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10054,
											"end": 10064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10054,
											"end": 10064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10065,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 10065,
											"end": 10070,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10072,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 10036,
											"end": 10072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10181,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10175,
											"end": 10202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10175,
											"end": 10202,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10175,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 10175,
											"end": 10202,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10217,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10211,
											"end": 10402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10211,
											"end": 10402,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10211,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 10211,
											"end": 10402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10125,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 10125,
											"end": 10402,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10175,
											"end": 10202,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 10175,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10193,
											"end": 10194,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10184,
											"end": 10194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10195,
											"end": 10200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10195,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 10195,
											"end": 10200,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10211,
											"end": 10402,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 10211,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10256,
											"end": 10259,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10246,
											"end": 10254,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10243,
											"end": 10260,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10240,
											"end": 10283,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10240,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 10240,
											"end": 10283,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 10263,
											"end": 10281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10240,
											"end": 10283,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 10240,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10320,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10309,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10305,
											"end": 10321,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 10296,
											"end": 10321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10296,
											"end": 10321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10347,
											"end": 10350,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10340,
											"end": 10345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10337,
											"end": 10351,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10334,
											"end": 10374,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10334,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 10334,
											"end": 10374,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 10354,
											"end": 10372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10334,
											"end": 10374,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 10334,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10387,
											"end": 10392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10387,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 10387,
											"end": 10392,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10125,
											"end": 10402,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 10125,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10125,
											"end": 10402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10511,
											"end": 10513,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10501,
											"end": 10509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10498,
											"end": 10514,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10492,
											"end": 10495,
											"name": "PUSH",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 10486,
											"end": 10490,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10483,
											"end": 10496,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10479,
											"end": 10515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10461,
											"end": 10463,
											"name": "PUSH",
											"source": 1,
											"value": "4E"
										},
										{
											"begin": 10451,
											"end": 10459,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10464,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10443,
											"end": 10445,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 10437,
											"end": 10441,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10434,
											"end": 10446,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10430,
											"end": 10465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10414,
											"end": 10525,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10657,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 10411,
											"end": 10657,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10561,
											"end": 10565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10576,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 10548,
											"end": 10576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10548,
											"end": 10576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10602,
											"end": 10605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10595,
											"end": 10600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10606,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10589,
											"end": 10629,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10589,
											"end": 10629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 10589,
											"end": 10629,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10609,
											"end": 10627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 10609,
											"end": 10627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 10609,
											"end": 10627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10609,
											"end": 10627,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 10609,
											"end": 10627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10589,
											"end": 10629,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 10589,
											"end": 10629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10642,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 10642,
											"end": 10647,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10657,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 10411,
											"end": 10657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10682,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 10720,
											"end": 10723,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10710,
											"end": 10718,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10704,
											"end": 10708,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10701,
											"end": 10702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10682,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 10682,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10682,
											"end": 10724,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 10682,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10724,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10756,
											"end": 10760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 10754,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10747,
											"end": 10761,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10740,
											"end": 10745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10762,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10734,
											"end": 10785,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10734,
											"end": 10785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 10734,
											"end": 10785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 10783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 10765,
											"end": 10783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 10765,
											"end": 10783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 10783,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 10765,
											"end": 10783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10734,
											"end": 10785,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 10734,
											"end": 10785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10814,
											"end": 10818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10807,
											"end": 10812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10819,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10794,
											"end": 10819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10794,
											"end": 10819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 10825,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 9752,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 10825,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 10825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 10825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 10825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 10825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 10825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10831,
											"end": 11114,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 10831,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10914,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 10932,
											"end": 10936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 10914,
											"end": 10937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 10937,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 10914,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10906,
											"end": 10937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10906,
											"end": 10937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10958,
											"end": 10984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 10975,
											"end": 10983,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10958,
											"end": 10984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 10958,
											"end": 10984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10958,
											"end": 10984,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 10958,
											"end": 10984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10946,
											"end": 10984,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10946,
											"end": 10984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11003,
											"end": 11107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 11040,
											"end": 11106,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11030,
											"end": 11038,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11028,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11003,
											"end": 11107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 11003,
											"end": 11107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11003,
											"end": 11107,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 11003,
											"end": 11107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10994,
											"end": 11107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10994,
											"end": 11107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10831,
											"end": 11114,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10831,
											"end": 11114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10831,
											"end": 11114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10831,
											"end": 11114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10831,
											"end": 11114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11314,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 11120,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11160,
											"end": 11164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 11198,
											"end": 11199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 11180,
											"end": 11200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11175,
											"end": 11200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11175,
											"end": 11200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 11232,
											"end": 11233,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 11214,
											"end": 11234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11234,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 11214,
											"end": 11234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11209,
											"end": 11234,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11209,
											"end": 11234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11258,
											"end": 11259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11255,
											"end": 11256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11251,
											"end": 11260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11282,
											"end": 11283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11276,
											"end": 11280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11273,
											"end": 11284,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11270,
											"end": 11307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11270,
											"end": 11307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 11270,
											"end": 11307,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 11287,
											"end": 11305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11270,
											"end": 11307,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 11270,
											"end": 11307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11314,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11314,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11320,
											"end": 11730,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 11320,
											"end": 11730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11360,
											"end": 11367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11383,
											"end": 11403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 11401,
											"end": 11402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 11383,
											"end": 11403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11403,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 11383,
											"end": 11403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11378,
											"end": 11403,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11378,
											"end": 11403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11417,
											"end": 11437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 11435,
											"end": 11436,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11417,
											"end": 11437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 11417,
											"end": 11437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11417,
											"end": 11437,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 11417,
											"end": 11437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11437,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11472,
											"end": 11473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11469,
											"end": 11470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11465,
											"end": 11474,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11494,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 11512,
											"end": 11523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11494,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 11494,
											"end": 11524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11494,
											"end": 11524,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 11494,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11483,
											"end": 11524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11673,
											"end": 11674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11664,
											"end": 11671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11660,
											"end": 11675,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11657,
											"end": 11658,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11654,
											"end": 11676,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11634,
											"end": 11635,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11627,
											"end": 11636,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11607,
											"end": 11690,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 11584,
											"end": 11723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 11703,
											"end": 11721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11723,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 11584,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11368,
											"end": 11730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11320,
											"end": 11730,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11320,
											"end": 11730,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11320,
											"end": 11730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11320,
											"end": 11730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11320,
											"end": 11730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11736,
											"end": 11916,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 11736,
											"end": 11916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11784,
											"end": 11861,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11781,
											"end": 11782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11881,
											"end": 11885,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11878,
											"end": 11879,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11871,
											"end": 11886,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11905,
											"end": 11909,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11902,
											"end": 11903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11895,
											"end": 11910,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11922,
											"end": 12107,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 11922,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11962,
											"end": 11963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11979,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 11997,
											"end": 11998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 11979,
											"end": 11999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 11999,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 11979,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 11999,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 11999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12013,
											"end": 12033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 12031,
											"end": 12032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12013,
											"end": 12033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 12013,
											"end": 12033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12013,
											"end": 12033,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 12013,
											"end": 12033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12033,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12052,
											"end": 12053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12042,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 12042,
											"end": 12077,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12057,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 12057,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 12057,
											"end": 12075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12057,
											"end": 12075,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 12057,
											"end": 12075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12042,
											"end": 12077,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 12042,
											"end": 12077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12099,
											"end": 12100,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12096,
											"end": 12097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12092,
											"end": 12101,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12087,
											"end": 12101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12087,
											"end": 12101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11922,
											"end": 12107,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11922,
											"end": 12107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11922,
											"end": 12107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11922,
											"end": 12107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11922,
											"end": 12107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12113,
											"end": 12304,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 12113,
											"end": 12304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12172,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 12190,
											"end": 12191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12172,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 12172,
											"end": 12192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12172,
											"end": 12192,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 12172,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12167,
											"end": 12192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12167,
											"end": 12192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 12224,
											"end": 12225,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 12206,
											"end": 12226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12226,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 12206,
											"end": 12226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12201,
											"end": 12226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12201,
											"end": 12226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12249,
											"end": 12250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12246,
											"end": 12247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12242,
											"end": 12251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12270,
											"end": 12273,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12267,
											"end": 12268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12274,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12261,
											"end": 12297,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12261,
											"end": 12297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 12261,
											"end": 12297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12277,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 12277,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 12277,
											"end": 12295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12277,
											"end": 12295,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 12277,
											"end": 12295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12261,
											"end": 12297,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 12261,
											"end": 12297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12113,
											"end": 12304,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12113,
											"end": 12304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12113,
											"end": 12304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12113,
											"end": 12304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12113,
											"end": 12304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12485,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 12310,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12348,
											"end": 12351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12371,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 12388,
											"end": 12393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12371,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 12371,
											"end": 12394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12371,
											"end": 12394,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 12371,
											"end": 12394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12362,
											"end": 12394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12362,
											"end": 12394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12416,
											"end": 12426,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12409,
											"end": 12414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12427,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12403,
											"end": 12450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 12403,
											"end": 12450,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12430,
											"end": 12448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 12430,
											"end": 12448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 12430,
											"end": 12448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12430,
											"end": 12448,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 12430,
											"end": 12448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12403,
											"end": 12450,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 12403,
											"end": 12450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12477,
											"end": 12478,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12470,
											"end": 12475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12466,
											"end": 12479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12459,
											"end": 12479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12459,
											"end": 12479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12491,
											"end": 12823,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 12491,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12612,
											"end": 12616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12650,
											"end": 12652,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12639,
											"end": 12648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12635,
											"end": 12653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12627,
											"end": 12653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12627,
											"end": 12653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12663,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 12731,
											"end": 12732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12720,
											"end": 12729,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12716,
											"end": 12733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12707,
											"end": 12713,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12663,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 12663,
											"end": 12734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12663,
											"end": 12734,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 12663,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12744,
											"end": 12816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 12812,
											"end": 12814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12801,
											"end": 12810,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12797,
											"end": 12815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12788,
											"end": 12794,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12744,
											"end": 12816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 12744,
											"end": 12816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12744,
											"end": 12816,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 12744,
											"end": 12816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12491,
											"end": 12823,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12491,
											"end": 12823,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12491,
											"end": 12823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12491,
											"end": 12823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12491,
											"end": 12823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12491,
											"end": 12823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12829,
											"end": 13161,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 12829,
											"end": 13161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12950,
											"end": 12954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12988,
											"end": 12990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12977,
											"end": 12986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12973,
											"end": 12991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12965,
											"end": 12991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12965,
											"end": 12991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13001,
											"end": 13072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 13069,
											"end": 13070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13058,
											"end": 13067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13054,
											"end": 13071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13045,
											"end": 13051,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13001,
											"end": 13072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 13001,
											"end": 13072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13001,
											"end": 13072,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 13001,
											"end": 13072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13082,
											"end": 13154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 13150,
											"end": 13152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13139,
											"end": 13148,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13135,
											"end": 13153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13126,
											"end": 13132,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13082,
											"end": 13154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 13082,
											"end": 13154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13082,
											"end": 13154,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 13082,
											"end": 13154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12829,
											"end": 13161,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12829,
											"end": 13161,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12829,
											"end": 13161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12829,
											"end": 13161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12829,
											"end": 13161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12829,
											"end": 13161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13167,
											"end": 13257,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 13167,
											"end": 13257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13201,
											"end": 13208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13244,
											"end": 13249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13237,
											"end": 13250,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13230,
											"end": 13251,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13219,
											"end": 13251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13219,
											"end": 13251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13167,
											"end": 13257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13167,
											"end": 13257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13167,
											"end": 13257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13167,
											"end": 13257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13263,
											"end": 13379,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 13263,
											"end": 13379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13333,
											"end": 13354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 13348,
											"end": 13353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13333,
											"end": 13354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 13333,
											"end": 13354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13333,
											"end": 13354,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 13333,
											"end": 13354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13326,
											"end": 13331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13323,
											"end": 13355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 13313,
											"end": 13373,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13369,
											"end": 13370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13366,
											"end": 13367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13359,
											"end": 13371,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13373,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 13313,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13263,
											"end": 13379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13263,
											"end": 13379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13522,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 13385,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13439,
											"end": 13444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13470,
											"end": 13476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13464,
											"end": 13477,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13455,
											"end": 13477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13455,
											"end": 13477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13486,
											"end": 13516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 13510,
											"end": 13515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13486,
											"end": 13516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 13486,
											"end": 13516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13486,
											"end": 13516,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 13486,
											"end": 13516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13522,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13385,
											"end": 13522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13528,
											"end": 13873,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 13528,
											"end": 13873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13595,
											"end": 13601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13644,
											"end": 13646,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13632,
											"end": 13641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13623,
											"end": 13630,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13619,
											"end": 13642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13615,
											"end": 13647,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13612,
											"end": 13731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13612,
											"end": 13731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 13612,
											"end": 13731,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13650,
											"end": 13729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 13650,
											"end": 13729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 13650,
											"end": 13729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13650,
											"end": 13729,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 13650,
											"end": 13729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13612,
											"end": 13731,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 13612,
											"end": 13731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13770,
											"end": 13771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13795,
											"end": 13856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 13848,
											"end": 13855,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13839,
											"end": 13845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13828,
											"end": 13837,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13824,
											"end": 13846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13795,
											"end": 13856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 13795,
											"end": 13856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13795,
											"end": 13856,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 13795,
											"end": 13856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13785,
											"end": 13856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13785,
											"end": 13856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13741,
											"end": 13866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13528,
											"end": 13873,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13528,
											"end": 13873,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13528,
											"end": 13873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13528,
											"end": 13873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13528,
											"end": 13873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13879,
											"end": 14079,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 13879,
											"end": 14079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13918,
											"end": 13922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13938,
											"end": 13957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 13955,
											"end": 13956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13938,
											"end": 13957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 13938,
											"end": 13957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13938,
											"end": 13957,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 13938,
											"end": 13957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13957,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13971,
											"end": 13990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 13988,
											"end": 13989,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13971,
											"end": 13990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 13971,
											"end": 13990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13971,
											"end": 13990,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 13971,
											"end": 13990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13966,
											"end": 13990,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13966,
											"end": 13990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14014,
											"end": 14015,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14007,
											"end": 14016,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13999,
											"end": 14016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13999,
											"end": 14016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14038,
											"end": 14048,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14032,
											"end": 14036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14029,
											"end": 14049,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14026,
											"end": 14072,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14026,
											"end": 14072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 14026,
											"end": 14072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14052,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 14052,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 14052,
											"end": 14070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14052,
											"end": 14070,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 14052,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14026,
											"end": 14072,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 14026,
											"end": 14072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13879,
											"end": 14079,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13879,
											"end": 14079,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13879,
											"end": 14079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13879,
											"end": 14079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13879,
											"end": 14079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/periphery/Fomo3d_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"amount(address)": "b9f0bf66",
							"claim()": "4e71d92d",
							"claimed(address)": "c884ef83",
							"decimal()": "76809ce3",
							"deposit(address,uint256,uint256)": "0efe6a8b",
							"getClaimed(address)": "eb46260e",
							"getCurrentHistoryNonce()": "6d1c6041",
							"getHistory(uint32)": "07040e91",
							"getPredict(address,uint256)": "13da0777",
							"getTotalProfit(address)": "8233fbcb",
							"getUnclaim(address)": "480a4262",
							"historyInfo(uint32)": "f54f0a8d",
							"historyNonce()": "cdf033f3",
							"mask(address)": "eeda71d5",
							"paymentToken()": "3013ce29",
							"price()": "a035b1fe",
							"register()": "1aa3a008",
							"totalAmount()": "1a39d8ef",
							"totalValue()": "d4c3eea0",
							"unclaim(address)": "1161e582",
							"valuePerAmount()": "7a19a488"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_basePaymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_register\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidValue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Fomo3dClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Fomo3dDeposit\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimal\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentHistoryNonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_nonce\",\"type\":\"uint32\"}],\"name\":\"getHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IFomo3d.HistoryInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getPredict\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTotalProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUnclaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"historyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"historyNonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mask\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"register\",\"outputs\":[{\"internalType\":\"contract Register\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unclaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valuePerAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SeekersAlliance\",\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256,uint256)\":{\"params\":{\"_amount\":\"The amount of the deposit\",\"_user\":\"The user address\",\"_value\":\"The value of the deposit\"}},\"getHistory(uint32)\":{\"params\":{\"_nonce\":\"The nonce of the history\"}},\"getPredict(address,uint256)\":{\"params\":{\"_amount\":\"The amount of user put more here\",\"_user\":\"The user address\"}},\"getUnclaim(address)\":{\"params\":{\"_user\":\"The user address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim()\":{\"notice\":\"Withdraw all the value from the unclaim part\"},\"deposit(address,uint256,uint256)\":{\"notice\":\"Deposit from the userOnly the admin role can call this function\"},\"getCurrentHistoryNonce()\":{\"notice\":\"get history current nonce. (The nonce of the last history)\"},\"getHistory(uint32)\":{\"notice\":\"get history info with nonce\"},\"getPredict(address,uint256)\":{\"notice\":\"Return how much the user can get when he put more amount here\"},\"getUnclaim(address)\":{\"notice\":\"get user info\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Fomo3d_flattened.sol\":\"Fomo3d\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/periphery/Fomo3d_flattened.sol\":{\"keccak256\":\"0xf9c20ba16e565b16c74076ff14ce0bdc8aa2cd5b5178d144fc03b8518b5c7595\",\"urls\":[\"bzz-raw://5d3ff73968ee29bf0ebf5b52e0b662a58aac35e3645e82a74ddca5839d3f0274\",\"dweb:/ipfs/QmZjUjMYatCSrJrBgjNz8uHYH1bnQSiYdu1GEzBYaFawwv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1388,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
								"label": "paymentToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ERC20)1381"
							},
							{
								"astId": 1391,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
								"label": "register",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(Register)775"
							},
							{
								"astId": 1395,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
								"label": "amount",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1399,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
								"label": "mask",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1403,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
								"label": "unclaim",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1407,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
								"label": "claimed",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1412,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
								"label": "historyInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint32,t_struct(HistoryInfo)147_storage)"
							},
							{
								"astId": 1414,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
								"label": "historyNonce",
								"offset": 0,
								"slot": "7",
								"type": "t_uint32"
							},
							{
								"astId": 1416,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
								"label": "totalAmount",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1418,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
								"label": "totalValue",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1420,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
								"label": "valuePerAmount",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1422,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
								"label": "decimal",
								"offset": 0,
								"slot": "11",
								"type": "t_uint32"
							},
							{
								"astId": 1424,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
								"label": "price",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ERC20)1381": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_contract(Register)775": {
								"encoding": "inplace",
								"label": "contract Register",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint32,t_struct(HistoryInfo)147_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct IFomo3d.HistoryInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(HistoryInfo)147_storage"
							},
							"t_struct(HistoryInfo)147_storage": {
								"encoding": "inplace",
								"label": "struct IFomo3d.HistoryInfo",
								"members": [
									{
										"astId": 142,
										"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 144,
										"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
										"label": "value",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 146,
										"contract": "contracts/periphery/Fomo3d_flattened.sol:Fomo3d",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claim()": {
								"notice": "Withdraw all the value from the unclaim part"
							},
							"deposit(address,uint256,uint256)": {
								"notice": "Deposit from the userOnly the admin role can call this function"
							},
							"getCurrentHistoryNonce()": {
								"notice": "get history current nonce. (The nonce of the last history)"
							},
							"getHistory(uint32)": {
								"notice": "get history info with nonce"
							},
							"getPredict(address,uint256)": {
								"notice": "Return how much the user can get when he put more amount here"
							},
							"getUnclaim(address)": {
								"notice": "get user info"
							}
						},
						"version": 1
					}
				},
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Fomo3d_flattened.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/periphery/Fomo3d_flattened.sol\":{\"keccak256\":\"0xf9c20ba16e565b16c74076ff14ce0bdc8aa2cd5b5178d144fc03b8518b5c7595\",\"urls\":[\"bzz-raw://5d3ff73968ee29bf0ebf5b52e0b662a58aac35e3645e82a74ddca5839d3f0274\",\"dweb:/ipfs/QmZjUjMYatCSrJrBgjNz8uHYH1bnQSiYdu1GEzBYaFawwv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Fomo3d_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/periphery/Fomo3d_flattened.sol\":{\"keccak256\":\"0xf9c20ba16e565b16c74076ff14ce0bdc8aa2cd5b5178d144fc03b8518b5c7595\",\"urls\":[\"bzz-raw://5d3ff73968ee29bf0ebf5b52e0b662a58aac35e3645e82a74ddca5839d3f0274\",\"dweb:/ipfs/QmZjUjMYatCSrJrBgjNz8uHYH1bnQSiYdu1GEzBYaFawwv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Fomo3d_flattened.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/periphery/Fomo3d_flattened.sol\":{\"keccak256\":\"0xf9c20ba16e565b16c74076ff14ce0bdc8aa2cd5b5178d144fc03b8518b5c7595\",\"urls\":[\"bzz-raw://5d3ff73968ee29bf0ebf5b52e0b662a58aac35e3645e82a74ddca5839d3f0274\",\"dweb:/ipfs/QmZjUjMYatCSrJrBgjNz8uHYH1bnQSiYdu1GEzBYaFawwv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Fomo3d_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/periphery/Fomo3d_flattened.sol\":{\"keccak256\":\"0xf9c20ba16e565b16c74076ff14ce0bdc8aa2cd5b5178d144fc03b8518b5c7595\",\"urls\":[\"bzz-raw://5d3ff73968ee29bf0ebf5b52e0b662a58aac35e3645e82a74ddca5839d3f0274\",\"dweb:/ipfs/QmZjUjMYatCSrJrBgjNz8uHYH1bnQSiYdu1GEzBYaFawwv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Fomo3d_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/periphery/Fomo3d_flattened.sol\":{\"keccak256\":\"0xf9c20ba16e565b16c74076ff14ce0bdc8aa2cd5b5178d144fc03b8518b5c7595\",\"urls\":[\"bzz-raw://5d3ff73968ee29bf0ebf5b52e0b662a58aac35e3645e82a74ddca5839d3f0274\",\"dweb:/ipfs/QmZjUjMYatCSrJrBgjNz8uHYH1bnQSiYdu1GEzBYaFawwv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Fomo3d_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/periphery/Fomo3d_flattened.sol\":{\"keccak256\":\"0xf9c20ba16e565b16c74076ff14ce0bdc8aa2cd5b5178d144fc03b8518b5c7595\",\"urls\":[\"bzz-raw://5d3ff73968ee29bf0ebf5b52e0b662a58aac35e3645e82a74ddca5839d3f0274\",\"dweb:/ipfs/QmZjUjMYatCSrJrBgjNz8uHYH1bnQSiYdu1GEzBYaFawwv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Fomo3d_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/periphery/Fomo3d_flattened.sol\":{\"keccak256\":\"0xf9c20ba16e565b16c74076ff14ce0bdc8aa2cd5b5178d144fc03b8518b5c7595\",\"urls\":[\"bzz-raw://5d3ff73968ee29bf0ebf5b52e0b662a58aac35e3645e82a74ddca5839d3f0274\",\"dweb:/ipfs/QmZjUjMYatCSrJrBgjNz8uHYH1bnQSiYdu1GEzBYaFawwv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IFomo3d": {
					"abi": [
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidValue",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Fomo3dClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Fomo3dDeposit",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getClaimed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentHistoryNonce",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_nonce",
									"type": "uint32"
								}
							],
							"name": "getHistory",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "user",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct IFomo3d.HistoryInfo",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "getPredict",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getTotalProfit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUnclaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"deposit(address,uint256,uint256)": {
								"params": {
									"_amount": "The amount of the deposit",
									"_user": "The user address",
									"_value": "The value of the deposit"
								}
							},
							"getHistory(uint32)": {
								"params": {
									"_nonce": "The nonce of the history"
								}
							},
							"getPredict(address,uint256)": {
								"params": {
									"_amount": "The amount of user put more here",
									"_user": "The user address"
								}
							},
							"getUnclaim(address)": {
								"params": {
									"_user": "The user address"
								}
							}
						},
						"title": "Interface of Fomo3d.sol",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claim()": "4e71d92d",
							"deposit(address,uint256,uint256)": "0efe6a8b",
							"getClaimed(address)": "eb46260e",
							"getCurrentHistoryNonce()": "6d1c6041",
							"getHistory(uint32)": "07040e91",
							"getPredict(address,uint256)": "13da0777",
							"getTotalProfit(address)": "8233fbcb",
							"getUnclaim(address)": "480a4262"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidValue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Fomo3dClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Fomo3dDeposit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentHistoryNonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_nonce\",\"type\":\"uint32\"}],\"name\":\"getHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IFomo3d.HistoryInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getPredict\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTotalProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUnclaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256,uint256)\":{\"params\":{\"_amount\":\"The amount of the deposit\",\"_user\":\"The user address\",\"_value\":\"The value of the deposit\"}},\"getHistory(uint32)\":{\"params\":{\"_nonce\":\"The nonce of the history\"}},\"getPredict(address,uint256)\":{\"params\":{\"_amount\":\"The amount of user put more here\",\"_user\":\"The user address\"}},\"getUnclaim(address)\":{\"params\":{\"_user\":\"The user address\"}}},\"title\":\"Interface of Fomo3d.sol\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim()\":{\"notice\":\"Withdraw all the value from the unclaim part\"},\"deposit(address,uint256,uint256)\":{\"notice\":\"Deposit from the userOnly the admin role can call this function\"},\"getCurrentHistoryNonce()\":{\"notice\":\"get history current nonce. (The nonce of the last history)\"},\"getHistory(uint32)\":{\"notice\":\"get history info with nonce\"},\"getPredict(address,uint256)\":{\"notice\":\"Return how much the user can get when he put more amount here\"},\"getUnclaim(address)\":{\"notice\":\"get user info\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Fomo3d_flattened.sol\":\"IFomo3d\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/periphery/Fomo3d_flattened.sol\":{\"keccak256\":\"0xf9c20ba16e565b16c74076ff14ce0bdc8aa2cd5b5178d144fc03b8518b5c7595\",\"urls\":[\"bzz-raw://5d3ff73968ee29bf0ebf5b52e0b662a58aac35e3645e82a74ddca5839d3f0274\",\"dweb:/ipfs/QmZjUjMYatCSrJrBgjNz8uHYH1bnQSiYdu1GEzBYaFawwv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claim()": {
								"notice": "Withdraw all the value from the unclaim part"
							},
							"deposit(address,uint256,uint256)": {
								"notice": "Deposit from the userOnly the admin role can call this function"
							},
							"getCurrentHistoryNonce()": {
								"notice": "get history current nonce. (The nonce of the last history)"
							},
							"getHistory(uint32)": {
								"notice": "get history info with nonce"
							},
							"getPredict(address,uint256)": {
								"notice": "Return how much the user can get when he put more amount here"
							},
							"getUnclaim(address)": {
								"notice": "get user info"
							}
						},
						"version": 1
					}
				},
				"Register": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_initialAdmin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DRAW",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FOMO3D",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "JACKPOT",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MARKET",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRIZE_ITEMS",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REFERRAL",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOKEN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VRF",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "checkRole",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "currentContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_role",
									"type": "bytes32"
								}
							],
							"name": "getContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/periphery/Fomo3d_flattened.sol\":21593:22732  contract Register is AccessControl{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":22173:22270  constructor(address _initialAdmin) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":22218:22263  _grantRole(DEFAULT_ADMIN_ROLE, _initialAdmin) */\n  tag_6\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":16702:16706  0x00 */\n  0x00\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":22229:22247  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":22249:22262  _initialAdmin */\n  dup3\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":22218:22228  _grantRole */\n  shl(0x20, tag_7)\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":22218:22263  _grantRole(DEFAULT_ADMIN_ROLE, _initialAdmin) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":22173:22270  constructor(address _initialAdmin) {... */\n  pop\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":21593:22732  contract Register is AccessControl{... */\n  jump(tag_8)\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20649:20965  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_7:\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20726:20730  bool */\n  0x00\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20747:20769  hasRole(role, account) */\n  tag_10\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20755:20759  role */\n  dup4\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20761:20768  account */\n  dup4\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20747:20754  hasRole */\n  shl(0x20, tag_11)\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20747:20769  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20742:20959  if (!hasRole(role, account)) {... */\n  tag_12\n  jumpi\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20817:20821  true */\n  0x01\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20785:20791  _roles */\n  0x00\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20785:20797  _roles[role] */\n  dup1\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20792:20796  role */\n  dup6\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20785:20797  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20785:20805  _roles[role].hasRole */\n  0x00\n  add\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20785:20814  _roles[role].hasRole[account] */\n  0x00\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20806:20813  account */\n  dup5\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20785:20814  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20785:20821  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20867:20879  _msgSender() */\n  tag_13\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20867:20877  _msgSender */\n  shl(0x20, tag_14)\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20867:20879  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20840:20880  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20858:20865  account */\n  dup3\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20840:20880  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20852:20856  role */\n  dup5\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20840:20880  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20901:20905  true */\n  0x01\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20894:20905  return true */\n  swap1\n  pop\n  jump(tag_9)\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20742:20959  if (!hasRole(role, account)) {... */\ntag_12:\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20943:20948  false */\n  0x00\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20936:20948  return false */\n  swap1\n  pop\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":20649:20965  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_9:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":17324:17460  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_11:\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":17401:17405  bool */\n  0x00\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":17424:17430  _roles */\n  dup1\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":17424:17436  _roles[role] */\n  0x00\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":17431:17435  role */\n  dup5\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":17424:17436  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":17424:17444  _roles[role].hasRole */\n  0x00\n  add\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":17424:17453  _roles[role].hasRole[account] */\n  0x00\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":17445:17452  account */\n  dup4\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":17424:17453  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":17417:17453  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":17324:17460  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":14289:14385  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":14342:14349  address */\n  0x00\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":14368:14378  msg.sender */\n  caller\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":14361:14378  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":14289:14385  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_39\n  tag_19\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":932:1051   */\ntag_38:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_40\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_24\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/periphery/Fomo3d_flattened.sol\":21593:22732  contract Register is AccessControl{... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21593:22732  contract Register is AccessControl{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x74d16f5c\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc63568c7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe16c7d98\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf46f16c2\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x74d16f5c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x82bfefc8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa126285b\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x43c5cd74\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4e2164c9\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x619d36ef\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x12d9a6ad\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x20987a7e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17035:17237  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22463:22603  function checkRole(bytes32 _role, address _account) public view {... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21822:21884  bytes32 public constant PRIZE_ITEMS = keccak256(\"PRIZE_ITEMS\") */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":18280:18400  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22276:22453  function grantRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)){... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19798:20043  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21704:21758  bytes32 public constant JACKPOT = keccak256(\"JACKPOT\") */\n    tag_9:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21646:21698  bytes32 public constant FOMO3D = keccak256(\"FOMO3D\") */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22060:22108  bytes32 public constant DRAW = keccak256(\"DRAW\") */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22115:22166  mapping (bytes32 => address) public currentContract */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22004:22054  bytes32 public constant TOKEN = keccak256(\"TOKEN\") */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17324:17460  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21952:21998  bytes32 public constant VRF = keccak256(\"VRF\") */\n    tag_15:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":16657:16706  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_16:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21890:21946  bytes32 public constant REFERRAL = keccak256(\"REFERRAL\") */\n    tag_17:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19112:19250  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_18:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22608:22719  function getContract(bytes32 _role) public view returns (address){... */\n    tag_19:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21764:21816  bytes32 public constant MARKET = keccak256(\"MARKET\") */\n    tag_20:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17035:17237  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_27:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17120:17124  bool */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17158:17190  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17143:17190  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17143:17154  interfaceId */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17143:17190  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17143:17230  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17194:17230  super.supportsInterface(interfaceId) */\n      tag_91\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17218:17229  interfaceId */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17194:17217  super.supportsInterface */\n      tag_92\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17194:17230  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17143:17230  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_90:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17136:17230  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17035:17237  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22463:22603  function checkRole(bytes32 _role, address _account) public view {... */\n    tag_33:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22545:22569  hasRole(_role, _account) */\n      tag_94\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22553:22558  _role */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22560:22568  _account */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22545:22552  hasRole */\n      tag_68\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22545:22569  hasRole(_role, _account) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22537:22596  require(hasRole(_role, _account), \"Register: INVALID_ROLE\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22463:22603  function checkRole(bytes32 _role, address _account) public view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21822:21884  bytes32 public constant PRIZE_ITEMS = keccak256(\"PRIZE_ITEMS\") */\n    tag_35:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21860:21884  keccak256(\"PRIZE_ITEMS\") */\n      0xdc56da5a1587a4cd75ea240b3d5cd7c4a0eaac792d95a49979f1c23a0cf8895f\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21822:21884  bytes32 public constant PRIZE_ITEMS = keccak256(\"PRIZE_ITEMS\") */\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":18280:18400  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_41:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":18345:18352  bytes32 */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":18371:18377  _roles */\n      dup1\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":18371:18383  _roles[role] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":18378:18382  role */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":18371:18383  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":18371:18393  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":18364:18393  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":18280:18400  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22276:22453  function grantRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)){... */\n    tag_45:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22351:22369  getRoleAdmin(role) */\n      tag_99\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22364:22368  role */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22351:22363  getRoleAdmin */\n      tag_41\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22351:22369  getRoleAdmin(role) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":16934:16950  _checkRole(role) */\n      tag_101\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":16945:16949  role */\n      dup2\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":16934:16944  _checkRole */\n      tag_102\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":16934:16950  _checkRole(role) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22380:22405  _grantRole(role, account) */\n      tag_104\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22391:22395  role */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22397:22404  account */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22380:22390  _grantRole */\n      tag_105\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22380:22405  _grantRole(role, account) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22439:22446  account */\n      dup2\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22415:22430  currentContract */\n      0x01\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22415:22436  currentContract[role] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22431:22435  role */\n      dup6\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22415:22436  currentContract[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22415:22446  currentContract[role] = account */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22276:22453  function grantRole(bytes32 role, address account) public override onlyRole(getRoleAdmin(role)){... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19798:20043  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_48:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19913:19925  _msgSender() */\n      tag_107\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19913:19923  _msgSender */\n      tag_108\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19913:19925  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19891:19925  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19891:19909  callerConfirmation */\n      dup2\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19891:19925  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19887:19989  if (callerConfirmation != _msgSender()) {... */\n      tag_109\n      jumpi\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19948:19978  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19887:19989  if (callerConfirmation != _msgSender()) {... */\n    tag_109:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19999:20036  _revokeRole(role, callerConfirmation) */\n      tag_110\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20011:20015  role */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20017:20035  callerConfirmation */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19999:20010  _revokeRole */\n      tag_111\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19999:20036  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_110:\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19798:20043  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21704:21758  bytes32 public constant JACKPOT = keccak256(\"JACKPOT\") */\n    tag_50:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21738:21758  keccak256(\"JACKPOT\") */\n      0xf45223fc822e0a02a042bb2eec36a76af2a028cc55539c3a40ab438d1089e1c0\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21704:21758  bytes32 public constant JACKPOT = keccak256(\"JACKPOT\") */\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21646:21698  bytes32 public constant FOMO3D = keccak256(\"FOMO3D\") */\n    tag_53:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21679:21698  keccak256(\"FOMO3D\") */\n      0x64b1d43f4e53241bce58c6f9670f08a22934a523acf2a5359fa7c904ff98bd97\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21646:21698  bytes32 public constant FOMO3D = keccak256(\"FOMO3D\") */\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22060:22108  bytes32 public constant DRAW = keccak256(\"DRAW\") */\n    tag_56:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22091:22108  keccak256(\"DRAW\") */\n      0x1cf54708aaa392dbeba88d1a07e69feaba67586acd469366b89b52bf44132258\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22060:22108  bytes32 public constant DRAW = keccak256(\"DRAW\") */\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22115:22166  mapping (bytes32 => address) public currentContract */\n    tag_60:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22004:22054  bytes32 public constant TOKEN = keccak256(\"TOKEN\") */\n    tag_64:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22036:22054  keccak256(\"TOKEN\") */\n      0x96706879d29c248edfb2a2563a8a9d571c49634c0f82013e6f5a7cde739d35d4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22004:22054  bytes32 public constant TOKEN = keccak256(\"TOKEN\") */\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17324:17460  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_68:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17401:17405  bool */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17424:17430  _roles */\n      dup1\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17424:17436  _roles[role] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17431:17435  role */\n      dup5\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17424:17436  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17424:17444  _roles[role].hasRole */\n      0x00\n      add\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17424:17453  _roles[role].hasRole[account] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17445:17452  account */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17424:17453  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17417:17453  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17324:17460  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21952:21998  bytes32 public constant VRF = keccak256(\"VRF\") */\n    tag_71:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21982:21998  keccak256(\"VRF\") */\n      0xcd0c49d5c8438d0944f64e0d3825bed3b606f318474213a77860c93bca5ed999\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21952:21998  bytes32 public constant VRF = keccak256(\"VRF\") */\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":16657:16706  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_74:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":16702:16706  0x00 */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":16657:16706  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21890:21946  bytes32 public constant REFERRAL = keccak256(\"REFERRAL\") */\n    tag_77:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21925:21946  keccak256(\"REFERRAL\") */\n      0x4af58918e2c6f17f8b6da7260d8669fa63150ffd279395662a723476f776f76a\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21890:21946  bytes32 public constant REFERRAL = keccak256(\"REFERRAL\") */\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19112:19250  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_81:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19187:19205  getRoleAdmin(role) */\n      tag_113\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19200:19204  role */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19187:19199  getRoleAdmin */\n      tag_41\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19187:19205  getRoleAdmin(role) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":16934:16950  _checkRole(role) */\n      tag_115\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":16945:16949  role */\n      dup2\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":16934:16944  _checkRole */\n      tag_102\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":16934:16950  _checkRole(role) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19217:19243  _revokeRole(role, account) */\n      tag_117\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19229:19233  role */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19235:19242  account */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19217:19228  _revokeRole */\n      tag_111\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19217:19243  _revokeRole(role, account) */\n      jump\t// in\n    tag_117:\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":19112:19250  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22608:22719  function getContract(bytes32 _role) public view returns (address){... */\n    tag_84:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22665:22672  address */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22690:22705  currentContract */\n      0x01\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22690:22712  currentContract[_role] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22706:22711  _role */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22690:22712  currentContract[_role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22683:22712  return currentContract[_role] */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":22608:22719  function getContract(bytes32 _role) public view returns (address){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21764:21816  bytes32 public constant MARKET = keccak256(\"MARKET\") */\n    tag_87:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21797:21816  keccak256(\"MARKET\") */\n      0x23acc66832ff38a7ce3c1caf89922410f4374ba8fd897ffa98f088747997bc6d\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21764:21816  bytes32 public constant MARKET = keccak256(\"MARKET\") */\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":1663:1809  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_92:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":1739:1743  bool */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":1777:1802  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":1762:1802  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":1762:1773  interfaceId */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":1762:1802  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":1755:1802  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":1663:1809  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17669:17772  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_102:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17735:17765  _checkRole(role, _msgSender()) */\n      tag_121\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17746:17750  role */\n      dup2\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17752:17764  _msgSender() */\n      tag_122\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17752:17762  _msgSender */\n      tag_108\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17752:17764  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17735:17745  _checkRole */\n      tag_123\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17735:17765  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17669:17772  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20649:20965  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_105:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20726:20730  bool */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20747:20769  hasRole(role, account) */\n      tag_125\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20755:20759  role */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20761:20768  account */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20747:20754  hasRole */\n      tag_68\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20747:20769  hasRole(role, account) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20742:20959  if (!hasRole(role, account)) {... */\n      tag_126\n      jumpi\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20817:20821  true */\n      0x01\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20785:20791  _roles */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20785:20797  _roles[role] */\n      dup1\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20792:20796  role */\n      dup6\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20785:20797  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20785:20805  _roles[role].hasRole */\n      0x00\n      add\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20785:20814  _roles[role].hasRole[account] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20806:20813  account */\n      dup5\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20785:20814  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20785:20821  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20867:20879  _msgSender() */\n      tag_127\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20867:20877  _msgSender */\n      tag_108\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20867:20879  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20840:20880  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20858:20865  account */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20840:20880  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20852:20856  role */\n      dup5\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20840:20880  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20901:20905  true */\n      0x01\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20894:20905  return true */\n      swap1\n      pop\n      jump(tag_124)\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20742:20959  if (!hasRole(role, account)) {... */\n    tag_126:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20943:20948  false */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20936:20948  return false */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":20649:20965  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_124:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":14289:14385  function _msgSender() internal view virtual returns (address) {... */\n    tag_108:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":14342:14349  address */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":14368:14378  msg.sender */\n      caller\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":14361:14378  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":14289:14385  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21200:21517  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_111:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21278:21282  bool */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21298:21320  hasRole(role, account) */\n      tag_131\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21306:21310  role */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21312:21319  account */\n      dup4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21298:21305  hasRole */\n      tag_68\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21298:21320  hasRole(role, account) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21294:21511  if (hasRole(role, account)) {... */\n      iszero\n      tag_132\n      jumpi\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21368:21373  false */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21336:21342  _roles */\n      dup1\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21336:21348  _roles[role] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21343:21347  role */\n      dup6\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21336:21348  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21336:21356  _roles[role].hasRole */\n      0x00\n      add\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21336:21365  _roles[role].hasRole[account] */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21357:21364  account */\n      dup5\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21336:21365  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21336:21373  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21419:21431  _msgSender() */\n      tag_133\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21419:21429  _msgSender */\n      tag_108\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21419:21431  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21392:21432  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21410:21417  account */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21392:21432  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21404:21408  role */\n      dup5\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21392:21432  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21453:21457  true */\n      0x01\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21446:21457  return true */\n      swap1\n      pop\n      jump(tag_130)\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21294:21511  if (hasRole(role, account)) {... */\n    tag_132:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21495:21500  false */\n      0x00\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21488:21500  return false */\n      swap1\n      pop\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":21200:21517  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_130:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17902:18099  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_123:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17990:18012  hasRole(role, account) */\n      tag_136\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17998:18002  role */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":18004:18011  account */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17990:17997  hasRole */\n      tag_68\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17990:18012  hasRole(role, account) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17985:18093  if (!hasRole(role, account)) {... */\n      tag_137\n      jumpi\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":18068:18075  account */\n      dup1\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":18077:18081  role */\n      dup3\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":18035:18082  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap3\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17985:18093  if (!hasRole(role, account)) {... */\n    tag_137:\n        /* \"contracts/periphery/Fomo3d_flattened.sol\":17902:18099  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_141:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_143:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_144:\n        /* \"#utility.yul\":561:584   */\n      tag_166\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_143\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_167:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_145:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_169\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_144\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_172\n      tag_141\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":833:952   */\n    tag_171:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_173\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_145\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_146:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_147:\n        /* \"#utility.yul\":1268:1289   */\n      tag_176\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_146\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_178\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_147\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_148:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_149:\n        /* \"#utility.yul\":1674:1698   */\n      tag_181\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_148\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_182:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_150:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_184\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_149\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2000   */\n    tag_151:\n        /* \"#utility.yul\":1911:1918   */\n      0x00\n        /* \"#utility.yul\":1951:1993   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1944:1949   */\n      dup3\n        /* \"#utility.yul\":1940:1994   */\n      and\n        /* \"#utility.yul\":1929:1994   */\n      swap1\n      pop\n        /* \"#utility.yul\":1874:2000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2006:2102   */\n    tag_152:\n        /* \"#utility.yul\":2043:2050   */\n      0x00\n        /* \"#utility.yul\":2072:2096   */\n      tag_187\n        /* \"#utility.yul\":2090:2095   */\n      dup3\n        /* \"#utility.yul\":2072:2096   */\n      tag_151\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2061:2096   */\n      swap1\n      pop\n        /* \"#utility.yul\":2006:2102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2230   */\n    tag_153:\n        /* \"#utility.yul\":2181:2205   */\n      tag_189\n        /* \"#utility.yul\":2199:2204   */\n      dup2\n        /* \"#utility.yul\":2181:2205   */\n      tag_152\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2174:2179   */\n      dup2\n        /* \"#utility.yul\":2171:2206   */\n      eq\n        /* \"#utility.yul\":2161:2224   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":2220:2221   */\n      0x00\n        /* \"#utility.yul\":2217:2218   */\n      dup1\n        /* \"#utility.yul\":2210:2222   */\n      revert\n        /* \"#utility.yul\":2161:2224   */\n    tag_190:\n        /* \"#utility.yul\":2108:2230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2375   */\n    tag_154:\n        /* \"#utility.yul\":2282:2287   */\n      0x00\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2298:2327   */\n      swap1\n      pop\n        /* \"#utility.yul\":2336:2369   */\n      tag_192\n        /* \"#utility.yul\":2363:2368   */\n      dup2\n        /* \"#utility.yul\":2336:2369   */\n      tag_153\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2236:2375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:2855   */\n    tag_32:\n        /* \"#utility.yul\":2449:2455   */\n      0x00\n        /* \"#utility.yul\":2457:2463   */\n      dup1\n        /* \"#utility.yul\":2506:2508   */\n      0x40\n        /* \"#utility.yul\":2494:2503   */\n      dup4\n        /* \"#utility.yul\":2485:2492   */\n      dup6\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2593   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":2512:2591   */\n      tag_195\n      tag_141\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2474:2593   */\n    tag_194:\n        /* \"#utility.yul\":2632:2633   */\n      0x00\n        /* \"#utility.yul\":2657:2710   */\n      tag_196\n        /* \"#utility.yul\":2702:2709   */\n      dup6\n        /* \"#utility.yul\":2693:2699   */\n      dup3\n        /* \"#utility.yul\":2682:2691   */\n      dup7\n        /* \"#utility.yul\":2678:2700   */\n      add\n        /* \"#utility.yul\":2657:2710   */\n      tag_150\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2647:2710   */\n      swap3\n      pop\n        /* \"#utility.yul\":2603:2720   */\n      pop\n        /* \"#utility.yul\":2759:2761   */\n      0x20\n        /* \"#utility.yul\":2785:2838   */\n      tag_197\n        /* \"#utility.yul\":2830:2837   */\n      dup6\n        /* \"#utility.yul\":2821:2827   */\n      dup3\n        /* \"#utility.yul\":2810:2819   */\n      dup7\n        /* \"#utility.yul\":2806:2828   */\n      add\n        /* \"#utility.yul\":2785:2838   */\n      tag_154\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2775:2838   */\n      swap2\n      pop\n        /* \"#utility.yul\":2730:2848   */\n      pop\n        /* \"#utility.yul\":2381:2855   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2861:2979   */\n    tag_155:\n        /* \"#utility.yul\":2948:2972   */\n      tag_199\n        /* \"#utility.yul\":2966:2971   */\n      dup2\n        /* \"#utility.yul\":2948:2972   */\n      tag_148\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2943:2946   */\n      dup3\n        /* \"#utility.yul\":2936:2973   */\n      mstore\n        /* \"#utility.yul\":2861:2979   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2985:3207   */\n    tag_37:\n        /* \"#utility.yul\":3078:3082   */\n      0x00\n        /* \"#utility.yul\":3116:3118   */\n      0x20\n        /* \"#utility.yul\":3105:3114   */\n      dup3\n        /* \"#utility.yul\":3101:3119   */\n      add\n        /* \"#utility.yul\":3093:3119   */\n      swap1\n      pop\n        /* \"#utility.yul\":3129:3200   */\n      tag_201\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3129:3200   */\n      tag_155\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2985:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_40:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_204\n      tag_141\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":3289:3408   */\n    tag_203:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_205\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_150\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3666   */\n    tag_156:\n        /* \"#utility.yul\":3635:3659   */\n      tag_207\n        /* \"#utility.yul\":3653:3658   */\n      dup2\n        /* \"#utility.yul\":3635:3659   */\n      tag_152\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3630:3633   */\n      dup3\n        /* \"#utility.yul\":3623:3660   */\n      mstore\n        /* \"#utility.yul\":3548:3666   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3672:3894   */\n    tag_62:\n        /* \"#utility.yul\":3765:3769   */\n      0x00\n        /* \"#utility.yul\":3803:3805   */\n      0x20\n        /* \"#utility.yul\":3792:3801   */\n      dup3\n        /* \"#utility.yul\":3788:3806   */\n      add\n        /* \"#utility.yul\":3780:3806   */\n      swap1\n      pop\n        /* \"#utility.yul\":3816:3887   */\n      tag_209\n        /* \"#utility.yul\":3884:3885   */\n      0x00\n        /* \"#utility.yul\":3873:3882   */\n      dup4\n        /* \"#utility.yul\":3869:3886   */\n      add\n        /* \"#utility.yul\":3860:3866   */\n      dup5\n        /* \"#utility.yul\":3816:3887   */\n      tag_156\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3672:3894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3900:4069   */\n    tag_157:\n        /* \"#utility.yul\":3984:3995   */\n      0x00\n        /* \"#utility.yul\":4018:4024   */\n      dup3\n        /* \"#utility.yul\":4013:4016   */\n      dup3\n        /* \"#utility.yul\":4006:4025   */\n      mstore\n        /* \"#utility.yul\":4058:4062   */\n      0x20\n        /* \"#utility.yul\":4053:4056   */\n      dup3\n        /* \"#utility.yul\":4049:4063   */\n      add\n        /* \"#utility.yul\":4034:4063   */\n      swap1\n      pop\n        /* \"#utility.yul\":3900:4069   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4075:4247   */\n    tag_158:\n        /* \"#utility.yul\":4215:4239   */\n      0x52656769737465723a20494e56414c49445f524f4c4500000000000000000000\n        /* \"#utility.yul\":4211:4212   */\n      0x00\n        /* \"#utility.yul\":4203:4209   */\n      dup3\n        /* \"#utility.yul\":4199:4213   */\n      add\n        /* \"#utility.yul\":4192:4240   */\n      mstore\n        /* \"#utility.yul\":4075:4247   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4253:4619   */\n    tag_159:\n        /* \"#utility.yul\":4395:4398   */\n      0x00\n        /* \"#utility.yul\":4416:4483   */\n      tag_213\n        /* \"#utility.yul\":4480:4482   */\n      0x16\n        /* \"#utility.yul\":4475:4478   */\n      dup4\n        /* \"#utility.yul\":4416:4483   */\n      tag_157\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4409:4483   */\n      swap2\n      pop\n        /* \"#utility.yul\":4492:4585   */\n      tag_214\n        /* \"#utility.yul\":4581:4584   */\n      dup3\n        /* \"#utility.yul\":4492:4585   */\n      tag_158\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4610:4612   */\n      0x20\n        /* \"#utility.yul\":4605:4608   */\n      dup3\n        /* \"#utility.yul\":4601:4613   */\n      add\n        /* \"#utility.yul\":4594:4613   */\n      swap1\n      pop\n        /* \"#utility.yul\":4253:4619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4625:5044   */\n    tag_97:\n        /* \"#utility.yul\":4791:4795   */\n      0x00\n        /* \"#utility.yul\":4829:4831   */\n      0x20\n        /* \"#utility.yul\":4818:4827   */\n      dup3\n        /* \"#utility.yul\":4814:4832   */\n      add\n        /* \"#utility.yul\":4806:4832   */\n      swap1\n      pop\n        /* \"#utility.yul\":4878:4887   */\n      dup2\n        /* \"#utility.yul\":4872:4876   */\n      dup2\n        /* \"#utility.yul\":4868:4888   */\n      sub\n        /* \"#utility.yul\":4864:4865   */\n      0x00\n        /* \"#utility.yul\":4853:4862   */\n      dup4\n        /* \"#utility.yul\":4849:4866   */\n      add\n        /* \"#utility.yul\":4842:4889   */\n      mstore\n        /* \"#utility.yul\":4906:5037   */\n      tag_216\n        /* \"#utility.yul\":5032:5036   */\n      dup2\n        /* \"#utility.yul\":4906:5037   */\n      tag_159\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4898:5037   */\n      swap1\n      pop\n        /* \"#utility.yul\":4625:5044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5050:5382   */\n    tag_139:\n        /* \"#utility.yul\":5171:5175   */\n      0x00\n        /* \"#utility.yul\":5209:5211   */\n      0x40\n        /* \"#utility.yul\":5198:5207   */\n      dup3\n        /* \"#utility.yul\":5194:5212   */\n      add\n        /* \"#utility.yul\":5186:5212   */\n      swap1\n      pop\n        /* \"#utility.yul\":5222:5293   */\n      tag_218\n        /* \"#utility.yul\":5290:5291   */\n      0x00\n        /* \"#utility.yul\":5279:5288   */\n      dup4\n        /* \"#utility.yul\":5275:5292   */\n      add\n        /* \"#utility.yul\":5266:5272   */\n      dup6\n        /* \"#utility.yul\":5222:5293   */\n      tag_156\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5303:5375   */\n      tag_219\n        /* \"#utility.yul\":5371:5373   */\n      0x20\n        /* \"#utility.yul\":5360:5369   */\n      dup4\n        /* \"#utility.yul\":5356:5374   */\n      add\n        /* \"#utility.yul\":5347:5353   */\n      dup5\n        /* \"#utility.yul\":5303:5375   */\n      tag_155\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5050:5382   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b9f11bcc2e5b42f34437d398879253af332aadfafd9bf69f289e1c1dc852a99b64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_721": {
									"entryPoint": null,
									"id": 721,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_624": {
									"entryPoint": 82,
									"id": 624,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_356": {
									"entryPoint": 432,
									"id": 356,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_448": {
									"entryPoint": 333,
									"id": 448,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:1",
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "922:274:1",
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:1",
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nativeSrc": "970:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nativeSrc": "970:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nativeSrc": "939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nativeSrc": "935:32:1",
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nativeSrc": "932:119:1",
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nativeSrc": "1061:128:1",
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nativeSrc": "1076:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nativeSrc": "1147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nativeSrc": "1115:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:1",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:1",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:1",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162000f3b38038062000f3b83398181016040528101906200003691906200021c565b6200004a5f801b826200005260201b60201c565b50506200024c565b5f6200006583836200014d60201b60201c565b620001435760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550620000df620001b060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905062000147565b5f90505b92915050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001e682620001bb565b9050919050565b620001f881620001da565b811462000203575f80fd5b50565b5f815190506200021681620001ed565b92915050565b5f60208284031215620002345762000233620001b7565b5b5f620002438482850162000206565b91505092915050565b610ce1806200025a5f395ff3fe608060405234801561000f575f80fd5b5060043610610114575f3560e01c806374d16f5c116100a0578063a217fddf1161006f578063a217fddf146102e0578063c63568c7146102fe578063d547741f1461031c578063e16c7d9814610338578063f46f16c21461036857610114565b806374d16f5c1461024457806382bfefc81461027457806391d1485414610292578063a126285b146102c257610114565b80632f2ff15d116100e75780632f2ff15d146101b257806336568abe146101ce57806343c5cd74146101ea5780634e2164c914610208578063619d36ef1461022657610114565b806301ffc9a71461011857806312d9a6ad1461014857806320987a7e14610164578063248a9ca314610182575b5f80fd5b610132600480360381019061012d9190610a68565b610386565b60405161013f9190610aad565b60405180910390f35b610162600480360381019061015d9190610b53565b6103ff565b005b61016c61044c565b6040516101799190610ba0565b60405180910390f35b61019c60048036038101906101979190610bb9565b610470565b6040516101a99190610ba0565b60405180910390f35b6101cc60048036038101906101c79190610b53565b61048c565b005b6101e860048036038101906101e39190610b53565b6104fd565b005b6101f2610578565b6040516101ff9190610ba0565b60405180910390f35b61021061059c565b60405161021d9190610ba0565b60405180910390f35b61022e6105c0565b60405161023b9190610ba0565b60405180910390f35b61025e60048036038101906102599190610bb9565b6105e4565b60405161026b9190610bf3565b60405180910390f35b61027c610614565b6040516102899190610ba0565b60405180910390f35b6102ac60048036038101906102a79190610b53565b610638565b6040516102b99190610aad565b60405180910390f35b6102ca61069b565b6040516102d79190610ba0565b60405180910390f35b6102e86106bf565b6040516102f59190610ba0565b60405180910390f35b6103066106c5565b6040516103139190610ba0565b60405180910390f35b61033660048036038101906103319190610b53565b6106e9565b005b610352600480360381019061034d9190610bb9565b61070b565b60405161035f9190610bf3565b60405180910390f35b610370610744565b60405161037d9190610ba0565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103f857506103f782610768565b5b9050919050565b6104098282610638565b610448576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043f90610c66565b60405180910390fd5b5050565b7fdc56da5a1587a4cd75ea240b3d5cd7c4a0eaac792d95a49979f1c23a0cf8895f81565b5f805f8381526020019081526020015f20600101549050919050565b61049582610470565b61049e816107d1565b6104a883836107e5565b508160015f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6105056108ce565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610569576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61057382826108d5565b505050565b7ff45223fc822e0a02a042bb2eec36a76af2a028cc55539c3a40ab438d1089e1c081565b7f64b1d43f4e53241bce58c6f9670f08a22934a523acf2a5359fa7c904ff98bd9781565b7f1cf54708aaa392dbeba88d1a07e69feaba67586acd469366b89b52bf4413225881565b6001602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f96706879d29c248edfb2a2563a8a9d571c49634c0f82013e6f5a7cde739d35d481565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7fcd0c49d5c8438d0944f64e0d3825bed3b606f318474213a77860c93bca5ed99981565b5f801b81565b7f4af58918e2c6f17f8b6da7260d8669fa63150ffd279395662a723476f776f76a81565b6106f282610470565b6106fb816107d1565b61070583836108d5565b50505050565b5f60015f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f23acc66832ff38a7ce3c1caf89922410f4374ba8fd897ffa98f088747997bc6d81565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6107e2816107dd6108ce565b6109be565b50565b5f6107f08383610638565b6108c45760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506108616108ce565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506108c8565b5f90505b92915050565b5f33905090565b5f6108e08383610638565b156109b4575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506109516108ce565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506109b8565b5f90505b92915050565b6109c88282610638565b610a0b5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610a02929190610c84565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a4781610a13565b8114610a51575f80fd5b50565b5f81359050610a6281610a3e565b92915050565b5f60208284031215610a7d57610a7c610a0f565b5b5f610a8a84828501610a54565b91505092915050565b5f8115159050919050565b610aa781610a93565b82525050565b5f602082019050610ac05f830184610a9e565b92915050565b5f819050919050565b610ad881610ac6565b8114610ae2575f80fd5b50565b5f81359050610af381610acf565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b2282610af9565b9050919050565b610b3281610b18565b8114610b3c575f80fd5b50565b5f81359050610b4d81610b29565b92915050565b5f8060408385031215610b6957610b68610a0f565b5b5f610b7685828601610ae5565b9250506020610b8785828601610b3f565b9150509250929050565b610b9a81610ac6565b82525050565b5f602082019050610bb35f830184610b91565b92915050565b5f60208284031215610bce57610bcd610a0f565b5b5f610bdb84828501610ae5565b91505092915050565b610bed81610b18565b82525050565b5f602082019050610c065f830184610be4565b92915050565b5f82825260208201905092915050565b7f52656769737465723a20494e56414c49445f524f4c45000000000000000000005f82015250565b5f610c50601683610c0c565b9150610c5b82610c1c565b602082019050919050565b5f6020820190508181035f830152610c7d81610c44565b9050919050565b5f604082019050610c975f830185610be4565b610ca46020830184610b91565b939250505056fea2646970667358221220b9f11bcc2e5b42f34437d398879253af332aadfafd9bf69f289e1c1dc852a99b64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xF3B CODESIZE SUB DUP1 PUSH3 0xF3B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x21C JUMP JUMPDEST PUSH3 0x4A PUSH0 DUP1 SHL DUP3 PUSH3 0x52 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x24C JUMP JUMPDEST PUSH0 PUSH3 0x65 DUP4 DUP4 PUSH3 0x14D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x143 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0xDF PUSH3 0x1B0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x147 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1E6 DUP3 PUSH3 0x1BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F8 DUP2 PUSH3 0x1DA JUMP JUMPDEST DUP2 EQ PUSH3 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x216 DUP2 PUSH3 0x1ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x234 JUMPI PUSH3 0x233 PUSH3 0x1B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x243 DUP5 DUP3 DUP6 ADD PUSH3 0x206 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCE1 DUP1 PUSH3 0x25A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74D16F5C GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xC63568C7 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xE16C7D98 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xF46F16C2 EQ PUSH2 0x368 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x74D16F5C EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x82BFEFC8 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xA126285B EQ PUSH2 0x2C2 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x43C5CD74 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x4E2164C9 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x619D36EF EQ PUSH2 0x226 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x12D9A6AD EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x20987A7E EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x182 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xA68 JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3F8 JUMPI POP PUSH2 0x3F7 DUP3 PUSH2 0x768 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x409 DUP3 DUP3 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43F SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xDC56DA5A1587A4CD75EA240B3D5CD7C4A0EAAC792D95A49979F1C23A0CF8895F DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x495 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x49E DUP2 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x4A8 DUP4 DUP4 PUSH2 0x7E5 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x505 PUSH2 0x8CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x573 DUP3 DUP3 PUSH2 0x8D5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xF45223FC822E0A02A042BB2EEC36A76AF2A028CC55539C3A40AB438D1089E1C0 DUP2 JUMP JUMPDEST PUSH32 0x64B1D43F4E53241BCE58C6F9670F08A22934A523ACF2A5359FA7C904FF98BD97 DUP2 JUMP JUMPDEST PUSH32 0x1CF54708AAA392DBEBA88D1A07E69FEABA67586ACD469366B89B52BF44132258 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x96706879D29C248EDFB2A2563A8A9D571C49634C0F82013E6F5A7CDE739D35D4 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xCD0C49D5C8438D0944F64E0D3825BED3B606F318474213A77860C93BCA5ED999 DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x4AF58918E2C6F17F8B6DA7260D8669FA63150FFD279395662A723476F776F76A DUP2 JUMP JUMPDEST PUSH2 0x6F2 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x6FB DUP2 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x705 DUP4 DUP4 PUSH2 0x8D5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x23ACC66832FF38A7CE3C1CAF89922410F4374BA8FD897FFA98F088747997BC6D DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E2 DUP2 PUSH2 0x7DD PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x7F0 DUP4 DUP4 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x8C4 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x861 PUSH2 0x8CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x8C8 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x8E0 DUP4 DUP4 PUSH2 0x638 JUMP JUMPDEST ISZERO PUSH2 0x9B4 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x951 PUSH2 0x8CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x9B8 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9C8 DUP3 DUP3 PUSH2 0x638 JUMP JUMPDEST PUSH2 0xA0B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA02 SWAP3 SWAP2 SWAP1 PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA47 DUP2 PUSH2 0xA13 JUMP JUMPDEST DUP2 EQ PUSH2 0xA51 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA62 DUP2 PUSH2 0xA3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7D JUMPI PUSH2 0xA7C PUSH2 0xA0F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA8A DUP5 DUP3 DUP6 ADD PUSH2 0xA54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA7 DUP2 PUSH2 0xA93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC0 PUSH0 DUP4 ADD DUP5 PUSH2 0xA9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD8 DUP2 PUSH2 0xAC6 JUMP JUMPDEST DUP2 EQ PUSH2 0xAE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF3 DUP2 PUSH2 0xACF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB22 DUP3 PUSH2 0xAF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB32 DUP2 PUSH2 0xB18 JUMP JUMPDEST DUP2 EQ PUSH2 0xB3C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB4D DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB69 JUMPI PUSH2 0xB68 PUSH2 0xA0F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB76 DUP6 DUP3 DUP7 ADD PUSH2 0xAE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB87 DUP6 DUP3 DUP7 ADD PUSH2 0xB3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9A DUP2 PUSH2 0xAC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB3 PUSH0 DUP4 ADD DUP5 PUSH2 0xB91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBCE JUMPI PUSH2 0xBCD PUSH2 0xA0F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBDB DUP5 DUP3 DUP6 ADD PUSH2 0xAE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBED DUP2 PUSH2 0xB18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC06 PUSH0 DUP4 ADD DUP5 PUSH2 0xBE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52656769737465723A20494E56414C49445F524F4C4500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC50 PUSH1 0x16 DUP4 PUSH2 0xC0C JUMP JUMPDEST SWAP2 POP PUSH2 0xC5B DUP3 PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC7D DUP2 PUSH2 0xC44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC97 PUSH0 DUP4 ADD DUP6 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0xCA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB91 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 CALL SHL 0xCC 0x2E JUMPDEST TIMESTAMP RETURN PREVRANDAO CALLDATACOPY 0xD3 SWAP9 DUP8 SWAP3 MSTORE8 0xAF CALLER 0x2A 0xAD STATICCALL REVERT SWAP12 0xF6 SWAP16 0x28 SWAP15 SHR SAR 0xC8 MSTORE 0xA9 SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "21593:1139:0:-:0;;;22173:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22218:45;16702:4;22229:18;;22249:13;22218:10;;;:45;;:::i;:::-;;22173:97;21593:1139;;20649:316;20726:4;20747:22;20755:4;20761:7;20747;;;:22;;:::i;:::-;20742:217;;20817:4;20785:6;:12;20792:4;20785:12;;;;;;;;;;;:20;;:29;20806:7;20785:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;20867:12;:10;;;:12;;:::i;:::-;20840:40;;20858:7;20840:40;;20852:4;20840:40;;;;;;;;;;20901:4;20894:11;;;;20742:217;20943:5;20936:12;;20649:316;;;;;:::o;17324:136::-;17401:4;17424:6;:12;17431:4;17424:12;;;;;;;;;;;:20;;:29;17445:7;17424:29;;;;;;;;;;;;;;;;;;;;;;;;;17417:36;;17324:136;;;;:::o;14289:96::-;14342:7;14368:10;14361:17;;14289:96;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;21593:1139:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_397": {
									"entryPoint": 1727,
									"id": 397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DRAW_706": {
									"entryPoint": 1472,
									"id": 706,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@FOMO3D_671": {
									"entryPoint": 1436,
									"id": 671,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@JACKPOT_676": {
									"entryPoint": 1400,
									"id": 676,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MARKET_681": {
									"entryPoint": 1860,
									"id": 681,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PRIZE_ITEMS_686": {
									"entryPoint": 1100,
									"id": 686,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@REFERRAL_691": {
									"entryPoint": 1733,
									"id": 691,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOKEN_701": {
									"entryPoint": 1556,
									"id": 701,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@VRF_696": {
									"entryPoint": 1691,
									"id": 696,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_461": {
									"entryPoint": 2001,
									"id": 461,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_482": {
									"entryPoint": 2494,
									"id": 482,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_624": {
									"entryPoint": 2021,
									"id": 624,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_356": {
									"entryPoint": 2254,
									"id": 356,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_662": {
									"entryPoint": 2261,
									"id": 662,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkRole_762": {
									"entryPoint": 1023,
									"id": 762,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@currentContract_710": {
									"entryPoint": 1508,
									"id": 710,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getContract_774": {
									"entryPoint": 1803,
									"id": 774,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_496": {
									"entryPoint": 1136,
									"id": 496,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_746": {
									"entryPoint": 1164,
									"id": 746,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_448": {
									"entryPoint": 1592,
									"id": 448,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_557": {
									"entryPoint": 1277,
									"id": 557,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_534": {
									"entryPoint": 1769,
									"id": 534,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_31": {
									"entryPoint": 1896,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_430": {
									"entryPoint": 902,
									"id": 430,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 3204,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2575,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9": {
									"entryPoint": 3100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 2622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5385:1",
										"nodeType": "YulBlock",
										"src": "0:5385:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "378:105:1",
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nativeSrc": "388:89:1",
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:1",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nativeSrc": "399:78:1",
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:1",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:1",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nativeSrc": "531:78:1",
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:1",
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:1",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nativeSrc": "589:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nativeSrc": "589:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nativeSrc": "561:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nativeSrc": "551:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nativeSrc": "544:42:1",
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nativeSrc": "541:62:1",
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:1",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nativeSrc": "666:86:1",
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nativeSrc": "676:29:1",
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nativeSrc": "685:20:1",
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nativeSrc": "714:32:1",
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nativeSrc": "714:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:1",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:1",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:1",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nativeSrc": "823:262:1",
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:1",
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nativeSrc": "871:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nativeSrc": "871:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nativeSrc": "840:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:1",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nativeSrc": "836:32:1",
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nativeSrc": "833:119:1",
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nativeSrc": "962:116:1",
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nativeSrc": "977:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:1",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:1",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:1",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nativeSrc": "1036:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nativeSrc": "1016:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:1",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:1",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:1",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nativeSrc": "1133:48:1",
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nativeSrc": "1143:32:1",
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nativeSrc": "1161:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nativeSrc": "1154:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:1",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:1",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nativeSrc": "1246:50:1",
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nativeSrc": "1268:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nativeSrc": "1256:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nativeSrc": "1256:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:1",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:1",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nativeSrc": "1394:118:1",
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nativeSrc": "1404:26:1",
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nativeSrc": "1412:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nativeSrc": "1487:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nativeSrc": "1440:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nativeSrc": "1440:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:1",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:1",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:1",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nativeSrc": "1563:32:1",
													"nodeType": "YulBlock",
													"src": "1563:32:1",
													"statements": [
														{
															"nativeSrc": "1573:16:1",
															"nodeType": "YulAssignment",
															"src": "1573:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:1",
																"nodeType": "YulIdentifier",
																"src": "1584:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:1",
														"nodeType": "YulTypedName",
														"src": "1545:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:1",
														"nodeType": "YulTypedName",
														"src": "1555:7:1",
														"type": ""
													}
												],
												"src": "1518:77:1"
											},
											{
												"body": {
													"nativeSrc": "1644:79:1",
													"nodeType": "YulBlock",
													"src": "1644:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:1",
																"nodeType": "YulBlock",
																"src": "1701:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:1"
																			},
																			"nativeSrc": "1703:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:1"
																		},
																		"nativeSrc": "1703:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1674:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:1"
																				},
																				"nativeSrc": "1674:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:1"
																		},
																		"nativeSrc": "1664:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:1"
																},
																"nativeSrc": "1657:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:1"
															},
															"nativeSrc": "1654:63:1",
															"nodeType": "YulIf",
															"src": "1654:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1601:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:1",
														"nodeType": "YulTypedName",
														"src": "1637:5:1",
														"type": ""
													}
												],
												"src": "1601:122:1"
											},
											{
												"body": {
													"nativeSrc": "1781:87:1",
													"nodeType": "YulBlock",
													"src": "1781:87:1",
													"statements": [
														{
															"nativeSrc": "1791:29:1",
															"nodeType": "YulAssignment",
															"src": "1791:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:1"
																},
																"nativeSrc": "1800:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1829:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:1"
																},
																"nativeSrc": "1829:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:1"
															},
															"nativeSrc": "1829:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1729:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:1",
														"nodeType": "YulTypedName",
														"src": "1759:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:1",
														"nodeType": "YulTypedName",
														"src": "1767:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:1",
														"nodeType": "YulTypedName",
														"src": "1775:5:1",
														"type": ""
													}
												],
												"src": "1729:139:1"
											},
											{
												"body": {
													"nativeSrc": "1919:81:1",
													"nodeType": "YulBlock",
													"src": "1919:81:1",
													"statements": [
														{
															"nativeSrc": "1929:65:1",
															"nodeType": "YulAssignment",
															"src": "1929:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1944:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1944:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1951:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1951:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1940:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1940:3:1"
																},
																"nativeSrc": "1940:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1940:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1929:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1929:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1874:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1901:5:1",
														"nodeType": "YulTypedName",
														"src": "1901:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1911:7:1",
														"nodeType": "YulTypedName",
														"src": "1911:7:1",
														"type": ""
													}
												],
												"src": "1874:126:1"
											},
											{
												"body": {
													"nativeSrc": "2051:51:1",
													"nodeType": "YulBlock",
													"src": "2051:51:1",
													"statements": [
														{
															"nativeSrc": "2061:35:1",
															"nodeType": "YulAssignment",
															"src": "2061:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2090:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2090:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2072:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2072:17:1"
																},
																"nativeSrc": "2072:24:1",
																"nodeType": "YulFunctionCall",
																"src": "2072:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2061:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2061:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2006:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2033:5:1",
														"nodeType": "YulTypedName",
														"src": "2033:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2043:7:1",
														"nodeType": "YulTypedName",
														"src": "2043:7:1",
														"type": ""
													}
												],
												"src": "2006:96:1"
											},
											{
												"body": {
													"nativeSrc": "2151:79:1",
													"nodeType": "YulBlock",
													"src": "2151:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2208:16:1",
																"nodeType": "YulBlock",
																"src": "2208:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2217:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2217:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2220:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2220:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2210:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2210:6:1"
																			},
																			"nativeSrc": "2210:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2210:12:1"
																		},
																		"nativeSrc": "2210:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2174:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2174:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2199:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2199:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2181:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2181:17:1"
																				},
																				"nativeSrc": "2181:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2171:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2171:2:1"
																		},
																		"nativeSrc": "2171:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2171:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2164:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:1"
																},
																"nativeSrc": "2164:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2164:43:1"
															},
															"nativeSrc": "2161:63:1",
															"nodeType": "YulIf",
															"src": "2161:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2108:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2144:5:1",
														"nodeType": "YulTypedName",
														"src": "2144:5:1",
														"type": ""
													}
												],
												"src": "2108:122:1"
											},
											{
												"body": {
													"nativeSrc": "2288:87:1",
													"nodeType": "YulBlock",
													"src": "2288:87:1",
													"statements": [
														{
															"nativeSrc": "2298:29:1",
															"nodeType": "YulAssignment",
															"src": "2298:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2320:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2307:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:1"
																},
																"nativeSrc": "2307:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2307:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2298:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2298:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2363:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2363:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2336:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2336:26:1"
																},
																"nativeSrc": "2336:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2336:33:1"
															},
															"nativeSrc": "2336:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2336:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2236:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2266:6:1",
														"nodeType": "YulTypedName",
														"src": "2266:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2274:3:1",
														"nodeType": "YulTypedName",
														"src": "2274:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2282:5:1",
														"nodeType": "YulTypedName",
														"src": "2282:5:1",
														"type": ""
													}
												],
												"src": "2236:139:1"
											},
											{
												"body": {
													"nativeSrc": "2464:391:1",
													"nodeType": "YulBlock",
													"src": "2464:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2510:83:1",
																"nodeType": "YulBlock",
																"src": "2510:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2512:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2512:77:1"
																			},
																			"nativeSrc": "2512:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2512:79:1"
																		},
																		"nativeSrc": "2512:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2485:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2494:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2481:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:1"
																		},
																		"nativeSrc": "2481:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2506:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2477:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:1"
																},
																"nativeSrc": "2477:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2477:32:1"
															},
															"nativeSrc": "2474:119:1",
															"nodeType": "YulIf",
															"src": "2474:119:1"
														},
														{
															"nativeSrc": "2603:117:1",
															"nodeType": "YulBlock",
															"src": "2603:117:1",
															"statements": [
																{
																	"nativeSrc": "2618:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2618:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2632:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2632:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2622:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2622:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2647:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2647:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2682:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2682:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2693:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2693:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2678:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2678:3:1"
																				},
																				"nativeSrc": "2678:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2678:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2702:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2702:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2657:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2657:20:1"
																		},
																		"nativeSrc": "2657:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2657:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2647:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2647:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2730:118:1",
															"nodeType": "YulBlock",
															"src": "2730:118:1",
															"statements": [
																{
																	"nativeSrc": "2745:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2745:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2759:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2759:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2749:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2749:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2775:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2775:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2810:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2810:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2821:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2821:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2806:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2806:3:1"
																				},
																				"nativeSrc": "2806:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2806:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2830:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2830:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2785:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2785:20:1"
																		},
																		"nativeSrc": "2785:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2785:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2775:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2775:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "2381:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2426:9:1",
														"nodeType": "YulTypedName",
														"src": "2426:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2437:7:1",
														"nodeType": "YulTypedName",
														"src": "2437:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2449:6:1",
														"nodeType": "YulTypedName",
														"src": "2449:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2457:6:1",
														"nodeType": "YulTypedName",
														"src": "2457:6:1",
														"type": ""
													}
												],
												"src": "2381:474:1"
											},
											{
												"body": {
													"nativeSrc": "2926:53:1",
													"nodeType": "YulBlock",
													"src": "2926:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2943:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2943:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2966:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2966:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2948:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "2948:17:1"
																		},
																		"nativeSrc": "2948:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2948:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2936:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2936:6:1"
																},
																"nativeSrc": "2936:37:1",
																"nodeType": "YulFunctionCall",
																"src": "2936:37:1"
															},
															"nativeSrc": "2936:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "2936:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2861:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2914:5:1",
														"nodeType": "YulTypedName",
														"src": "2914:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2921:3:1",
														"nodeType": "YulTypedName",
														"src": "2921:3:1",
														"type": ""
													}
												],
												"src": "2861:118:1"
											},
											{
												"body": {
													"nativeSrc": "3083:124:1",
													"nodeType": "YulBlock",
													"src": "3083:124:1",
													"statements": [
														{
															"nativeSrc": "3093:26:1",
															"nodeType": "YulAssignment",
															"src": "3093:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3105:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3105:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3116:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3116:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3101:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3101:3:1"
																},
																"nativeSrc": "3101:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3101:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3093:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3093:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3173:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:1"
																		},
																		"nativeSrc": "3182:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3129:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3129:43:1"
																},
																"nativeSrc": "3129:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3129:71:1"
															},
															"nativeSrc": "3129:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3129:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2985:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3055:9:1",
														"nodeType": "YulTypedName",
														"src": "3055:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3067:6:1",
														"nodeType": "YulTypedName",
														"src": "3067:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3078:4:1",
														"nodeType": "YulTypedName",
														"src": "3078:4:1",
														"type": ""
													}
												],
												"src": "2985:222:1"
											},
											{
												"body": {
													"nativeSrc": "3279:263:1",
													"nodeType": "YulBlock",
													"src": "3279:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3325:83:1",
																"nodeType": "YulBlock",
																"src": "3325:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3327:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:1"
																			},
																			"nativeSrc": "3327:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:1"
																		},
																		"nativeSrc": "3327:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3300:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3309:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3296:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:1"
																		},
																		"nativeSrc": "3296:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3292:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:1"
																},
																"nativeSrc": "3292:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3292:32:1"
															},
															"nativeSrc": "3289:119:1",
															"nodeType": "YulIf",
															"src": "3289:119:1"
														},
														{
															"nativeSrc": "3418:117:1",
															"nodeType": "YulBlock",
															"src": "3418:117:1",
															"statements": [
																{
																	"nativeSrc": "3433:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3447:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3437:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:1"
																				},
																				"nativeSrc": "3493:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3472:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:1"
																		},
																		"nativeSrc": "3472:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3462:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "3213:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3249:9:1",
														"nodeType": "YulTypedName",
														"src": "3249:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3260:7:1",
														"nodeType": "YulTypedName",
														"src": "3260:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3272:6:1",
														"nodeType": "YulTypedName",
														"src": "3272:6:1",
														"type": ""
													}
												],
												"src": "3213:329:1"
											},
											{
												"body": {
													"nativeSrc": "3613:53:1",
													"nodeType": "YulBlock",
													"src": "3613:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3630:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3630:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3653:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3653:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3635:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3635:17:1"
																		},
																		"nativeSrc": "3635:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3635:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3623:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3623:6:1"
																},
																"nativeSrc": "3623:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3623:37:1"
															},
															"nativeSrc": "3623:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3623:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3548:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3601:5:1",
														"nodeType": "YulTypedName",
														"src": "3601:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3608:3:1",
														"nodeType": "YulTypedName",
														"src": "3608:3:1",
														"type": ""
													}
												],
												"src": "3548:118:1"
											},
											{
												"body": {
													"nativeSrc": "3770:124:1",
													"nodeType": "YulBlock",
													"src": "3770:124:1",
													"statements": [
														{
															"nativeSrc": "3780:26:1",
															"nodeType": "YulAssignment",
															"src": "3780:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3792:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3792:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3803:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3803:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3788:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3788:3:1"
																},
																"nativeSrc": "3788:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3788:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3780:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3780:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3860:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3860:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3873:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3873:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3884:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3884:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3869:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3869:3:1"
																		},
																		"nativeSrc": "3869:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3869:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3816:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3816:43:1"
																},
																"nativeSrc": "3816:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3816:71:1"
															},
															"nativeSrc": "3816:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3816:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3672:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3742:9:1",
														"nodeType": "YulTypedName",
														"src": "3742:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3754:6:1",
														"nodeType": "YulTypedName",
														"src": "3754:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3765:4:1",
														"nodeType": "YulTypedName",
														"src": "3765:4:1",
														"type": ""
													}
												],
												"src": "3672:222:1"
											},
											{
												"body": {
													"nativeSrc": "3996:73:1",
													"nodeType": "YulBlock",
													"src": "3996:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4013:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4013:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4018:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4018:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4006:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4006:6:1"
																},
																"nativeSrc": "4006:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4006:19:1"
															},
															"nativeSrc": "4006:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "4006:19:1"
														},
														{
															"nativeSrc": "4034:29:1",
															"nodeType": "YulAssignment",
															"src": "4034:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4053:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4053:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4058:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4058:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4049:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4049:3:1"
																},
																"nativeSrc": "4049:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4049:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4034:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "4034:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3900:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3968:3:1",
														"nodeType": "YulTypedName",
														"src": "3968:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3973:6:1",
														"nodeType": "YulTypedName",
														"src": "3973:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3984:11:1",
														"nodeType": "YulTypedName",
														"src": "3984:11:1",
														"type": ""
													}
												],
												"src": "3900:169:1"
											},
											{
												"body": {
													"nativeSrc": "4181:66:1",
													"nodeType": "YulBlock",
													"src": "4181:66:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4203:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4203:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4211:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4211:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4199:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4199:3:1"
																		},
																		"nativeSrc": "4199:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4199:14:1"
																	},
																	{
																		"hexValue": "52656769737465723a20494e56414c49445f524f4c45",
																		"kind": "string",
																		"nativeSrc": "4215:24:1",
																		"nodeType": "YulLiteral",
																		"src": "4215:24:1",
																		"type": "",
																		"value": "Register: INVALID_ROLE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4192:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4192:6:1"
																},
																"nativeSrc": "4192:48:1",
																"nodeType": "YulFunctionCall",
																"src": "4192:48:1"
															},
															"nativeSrc": "4192:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "4192:48:1"
														}
													]
												},
												"name": "store_literal_in_memory_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9",
												"nativeSrc": "4075:172:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4173:6:1",
														"nodeType": "YulTypedName",
														"src": "4173:6:1",
														"type": ""
													}
												],
												"src": "4075:172:1"
											},
											{
												"body": {
													"nativeSrc": "4399:220:1",
													"nodeType": "YulBlock",
													"src": "4399:220:1",
													"statements": [
														{
															"nativeSrc": "4409:74:1",
															"nodeType": "YulAssignment",
															"src": "4409:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4475:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4475:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4480:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4480:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4416:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "4416:58:1"
																},
																"nativeSrc": "4416:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4416:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4409:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4409:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4581:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4581:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9",
																	"nativeSrc": "4492:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "4492:88:1"
																},
																"nativeSrc": "4492:93:1",
																"nodeType": "YulFunctionCall",
																"src": "4492:93:1"
															},
															"nativeSrc": "4492:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "4492:93:1"
														},
														{
															"nativeSrc": "4594:19:1",
															"nodeType": "YulAssignment",
															"src": "4594:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4605:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4605:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4610:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4610:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4601:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4601:3:1"
																},
																"nativeSrc": "4601:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4601:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4594:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4594:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4253:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4387:3:1",
														"nodeType": "YulTypedName",
														"src": "4387:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4395:3:1",
														"nodeType": "YulTypedName",
														"src": "4395:3:1",
														"type": ""
													}
												],
												"src": "4253:366:1"
											},
											{
												"body": {
													"nativeSrc": "4796:248:1",
													"nodeType": "YulBlock",
													"src": "4796:248:1",
													"statements": [
														{
															"nativeSrc": "4806:26:1",
															"nodeType": "YulAssignment",
															"src": "4806:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4818:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4818:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4829:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4829:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4814:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4814:3:1"
																},
																"nativeSrc": "4814:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4814:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4806:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4806:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4853:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4853:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4864:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4864:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4849:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4849:3:1"
																		},
																		"nativeSrc": "4849:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4849:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4872:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4872:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4878:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4878:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4868:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4868:3:1"
																		},
																		"nativeSrc": "4868:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4868:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4842:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4842:6:1"
																},
																"nativeSrc": "4842:47:1",
																"nodeType": "YulFunctionCall",
																"src": "4842:47:1"
															},
															"nativeSrc": "4842:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "4842:47:1"
														},
														{
															"nativeSrc": "4898:139:1",
															"nodeType": "YulAssignment",
															"src": "4898:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5032:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5032:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4906:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "4906:124:1"
																},
																"nativeSrc": "4906:131:1",
																"nodeType": "YulFunctionCall",
																"src": "4906:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4898:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4898:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4625:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4776:9:1",
														"nodeType": "YulTypedName",
														"src": "4776:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4791:4:1",
														"nodeType": "YulTypedName",
														"src": "4791:4:1",
														"type": ""
													}
												],
												"src": "4625:419:1"
											},
											{
												"body": {
													"nativeSrc": "5176:206:1",
													"nodeType": "YulBlock",
													"src": "5176:206:1",
													"statements": [
														{
															"nativeSrc": "5186:26:1",
															"nodeType": "YulAssignment",
															"src": "5186:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5198:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5198:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5209:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5209:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5194:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5194:3:1"
																},
																"nativeSrc": "5194:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5194:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5186:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5186:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5266:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5266:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5279:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5279:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5290:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5290:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5275:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5275:3:1"
																		},
																		"nativeSrc": "5275:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5275:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5222:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5222:43:1"
																},
																"nativeSrc": "5222:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5222:71:1"
															},
															"nativeSrc": "5222:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5222:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5347:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5347:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5360:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5360:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5371:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5371:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5356:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5356:3:1"
																		},
																		"nativeSrc": "5356:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5356:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5303:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5303:43:1"
																},
																"nativeSrc": "5303:72:1",
																"nodeType": "YulFunctionCall",
																"src": "5303:72:1"
															},
															"nativeSrc": "5303:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "5303:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "5050:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5140:9:1",
														"nodeType": "YulTypedName",
														"src": "5140:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5152:6:1",
														"nodeType": "YulTypedName",
														"src": "5152:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5160:6:1",
														"nodeType": "YulTypedName",
														"src": "5160:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5171:4:1",
														"nodeType": "YulTypedName",
														"src": "5171:4:1",
														"type": ""
													}
												],
												"src": "5050:332:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Register: INVALID_ROLE\")\n\n    }\n\n    function abi_encode_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610114575f3560e01c806374d16f5c116100a0578063a217fddf1161006f578063a217fddf146102e0578063c63568c7146102fe578063d547741f1461031c578063e16c7d9814610338578063f46f16c21461036857610114565b806374d16f5c1461024457806382bfefc81461027457806391d1485414610292578063a126285b146102c257610114565b80632f2ff15d116100e75780632f2ff15d146101b257806336568abe146101ce57806343c5cd74146101ea5780634e2164c914610208578063619d36ef1461022657610114565b806301ffc9a71461011857806312d9a6ad1461014857806320987a7e14610164578063248a9ca314610182575b5f80fd5b610132600480360381019061012d9190610a68565b610386565b60405161013f9190610aad565b60405180910390f35b610162600480360381019061015d9190610b53565b6103ff565b005b61016c61044c565b6040516101799190610ba0565b60405180910390f35b61019c60048036038101906101979190610bb9565b610470565b6040516101a99190610ba0565b60405180910390f35b6101cc60048036038101906101c79190610b53565b61048c565b005b6101e860048036038101906101e39190610b53565b6104fd565b005b6101f2610578565b6040516101ff9190610ba0565b60405180910390f35b61021061059c565b60405161021d9190610ba0565b60405180910390f35b61022e6105c0565b60405161023b9190610ba0565b60405180910390f35b61025e60048036038101906102599190610bb9565b6105e4565b60405161026b9190610bf3565b60405180910390f35b61027c610614565b6040516102899190610ba0565b60405180910390f35b6102ac60048036038101906102a79190610b53565b610638565b6040516102b99190610aad565b60405180910390f35b6102ca61069b565b6040516102d79190610ba0565b60405180910390f35b6102e86106bf565b6040516102f59190610ba0565b60405180910390f35b6103066106c5565b6040516103139190610ba0565b60405180910390f35b61033660048036038101906103319190610b53565b6106e9565b005b610352600480360381019061034d9190610bb9565b61070b565b60405161035f9190610bf3565b60405180910390f35b610370610744565b60405161037d9190610ba0565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103f857506103f782610768565b5b9050919050565b6104098282610638565b610448576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043f90610c66565b60405180910390fd5b5050565b7fdc56da5a1587a4cd75ea240b3d5cd7c4a0eaac792d95a49979f1c23a0cf8895f81565b5f805f8381526020019081526020015f20600101549050919050565b61049582610470565b61049e816107d1565b6104a883836107e5565b508160015f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6105056108ce565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610569576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61057382826108d5565b505050565b7ff45223fc822e0a02a042bb2eec36a76af2a028cc55539c3a40ab438d1089e1c081565b7f64b1d43f4e53241bce58c6f9670f08a22934a523acf2a5359fa7c904ff98bd9781565b7f1cf54708aaa392dbeba88d1a07e69feaba67586acd469366b89b52bf4413225881565b6001602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f96706879d29c248edfb2a2563a8a9d571c49634c0f82013e6f5a7cde739d35d481565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7fcd0c49d5c8438d0944f64e0d3825bed3b606f318474213a77860c93bca5ed99981565b5f801b81565b7f4af58918e2c6f17f8b6da7260d8669fa63150ffd279395662a723476f776f76a81565b6106f282610470565b6106fb816107d1565b61070583836108d5565b50505050565b5f60015f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f23acc66832ff38a7ce3c1caf89922410f4374ba8fd897ffa98f088747997bc6d81565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6107e2816107dd6108ce565b6109be565b50565b5f6107f08383610638565b6108c45760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506108616108ce565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506108c8565b5f90505b92915050565b5f33905090565b5f6108e08383610638565b156109b4575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506109516108ce565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506109b8565b5f90505b92915050565b6109c88282610638565b610a0b5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610a02929190610c84565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a4781610a13565b8114610a51575f80fd5b50565b5f81359050610a6281610a3e565b92915050565b5f60208284031215610a7d57610a7c610a0f565b5b5f610a8a84828501610a54565b91505092915050565b5f8115159050919050565b610aa781610a93565b82525050565b5f602082019050610ac05f830184610a9e565b92915050565b5f819050919050565b610ad881610ac6565b8114610ae2575f80fd5b50565b5f81359050610af381610acf565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b2282610af9565b9050919050565b610b3281610b18565b8114610b3c575f80fd5b50565b5f81359050610b4d81610b29565b92915050565b5f8060408385031215610b6957610b68610a0f565b5b5f610b7685828601610ae5565b9250506020610b8785828601610b3f565b9150509250929050565b610b9a81610ac6565b82525050565b5f602082019050610bb35f830184610b91565b92915050565b5f60208284031215610bce57610bcd610a0f565b5b5f610bdb84828501610ae5565b91505092915050565b610bed81610b18565b82525050565b5f602082019050610c065f830184610be4565b92915050565b5f82825260208201905092915050565b7f52656769737465723a20494e56414c49445f524f4c45000000000000000000005f82015250565b5f610c50601683610c0c565b9150610c5b82610c1c565b602082019050919050565b5f6020820190508181035f830152610c7d81610c44565b9050919050565b5f604082019050610c975f830185610be4565b610ca46020830184610b91565b939250505056fea2646970667358221220b9f11bcc2e5b42f34437d398879253af332aadfafd9bf69f289e1c1dc852a99b64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74D16F5C GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xC63568C7 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xE16C7D98 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xF46F16C2 EQ PUSH2 0x368 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x74D16F5C EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x82BFEFC8 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xA126285B EQ PUSH2 0x2C2 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x43C5CD74 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x4E2164C9 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x619D36EF EQ PUSH2 0x226 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x12D9A6AD EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x20987A7E EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x182 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xA68 JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3F8 JUMPI POP PUSH2 0x3F7 DUP3 PUSH2 0x768 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x409 DUP3 DUP3 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43F SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xDC56DA5A1587A4CD75EA240B3D5CD7C4A0EAAC792D95A49979F1C23A0CF8895F DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x495 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x49E DUP2 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x4A8 DUP4 DUP4 PUSH2 0x7E5 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x505 PUSH2 0x8CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x573 DUP3 DUP3 PUSH2 0x8D5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xF45223FC822E0A02A042BB2EEC36A76AF2A028CC55539C3A40AB438D1089E1C0 DUP2 JUMP JUMPDEST PUSH32 0x64B1D43F4E53241BCE58C6F9670F08A22934A523ACF2A5359FA7C904FF98BD97 DUP2 JUMP JUMPDEST PUSH32 0x1CF54708AAA392DBEBA88D1A07E69FEABA67586ACD469366B89B52BF44132258 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x96706879D29C248EDFB2A2563A8A9D571C49634C0F82013E6F5A7CDE739D35D4 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xCD0C49D5C8438D0944F64E0D3825BED3B606F318474213A77860C93BCA5ED999 DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x4AF58918E2C6F17F8B6DA7260D8669FA63150FFD279395662A723476F776F76A DUP2 JUMP JUMPDEST PUSH2 0x6F2 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x6FB DUP2 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x705 DUP4 DUP4 PUSH2 0x8D5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x23ACC66832FF38A7CE3C1CAF89922410F4374BA8FD897FFA98F088747997BC6D DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E2 DUP2 PUSH2 0x7DD PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x7F0 DUP4 DUP4 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x8C4 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x861 PUSH2 0x8CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x8C8 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x8E0 DUP4 DUP4 PUSH2 0x638 JUMP JUMPDEST ISZERO PUSH2 0x9B4 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x951 PUSH2 0x8CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x9B8 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9C8 DUP3 DUP3 PUSH2 0x638 JUMP JUMPDEST PUSH2 0xA0B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA02 SWAP3 SWAP2 SWAP1 PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA47 DUP2 PUSH2 0xA13 JUMP JUMPDEST DUP2 EQ PUSH2 0xA51 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA62 DUP2 PUSH2 0xA3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7D JUMPI PUSH2 0xA7C PUSH2 0xA0F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA8A DUP5 DUP3 DUP6 ADD PUSH2 0xA54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA7 DUP2 PUSH2 0xA93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC0 PUSH0 DUP4 ADD DUP5 PUSH2 0xA9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD8 DUP2 PUSH2 0xAC6 JUMP JUMPDEST DUP2 EQ PUSH2 0xAE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF3 DUP2 PUSH2 0xACF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB22 DUP3 PUSH2 0xAF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB32 DUP2 PUSH2 0xB18 JUMP JUMPDEST DUP2 EQ PUSH2 0xB3C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB4D DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB69 JUMPI PUSH2 0xB68 PUSH2 0xA0F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB76 DUP6 DUP3 DUP7 ADD PUSH2 0xAE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB87 DUP6 DUP3 DUP7 ADD PUSH2 0xB3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9A DUP2 PUSH2 0xAC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB3 PUSH0 DUP4 ADD DUP5 PUSH2 0xB91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBCE JUMPI PUSH2 0xBCD PUSH2 0xA0F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBDB DUP5 DUP3 DUP6 ADD PUSH2 0xAE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBED DUP2 PUSH2 0xB18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC06 PUSH0 DUP4 ADD DUP5 PUSH2 0xBE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52656769737465723A20494E56414C49445F524F4C4500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC50 PUSH1 0x16 DUP4 PUSH2 0xC0C JUMP JUMPDEST SWAP2 POP PUSH2 0xC5B DUP3 PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC7D DUP2 PUSH2 0xC44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC97 PUSH0 DUP4 ADD DUP6 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0xCA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB91 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 CALL SHL 0xCC 0x2E JUMPDEST TIMESTAMP RETURN PREVRANDAO CALLDATACOPY 0xD3 SWAP9 DUP8 SWAP3 MSTORE8 0xAF CALLER 0x2A 0xAD STATICCALL REVERT SWAP12 0xF6 SWAP16 0x28 SWAP15 SHR SAR 0xC8 MSTORE 0xA9 SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "21593:1139:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17035:202;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22463:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;21822:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18280:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22276:177;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;19798:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;21704:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21646:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22060:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22115:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22004:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17324:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21952:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16657:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21890:56;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19112:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22608:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21764:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17035:202;17120:4;17158:32;17143:47;;;:11;:47;;;;:87;;;;17194:36;17218:11;17194:23;:36::i;:::-;17143:87;17136:94;;17035:202;;;:::o;22463:140::-;22545:24;22553:5;22560:8;22545:7;:24::i;:::-;22537:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;22463:140;;:::o;21822:62::-;21860:24;21822:62;:::o;18280:120::-;18345:7;18371:6;:12;18378:4;18371:12;;;;;;;;;;;:22;;;18364:29;;18280:120;;;:::o;22276:177::-;22351:18;22364:4;22351:12;:18::i;:::-;16934:16;16945:4;16934:10;:16::i;:::-;22380:25:::1;22391:4;22397:7;22380:10;:25::i;:::-;;22439:7;22415:15;:21;22431:4;22415:21;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;22276:177:::0;;;:::o;19798:245::-;19913:12;:10;:12::i;:::-;19891:34;;:18;:34;;;19887:102;;19948:30;;;;;;;;;;;;;;19887:102;19999:37;20011:4;20017:18;19999:11;:37::i;:::-;;19798:245;;:::o;21704:54::-;21738:20;21704:54;:::o;21646:52::-;21679:19;21646:52;:::o;22060:48::-;22091:17;22060:48;:::o;22115:51::-;;;;;;;;;;;;;;;;;;;;;;:::o;22004:50::-;22036:18;22004:50;:::o;17324:136::-;17401:4;17424:6;:12;17431:4;17424:12;;;;;;;;;;;:20;;:29;17445:7;17424:29;;;;;;;;;;;;;;;;;;;;;;;;;17417:36;;17324:136;;;;:::o;21952:46::-;21982:16;21952:46;:::o;16657:49::-;16702:4;16657:49;;;:::o;21890:56::-;21925:21;21890:56;:::o;19112:138::-;19187:18;19200:4;19187:12;:18::i;:::-;16934:16;16945:4;16934:10;:16::i;:::-;19217:26:::1;19229:4;19235:7;19217:11;:26::i;:::-;;19112:138:::0;;;:::o;22608:111::-;22665:7;22690:15;:22;22706:5;22690:22;;;;;;;;;;;;;;;;;;;;;22683:29;;22608:111;;;:::o;21764:52::-;21797:19;21764:52;:::o;1663:146::-;1739:4;1777:25;1762:40;;;:11;:40;;;;1755:47;;1663:146;;;:::o;17669:103::-;17735:30;17746:4;17752:12;:10;:12::i;:::-;17735:10;:30::i;:::-;17669:103;:::o;20649:316::-;20726:4;20747:22;20755:4;20761:7;20747;:22::i;:::-;20742:217;;20817:4;20785:6;:12;20792:4;20785:12;;;;;;;;;;;:20;;:29;20806:7;20785:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;20867:12;:10;:12::i;:::-;20840:40;;20858:7;20840:40;;20852:4;20840:40;;;;;;;;;;20901:4;20894:11;;;;20742:217;20943:5;20936:12;;20649:316;;;;;:::o;14289:96::-;14342:7;14368:10;14361:17;;14289:96;:::o;21200:317::-;21278:4;21298:22;21306:4;21312:7;21298;:22::i;:::-;21294:217;;;21368:5;21336:6;:12;21343:4;21336:12;;;;;;;;;;;:20;;:29;21357:7;21336:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;21419:12;:10;:12::i;:::-;21392:40;;21410:7;21392:40;;21404:4;21392:40;;;;;;;;;;21453:4;21446:11;;;;21294:217;21495:5;21488:12;;21200:317;;;;;:::o;17902:197::-;17990:22;17998:4;18004:7;17990;:22::i;:::-;17985:108;;18068:7;18077:4;18035:47;;;;;;;;;;;;:::i;:::-;;;;;;;;17985:108;17902:197;;:::o;88:117:1:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:126::-;1911:7;1951:42;1944:5;1940:54;1929:65;;1874:126;;;:::o;2006:96::-;2043:7;2072:24;2090:5;2072:24;:::i;:::-;2061:35;;2006:96;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:474::-;2449:6;2457;2506:2;2494:9;2485:7;2481:23;2477:32;2474:119;;;2512:79;;:::i;:::-;2474:119;2632:1;2657:53;2702:7;2693:6;2682:9;2678:22;2657:53;:::i;:::-;2647:63;;2603:117;2759:2;2785:53;2830:7;2821:6;2810:9;2806:22;2785:53;:::i;:::-;2775:63;;2730:118;2381:474;;;;;:::o;2861:118::-;2948:24;2966:5;2948:24;:::i;:::-;2943:3;2936:37;2861:118;;:::o;2985:222::-;3078:4;3116:2;3105:9;3101:18;3093:26;;3129:71;3197:1;3186:9;3182:17;3173:6;3129:71;:::i;:::-;2985:222;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:118::-;3635:24;3653:5;3635:24;:::i;:::-;3630:3;3623:37;3548:118;;:::o;3672:222::-;3765:4;3803:2;3792:9;3788:18;3780:26;;3816:71;3884:1;3873:9;3869:17;3860:6;3816:71;:::i;:::-;3672:222;;;;:::o;3900:169::-;3984:11;4018:6;4013:3;4006:19;4058:4;4053:3;4049:14;4034:29;;3900:169;;;;:::o;4075:172::-;4215:24;4211:1;4203:6;4199:14;4192:48;4075:172;:::o;4253:366::-;4395:3;4416:67;4480:2;4475:3;4416:67;:::i;:::-;4409:74;;4492:93;4581:3;4492:93;:::i;:::-;4610:2;4605:3;4601:12;4594:19;;4253:366;;;:::o;4625:419::-;4791:4;4829:2;4818:9;4814:18;4806:26;;4878:9;4872:4;4868:20;4864:1;4853:9;4849:17;4842:47;4906:131;5032:4;4906:131;:::i;:::-;4898:139;;4625:419;;;:::o;5050:332::-;5171:4;5209:2;5198:9;5194:18;5186:26;;5222:71;5290:1;5279:9;5275:17;5266:6;5222:71;:::i;:::-;5303:72;5371:2;5360:9;5356:18;5347:6;5303:72;:::i;:::-;5050:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "659400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "352",
								"DRAW()": "436",
								"FOMO3D()": "414",
								"JACKPOT()": "392",
								"MARKET()": "435",
								"PRIZE_ITEMS()": "393",
								"REFERRAL()": "369",
								"TOKEN()": "370",
								"VRF()": "414",
								"checkRole(bytes32,address)": "3314",
								"currentContract(bytes32)": "2850",
								"getContract(bytes32)": "2940",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3189",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 21593,
									"end": 22732,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 21593,
									"end": 22732,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21593,
									"end": 22732,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 22173,
									"end": 22270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22218,
									"end": 22263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 16702,
									"end": 16706,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22229,
									"end": 22247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22229,
									"end": 22247,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 22249,
									"end": 22262,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22218,
									"end": 22228,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 22218,
									"end": 22228,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22218,
									"end": 22228,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 22218,
									"end": 22263,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22218,
									"end": 22263,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 22218,
									"end": 22263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22218,
									"end": 22263,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 22218,
									"end": 22263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22218,
									"end": 22263,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22173,
									"end": 22270,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21593,
									"end": 22732,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 21593,
									"end": 22732,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20649,
									"end": 20965,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20649,
									"end": 20965,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20726,
									"end": 20730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20747,
									"end": 20769,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 20755,
									"end": 20759,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20761,
									"end": 20768,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20747,
									"end": 20754,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 20747,
									"end": 20754,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20747,
									"end": 20754,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 20747,
									"end": 20769,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20747,
									"end": 20769,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 20747,
									"end": 20769,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20747,
									"end": 20769,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 20747,
									"end": 20769,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20742,
									"end": 20959,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 20742,
									"end": 20959,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20817,
									"end": 20821,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20785,
									"end": 20791,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20785,
									"end": 20797,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20792,
									"end": 20796,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20797,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20797,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20797,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20785,
									"end": 20797,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20797,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20797,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20797,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20797,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20785,
									"end": 20797,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20785,
									"end": 20797,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20805,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20785,
									"end": 20805,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20806,
									"end": 20813,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20814,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20785,
									"end": 20821,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20867,
									"end": 20879,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 20867,
									"end": 20877,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 20867,
									"end": 20877,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20867,
									"end": 20877,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 20867,
									"end": 20879,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20867,
									"end": 20879,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 20867,
									"end": 20879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20867,
									"end": 20879,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 20867,
									"end": 20879,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20840,
									"end": 20880,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 20840,
									"end": 20880,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20858,
									"end": 20865,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20840,
									"end": 20880,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 20840,
									"end": 20880,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20852,
									"end": 20856,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 20840,
									"end": 20880,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 20840,
									"end": 20880,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20840,
									"end": 20880,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20840,
									"end": 20880,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20840,
									"end": 20880,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20840,
									"end": 20880,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20840,
									"end": 20880,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20840,
									"end": 20880,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 20840,
									"end": 20880,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20840,
									"end": 20880,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 20901,
									"end": 20905,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20894,
									"end": 20905,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20894,
									"end": 20905,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20894,
									"end": 20905,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20894,
									"end": 20905,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20742,
									"end": 20959,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 20742,
									"end": 20959,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20943,
									"end": 20948,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20936,
									"end": 20948,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20936,
									"end": 20948,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20649,
									"end": 20965,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20649,
									"end": 20965,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20649,
									"end": 20965,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20649,
									"end": 20965,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20649,
									"end": 20965,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20649,
									"end": 20965,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20649,
									"end": 20965,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17324,
									"end": 17460,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 17324,
									"end": 17460,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17401,
									"end": 17405,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17424,
									"end": 17430,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17431,
									"end": 17435,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17436,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17436,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17424,
									"end": 17436,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17436,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17436,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17436,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17424,
									"end": 17436,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17424,
									"end": 17436,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17444,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17424,
									"end": 17444,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17445,
									"end": 17452,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 17424,
									"end": 17453,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17417,
									"end": 17453,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17417,
									"end": 17453,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17324,
									"end": 17460,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17324,
									"end": 17460,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17324,
									"end": 17460,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17324,
									"end": 17460,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17324,
									"end": 17460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14289,
									"end": 14385,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 14289,
									"end": 14385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14342,
									"end": 14349,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14368,
									"end": 14378,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 14361,
									"end": 14378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14361,
									"end": 14378,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14289,
									"end": 14385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14289,
									"end": 14385,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 21593,
									"end": 22732,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 21593,
									"end": 22732,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21593,
									"end": 22732,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21593,
									"end": 22732,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21593,
									"end": 22732,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21593,
									"end": 22732,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21593,
									"end": 22732,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 21593,
									"end": 22732,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21593,
									"end": 22732,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b9f11bcc2e5b42f34437d398879253af332aadfafd9bf69f289e1c1dc852a99b64736f6c63430008170033",
									".code": [
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "74D16F5C"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "C63568C7"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "E16C7D98"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "F46F16C2"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "74D16F5C"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "82BFEFC8"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "A126285B"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "43C5CD74"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "4E2164C9"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "619D36EF"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "12D9A6AD"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "20987A7E"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21593,
											"end": 22732,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 17035,
											"end": 17237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 17035,
											"end": 17237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 17035,
											"end": 17237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 22463,
											"end": 22603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22463,
											"end": 22603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 21822,
											"end": 21884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21822,
											"end": 21884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18280,
											"end": 18400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 18280,
											"end": 18400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 18280,
											"end": 18400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 22276,
											"end": 22453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22276,
											"end": 22453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 19798,
											"end": 20043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 19798,
											"end": 20043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 21704,
											"end": 21758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21704,
											"end": 21758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 21646,
											"end": 21698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21646,
											"end": 21698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 22060,
											"end": 22108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22060,
											"end": 22108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22115,
											"end": 22166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22115,
											"end": 22166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 22115,
											"end": 22166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22004,
											"end": 22054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22004,
											"end": 22054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17324,
											"end": 17460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 17324,
											"end": 17460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 17324,
											"end": 17460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 21952,
											"end": 21998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21952,
											"end": 21998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 16657,
											"end": 16706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 16657,
											"end": 16706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 21890,
											"end": 21946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21890,
											"end": 21946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 19112,
											"end": 19250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 19112,
											"end": 19250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22608,
											"end": 22719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 22608,
											"end": 22719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 22608,
											"end": 22719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 21764,
											"end": 21816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21764,
											"end": 21816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17120,
											"end": 17124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17158,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17143,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17143,
											"end": 17190,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17143,
											"end": 17190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17143,
											"end": 17154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17143,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17143,
											"end": 17190,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17143,
											"end": 17190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17143,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17143,
											"end": 17230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17143,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17143,
											"end": 17230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17143,
											"end": 17230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 17218,
											"end": 17229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 17194,
											"end": 17230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17230,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 17194,
											"end": 17230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17143,
											"end": 17230,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17143,
											"end": 17230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17136,
											"end": 17230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17136,
											"end": 17230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22545,
											"end": 22569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22553,
											"end": 22558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22560,
											"end": 22568,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22545,
											"end": 22552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 22545,
											"end": 22569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22545,
											"end": 22569,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22545,
											"end": 22569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 22537,
											"end": 22596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 22537,
											"end": 22596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21860,
											"end": 21884,
											"name": "PUSH",
											"source": 0,
											"value": "DC56DA5A1587A4CD75EA240B3D5CD7C4A0EAAC792D95A49979F1C23A0CF8895F"
										},
										{
											"begin": 21822,
											"end": 21884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21822,
											"end": 21884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18345,
											"end": 18352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18371,
											"end": 18377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 18383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18378,
											"end": 18382,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 18383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 18383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 18383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18371,
											"end": 18383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 18383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 18383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 18383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 18383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18371,
											"end": 18383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 18383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18371,
											"end": 18383,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 18393,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18371,
											"end": 18393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 18393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18364,
											"end": 18393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18364,
											"end": 18393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18280,
											"end": 18400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22351,
											"end": 22369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 22364,
											"end": 22368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22351,
											"end": 22363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22351,
											"end": 22369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22351,
											"end": 22369,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 22351,
											"end": 22369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16934,
											"end": 16950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16945,
											"end": 16949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16934,
											"end": 16944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16934,
											"end": 16950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16934,
											"end": 16950,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16934,
											"end": 16950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22405,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 22391,
											"end": 22395,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22397,
											"end": 22404,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 22380,
											"end": 22405,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22405,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 22380,
											"end": 22405,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22380,
											"end": 22405,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22439,
											"end": 22446,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22415,
											"end": 22436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22431,
											"end": 22435,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22436,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22415,
											"end": 22436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22436,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22415,
											"end": 22436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22415,
											"end": 22436,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22415,
											"end": 22446,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22276,
											"end": 22453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19913,
											"end": 19925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 19913,
											"end": 19923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 19913,
											"end": 19925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19913,
											"end": 19925,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 19913,
											"end": 19925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19891,
											"end": 19925,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19891,
											"end": 19925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19891,
											"end": 19909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19891,
											"end": 19925,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19891,
											"end": 19925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19891,
											"end": 19925,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19887,
											"end": 19989,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 19978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19948,
											"end": 19978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 19978,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19948,
											"end": 19978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 19978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 19978,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19948,
											"end": 19978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 19978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19948,
											"end": 19978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 19978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 19978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 19978,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 19978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 19978,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19989,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19887,
											"end": 19989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19999,
											"end": 20036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 20011,
											"end": 20015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20035,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19999,
											"end": 20010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 19999,
											"end": 20036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19999,
											"end": 20036,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 19999,
											"end": 20036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19999,
											"end": 20036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19798,
											"end": 20043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21738,
											"end": 21758,
											"name": "PUSH",
											"source": 0,
											"value": "F45223FC822E0A02A042BB2EEC36A76AF2A028CC55539C3A40AB438D1089E1C0"
										},
										{
											"begin": 21704,
											"end": 21758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21679,
											"end": 21698,
											"name": "PUSH",
											"source": 0,
											"value": "64B1D43F4E53241BCE58C6F9670F08A22934A523ACF2A5359FA7C904FF98BD97"
										},
										{
											"begin": 21646,
											"end": 21698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22091,
											"end": 22108,
											"name": "PUSH",
											"source": 0,
											"value": "1CF54708AAA392DBEBA88D1A07E69FEABA67586ACD469366B89B52BF44132258"
										},
										{
											"begin": 22060,
											"end": 22108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22060,
											"end": 22108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22036,
											"end": 22054,
											"name": "PUSH",
											"source": 0,
											"value": "96706879D29C248EDFB2A2563A8A9D571C49634C0F82013E6F5A7CDE739D35D4"
										},
										{
											"begin": 22004,
											"end": 22054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17424,
											"end": 17430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17431,
											"end": 17435,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17424,
											"end": 17436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17424,
											"end": 17436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17424,
											"end": 17436,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17424,
											"end": 17444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17445,
											"end": 17452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17424,
											"end": 17453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17417,
											"end": 17453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17417,
											"end": 17453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17324,
											"end": 17460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21982,
											"end": 21998,
											"name": "PUSH",
											"source": 0,
											"value": "CD0C49D5C8438D0944F64E0D3825BED3B606F318474213A77860C93BCA5ED999"
										},
										{
											"begin": 21952,
											"end": 21998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16702,
											"end": 16706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21925,
											"end": 21946,
											"name": "PUSH",
											"source": 0,
											"value": "4AF58918E2C6F17F8B6DA7260D8669FA63150FFD279395662A723476F776F76A"
										},
										{
											"begin": 21890,
											"end": 21946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19187,
											"end": 19205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 19200,
											"end": 19204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19187,
											"end": 19199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 19187,
											"end": 19205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19187,
											"end": 19205,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 19187,
											"end": 19205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16934,
											"end": 16950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16945,
											"end": 16949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16934,
											"end": 16944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16934,
											"end": 16950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16934,
											"end": 16950,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16934,
											"end": 16950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19217,
											"end": 19243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 19229,
											"end": 19233,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19235,
											"end": 19242,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19217,
											"end": 19228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 19217,
											"end": 19243,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19217,
											"end": 19243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 19217,
											"end": 19243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19217,
											"end": 19243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19112,
											"end": 19250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22665,
											"end": 22672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22690,
											"end": 22705,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22706,
											"end": 22711,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22690,
											"end": 22712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22683,
											"end": 22712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22683,
											"end": 22712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22608,
											"end": 22719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21816,
											"name": "PUSH",
											"source": 0,
											"value": "23ACC66832FF38A7CE3C1CAF89922410F4374BA8FD897FFA98F088747997BC6D"
										},
										{
											"begin": 21764,
											"end": 21816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21764,
											"end": 21816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1809,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1663,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1802,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1762,
											"end": 1802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1762,
											"end": 1802,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1762,
											"end": 1802,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1802,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17669,
											"end": 17772,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 17669,
											"end": 17772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17735,
											"end": 17765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 17746,
											"end": 17750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17752,
											"end": 17764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 17752,
											"end": 17762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 17752,
											"end": 17764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17752,
											"end": 17764,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 17752,
											"end": 17764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17735,
											"end": 17745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 17735,
											"end": 17765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17735,
											"end": 17765,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 17735,
											"end": 17765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17669,
											"end": 17772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17669,
											"end": 17772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20965,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 20649,
											"end": 20965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20726,
											"end": 20730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20747,
											"end": 20769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 20755,
											"end": 20759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20747,
											"end": 20754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 20747,
											"end": 20769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20747,
											"end": 20769,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 20747,
											"end": 20769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20742,
											"end": 20959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 20742,
											"end": 20959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20817,
											"end": 20821,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20785,
											"end": 20791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20785,
											"end": 20797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20792,
											"end": 20796,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20797,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20785,
											"end": 20797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20797,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20785,
											"end": 20797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20785,
											"end": 20797,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20785,
											"end": 20805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20806,
											"end": 20813,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20867,
											"end": 20879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20867,
											"end": 20877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 20867,
											"end": 20879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20867,
											"end": 20879,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20867,
											"end": 20879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20840,
											"end": 20880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20840,
											"end": 20880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20858,
											"end": 20865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20840,
											"end": 20880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20840,
											"end": 20880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20852,
											"end": 20856,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20840,
											"end": 20880,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 20840,
											"end": 20880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20840,
											"end": 20880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20840,
											"end": 20880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20840,
											"end": 20880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20840,
											"end": 20880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20840,
											"end": 20880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20840,
											"end": 20880,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20840,
											"end": 20880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20840,
											"end": 20880,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 20901,
											"end": 20905,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20894,
											"end": 20905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 20894,
											"end": 20905,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20742,
											"end": 20959,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 20742,
											"end": 20959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20943,
											"end": 20948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20936,
											"end": 20948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20965,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 20649,
											"end": 20965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20965,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14289,
											"end": 14385,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14289,
											"end": 14385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14342,
											"end": 14349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14368,
											"end": 14378,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14361,
											"end": 14378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14361,
											"end": 14378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14289,
											"end": 14385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14289,
											"end": 14385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21200,
											"end": 21517,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 21200,
											"end": 21517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21278,
											"end": 21282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21298,
											"end": 21320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 21306,
											"end": 21310,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21312,
											"end": 21319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21298,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 21298,
											"end": 21320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21298,
											"end": 21320,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 21298,
											"end": 21320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21294,
											"end": 21511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21294,
											"end": 21511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 21294,
											"end": 21511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21368,
											"end": 21373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21336,
											"end": 21342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21343,
											"end": 21347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21336,
											"end": 21348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21336,
											"end": 21348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21336,
											"end": 21348,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21336,
											"end": 21356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21357,
											"end": 21364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21336,
											"end": 21373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21419,
											"end": 21431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 21419,
											"end": 21429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 21419,
											"end": 21431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21419,
											"end": 21431,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 21419,
											"end": 21431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21432,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21392,
											"end": 21432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21410,
											"end": 21417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21432,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21392,
											"end": 21432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21404,
											"end": 21408,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21432,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 21392,
											"end": 21432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21392,
											"end": 21432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21392,
											"end": 21432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21392,
											"end": 21432,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 21453,
											"end": 21457,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21446,
											"end": 21457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 21457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21446,
											"end": 21457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 21446,
											"end": 21457,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21294,
											"end": 21511,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 21294,
											"end": 21511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21488,
											"end": 21500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21200,
											"end": 21517,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 21200,
											"end": 21517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21200,
											"end": 21517,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21200,
											"end": 21517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21200,
											"end": 21517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21200,
											"end": 21517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21200,
											"end": 21517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 18099,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 17902,
											"end": 18099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17990,
											"end": 18012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 17998,
											"end": 18002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17990,
											"end": 17997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 17990,
											"end": 18012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17990,
											"end": 18012,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 17990,
											"end": 18012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17985,
											"end": 18093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17985,
											"end": 18093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18068,
											"end": 18075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18077,
											"end": 18081,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 18035,
											"end": 18082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18035,
											"end": 18082,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17985,
											"end": 18093,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17985,
											"end": 18093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 18099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 18099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 18099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1944,
											"end": 1949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1994,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 2000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2090,
											"end": 2095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2072,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2199,
											"end": 2204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2181,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2206,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2222,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2336,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2449,
											"end": 2455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2512,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2682,
											"end": 2691,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2657,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2710,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 2830,
											"end": 2837,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2785,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2979,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2861,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2966,
											"end": 2971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2948,
											"end": 2972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 2972,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2948,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 2973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3207,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2985,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3118,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3129,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3129,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3129,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3129,
											"end": 3200,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 3129,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3207,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3666,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3548,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3653,
											"end": 3658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3635,
											"end": 3659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3659,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3635,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3894,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3672,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3805,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3792,
											"end": 3801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3884,
											"end": 3885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3816,
											"end": 3887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3887,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3816,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3894,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3894,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 4069,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3900,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 3995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4053,
											"end": 4056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 4069,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 4069,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 4069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 4069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 4069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4247,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 4075,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4239,
											"name": "PUSH",
											"source": 1,
											"value": "52656769737465723A20494E56414C49445F524F4C4500000000000000000000"
										},
										{
											"begin": 4211,
											"end": 4212,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4199,
											"end": 4213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4619,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 4253,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4416,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 4480,
											"end": 4482,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4475,
											"end": 4478,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4416,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4483,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 4416,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4492,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4581,
											"end": 4584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4492,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 4492,
											"end": 4585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4492,
											"end": 4585,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4492,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4612,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4625,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4625,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4791,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4818,
											"end": 4827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4888,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5032,
											"end": 5036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 4906,
											"end": 5037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 5037,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 4906,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 5037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 5037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4625,
											"end": 5044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4625,
											"end": 5044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4625,
											"end": 5044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4625,
											"end": 5044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5382,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5050,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5209,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5198,
											"end": 5207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5222,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5290,
											"end": 5291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5279,
											"end": 5288,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5275,
											"end": 5292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5266,
											"end": 5272,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5222,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5222,
											"end": 5293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5222,
											"end": 5293,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5222,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5371,
											"end": 5373,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5360,
											"end": 5369,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5303,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5375,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5303,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5382,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5382,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/periphery/Fomo3d_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"DRAW()": "619d36ef",
							"FOMO3D()": "4e2164c9",
							"JACKPOT()": "43c5cd74",
							"MARKET()": "f46f16c2",
							"PRIZE_ITEMS()": "20987a7e",
							"REFERRAL()": "c63568c7",
							"TOKEN()": "82bfefc8",
							"VRF()": "a126285b",
							"checkRole(bytes32,address)": "12d9a6ad",
							"currentContract(bytes32)": "74d16f5c",
							"getContract(bytes32)": "e16c7d98",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialAdmin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DRAW\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FOMO3D\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JACKPOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARKET\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRIZE_ITEMS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REFERRAL\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VRF\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"checkRole\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"currentContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_role\",\"type\":\"bytes32\"}],\"name\":\"getContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Fomo3d_flattened.sol\":\"Register\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/periphery/Fomo3d_flattened.sol\":{\"keccak256\":\"0xf9c20ba16e565b16c74076ff14ce0bdc8aa2cd5b5178d144fc03b8518b5c7595\",\"urls\":[\"bzz-raw://5d3ff73968ee29bf0ebf5b52e0b662a58aac35e3645e82a74ddca5839d3f0274\",\"dweb:/ipfs/QmZjUjMYatCSrJrBgjNz8uHYH1bnQSiYdu1GEzBYaFawwv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 394,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:Register",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)389_storage)"
							},
							{
								"astId": 710,
								"contract": "contracts/periphery/Fomo3d_flattened.sol:Register",
								"label": "currentContract",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_address)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)389_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)389_storage"
							},
							"t_struct(RoleData)389_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 386,
										"contract": "contracts/periphery/Fomo3d_flattened.sol:Register",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 388,
										"contract": "contracts/periphery/Fomo3d_flattened.sol:Register",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/periphery/Fomo3d_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/periphery/Fomo3d_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/periphery/Fomo3d_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/periphery/Fomo3d_flattened.sol",
					"exportedSymbols": {
						"AccessControl": [
							663
						],
						"Context": [
							374
						],
						"ERC165": [
							32
						],
						"ERC20": [
							1381
						],
						"Fomo3d": [
							1793
						],
						"IAccessControl": [
							114
						],
						"IERC1155Errors": [
							345
						],
						"IERC165": [
							11
						],
						"IERC20": [
							852
						],
						"IERC20Errors": [
							250
						],
						"IERC20Metadata": [
							875
						],
						"IERC721Errors": [
							298
						],
						"IFomo3d": [
							209
						],
						"Register": [
							775
						]
					},
					"id": 1794,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "151:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "177:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IERC165",
							"nameLocation": "467:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "481:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "835:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "860:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "853:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 4,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "853:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "896:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "896:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "895:6:0"
									},
									"scope": 11,
									"src": "826:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1794,
							"src": "457:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 12,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1054:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 14,
										"name": "IERC165",
										"nameLocations": [
											"1588:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "1588:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "1588:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 13,
								"nodeType": "StructuredDocumentation",
								"src": "1081:478:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 32,
							"linearizedBaseContracts": [
								32,
								11
							],
							"name": "ERC165",
							"nameLocation": "1578:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										10
									],
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1745:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 23,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1762:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 25,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1782:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 24,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1777:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1777:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$11",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1791:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1777:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1762:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 22,
												"id": 29,
												"nodeType": "Return",
												"src": "1755:47:0"
											}
										]
									},
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "1602:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1672:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1697:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1690:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 17,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1690:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1689:20:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1739:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1739:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:6:0"
									},
									"scope": 32,
									"src": "1663:146:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1794,
							"src": "1560:251:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 33,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1951:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 34,
								"nodeType": "StructuredDocumentation",
								"src": "1977:89:0",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 114,
							"linearizedBaseContracts": [
								114
							],
							"name": "IAccessControl",
							"nameLocation": "2077:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "2098:56:0",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 41,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "2165:32:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2206:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2198:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2198:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "2223:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2215:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 38,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:37:0"
									},
									"src": "2159:76:0"
								},
								{
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2241:148:0",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 44,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "2400:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2428:2:0"
									},
									"src": "2394:37:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2437:254:0",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 53,
									"name": "RoleAdminChanged",
									"nameLocation": "2702:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2735:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2719:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 46,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "2757:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2741:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "2792:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2776:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 50,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:87:0"
									},
									"src": "2696:110:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2812:212:0",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 62,
									"name": "RoleGranted",
									"nameLocation": "3035:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3063:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "3047:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 55,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3085:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "3069:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3110:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "3094:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3046:71:0"
									},
									"src": "3029:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "3124:275:0",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 71,
									"name": "RoleRevoked",
									"nameLocation": "3410:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3438:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3422:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3460:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3444:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3485:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3469:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3421:71:0"
									},
									"src": "3404:89:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3499:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3589:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3605:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "3597:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 73,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3619:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "3611:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3596:31:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "3651:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3651:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3650:6:0"
									},
									"scope": 114,
									"src": "3580:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3663:184:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3861:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3882:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3874:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3873:14:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3911:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 86,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3910:9:0"
									},
									"scope": 114,
									"src": "3852:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "3926:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 97,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "4179:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4197:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "4189:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 91,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4211:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "4203:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:31:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4228:0:0"
									},
									"scope": 114,
									"src": "4170:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "4235:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "4472:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4491:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "4483:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 99,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4505:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "4497:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4482:31:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4522:0:0"
									},
									"scope": 114,
									"src": "4463:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "4529:491:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5034:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5055:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "5047:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 107,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5069:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "5061:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5046:42:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5097:0:0"
									},
									"scope": 114,
									"src": "5025:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1794,
							"src": "2067:3033:0",
							"usedErrors": [
								41,
								44
							],
							"usedEvents": [
								53,
								62,
								71
							]
						},
						{
							"id": 115,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "5146:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFomo3d",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "5174:41:0",
								"text": " @title Interface of Fomo3d.sol"
							},
							"fullyImplemented": false,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "IFomo3d",
							"nameLocation": "5227:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0f0d29b5d4cebe99e2c93ffec39876a8b37c77ba767270f4f489daede43aea4e",
									"id": 124,
									"name": "Fomo3dDeposit",
									"nameLocation": "5261:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5291:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5275:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5305:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5297:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5297:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5320:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5312:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5274:53:0"
									},
									"src": "5255:73:0"
								},
								{
									"anonymous": false,
									"eventSelector": "3488c34059d2e654b3b166b5ec4ee17bbd37297b906d39c704104a7dc2459b31",
									"id": 130,
									"name": "Fomo3dClaim",
									"nameLocation": "5339:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5367:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5351:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5351:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5381:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5373:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5350:37:0"
									},
									"src": "5333:55:0"
								},
								{
									"errorSelector": "e6c4247b",
									"id": 132,
									"name": "InvalidAddress",
									"nameLocation": "5415:14:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5429:2:0"
									},
									"src": "5409:23:0"
								},
								{
									"errorSelector": "aa7feadc",
									"id": 134,
									"name": "InvalidValue",
									"nameLocation": "5443:12:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5455:2:0"
									},
									"src": "5437:21:0"
								},
								{
									"errorSelector": "2c5211c6",
									"id": 136,
									"name": "InvalidAmount",
									"nameLocation": "5469:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5482:2:0"
									},
									"src": "5463:22:0"
								},
								{
									"errorSelector": "13be252b",
									"id": 138,
									"name": "InsufficientAllowance",
									"nameLocation": "5496:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5517:2:0"
									},
									"src": "5490:30:0"
								},
								{
									"errorSelector": "f4d678b8",
									"id": 140,
									"name": "InsufficientBalance",
									"nameLocation": "5531:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5550:2:0"
									},
									"src": "5525:28:0"
								},
								{
									"canonicalName": "IFomo3d.HistoryInfo",
									"id": 147,
									"members": [
										{
											"constant": false,
											"id": 142,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "5596:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 147,
											"src": "5588:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 141,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5588:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 144,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "5618:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 147,
											"src": "5610:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 143,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5610:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "5641:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 147,
											"src": "5633:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 145,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5633:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "HistoryInfo",
									"nameLocation": "5566:11:0",
									"nodeType": "StructDefinition",
									"scope": 209,
									"src": "5559:95:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "5660:238:0",
										"text": " @notice Deposit from the user\n @notice Only the admin role can call this function\n @param _user The user address\n @param _value The value of the deposit\n @param _amount The amount of the deposit"
									},
									"functionSelector": "0efe6a8b",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "5912:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5928:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5920:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "5943:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5935:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5959:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5951:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5919:48:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5976:0:0"
									},
									"scope": 209,
									"src": "5903:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5983:71:0",
										"text": " @notice Withdraw all the value from the unclaim part"
									},
									"functionSelector": "4e71d92d",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "6068:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6073:2:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6084:0:0"
									},
									"scope": 209,
									"src": "6059:26:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "6091:180:0",
										"text": " @notice Return how much the user can get when he put more amount here\n @param _user The user address\n @param _amount The amount of user put more here"
									},
									"functionSelector": "13da0777",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPredict",
									"nameLocation": "6285:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6304:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "6296:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6296:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6319:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "6311:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6295:32:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6359:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "6351:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6350:15:0"
									},
									"scope": 209,
									"src": "6276:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6372:77:0",
										"text": " @notice get user info\n @param _user The user address"
									},
									"functionSelector": "480a4262",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUnclaim",
									"nameLocation": "6463:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6482:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "6474:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6473:15:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6520:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "6512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6511:15:0"
									},
									"scope": 209,
									"src": "6454:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "eb46260e",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimed",
									"nameLocation": "6541:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6560:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "6552:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:15:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6598:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "6590:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6589:15:0"
									},
									"scope": 209,
									"src": "6532:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8233fbcb",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalProfit",
									"nameLocation": "6619:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6642:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "6634:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6633:15:0"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6680:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "6672:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6671:15:0"
									},
									"scope": 209,
									"src": "6610:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "6693:85:0",
										"text": " @notice get history current nonce. (The nonce of the last history)"
									},
									"functionSelector": "6d1c6041",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentHistoryNonce",
									"nameLocation": "6792:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6814:2:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "6847:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6840:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 196,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6840:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6839:14:0"
									},
									"scope": 209,
									"src": "6783:71:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "6859:100:0",
										"text": " @notice get history info with nonce\n @param _nonce The nonce of the history"
									},
									"functionSelector": "07040e91",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getHistory",
									"nameLocation": "6973:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "6991:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6984:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 201,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6984:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:15:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "7022:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HistoryInfo_$147_memory_ptr",
													"typeString": "struct IFomo3d.HistoryInfo"
												},
												"typeName": {
													"id": 205,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 204,
														"name": "HistoryInfo",
														"nameLocations": [
															"7022:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 147,
														"src": "7022:11:0"
													},
													"referencedDeclaration": 147,
													"src": "7022:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HistoryInfo_$147_storage_ptr",
														"typeString": "struct IFomo3d.HistoryInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7021:20:0"
									},
									"scope": 209,
									"src": "6964:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1794,
							"src": "5217:1828:0",
							"usedErrors": [
								132,
								134,
								136,
								138,
								140
							],
							"usedEvents": [
								124,
								130
							]
						},
						{
							"id": 210,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "7191:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 211,
								"nodeType": "StructuredDocumentation",
								"src": "7217:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "IERC20Errors",
							"nameLocation": "7367:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "7386:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 220,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "7706:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7739:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "7731:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "7755:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "7747:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "7772:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "7764:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7730:49:0"
									},
									"src": "7700:80:0"
								},
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "7786:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 225,
									"name": "ERC20InvalidSender",
									"nameLocation": "7949:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7976:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "7968:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7968:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7967:16:0"
									},
									"src": "7943:41:0"
								},
								{
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "7990:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 230,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "8160:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8189:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "8181:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8180:18:0"
									},
									"src": "8154:45:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "8205:345:0",
										"text": " @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 239,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "8561:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8596:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "8588:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "8613:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "8605:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8605:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "8632:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "8624:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8587:52:0"
									},
									"src": "8555:85:0"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "8646:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 244,
									"name": "ERC20InvalidApprover",
									"nameLocation": "8831:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8860:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "8852:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8851:18:0"
									},
									"src": "8825:45:0"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "8876:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 249,
									"name": "ERC20InvalidSpender",
									"nameLocation": "9082:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9110:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "9102:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9101:17:0"
									},
									"src": "9076:43:0"
								}
							],
							"scope": 1794,
							"src": "7357:1764:0",
							"usedErrors": [
								220,
								225,
								230,
								239,
								244,
								249
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 251,
								"nodeType": "StructuredDocumentation",
								"src": "9123:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "IERC721Errors",
							"nameLocation": "9275:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "9295:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 256,
									"name": "ERC721InvalidOwner",
									"nameLocation": "9525:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9552:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "9544:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9543:15:0"
									},
									"src": "9519:40:0"
								},
								{
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "9565:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 261,
									"name": "ERC721NonexistentToken",
									"nameLocation": "9708:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9739:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "9731:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9730:17:0"
									},
									"src": "9702:46:0"
								},
								{
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "9754:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 270,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "10054:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10083:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "10075:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10075:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10099:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "10091:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10116:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "10108:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10074:48:0"
									},
									"src": "10048:75:0"
								},
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "10129:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 275,
									"name": "ERC721InvalidSender",
									"nameLocation": "10292:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10320:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "10312:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10311:16:0"
									},
									"src": "10286:42:0"
								},
								{
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "10334:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 280,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "10504:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "10534:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "10526:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10525:18:0"
									},
									"src": "10498:46:0"
								},
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "10550:247:0",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 287,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "10808:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10843:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "10835:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10861:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "10853:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10853:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10834:35:0"
									},
									"src": "10802:68:0"
								},
								{
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "10876:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 292,
									"name": "ERC721InvalidApprover",
									"nameLocation": "11061:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "11091:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "11083:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11082:18:0"
									},
									"src": "11055:46:0"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "11107:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 297,
									"name": "ERC721InvalidOperator",
									"nameLocation": "11315:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11345:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "11337:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11336:18:0"
									},
									"src": "11309:46:0"
								}
							],
							"scope": 1794,
							"src": "9265:2092:0",
							"usedErrors": [
								256,
								261,
								270,
								275,
								280,
								287,
								292,
								297
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "11359:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 345,
							"linearizedBaseContracts": [
								345
							],
							"name": "IERC1155Errors",
							"nameLocation": "11513:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "11534:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 310,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "11906:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "11941:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "11933:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11933:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "11957:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "11949:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "11974:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "11966:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11990:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "11982:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11982:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11932:66:0"
									},
									"src": "11900:99:0"
								},
								{
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "12005:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 315,
									"name": "ERC1155InvalidSender",
									"nameLocation": "12168:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "12197:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "12189:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12188:16:0"
									},
									"src": "12162:43:0"
								},
								{
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "12211:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 320,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "12381:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "12412:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "12404:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12403:18:0"
									},
									"src": "12375:47:0"
								},
								{
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "12428:256:0",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 327,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "12695:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12732:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "12724:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12750:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "12742:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12723:33:0"
									},
									"src": "12689:68:0"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "12763:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 332,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "12948:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "12979:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "12971:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12970:18:0"
									},
									"src": "12942:47:0"
								},
								{
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "12995:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 337,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "13203:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13234:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "13226:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13225:18:0"
									},
									"src": "13197:47:0"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "13250:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 344,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "13541:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "13575:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13567:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "13594:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13586:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13566:41:0"
									},
									"src": "13535:73:0"
								}
							],
							"scope": 1794,
							"src": "11503:2107:0",
							"usedErrors": [
								310,
								315,
								320,
								327,
								332,
								337,
								344
							],
							"usedEvents": []
						},
						{
							"id": 346,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "13734:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 347,
								"nodeType": "StructuredDocumentation",
								"src": "13760:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 374,
							"linearizedBaseContracts": [
								374
							],
							"name": "Context",
							"nameLocation": "14275:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "14351:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 352,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "14368:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "14372:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "14368:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 351,
												"id": 354,
												"nodeType": "Return",
												"src": "14361:17:0"
											}
										]
									},
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "14298:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14308:2:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "14342:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14341:9:0"
									},
									"scope": 374,
									"src": "14289:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "14458:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 361,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "14475:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "14479:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "14475:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 360,
												"id": 363,
												"nodeType": "Return",
												"src": "14468:15:0"
											}
										]
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "14400:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14408:2:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "14442:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14442:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14441:16:0"
									},
									"scope": 374,
									"src": "14391:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "14568:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14585:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 369,
												"id": 371,
												"nodeType": "Return",
												"src": "14578:8:0"
											}
										]
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "14505:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14525:2:0"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "14559:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14558:9:0"
									},
									"scope": 374,
									"src": "14496:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1794,
							"src": "14257:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 375,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "14733:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 377,
										"name": "Context",
										"nameLocations": [
											"16458:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 374,
										"src": "16458:7:0"
									},
									"id": 378,
									"nodeType": "InheritanceSpecifier",
									"src": "16458:7:0"
								},
								{
									"baseName": {
										"id": 379,
										"name": "IAccessControl",
										"nameLocations": [
											"16467:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 114,
										"src": "16467:14:0"
									},
									"id": 380,
									"nodeType": "InheritanceSpecifier",
									"src": "16467:14:0"
								},
								{
									"baseName": {
										"id": 381,
										"name": "ERC165",
										"nameLocations": [
											"16483:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 32,
										"src": "16483:6:0"
									},
									"id": 382,
									"nodeType": "InheritanceSpecifier",
									"src": "16483:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 376,
								"nodeType": "StructuredDocumentation",
								"src": "14762:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 663,
							"linearizedBaseContracts": [
								663,
								32,
								11,
								114,
								374
							],
							"name": "AccessControl",
							"nameLocation": "16441:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 389,
									"members": [
										{
											"constant": false,
											"id": 386,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "16555:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 389,
											"src": "16522:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 385,
												"keyName": "account",
												"keyNameLocation": "16538:7:0",
												"keyType": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16530:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "16522:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 384,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16549:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 388,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "16580:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 389,
											"src": "16572:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 387,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "16572:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "16503:8:0",
									"nodeType": "StructDefinition",
									"scope": 663,
									"src": "16496:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 394,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "16644:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "16602:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$389_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 393,
										"keyName": "role",
										"keyNameLocation": "16618:4:0",
										"keyType": {
											"id": 390,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "16610:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "16602:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$389_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 392,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 391,
												"name": "RoleData",
												"nameLocations": [
													"16626:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 389,
												"src": "16626:8:0"
											},
											"referencedDeclaration": 389,
											"src": "16626:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$389_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 397,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "16681:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "16657:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 395,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "16657:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 396,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16702:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "16924:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 403,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "16945:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 402,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															461,
															482
														],
														"referencedDeclaration": 461,
														"src": "16934:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16934:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "16934:16:0"
											},
											{
												"id": 406,
												"nodeType": "PlaceholderStatement",
												"src": "16960:1:0"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "16713:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 408,
									"name": "onlyRole",
									"nameLocation": "16901:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "16918:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "16910:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 399,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16909:14:0"
									},
									"src": "16892:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										31
									],
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "17126:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 417,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "17143:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 419,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "17163:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$114_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$114_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 418,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "17158:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17158:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$114",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "17179:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "17158:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "17143:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 425,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "17218:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 423,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "17194:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$663_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17200:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 31,
															"src": "17194:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17194:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17143:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 416,
												"id": 428,
												"nodeType": "Return",
												"src": "17136:94:0"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "16974:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "17044:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 413,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17102:8:0"
									},
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "17069:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "17062:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 410,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "17062:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17061:20:0"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "17120:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17120:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17119:6:0"
									},
									"scope": 663,
									"src": "17035:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										81
									],
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "17407:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 440,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "17424:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$389_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 442,
															"indexExpression": {
																"id": 441,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "17431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17424:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$389_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17437:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 386,
														"src": "17424:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 445,
													"indexExpression": {
														"id": 444,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "17445:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17424:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 439,
												"id": 446,
												"nodeType": "Return",
												"src": "17417:36:0"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "17243:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "17333:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "17349:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "17341:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 432,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "17355:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17340:31:0"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "17401:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 437,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17401:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17400:6:0"
									},
									"scope": 663,
									"src": "17324:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "17725:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "17746:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 456,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "17752:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17752:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 454,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															461,
															482
														],
														"referencedDeclaration": 482,
														"src": "17735:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17735:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "17735:30:0"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "17466:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "17678:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "17697:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "17689:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 450,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17688:14:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17725:0:0"
									},
									"scope": 663,
									"src": "17669:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "17975:124:0",
										"statements": [
											{
												"condition": {
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "17989:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 470,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "17998:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 471,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "18004:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 469,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "17990:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17990:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "17985:108:0",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "18014:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 475,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "18068:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 476,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "18077:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 474,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "18035:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18035:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "18028:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "17778:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "17911:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "17930:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "17922:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 463,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17944:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "17936:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17921:31:0"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17975:0:0"
									},
									"scope": 663,
									"src": "17902:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										89
									],
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "18354:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 490,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "18371:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$389_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 492,
														"indexExpression": {
															"id": 491,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "18378:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18371:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$389_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "18384:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 388,
													"src": "18371:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 489,
												"id": 494,
												"nodeType": "Return",
												"src": "18364:29:0"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "18105:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "18289:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "18310:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "18302:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 484,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18302:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18301:14:0"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "18345:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 487,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18344:9:0"
									},
									"scope": 663,
									"src": "18280:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										97
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "18790:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 510,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "18811:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 511,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "18817:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 509,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "18800:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18800:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "18800:25:0"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "18406:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 505,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "18783:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 504,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "18770:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18770:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 507,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 503,
												"name": "onlyRole",
												"nameLocations": [
													"18761:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 408,
												"src": "18761:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "18761:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "18705:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "18723:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "18715:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 498,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18737:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "18729:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18714:31:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18790:0:0"
									},
									"scope": 663,
									"src": "18696:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										105
									],
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "19207:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 529,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "19229:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 530,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "19235:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 528,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "19217:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19217:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "19217:26:0"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "18838:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 524,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "19200:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 523,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "19187:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19187:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 522,
												"name": "onlyRole",
												"nameLocations": [
													"19178:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 408,
												"src": "19178:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19178:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "19121:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "19140:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "19132:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 517,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19154:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "19146:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19146:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19131:31:0"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19207:0:0"
									},
									"scope": 663,
									"src": "19112:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										113
									],
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "19877:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 542,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "19891:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 543,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "19913:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19913:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19891:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 550,
												"nodeType": "IfStatement",
												"src": "19887:102:0",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "19927:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 546,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "19948:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19948:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 548,
															"nodeType": "RevertStatement",
															"src": "19941:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 552,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "20011:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 553,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "20017:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 551,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "19999:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19999:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "19999:37:0"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "19256:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "19807:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "19828:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "19820:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 536,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "19842:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "19834:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19819:42:0"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19877:0:0"
									},
									"scope": 663,
									"src": "19798:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "20241:174:0",
										"statements": [
											{
												"assignments": [
													566
												],
												"declarations": [
													{
														"constant": false,
														"id": 566,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "20259:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 584,
														"src": "20251:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 565,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "20251:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 570,
												"initialValue": {
													"arguments": [
														{
															"id": 568,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "20292:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 567,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "20279:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20279:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20251:46:0"
											},
											{
												"expression": {
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 571,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "20307:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$389_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 573,
															"indexExpression": {
																"id": 572,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "20314:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20307:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$389_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "20320:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 388,
														"src": "20307:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 575,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "20332:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "20307:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "20307:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 579,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "20373:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 580,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "20379:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 581,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "20398:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 578,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "20356:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20356:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "EmitStatement",
												"src": "20351:57:0"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "20049:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "20177:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "20199:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "20191:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 559,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "20213:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "20205:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 561,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20190:33:0"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20241:0:0"
									},
									"scope": 663,
									"src": "20168:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "20732:233:0",
										"statements": [
											{
												"condition": {
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "20746:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 596,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "20755:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 597,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "20761:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 595,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "20747:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20747:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 621,
													"nodeType": "Block",
													"src": "20922:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20943:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 594,
															"id": 620,
															"nodeType": "Return",
															"src": "20936:12:0"
														}
													]
												},
												"id": 622,
												"nodeType": "IfStatement",
												"src": "20742:217:0",
												"trueBody": {
													"id": 618,
													"nodeType": "Block",
													"src": "20771:145:0",
													"statements": [
														{
															"expression": {
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 600,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "20785:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$389_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 602,
																			"indexExpression": {
																				"id": 601,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 588,
																				"src": "20792:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20785:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$389_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20798:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 386,
																		"src": "20785:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 605,
																	"indexExpression": {
																		"id": 604,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "20806:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "20785:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "20785:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 608,
															"nodeType": "ExpressionStatement",
															"src": "20785:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 610,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "20852:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 611,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "20858:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 612,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 356,
																			"src": "20867:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20867:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 609,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "20840:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20840:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 615,
															"nodeType": "EmitStatement",
															"src": "20835:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20901:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 594,
															"id": 617,
															"nodeType": "Return",
															"src": "20894:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "20421:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "20658:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "20677:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "20669:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 587,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20691:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "20683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20668:31:0"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "20726:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 592,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20726:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20725:6:0"
									},
									"scope": 663,
									"src": "20649:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "21284:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 635,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "21306:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 636,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "21312:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 634,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "21298:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21298:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 659,
													"nodeType": "Block",
													"src": "21474:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21495:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 633,
															"id": 658,
															"nodeType": "Return",
															"src": "21488:12:0"
														}
													]
												},
												"id": 660,
												"nodeType": "IfStatement",
												"src": "21294:217:0",
												"trueBody": {
													"id": 656,
													"nodeType": "Block",
													"src": "21322:146:0",
													"statements": [
														{
															"expression": {
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 638,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "21336:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$389_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 640,
																			"indexExpression": {
																				"id": 639,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "21343:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "21336:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$389_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 641,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "21349:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 386,
																		"src": "21336:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 643,
																	"indexExpression": {
																		"id": 642,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 629,
																		"src": "21357:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "21336:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21368:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "21336:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 646,
															"nodeType": "ExpressionStatement",
															"src": "21336:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 648,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 627,
																		"src": "21404:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 649,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 629,
																		"src": "21410:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 650,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 356,
																			"src": "21419:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21419:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 647,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "21392:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21392:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 653,
															"nodeType": "EmitStatement",
															"src": "21387:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21453:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 633,
															"id": 655,
															"nodeType": "Return",
															"src": "21446:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "20971:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "21209:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "21229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "21221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 626,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "21243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "21235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21220:31:0"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "21278:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 631,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21278:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21277:6:0"
									},
									"scope": 663,
									"src": "21200:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1794,
							"src": "16423:5096:0",
							"usedErrors": [
								41,
								44
							],
							"usedEvents": [
								53,
								62,
								71
							]
						},
						{
							"id": 664,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "21565:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 665,
										"name": "AccessControl",
										"nameLocations": [
											"21614:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "21614:13:0"
									},
									"id": 666,
									"nodeType": "InheritanceSpecifier",
									"src": "21614:13:0"
								}
							],
							"canonicalName": "Register",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 775,
							"linearizedBaseContracts": [
								775,
								663,
								32,
								11,
								114,
								374
							],
							"name": "Register",
							"nameLocation": "21602:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "4e2164c9",
									"id": 671,
									"mutability": "constant",
									"name": "FOMO3D",
									"nameLocation": "21670:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "21646:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 667,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "21646:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "464f4d4f3344",
												"id": 669,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "21689:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_64b1d43f4e53241bce58c6f9670f08a22934a523acf2a5359fa7c904ff98bd97",
													"typeString": "literal_string \"FOMO3D\""
												},
												"value": "FOMO3D"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_64b1d43f4e53241bce58c6f9670f08a22934a523acf2a5359fa7c904ff98bd97",
													"typeString": "literal_string \"FOMO3D\""
												}
											],
											"id": 668,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "21679:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 670,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "21679:19:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "43c5cd74",
									"id": 676,
									"mutability": "constant",
									"name": "JACKPOT",
									"nameLocation": "21728:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "21704:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 672,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "21704:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4a41434b504f54",
												"id": 674,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "21748:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f45223fc822e0a02a042bb2eec36a76af2a028cc55539c3a40ab438d1089e1c0",
													"typeString": "literal_string \"JACKPOT\""
												},
												"value": "JACKPOT"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_f45223fc822e0a02a042bb2eec36a76af2a028cc55539c3a40ab438d1089e1c0",
													"typeString": "literal_string \"JACKPOT\""
												}
											],
											"id": 673,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "21738:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 675,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "21738:20:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f46f16c2",
									"id": 681,
									"mutability": "constant",
									"name": "MARKET",
									"nameLocation": "21788:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "21764:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 677,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "21764:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d41524b4554",
												"id": 679,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "21807:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_23acc66832ff38a7ce3c1caf89922410f4374ba8fd897ffa98f088747997bc6d",
													"typeString": "literal_string \"MARKET\""
												},
												"value": "MARKET"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_23acc66832ff38a7ce3c1caf89922410f4374ba8fd897ffa98f088747997bc6d",
													"typeString": "literal_string \"MARKET\""
												}
											],
											"id": 678,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "21797:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 680,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "21797:19:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "20987a7e",
									"id": 686,
									"mutability": "constant",
									"name": "PRIZE_ITEMS",
									"nameLocation": "21846:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "21822:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 682,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "21822:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5052495a455f4954454d53",
												"id": 684,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "21870:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_dc56da5a1587a4cd75ea240b3d5cd7c4a0eaac792d95a49979f1c23a0cf8895f",
													"typeString": "literal_string \"PRIZE_ITEMS\""
												},
												"value": "PRIZE_ITEMS"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_dc56da5a1587a4cd75ea240b3d5cd7c4a0eaac792d95a49979f1c23a0cf8895f",
													"typeString": "literal_string \"PRIZE_ITEMS\""
												}
											],
											"id": 683,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "21860:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 685,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "21860:24:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c63568c7",
									"id": 691,
									"mutability": "constant",
									"name": "REFERRAL",
									"nameLocation": "21914:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "21890:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 687,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "21890:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "524546455252414c",
												"id": 689,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "21935:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_4af58918e2c6f17f8b6da7260d8669fa63150ffd279395662a723476f776f76a",
													"typeString": "literal_string \"REFERRAL\""
												},
												"value": "REFERRAL"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_4af58918e2c6f17f8b6da7260d8669fa63150ffd279395662a723476f776f76a",
													"typeString": "literal_string \"REFERRAL\""
												}
											],
											"id": 688,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "21925:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 690,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "21925:21:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a126285b",
									"id": 696,
									"mutability": "constant",
									"name": "VRF",
									"nameLocation": "21976:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "21952:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 692,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "21952:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "565246",
												"id": 694,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "21992:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_cd0c49d5c8438d0944f64e0d3825bed3b606f318474213a77860c93bca5ed999",
													"typeString": "literal_string \"VRF\""
												},
												"value": "VRF"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_cd0c49d5c8438d0944f64e0d3825bed3b606f318474213a77860c93bca5ed999",
													"typeString": "literal_string \"VRF\""
												}
											],
											"id": 693,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "21982:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 695,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "21982:16:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "82bfefc8",
									"id": 701,
									"mutability": "constant",
									"name": "TOKEN",
									"nameLocation": "22028:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "22004:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 697,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "22004:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "544f4b454e",
												"id": 699,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "22046:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_96706879d29c248edfb2a2563a8a9d571c49634c0f82013e6f5a7cde739d35d4",
													"typeString": "literal_string \"TOKEN\""
												},
												"value": "TOKEN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_96706879d29c248edfb2a2563a8a9d571c49634c0f82013e6f5a7cde739d35d4",
													"typeString": "literal_string \"TOKEN\""
												}
											],
											"id": 698,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "22036:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 700,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "22036:18:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "619d36ef",
									"id": 706,
									"mutability": "constant",
									"name": "DRAW",
									"nameLocation": "22084:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "22060:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 702,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "22060:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "44524157",
												"id": 704,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "22101:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_1cf54708aaa392dbeba88d1a07e69feaba67586acd469366b89b52bf44132258",
													"typeString": "literal_string \"DRAW\""
												},
												"value": "DRAW"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_1cf54708aaa392dbeba88d1a07e69feaba67586acd469366b89b52bf44132258",
													"typeString": "literal_string \"DRAW\""
												}
											],
											"id": 703,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "22091:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 705,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "22091:17:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "74d16f5c",
									"id": 710,
									"mutability": "mutable",
									"name": "currentContract",
									"nameLocation": "22151:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "22115:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
										"typeString": "mapping(bytes32 => address)"
									},
									"typeName": {
										"id": 709,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 707,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "22124:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "22115:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
											"typeString": "mapping(bytes32 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 708,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "22135:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "22208:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 716,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "22229:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 717,
															"name": "_initialAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "22249:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 715,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "22218:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22218:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "22218:45:0"
											}
										]
									},
									"id": 721,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "_initialAdmin",
												"nameLocation": "22193:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "22185:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22184:23:0"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22208:0:0"
									},
									"scope": 775,
									"src": "22173:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										515
									],
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "22370:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 735,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "22391:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 736,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "22397:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "22380:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22380:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "22380:25:0"
											},
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 739,
															"name": "currentContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "22415:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 741,
														"indexExpression": {
															"id": 740,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "22431:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22415:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 742,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "22439:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22415:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "22415:31:0"
											}
										]
									},
									"functionSelector": "2f2ff15d",
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 730,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "22364:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 729,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "22351:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22351:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 732,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 728,
												"name": "onlyRole",
												"nameLocations": [
													"22342:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 408,
												"src": "22342:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22342:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "22285:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 727,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22333:8:0"
									},
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "22303:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "22295:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 722,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22317:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "22309:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22294:31:0"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22370:0:0"
									},
									"scope": 775,
									"src": "22276:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "22527:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 755,
																	"name": "_role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "22553:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 756,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "22560:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 754,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "22545:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22545:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52656769737465723a20494e56414c49445f524f4c45",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22571:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9",
																"typeString": "literal_string \"Register: INVALID_ROLE\""
															},
															"value": "Register: INVALID_ROLE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399c5fbad04de65c54e5838f7935ddc6075e3c33a8c6cd5ba994704c07093cf9",
																"typeString": "literal_string \"Register: INVALID_ROLE\""
															}
														],
														"id": 753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22537:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "22537:59:0"
											}
										]
									},
									"functionSelector": "12d9a6ad",
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkRole",
									"nameLocation": "22472:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "_role",
												"nameLocation": "22490:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "22482:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 747,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "22505:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "22497:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22481:33:0"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22527:0:0"
									},
									"scope": 775,
									"src": "22463:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "22673:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 769,
														"name": "currentContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "22690:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
															"typeString": "mapping(bytes32 => address)"
														}
													},
													"id": 771,
													"indexExpression": {
														"id": 770,
														"name": "_role",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "22706:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "22690:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 768,
												"id": 772,
												"nodeType": "Return",
												"src": "22683:29:0"
											}
										]
									},
									"functionSelector": "e16c7d98",
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContract",
									"nameLocation": "22617:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "_role",
												"nameLocation": "22637:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "22629:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 763,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22628:15:0"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "22665:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:9:0"
									},
									"scope": 775,
									"src": "22608:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1794,
							"src": "21593:1139:0",
							"usedErrors": [
								41,
								44
							],
							"usedEvents": [
								53,
								62,
								71
							]
						},
						{
							"id": 776,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "22865:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 777,
								"nodeType": "StructuredDocumentation",
								"src": "22891:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 852,
							"linearizedBaseContracts": [
								852
							],
							"name": "IERC20",
							"nameLocation": "22972:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22985:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 786,
									"name": "Transfer",
									"nameLocation": "23154:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23179:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "23163:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23201:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "23185:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23213:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "23205:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23162:57:0"
									},
									"src": "23148:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "23226:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 795,
									"name": "Approval",
									"nameLocation": "23385:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23410:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "23394:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "23433:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "23417:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23450:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "23442:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23393:63:0"
									},
									"src": "23379:78:0"
								},
								{
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "23463:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "23542:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23553:2:0"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "23579:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23578:9:0"
									},
									"scope": 852,
									"src": "23533:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "23594:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "23679:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23697:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "23689:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23688:17:0"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "23729:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23728:9:0"
									},
									"scope": 852,
									"src": "23670:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "23744:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "23971:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23988:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "23980:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24000:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "23992:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23979:27:0"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "24025:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 816,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24025:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24024:6:0"
									},
									"scope": 852,
									"src": "23962:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "24037:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "24315:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "24333:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "24325:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "24348:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "24340:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24324:32:0"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "24380:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24379:9:0"
									},
									"scope": 852,
									"src": "24306:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "24395:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "25076:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25092:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "25084:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25109:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "25101:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25083:32:0"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "25134:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 836,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25134:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25133:6:0"
									},
									"scope": 852,
									"src": "25067:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "25146:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "25457:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25478:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "25470:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25492:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "25484:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25504:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "25496:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25469:41:0"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "25529:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 848,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25529:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25528:6:0"
									},
									"scope": 852,
									"src": "25448:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1794,
							"src": "22962:2575:0",
							"usedErrors": [],
							"usedEvents": [
								786,
								795
							]
						},
						{
							"id": 853,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "25709:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 855,
										"name": "IERC20",
										"nameLocations": [
											"25851:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 852,
										"src": "25851:6:0"
									},
									"id": 856,
									"nodeType": "InheritanceSpecifier",
									"src": "25851:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 854,
								"nodeType": "StructuredDocumentation",
								"src": "25736:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 875,
							"linearizedBaseContracts": [
								875,
								852
							],
							"name": "IERC20Metadata",
							"nameLocation": "25833:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "25864:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "25932:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25936:2:0"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "25962:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 859,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25962:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25961:15:0"
									},
									"scope": 875,
									"src": "25923:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "25983:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "26053:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26059:2:0"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "26085:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 865,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26085:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26084:15:0"
									},
									"scope": 875,
									"src": "26044:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "26106:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 874,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "26185:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26193:2:0"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "26219:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 871,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "26219:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26218:7:0"
									},
									"scope": 875,
									"src": "26176:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1794,
							"src": "25823:405:0",
							"usedErrors": [],
							"usedEvents": [
								786,
								795
							]
						},
						{
							"id": 876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "26360:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 878,
										"name": "Context",
										"nameLocations": [
											"27470:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 374,
										"src": "27470:7:0"
									},
									"id": 879,
									"nodeType": "InheritanceSpecifier",
									"src": "27470:7:0"
								},
								{
									"baseName": {
										"id": 880,
										"name": "IERC20",
										"nameLocations": [
											"27479:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 852,
										"src": "27479:6:0"
									},
									"id": 881,
									"nodeType": "InheritanceSpecifier",
									"src": "27479:6:0"
								},
								{
									"baseName": {
										"id": 882,
										"name": "IERC20Metadata",
										"nameLocations": [
											"27487:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 875,
										"src": "27487:14:0"
									},
									"id": 883,
									"nodeType": "InheritanceSpecifier",
									"src": "27487:14:0"
								},
								{
									"baseName": {
										"id": 884,
										"name": "IERC20Errors",
										"nameLocations": [
											"27503:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 250,
										"src": "27503:12:0"
									},
									"id": 885,
									"nodeType": "InheritanceSpecifier",
									"src": "27503:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "26390:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1381,
							"linearizedBaseContracts": [
								1381,
								250,
								875,
								852,
								374
							],
							"name": "ERC20",
							"nameLocation": "27461:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 889,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "27566:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1381,
									"src": "27522:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 888,
										"keyName": "account",
										"keyNameLocation": "27538:7:0",
										"keyType": {
											"id": 886,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "27530:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "27522:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 887,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "27549:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 895,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "27654:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1381,
									"src": "27582:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 894,
										"keyName": "account",
										"keyNameLocation": "27598:7:0",
										"keyType": {
											"id": 890,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "27590:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "27582:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 893,
											"keyName": "spender",
											"keyNameLocation": "27625:7:0",
											"keyType": {
												"id": 891,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "27617:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "27609:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 892,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "27636:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 897,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "27688:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1381,
									"src": "27672:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 896,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27672:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 899,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "27722:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1381,
									"src": "27707:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 898,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "27707:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 901,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "27748:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1381,
									"src": "27733:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 900,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "27733:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "27994:57:0",
										"statements": [
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 909,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "28004:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 910,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "28012:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "28004:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "28004:13:0"
											},
											{
												"expression": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 913,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "28027:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 914,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "28037:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "28027:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "28027:17:0"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "27762:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 918,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "27964:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "27950:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 903,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27950:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "27985:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "27971:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 905,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27971:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27949:44:0"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27994:0:0"
									},
									"scope": 1381,
									"src": "27938:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										862
									],
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "28176:29:0",
										"statements": [
											{
												"expression": {
													"id": 924,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 899,
													"src": "28193:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 923,
												"id": 925,
												"nodeType": "Return",
												"src": "28186:12:0"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "28057:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "28125:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28129:2:0"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "28161:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 921,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28161:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28160:15:0"
									},
									"scope": 1381,
									"src": "28116:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										868
									],
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "28380:31:0",
										"statements": [
											{
												"expression": {
													"id": 933,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 901,
													"src": "28397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 932,
												"id": 934,
												"nodeType": "Return",
												"src": "28390:14:0"
											}
										]
									},
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "28211:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "28327:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28333:2:0"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "28365:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 930,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28365:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28364:15:0"
									},
									"scope": 1381,
									"src": "28318:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										874
									],
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "29100:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29117:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 941,
												"id": 943,
												"nodeType": "Return",
												"src": "29110:9:0"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "28417:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "29053:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29061:2:0"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "29093:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 939,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "29093:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29092:7:0"
									},
									"scope": 1381,
									"src": "29044:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										801
									],
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "29247:36:0",
										"statements": [
											{
												"expression": {
													"id": 951,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 897,
													"src": "29264:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 950,
												"id": 952,
												"nodeType": "Return",
												"src": "29257:19:0"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "29132:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "29195:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29206:2:0"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "29238:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29237:9:0"
									},
									"scope": 1381,
									"src": "29186:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										809
									],
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "29415:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 962,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "29432:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 964,
													"indexExpression": {
														"id": 963,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "29442:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29432:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 961,
												"id": 965,
												"nodeType": "Return",
												"src": "29425:25:0"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "29289:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "29350:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "29368:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "29360:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29360:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29359:17:0"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "29406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29405:9:0"
									},
									"scope": 1381,
									"src": "29341:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										819
									],
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "29727:103:0",
										"statements": [
											{
												"assignments": [
													978
												],
												"declarations": [
													{
														"constant": false,
														"id": 978,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "29745:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 990,
														"src": "29737:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 977,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "29737:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 981,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 979,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "29753:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29753:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29737:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "29785:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "29792:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 985,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "29796:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 982,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "29775:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29775:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "29775:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29819:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 976,
												"id": 989,
												"nodeType": "Return",
												"src": "29812:11:0"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "29463:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "29661:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29678:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "29670:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "29682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29669:27:0"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "29721:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 974,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29721:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29720:6:0"
									},
									"scope": 1381,
									"src": "29652:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										829
									],
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "29977:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1001,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "29994:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1003,
														"indexExpression": {
															"id": 1002,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "30006:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "29994:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1005,
													"indexExpression": {
														"id": 1004,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "30013:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29994:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1006,
												"nodeType": "Return",
												"src": "29987:34:0"
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "29836:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "29897:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "29915:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "29907:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "29930:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "29922:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29906:32:0"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "29968:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29967:9:0"
									},
									"scope": 1381,
									"src": "29888:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										839
									],
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "30414:107:0",
										"statements": [
											{
												"assignments": [
													1019
												],
												"declarations": [
													{
														"constant": false,
														"id": 1019,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "30432:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1031,
														"src": "30424:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1018,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "30424:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1022,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1020,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "30440:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30440:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30424:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1024,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "30471:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1025,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "30478:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1026,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "30487:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1023,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1272,
															1332
														],
														"referencedDeclaration": 1272,
														"src": "30462:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30462:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "30462:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "30510:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1017,
												"id": 1030,
												"nodeType": "Return",
												"src": "30503:11:0"
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "30034:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "30344:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "30360:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "30352:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30377:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "30369:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30351:32:0"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "30408:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1015,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30408:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30407:6:0"
									},
									"scope": 1381,
									"src": "30335:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										851
									],
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "31174:151:0",
										"statements": [
											{
												"assignments": [
													1045
												],
												"declarations": [
													{
														"constant": false,
														"id": 1045,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "31192:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "31184:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1044,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "31184:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1048,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1046,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "31202:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31202:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31184:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1050,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "31240:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1051,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "31246:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "31255:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1049,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "31224:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31224:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "31224:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1056,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "31281:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1057,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "31287:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "31291:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1055,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "31271:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31271:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "31271:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31314:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1043,
												"id": 1062,
												"nodeType": "Return",
												"src": "31307:11:0"
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "30527:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "31090:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "31111:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "31103:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31125:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "31117:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31117:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31137:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "31129:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31102:41:0"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "31168:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31168:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31167:6:0"
									},
									"scope": 1381,
									"src": "31081:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "31767:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1074,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "31781:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31797:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31789:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1075,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "31789:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31789:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31781:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1088,
												"nodeType": "IfStatement",
												"src": "31777:86:0",
												"trueBody": {
													"id": 1087,
													"nodeType": "Block",
													"src": "31801:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1083,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31849:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "31841:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1081,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "31841:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31841:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1080,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "31822:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31822:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1086,
															"nodeType": "RevertStatement",
															"src": "31815:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1089,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "31876:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31890:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31882:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1090,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "31882:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31882:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31876:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1103,
												"nodeType": "IfStatement",
												"src": "31872:86:0",
												"trueBody": {
													"id": 1102,
													"nodeType": "Block",
													"src": "31894:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1098,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31944:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "31936:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1096,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "31936:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31936:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1095,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "31915:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31915:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1101,
															"nodeType": "RevertStatement",
															"src": "31908:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1105,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "31975:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1106,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "31981:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1107,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "31985:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1104,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "31967:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31967:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "31967:24:0"
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "31331:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "31707:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "31725:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "31717:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31739:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "31731:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31751:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "31743:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31716:41:0"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31767:0:0"
									},
									"scope": 1381,
									"src": "31698:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "32388:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1121,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "32402:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32418:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1122,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32410:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32410:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32402:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1158,
													"nodeType": "Block",
													"src": "32576:362:0",
													"statements": [
														{
															"assignments": [
																1133
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1133,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "32598:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1158,
																	"src": "32590:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1132,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "32590:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1137,
															"initialValue": {
																"baseExpression": {
																	"id": 1134,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "32612:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1136,
																"indexExpression": {
																	"id": 1135,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "32622:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32612:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "32590:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1138,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "32645:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1139,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "32659:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32645:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1148,
															"nodeType": "IfStatement",
															"src": "32641:115:0",
															"trueBody": {
																"id": 1147,
																"nodeType": "Block",
																"src": "32666:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1142,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1114,
																					"src": "32716:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1143,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "32722:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1144,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1118,
																					"src": "32735:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1141,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "32691:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32691:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1146,
																		"nodeType": "RevertStatement",
																		"src": "32684:57:0"
																	}
																]
															}
														},
														{
															"id": 1157,
															"nodeType": "UncheckedBlock",
															"src": "32769:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1149,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 889,
																				"src": "32876:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1151,
																			"indexExpression": {
																				"id": 1150,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1114,
																				"src": "32886:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "32876:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1152,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1133,
																				"src": "32894:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1153,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1118,
																				"src": "32908:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32894:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32876:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1156,
																	"nodeType": "ExpressionStatement",
																	"src": "32876:37:0"
																}
															]
														}
													]
												},
												"id": 1159,
												"nodeType": "IfStatement",
												"src": "32398:540:0",
												"trueBody": {
													"id": 1131,
													"nodeType": "Block",
													"src": "32422:148:0",
													"statements": [
														{
															"expression": {
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1127,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "32538:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1128,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "32554:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32538:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1130,
															"nodeType": "ExpressionStatement",
															"src": "32538:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1160,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "32952:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32966:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32958:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1161,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32958:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32958:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32952:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1179,
													"nodeType": "Block",
													"src": "33167:206:0",
													"statements": [
														{
															"id": 1178,
															"nodeType": "UncheckedBlock",
															"src": "33181:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 1176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1172,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 889,
																				"src": "33326:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1174,
																			"indexExpression": {
																				"id": 1173,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1116,
																				"src": "33336:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "33326:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1175,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "33343:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33326:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1177,
																	"nodeType": "ExpressionStatement",
																	"src": "33326:22:0"
																}
															]
														}
													]
												},
												"id": 1180,
												"nodeType": "IfStatement",
												"src": "32948:425:0",
												"trueBody": {
													"id": 1171,
													"nodeType": "Block",
													"src": "32970:191:0",
													"statements": [
														{
															"id": 1170,
															"nodeType": "UncheckedBlock",
															"src": "32984:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1166,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 897,
																			"src": "33115:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1167,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "33131:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33115:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1169,
																	"nodeType": "ExpressionStatement",
																	"src": "33115:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1182,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1114,
															"src": "33397:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "33403:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1184,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "33407:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1181,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "33388:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33388:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "EmitStatement",
												"src": "33383:30:0"
											}
										]
									},
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "32004:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "32322:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "32338:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "32330:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32352:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "32344:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32364:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "32356:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32329:41:0"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32388:0:0"
									},
									"scope": 1381,
									"src": "32313:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "33819:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1196,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "33833:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33852:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1197,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33844:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33844:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33833:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1210,
												"nodeType": "IfStatement",
												"src": "33829:91:0",
												"trueBody": {
													"id": 1209,
													"nodeType": "Block",
													"src": "33856:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33906:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33898:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1203,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33898:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33898:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1202,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "33877:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33877:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1208,
															"nodeType": "RevertStatement",
															"src": "33870:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33945:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33937:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1212,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33937:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33937:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1216,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "33949:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1217,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "33958:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1211,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "33929:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33929:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "33929:35:0"
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "33426:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "33772:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "33786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "33778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33803:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "33795:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33777:32:0"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33819:0:0"
									},
									"scope": 1381,
									"src": "33763:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "34345:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1229,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "34359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34378:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34370:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1230,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "34370:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34370:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "34359:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1243,
												"nodeType": "IfStatement",
												"src": "34355:89:0",
												"trueBody": {
													"id": 1242,
													"nodeType": "Block",
													"src": "34382:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "34430:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34422:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1236,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "34422:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34422:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1235,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "34403:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34403:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1241,
															"nodeType": "RevertStatement",
															"src": "34396:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1245,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "34461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34478:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34470:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1246,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34470:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34470:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1250,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "34482:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1244,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "34453:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34453:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "34453:35:0"
											}
										]
									},
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "33977:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "34298:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "34312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "34304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34329:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "34321:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34303:32:0"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34345:0:0"
									},
									"scope": 1381,
									"src": "34289:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "35105:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1265,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "35124:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1266,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "35131:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "35140:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35147:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1264,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1272,
															1332
														],
														"referencedDeclaration": 1332,
														"src": "35115:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35115:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "35115:37:0"
											}
										]
									},
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "34501:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "35040:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "35057:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "35049:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35049:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "35072:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "35064:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "35089:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "35081:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35048:47:0"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35105:0:0"
									},
									"scope": 1381,
									"src": "35031:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "36089:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1284,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "36103:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "36112:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1285,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "36112:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36112:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "36103:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1298,
												"nodeType": "IfStatement",
												"src": "36099:89:0",
												"trueBody": {
													"id": 1297,
													"nodeType": "Block",
													"src": "36124:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36174:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "36166:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1291,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "36166:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36166:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1290,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "36145:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36145:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1296,
															"nodeType": "RevertStatement",
															"src": "36138:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1299,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "36201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36220:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "36212:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1300,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "36212:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36212:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "36201:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "IfStatement",
												"src": "36197:90:0",
												"trueBody": {
													"id": 1312,
													"nodeType": "Block",
													"src": "36224:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36273:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "36265:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1306,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "36265:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36265:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1305,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "36245:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36245:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1311,
															"nodeType": "RevertStatement",
															"src": "36238:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1314,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "36296:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1317,
															"indexExpression": {
																"id": 1315,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "36308:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "36296:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1318,
														"indexExpression": {
															"id": 1316,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "36315:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "36296:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1319,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "36326:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36296:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "36296:35:0"
											},
											{
												"condition": {
													"id": 1322,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1281,
													"src": "36345:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1330,
												"nodeType": "IfStatement",
												"src": "36341:76:0",
												"trueBody": {
													"id": 1329,
													"nodeType": "Block",
													"src": "36356:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1324,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1275,
																		"src": "36384:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1325,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1277,
																		"src": "36391:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1326,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1279,
																		"src": "36400:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1323,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "36375:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36375:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1328,
															"nodeType": "EmitStatement",
															"src": "36370:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "35165:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "36000:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "36017:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "36009:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "36032:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "36024:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "36049:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "36041:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "36061:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "36056:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1280,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36056:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36008:63:0"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36089:0:0"
									},
									"scope": 1381,
									"src": "35991:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "36794:388:0",
										"statements": [
											{
												"assignments": [
													1343
												],
												"declarations": [
													{
														"constant": false,
														"id": 1343,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "36812:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1379,
														"src": "36804:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1342,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36804:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1348,
												"initialValue": {
													"arguments": [
														{
															"id": 1345,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "36841:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1346,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "36848:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1344,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "36831:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36831:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36804:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1349,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "36870:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "36895:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1351,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "36895:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1350,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "36890:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36890:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "36904:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "36890:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36870:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1378,
												"nodeType": "IfStatement",
												"src": "36866:310:0",
												"trueBody": {
													"id": 1377,
													"nodeType": "Block",
													"src": "36909:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1356,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1343,
																	"src": "36927:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1357,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1339,
																	"src": "36946:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36927:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1366,
															"nodeType": "IfStatement",
															"src": "36923:130:0",
															"trueBody": {
																"id": 1365,
																"nodeType": "Block",
																"src": "36953:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1360,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "37005:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1361,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1343,
																					"src": "37014:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1362,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1339,
																					"src": "37032:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1359,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 239,
																				"src": "36978:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36978:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1364,
																		"nodeType": "RevertStatement",
																		"src": "36971:67:0"
																	}
																]
															}
														},
														{
															"id": 1376,
															"nodeType": "UncheckedBlock",
															"src": "37066:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1368,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1335,
																				"src": "37103:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1369,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1337,
																				"src": "37110:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1372,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1370,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1343,
																					"src": "37119:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1371,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1339,
																					"src": "37138:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "37119:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "37145:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1367,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1272,
																				1332
																			],
																			"referencedDeclaration": 1332,
																			"src": "37094:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37094:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1375,
																	"nodeType": "ExpressionStatement",
																	"src": "37094:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "36429:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "36714:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "36738:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "36730:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36730:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "36753:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "36745:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "36770:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "36762:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36729:47:0"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36794:0:0"
									},
									"scope": 1381,
									"src": "36705:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1794,
							"src": "27443:9741:0",
							"usedErrors": [
								220,
								225,
								230,
								239,
								244,
								249
							],
							"usedEvents": [
								786,
								795
							]
						},
						{
							"id": 1382,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "37228:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1384,
										"name": "IFomo3d",
										"nameLocations": [
											"37336:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 209,
										"src": "37336:7:0"
									},
									"id": 1385,
									"nodeType": "InheritanceSpecifier",
									"src": "37336:7:0"
								}
							],
							"canonicalName": "Fomo3d",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1383,
								"nodeType": "StructuredDocumentation",
								"src": "37258:57:0",
								"text": " @title \n @author SeekersAlliance\n @notice"
							},
							"fullyImplemented": true,
							"id": 1793,
							"linearizedBaseContracts": [
								1793,
								209
							],
							"name": "Fomo3d",
							"nameLocation": "37326:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3013ce29",
									"id": 1388,
									"mutability": "mutable",
									"name": "paymentToken",
									"nameLocation": "37363:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1793,
									"src": "37350:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$1381",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 1387,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1386,
											"name": "ERC20",
											"nameLocations": [
												"37350:5:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1381,
											"src": "37350:5:0"
										},
										"referencedDeclaration": 1381,
										"src": "37350:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1381",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1aa3a008",
									"id": 1391,
									"mutability": "mutable",
									"name": "register",
									"nameLocation": "37397:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1793,
									"src": "37381:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Register_$775",
										"typeString": "contract Register"
									},
									"typeName": {
										"id": 1390,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1389,
											"name": "Register",
											"nameLocations": [
												"37381:8:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 775,
											"src": "37381:8:0"
										},
										"referencedDeclaration": 775,
										"src": "37381:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Register_$775",
											"typeString": "contract Register"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b9f0bf66",
									"id": 1395,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "37448:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1793,
									"src": "37412:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1394,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1392,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "37421:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "37412:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1393,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "37432:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eeda71d5",
									"id": 1399,
									"mutability": "mutable",
									"name": "mask",
									"nameLocation": "37496:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1793,
									"src": "37460:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1398,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1396,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "37469:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "37460:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1397,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "37480:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1161e582",
									"id": 1403,
									"mutability": "mutable",
									"name": "unclaim",
									"nameLocation": "37542:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1793,
									"src": "37506:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1402,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1400,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "37515:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "37506:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1401,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "37526:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c884ef83",
									"id": 1407,
									"mutability": "mutable",
									"name": "claimed",
									"nameLocation": "37591:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1793,
									"src": "37555:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1406,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1404,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "37564:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "37555:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1405,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "37575:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f54f0a8d",
									"id": 1412,
									"mutability": "mutable",
									"name": "historyInfo",
									"nameLocation": "37643:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1793,
									"src": "37604:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_HistoryInfo_$147_storage_$",
										"typeString": "mapping(uint32 => struct IFomo3d.HistoryInfo)"
									},
									"typeName": {
										"id": 1411,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1408,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "37613:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										},
										"nodeType": "Mapping",
										"src": "37604:31:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_HistoryInfo_$147_storage_$",
											"typeString": "mapping(uint32 => struct IFomo3d.HistoryInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1410,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1409,
												"name": "HistoryInfo",
												"nameLocations": [
													"37623:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "37623:11:0"
											},
											"referencedDeclaration": 147,
											"src": "37623:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_HistoryInfo_$147_storage_ptr",
												"typeString": "struct IFomo3d.HistoryInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cdf033f3",
									"id": 1414,
									"mutability": "mutable",
									"name": "historyNonce",
									"nameLocation": "37675:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1793,
									"src": "37661:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 1413,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "37661:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1a39d8ef",
									"id": 1416,
									"mutability": "mutable",
									"name": "totalAmount",
									"nameLocation": "37708:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1793,
									"src": "37693:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1415,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "37693:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4c3eea0",
									"id": 1418,
									"mutability": "mutable",
									"name": "totalValue",
									"nameLocation": "37740:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1793,
									"src": "37725:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1417,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "37725:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a19a488",
									"id": 1420,
									"mutability": "mutable",
									"name": "valuePerAmount",
									"nameLocation": "37771:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1793,
									"src": "37756:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1419,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "37756:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "76809ce3",
									"id": 1422,
									"mutability": "mutable",
									"name": "decimal",
									"nameLocation": "37805:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1793,
									"src": "37791:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 1421,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "37791:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a035b1fe",
									"id": 1424,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "37833:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1793,
									"src": "37818:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1423,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "37818:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "37953:278:0",
										"statements": [
											{
												"expression": {
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1433,
														"name": "paymentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "37963:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$1381",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1435,
																"name": "_basePaymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "37984:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1434,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "37978:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$1381_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37978:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$1381",
															"typeString": "contract ERC20"
														}
													},
													"src": "37963:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1381",
														"typeString": "contract ERC20"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "37963:39:0"
											},
											{
												"expression": {
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1439,
														"name": "decimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "38012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1440,
																"name": "paymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "38022:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC20_$1381",
																	"typeString": "contract ERC20"
																}
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "38035:8:0",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 945,
															"src": "38022:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38022:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "38012:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "38012:33:0"
											},
											{
												"expression": {
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1445,
														"name": "historyNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "38055:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38070:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38055:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "38055:16:0"
											},
											{
												"expression": {
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1449,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "38170:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1450,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "38178:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38170:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "38170:14:0"
											},
											{
												"expression": {
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1453,
														"name": "register",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "38194:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Register_$775",
															"typeString": "contract Register"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1455,
																"name": "_register",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "38214:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1454,
															"name": "Register",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "38205:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Register_$775_$",
																"typeString": "type(contract Register)"
															}
														},
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38205:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Register_$775",
															"typeString": "contract Register"
														}
													},
													"src": "38194:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Register_$775",
														"typeString": "contract Register"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "38194:30:0"
											}
										]
									},
									"id": 1460,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "_basePaymentToken",
												"nameLocation": "37879:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "37871:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "_register",
												"nameLocation": "37914:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "37906:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "37941:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "37933:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37861:92:0"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37953:0:0"
									},
									"scope": 1793,
									"src": "37850:381:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										157
									],
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "38346:679:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1473,
																	"name": "register",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "38375:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Register_$775",
																		"typeString": "contract Register"
																	}
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "38384:6:0",
																"memberName": "MARKET",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 681,
																"src": "38375:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view external returns (bytes32)"
																}
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38375:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1476,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "38394:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "38398:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "38394:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1470,
															"name": "register",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "38356:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Register_$775",
																"typeString": "contract Register"
															}
														},
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "38365:9:0",
														"memberName": "checkRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 762,
														"src": "38356:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view external"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38356:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "38356:49:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1480,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "38418:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "38427:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1481,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "38427:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38427:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "38418:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1489,
												"nodeType": "IfStatement",
												"src": "38415:47:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1486,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "38446:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38446:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1488,
													"nodeType": "RevertStatement",
													"src": "38439:23:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1490,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "38475:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38485:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38475:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1496,
												"nodeType": "IfStatement",
												"src": "38472:37:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1493,
															"name": "InvalidValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "38495:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38495:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1495,
													"nodeType": "RevertStatement",
													"src": "38488:21:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1497,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "38522:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38533:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38522:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1503,
												"nodeType": "IfStatement",
												"src": "38519:39:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1500,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "38543:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38543:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1502,
													"nodeType": "RevertStatement",
													"src": "38536:22:0"
												}
											},
											{
												"expression": {
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1504,
															"name": "unclaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "38577:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1506,
														"indexExpression": {
															"id": 1505,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "38585:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38577:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1507,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1395,
																			"src": "38596:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1509,
																		"indexExpression": {
																			"id": 1508,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1462,
																			"src": "38603:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "38596:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1510,
																					"name": "valuePerAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1420,
																					"src": "38613:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"baseExpression": {
																						"id": 1511,
																						"name": "mask",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1399,
																						"src": "38628:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1513,
																					"indexExpression": {
																						"id": 1512,
																						"name": "_user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1462,
																						"src": "38633:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "38628:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "38613:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1515,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "38612:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38596:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1517,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38595:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38643:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 1519,
																		"name": "decimal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "38647:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "38643:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1521,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38642:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "38595:60:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38577:78:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "38577:78:0"
											},
											{
												"expression": {
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1525,
														"name": "totalValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "38665:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1526,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "38679:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38665:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1528,
												"nodeType": "ExpressionStatement",
												"src": "38665:20:0"
											},
											{
												"expression": {
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1529,
															"name": "mask",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "38695:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1531,
														"indexExpression": {
															"id": 1530,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "38700:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38695:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1532,
														"name": "valuePerAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "38709:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38695:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "38695:28:0"
											},
											{
												"expression": {
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1535,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "38733:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1537,
														"indexExpression": {
															"id": 1536,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "38740:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38733:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1538,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "38750:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38733:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "38733:24:0"
											},
											{
												"expression": {
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1541,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "38767:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1542,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "38782:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38767:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "38767:22:0"
											},
											{
												"expression": {
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1545,
														"name": "valuePerAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "38799:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1546,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1464,
																		"src": "38818:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 1547,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "38826:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 1548,
																					"name": "decimal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1422,
																					"src": "38830:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "38826:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1550,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "38825:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38818:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1552,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "38839:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "38818:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1554,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "38817:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38799:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "38799:52:0"
											},
											{
												"expression": {
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1557,
															"name": "historyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "38861:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_HistoryInfo_$147_storage_$",
																"typeString": "mapping(uint32 => struct IFomo3d.HistoryInfo storage ref)"
															}
														},
														"id": 1559,
														"indexExpression": {
															"id": 1558,
															"name": "historyNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "38873:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38861:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_HistoryInfo_$147_storage",
															"typeString": "struct IFomo3d.HistoryInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1561,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "38901:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1564,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1464,
																		"src": "38916:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38908:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1562,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "38908:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38908:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1568,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "38933:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38925:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1566,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "38925:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38925:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1560,
															"name": "HistoryInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "38889:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_HistoryInfo_$147_storage_ptr_$",
																"typeString": "type(struct IFomo3d.HistoryInfo storage pointer)"
															}
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38889:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_HistoryInfo_$147_memory_ptr",
															"typeString": "struct IFomo3d.HistoryInfo memory"
														}
													},
													"src": "38861:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HistoryInfo_$147_storage",
														"typeString": "struct IFomo3d.HistoryInfo storage ref"
													}
												},
												"id": 1572,
												"nodeType": "ExpressionStatement",
												"src": "38861:81:0"
											},
											{
												"expression": {
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "38952:14:0",
													"subExpression": {
														"id": 1573,
														"name": "historyNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "38952:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "38952:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1577,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "38995:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1578,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "39002:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1579,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "39010:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1576,
														"name": "Fomo3dDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "38981:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38981:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1581,
												"nodeType": "EmitStatement",
												"src": "38976:42:0"
											}
										]
									},
									"functionSelector": "0efe6a8b",
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "38273:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1468,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "38338:8:0"
									},
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "38289:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "38281:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "38304:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "38296:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "38320:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "38312:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38280:48:0"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38346:0:0"
									},
									"scope": 1793,
									"src": "38264:761:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										161
									],
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "39087:266:0",
										"statements": [
											{
												"assignments": [
													1587
												],
												"declarations": [
													{
														"constant": false,
														"id": 1587,
														"mutability": "mutable",
														"name": "_user",
														"nameLocation": "39105:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1625,
														"src": "39097:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1586,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "39097:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1590,
												"initialValue": {
													"expression": {
														"id": 1588,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "39113:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "39117:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "39113:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39097:26:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1591,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "39136:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39153:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "39145:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1592,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "39145:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39145:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "39136:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1600,
												"nodeType": "IfStatement",
												"src": "39133:47:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1597,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "39164:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39164:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1599,
													"nodeType": "RevertStatement",
													"src": "39157:23:0"
												}
											},
											{
												"assignments": [
													1602
												],
												"declarations": [
													{
														"constant": false,
														"id": 1602,
														"mutability": "mutable",
														"name": "_value",
														"nameLocation": "39198:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1625,
														"src": "39190:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1601,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "39190:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1606,
												"initialValue": {
													"arguments": [
														{
															"id": 1604,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "39219:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1603,
														"name": "_getUnclaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1792,
														"src": "39207:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39207:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39190:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1610,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "39257:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1611,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "39264:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1607,
															"name": "paymentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "39235:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1381",
																"typeString": "contract ERC20"
															}
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "39248:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "39235:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39235:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "39235:36:0"
											},
											{
												"expression": {
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1614,
															"name": "claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "39281:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1616,
														"indexExpression": {
															"id": 1615,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "39289:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "39281:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1617,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1602,
														"src": "39299:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39281:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1619,
												"nodeType": "ExpressionStatement",
												"src": "39281:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1621,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "39332:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1622,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "39339:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1620,
														"name": "Fomo3dClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "39320:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39320:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1624,
												"nodeType": "EmitStatement",
												"src": "39315:31:0"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "39071:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39076:2:0"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39087:0:0"
									},
									"scope": 1793,
									"src": "39062:291:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										171
									],
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "39475:292:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1635,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "39488:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39505:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "39497:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1636,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "39497:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39497:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "39488:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1644,
												"nodeType": "IfStatement",
												"src": "39485:47:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1641,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "39516:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39516:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1643,
													"nodeType": "RevertStatement",
													"src": "39509:23:0"
												}
											},
											{
												"assignments": [
													1646
												],
												"declarations": [
													{
														"constant": false,
														"id": 1646,
														"mutability": "mutable",
														"name": "userAmount",
														"nameLocation": "39550:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1689,
														"src": "39542:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1645,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "39542:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1652,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1647,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "39563:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1649,
														"indexExpression": {
															"id": 1648,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "39570:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "39563:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1650,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "39579:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39563:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39542:44:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1653,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "39599:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1654,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "39611:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "39599:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39622:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "39599:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1660,
												"nodeType": "IfStatement",
												"src": "39596:37:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1658,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39632:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1634,
													"id": 1659,
													"nodeType": "Return",
													"src": "39625:8:0"
												}
											},
											{
												"assignments": [
													1662
												],
												"declarations": [
													{
														"constant": false,
														"id": 1662,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "39651:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1689,
														"src": "39643:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1661,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "39643:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1675,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1663,
																	"name": "userAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "39660:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "39672:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 1665,
																				"name": "decimal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1422,
																				"src": "39676:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"src": "39672:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1667,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "39671:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "39660:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1669,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "39659:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1670,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "39687:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1671,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "39699:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "39687:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1673,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "39686:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39659:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39643:64:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1676,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1662,
																	"src": "39726:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1677,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1424,
																				"src": "39735:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3130",
																				"id": 1678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "39741:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"src": "39735:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1680,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "39734:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "39726:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1682,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "39725:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39748:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 1684,
																	"name": "decimal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "39752:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "39748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1686,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "39747:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39725:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1634,
												"id": 1688,
												"nodeType": "Return",
												"src": "39717:43:0"
											}
										]
									},
									"functionSelector": "13da0777",
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPredict",
									"nameLocation": "39395:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "39414:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "39406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "39429:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "39421:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39405:32:0"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39469:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "39461:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39461:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39460:15:0"
									},
									"scope": 1793,
									"src": "39386:381:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										179
									],
									"body": {
										"id": 1701,
										"nodeType": "Block",
										"src": "39871:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1698,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "39900:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1697,
														"name": "_getUnclaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1792,
														"src": "39888:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39888:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1696,
												"id": 1700,
												"nodeType": "Return",
												"src": "39881:25:0"
											}
										]
									},
									"functionSelector": "480a4262",
									"id": 1702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUnclaim",
									"nameLocation": "39808:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "39827:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "39819:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39818:15:0"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39865:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "39857:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39856:15:0"
									},
									"scope": 1793,
									"src": "39799:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										186
									],
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "40017:38:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1709,
														"name": "claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "40034:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1711,
													"indexExpression": {
														"id": 1710,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1704,
														"src": "40042:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40034:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1708,
												"id": 1712,
												"nodeType": "Return",
												"src": "40027:21:0"
											}
										]
									},
									"functionSelector": "eb46260e",
									"id": 1714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimed",
									"nameLocation": "39954:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "39973:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "39965:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39964:15:0"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40011:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "40003:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40002:15:0"
									},
									"scope": 1793,
									"src": "39945:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										193
									],
									"body": {
										"id": 1729,
										"nodeType": "Block",
										"src": "40163:59:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1721,
															"name": "claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "40180:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1723,
														"indexExpression": {
															"id": 1722,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "40188:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "40180:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"id": 1725,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1716,
																"src": "40209:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1724,
															"name": "_getUnclaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "40197:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40197:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40180:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1720,
												"id": 1728,
												"nodeType": "Return",
												"src": "40173:42:0"
											}
										]
									},
									"functionSelector": "8233fbcb",
									"id": 1730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalProfit",
									"nameLocation": "40096:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "40119:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "40111:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40110:15:0"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40157:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "40149:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40148:15:0"
									},
									"scope": 1793,
									"src": "40087:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										199
									],
									"body": {
										"id": 1745,
										"nodeType": "Block",
										"src": "40324:78:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1735,
														"name": "historyNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "40337:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40353:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "40337:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1740,
												"nodeType": "IfStatement",
												"src": "40334:30:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40363:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1734,
													"id": 1739,
													"nodeType": "Return",
													"src": "40356:8:0"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1741,
														"name": "historyNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "40381:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40394:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "40381:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1734,
												"id": 1744,
												"nodeType": "Return",
												"src": "40374:21:0"
											}
										]
									},
									"functionSelector": "6d1c6041",
									"id": 1746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentHistoryNonce",
									"nameLocation": "40263:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40285:2:0"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "40318:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "40311:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1732,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "40311:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40310:14:0"
									},
									"scope": 1793,
									"src": "40254:148:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										208
									],
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "40511:43:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1754,
														"name": "historyInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "40528:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_HistoryInfo_$147_storage_$",
															"typeString": "mapping(uint32 => struct IFomo3d.HistoryInfo storage ref)"
														}
													},
													"id": 1756,
													"indexExpression": {
														"id": 1755,
														"name": "_nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1748,
														"src": "40540:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40528:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HistoryInfo_$147_storage",
														"typeString": "struct IFomo3d.HistoryInfo storage ref"
													}
												},
												"functionReturnParameters": 1753,
												"id": 1757,
												"nodeType": "Return",
												"src": "40521:26:0"
											}
										]
									},
									"functionSelector": "07040e91",
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHistory",
									"nameLocation": "40443:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "40461:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "40454:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1747,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "40454:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40453:15:0"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "40492:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HistoryInfo_$147_memory_ptr",
													"typeString": "struct IFomo3d.HistoryInfo"
												},
												"typeName": {
													"id": 1751,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1750,
														"name": "HistoryInfo",
														"nameLocations": [
															"40492:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 147,
														"src": "40492:11:0"
													},
													"referencedDeclaration": 147,
													"src": "40492:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HistoryInfo_$147_storage_ptr",
														"typeString": "struct IFomo3d.HistoryInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40491:20:0"
									},
									"scope": 1793,
									"src": "40434:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "40637:118:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1766,
																"name": "unclaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "40654:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1768,
															"indexExpression": {
																"id": 1767,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "40662:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "40654:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1769,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1395,
																				"src": "40672:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1771,
																			"indexExpression": {
																				"id": 1770,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1761,
																				"src": "40679:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "40672:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1776,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1772,
																						"name": "valuePerAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1420,
																						"src": "40689:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"baseExpression": {
																							"id": 1773,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1399,
																							"src": "40704:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1775,
																						"indexExpression": {
																							"id": 1774,
																							"name": "_user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1761,
																							"src": "40709:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "40704:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "40689:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1777,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "40688:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "40672:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1779,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "40671:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "40719:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"id": 1781,
																			"name": "decimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "40723:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"src": "40719:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1783,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "40718:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40671:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "40654:77:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1786,
															"name": "claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "40734:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1788,
														"indexExpression": {
															"id": 1787,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "40742:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "40734:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40654:94:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1765,
												"id": 1790,
												"nodeType": "Return",
												"src": "40647:101:0"
											}
										]
									},
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getUnclaim",
									"nameLocation": "40573:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "40593:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "40585:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40584:15:0"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40631:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "40623:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40622:15:0"
									},
									"scope": 1793,
									"src": "40564:191:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1794,
							"src": "37317:3441:0",
							"usedErrors": [
								132,
								134,
								136,
								138,
								140
							],
							"usedEvents": [
								124,
								130
							]
						}
					],
					"src": "151:40612:0"
				},
				"id": 0
			}
		}
	}
}