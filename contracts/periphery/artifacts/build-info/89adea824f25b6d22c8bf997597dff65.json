{
	"id": "89adea824f25b6d22c8bf997597dff65",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/periphery/Jackpot.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity = 0.8.23;\r\n\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../interfaces/IMyNFT.sol\";\r\nimport \"../interfaces/IJackpot.sol\";\r\n\r\n/** \r\n * @title \r\n * @author SeekersAlliance\r\n * @notice\r\n */\r\n\r\n contract Jackpot is Ownable, IJackpot{\r\n\r\n    ERC20 public paymentToken;\r\n    IMyNFT public myNFT;\r\n\r\n    uint32[] public collectedCardsID;\r\n\r\n    constructor(\r\n        address _initialAdmin,\r\n        address _paymentToken,\r\n        address _myNFT,\r\n        uint32[] memory _collectedCardsID\r\n    ) Ownable(_initialAdmin){\r\n        paymentToken = ERC20(_paymentToken);\r\n        myNFT = IMyNFT(_myNFT);\r\n        collectedCardsID = _collectedCardsID;\r\n    }\r\n\r\n\r\n    // @inheritdoc IJackpot\r\n    function claim() external override{\r\n        address sender = msg.sender;\r\n        if(!_checkCollectedCards(sender)) revert NotCollectedCards();\r\n        if(_getTotalValue() == 0) revert EmptyJackpot();\r\n        _burn(sender);\r\n        paymentToken.transfer(sender, _getTotalValue());\r\n        emit JackpotClaim(sender, _getTotalValue());\r\n    }\r\n\r\n    // @inheritdoc IJackpot\r\n    function getTotalValue() external view override returns (uint256 value){\r\n        return _getTotalValue();\r\n    }\r\n\r\n    // @inheritdoc IJackpot\r\n    function setCollectedCardsID(uint32[] memory _cardsID) external override onlyOwner{\r\n        collectedCardsID = _cardsID;\r\n    }\r\n\r\n    // @inheritdoc IJackpot\r\n    function getCollectedCardsID() external view override returns (uint32[] memory cardsID){\r\n        return collectedCardsID;\r\n    }\r\n\r\n    function _checkCollectedCards(address _user) internal view returns (bool){\r\n        for(uint i = 0; i < collectedCardsID.length; i++){\r\n            if(myNFT.balanceOf(_user, collectedCardsID[i]) == 0){\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function _burn(address _user) internal{\r\n        uint256[] memory ids = new uint256[](collectedCardsID.length);\r\n        uint256[] memory amounts = new uint256[](collectedCardsID.length);\r\n        for(uint i = 0; i < collectedCardsID.length; i++){\r\n            ids[i] = collectedCardsID[i];\r\n            amounts[i] = 1;\r\n        }\r\n        myNFT.burnBatch(_user, ids, amounts);\r\n    }\r\n    function _getTotalValue() internal view returns (uint256 value){\r\n        return paymentToken.balanceOf(address(this));\r\n    }\r\n}"
			},
			"contracts/interfaces/IJackpot.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity = 0.8.23;\r\n\r\n\r\n/**\r\n * @title Interface of Fomo3d.sol\r\n */\r\n\r\n\r\ninterface IJackpot {\r\n    // Events\r\n    event JackpotClaim(address indexed user, uint256 value);\r\n    \r\n    // Errors\r\n    error InvalidAddress();\r\n    error InvalidValue();\r\n    error InvalidAmount();\r\n    error EmptyJackpot();\r\n    error NotCollectedCards();\r\n\r\n    /** \r\n     * @notice Deposit from the user\r\n     * @notice Only the admin role can call this function\r\n     * @param _user The user address\r\n     * @param _value The value of the deposit\r\n     * @param _amount The amount of the deposit\r\n     */\r\n    //function deposit(address _user, uint256 _value, uint256 _amount) external;\r\n\r\n    /**\r\n     * @notice Try to claim the value from this jackpot if the sender has the right to claim\r\n     */\r\n    function claim() external;\r\n\r\n    /**\r\n     * @notice Return the tatol value of the jackpot\r\n     */\r\n    function getTotalValue() external view returns (uint256 value);\r\n\r\n    /**\r\n     * @notice Set the cards ID which needed to be collected to claim the jackpot\r\n     * @notice Only the admin role can call this function\r\n     * @param _cardsID The cards ID\r\n     */\r\n    function setCollectedCardsID(uint32[] memory _cardsID) external;\r\n\r\n    /**\r\n     * @notice Get the cards ID which needed to be collected to claim the jackpot\r\n     */\r\n    function getCollectedCardsID() external view returns (uint32[] memory cardsID);\r\n\r\n\r\n}\r\n"
			},
			"contracts/interfaces/IMyNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity = 0.8.23;\r\n\r\ninterface IMyNFT {\r\n    function mint(address _account, uint256 _id, uint256 _amount, bytes memory data) external;\r\n    function mintBatch(address _account,uint256[] memory _ids,uint256[] memory _amounts,bytes memory data) external;\r\n    function totalSupply(uint256 id) external view returns(uint256);\r\n    function totalSupply() external view returns(uint256);\r\n    function setBaseTokenURI(string calldata newBaseTokenURI) external;\r\n    function uri(uint256 tokenId) external view returns (string memory);\r\n    function balanceOf(address account, uint256 id) external view returns (uint256);\r\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) external;\r\n\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IJackpot.sol": {
				"IJackpot": {
					"abi": [
						{
							"inputs": [],
							"name": "EmptyJackpot",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCollectedCards",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "JackpotClaim",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCollectedCardsID",
							"outputs": [
								{
									"internalType": "uint32[]",
									"name": "cardsID",
									"type": "uint32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "_cardsID",
									"type": "uint32[]"
								}
							],
							"name": "setCollectedCardsID",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"setCollectedCardsID(uint32[])": {
								"params": {
									"_cardsID": "The cards ID"
								}
							}
						},
						"title": "Interface of Fomo3d.sol",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claim()": "4e71d92d",
							"getCollectedCardsID()": "4cbe5274",
							"getTotalValue()": "caa648b4",
							"setCollectedCardsID(uint32[])": "ad26432e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptyJackpot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCollectedCards\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"JackpotClaim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollectedCardsID\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"cardsID\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"_cardsID\",\"type\":\"uint32[]\"}],\"name\":\"setCollectedCardsID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setCollectedCardsID(uint32[])\":{\"params\":{\"_cardsID\":\"The cards ID\"}}},\"title\":\"Interface of Fomo3d.sol\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim()\":{\"notice\":\"Try to claim the value from this jackpot if the sender has the right to claim\"},\"getCollectedCardsID()\":{\"notice\":\"Get the cards ID which needed to be collected to claim the jackpot\"},\"getTotalValue()\":{\"notice\":\"Return the tatol value of the jackpot\"},\"setCollectedCardsID(uint32[])\":{\"notice\":\"Set the cards ID which needed to be collected to claim the jackpotOnly the admin role can call this function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IJackpot.sol\":\"IJackpot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IJackpot.sol\":{\"keccak256\":\"0x76d2a0c9f983f92455a6d66ac3dc9352422255be1c39874bf87d185a246f60d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280378da08094972cd6e3a06549bf81e4f86f124d0ea1bc747ee6a8b2be14cf6\",\"dweb:/ipfs/QmWXHbB4jGL98MMn52U77oL7d7hExkBadKhNeiEk3Cztzr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claim()": {
								"notice": "Try to claim the value from this jackpot if the sender has the right to claim"
							},
							"getCollectedCardsID()": {
								"notice": "Get the cards ID which needed to be collected to claim the jackpot"
							},
							"getTotalValue()": {
								"notice": "Return the tatol value of the jackpot"
							},
							"setCollectedCardsID(uint32[])": {
								"notice": "Set the cards ID which needed to be collected to claim the jackpotOnly the admin role can call this function"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IMyNFT.sol": {
				"IMyNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newBaseTokenURI",
									"type": "string"
								}
							],
							"name": "setBaseTokenURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"mint(address,uint256,uint256,bytes)": "731133e9",
							"mintBatch(address,uint256[],uint256[],bytes)": "1f7fdffa",
							"setBaseTokenURI(string)": "30176e13",
							"totalSupply()": "18160ddd",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newBaseTokenURI\",\"type\":\"string\"}],\"name\":\"setBaseTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMyNFT.sol\":\"IMyNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMyNFT.sol\":{\"keccak256\":\"0xc5ffe118e5bdf6e13d43420dbc32d8ef5d287af9e7637c74b398aac13b5fc251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b30a43196405a2e875aa092af569478ca3ebd65b2a6d67218a3343344957cc9\",\"dweb:/ipfs/Qmb3X6pQoErQuMJvTGN62bKLC7ay2YXY7iiFfmbvJNZsbn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/periphery/Jackpot.sol": {
				"Jackpot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_initialAdmin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_paymentToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_myNFT",
									"type": "address"
								},
								{
									"internalType": "uint32[]",
									"name": "_collectedCardsID",
									"type": "uint32[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "EmptyJackpot",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCollectedCards",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "JackpotClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "collectedCardsID",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCollectedCardsID",
							"outputs": [
								{
									"internalType": "uint32[]",
									"name": "cardsID",
									"type": "uint32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myNFT",
							"outputs": [
								{
									"internalType": "contract IMyNFT",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paymentToken",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "_cardsID",
									"type": "uint32[]"
								}
							],
							"name": "setCollectedCardsID",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "SeekersAlliance",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setCollectedCardsID(uint32[])": {
								"params": {
									"_cardsID": "The cards ID"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/periphery/Jackpot.sol\":343:2485  contract Jackpot is Ownable, IJackpot{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/periphery/Jackpot.sol\":490:798  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/periphery/Jackpot.sol\":650:663  _initialAdmin */\n  dup4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/periphery/Jackpot.sol\":696:709  _paymentToken */\n  dup3\n    /* \"contracts/periphery/Jackpot.sol\":675:687  paymentToken */\n  0x01\n  0x00\n    /* \"contracts/periphery/Jackpot.sol\":675:710  paymentToken = ERC20(_paymentToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/periphery/Jackpot.sol\":736:742  _myNFT */\n  dup2\n    /* \"contracts/periphery/Jackpot.sol\":721:726  myNFT */\n  0x02\n  0x00\n    /* \"contracts/periphery/Jackpot.sol\":721:743  myNFT = IMyNFT(_myNFT) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/periphery/Jackpot.sol\":773:790  _collectedCardsID */\n  dup1\n    /* \"contracts/periphery/Jackpot.sol\":754:770  collectedCardsID */\n  0x03\n    /* \"contracts/periphery/Jackpot.sol\":754:790  collectedCardsID = _collectedCardsID */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_13\n  swap3\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/periphery/Jackpot.sol\":490:798  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/periphery/Jackpot.sol\":343:2485  contract Jackpot is Ownable, IJackpot{... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/periphery/Jackpot.sol\":343:2485  contract Jackpot is Ownable, IJackpot{... */\ntag_14:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x07\n  add\n  0x08\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_17\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\n  0x00\ntag_18:\n  dup4\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup4\n  mload\n  dup4\n  dup3\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap3\n  0x20\n  add\n  swap3\n  0x04\n  add\n  0x20\n  dup2\n  0x03\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_18)\ntag_19:\n  dup1\n  iszero\n  tag_20\n  jumpi\n  dup3\n  dup2\n  0x0100\n  exp\n  dup2\n  sload\n  swap1\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  sstore\n  0x04\n  add\n  0x20\n  dup2\n  0x03\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_19)\ntag_20:\n  pop\ntag_17:\n  pop\n  swap1\n  pop\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  pop\n  swap1\n  jump\t// out\ntag_22:\ntag_23:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_24\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_23)\ntag_24:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_25:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_26:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_27:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_28:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_29:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_51\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_28\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_30:\n    /* \"#utility.yul\":641:665   */\n  tag_53\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_29\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_54:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_31:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_56\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_30\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_32:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  dup1\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1070   */\ntag_33:\n    /* \"#utility.yul\":1009:1015   */\n  0x00\n    /* \"#utility.yul\":1060:1062   */\n  0x1f\n    /* \"#utility.yul\":1056:1063   */\n  not\n    /* \"#utility.yul\":1051:1053   */\n  0x1f\n    /* \"#utility.yul\":1044:1049   */\n  dup4\n    /* \"#utility.yul\":1040:1054   */\n  add\n    /* \"#utility.yul\":1036:1064   */\n  and\n    /* \"#utility.yul\":1026:1064   */\n  swap1\n  pop\n    /* \"#utility.yul\":968:1070   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1076:1256   */\ntag_34:\n    /* \"#utility.yul\":1124:1201   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1121:1122   */\n  0x00\n    /* \"#utility.yul\":1114:1202   */\n  mstore\n    /* \"#utility.yul\":1221:1225   */\n  0x41\n    /* \"#utility.yul\":1218:1219   */\n  0x04\n    /* \"#utility.yul\":1211:1226   */\n  mstore\n    /* \"#utility.yul\":1245:1249   */\n  0x24\n    /* \"#utility.yul\":1242:1243   */\n  0x00\n    /* \"#utility.yul\":1235:1250   */\n  revert\n    /* \"#utility.yul\":1262:1543   */\ntag_35:\n    /* \"#utility.yul\":1345:1372   */\n  tag_61\n    /* \"#utility.yul\":1367:1371   */\n  dup3\n    /* \"#utility.yul\":1345:1372   */\n  tag_33\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1337:1343   */\n  dup2\n    /* \"#utility.yul\":1333:1373   */\n  add\n    /* \"#utility.yul\":1475:1481   */\n  dup2\n    /* \"#utility.yul\":1463:1473   */\n  dup2\n    /* \"#utility.yul\":1460:1482   */\n  lt\n    /* \"#utility.yul\":1439:1457   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1427:1437   */\n  dup3\n    /* \"#utility.yul\":1424:1458   */\n  gt\n    /* \"#utility.yul\":1421:1483   */\n  or\n    /* \"#utility.yul\":1418:1506   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1486:1504   */\n  tag_63\n  tag_34\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1418:1506   */\ntag_62:\n    /* \"#utility.yul\":1526:1536   */\n  dup1\n    /* \"#utility.yul\":1522:1524   */\n  0x40\n    /* \"#utility.yul\":1515:1537   */\n  mstore\n    /* \"#utility.yul\":1305:1543   */\n  pop\n    /* \"#utility.yul\":1262:1543   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1549:1678   */\ntag_36:\n    /* \"#utility.yul\":1583:1589   */\n  0x00\n    /* \"#utility.yul\":1610:1630   */\n  tag_65\n  tag_25\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1600:1630   */\n  swap1\n  pop\n    /* \"#utility.yul\":1639:1672   */\n  tag_66\n    /* \"#utility.yul\":1667:1671   */\n  dup3\n    /* \"#utility.yul\":1659:1665   */\n  dup3\n    /* \"#utility.yul\":1639:1672   */\n  tag_35\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1549:1678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1684:1994   */\ntag_37:\n    /* \"#utility.yul\":1760:1764   */\n  0x00\n    /* \"#utility.yul\":1850:1868   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1842:1848   */\n  dup3\n    /* \"#utility.yul\":1839:1869   */\n  gt\n    /* \"#utility.yul\":1836:1892   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1872:1890   */\n  tag_69\n  tag_34\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1836:1892   */\ntag_68:\n    /* \"#utility.yul\":1922:1926   */\n  0x20\n    /* \"#utility.yul\":1914:1920   */\n  dup3\n    /* \"#utility.yul\":1910:1927   */\n  mul\n    /* \"#utility.yul\":1902:1927   */\n  swap1\n  pop\n    /* \"#utility.yul\":1982:1986   */\n  0x20\n    /* \"#utility.yul\":1976:1980   */\n  dup2\n    /* \"#utility.yul\":1972:1987   */\n  add\n    /* \"#utility.yul\":1964:1987   */\n  swap1\n  pop\n    /* \"#utility.yul\":1684:1994   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2000:2117   */\ntag_38:\n    /* \"#utility.yul\":2109:2110   */\n  0x00\n    /* \"#utility.yul\":2106:2107   */\n  dup1\n    /* \"#utility.yul\":2099:2111   */\n  revert\n    /* \"#utility.yul\":2123:2216   */\ntag_39:\n    /* \"#utility.yul\":2159:2166   */\n  0x00\n    /* \"#utility.yul\":2199:2209   */\n  0xffffffff\n    /* \"#utility.yul\":2192:2197   */\n  dup3\n    /* \"#utility.yul\":2188:2210   */\n  and\n    /* \"#utility.yul\":2177:2210   */\n  swap1\n  pop\n    /* \"#utility.yul\":2123:2216   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2222:2342   */\ntag_40:\n    /* \"#utility.yul\":2294:2317   */\n  tag_73\n    /* \"#utility.yul\":2311:2316   */\n  dup2\n    /* \"#utility.yul\":2294:2317   */\n  tag_39\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2287:2292   */\n  dup2\n    /* \"#utility.yul\":2284:2318   */\n  eq\n    /* \"#utility.yul\":2274:2336   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2332:2333   */\n  0x00\n    /* \"#utility.yul\":2329:2330   */\n  dup1\n    /* \"#utility.yul\":2322:2334   */\n  revert\n    /* \"#utility.yul\":2274:2336   */\ntag_74:\n    /* \"#utility.yul\":2222:2342   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2348:2489   */\ntag_41:\n    /* \"#utility.yul\":2404:2409   */\n  0x00\n    /* \"#utility.yul\":2435:2441   */\n  dup2\n    /* \"#utility.yul\":2429:2442   */\n  mload\n    /* \"#utility.yul\":2420:2442   */\n  swap1\n  pop\n    /* \"#utility.yul\":2451:2483   */\n  tag_76\n    /* \"#utility.yul\":2477:2482   */\n  dup2\n    /* \"#utility.yul\":2451:2483   */\n  tag_40\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2348:2489   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2511:3240   */\ntag_42:\n    /* \"#utility.yul\":2617:2622   */\n  0x00\n    /* \"#utility.yul\":2642:2722   */\n  tag_78\n    /* \"#utility.yul\":2658:2721   */\n  tag_79\n    /* \"#utility.yul\":2714:2720   */\n  dup5\n    /* \"#utility.yul\":2658:2721   */\n  tag_37\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2642:2722   */\n  tag_36\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2633:2722   */\n  swap1\n  pop\n    /* \"#utility.yul\":2742:2747   */\n  dup1\n    /* \"#utility.yul\":2771:2777   */\n  dup4\n    /* \"#utility.yul\":2764:2769   */\n  dup3\n    /* \"#utility.yul\":2757:2778   */\n  mstore\n    /* \"#utility.yul\":2805:2809   */\n  0x20\n    /* \"#utility.yul\":2798:2803   */\n  dup3\n    /* \"#utility.yul\":2794:2810   */\n  add\n    /* \"#utility.yul\":2787:2810   */\n  swap1\n  pop\n    /* \"#utility.yul\":2858:2862   */\n  0x20\n    /* \"#utility.yul\":2850:2856   */\n  dup5\n    /* \"#utility.yul\":2846:2863   */\n  mul\n    /* \"#utility.yul\":2838:2844   */\n  dup4\n    /* \"#utility.yul\":2834:2864   */\n  add\n    /* \"#utility.yul\":2887:2890   */\n  dup6\n    /* \"#utility.yul\":2879:2885   */\n  dup2\n    /* \"#utility.yul\":2876:2891   */\n  gt\n    /* \"#utility.yul\":2873:2995   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2906:2985   */\n  tag_81\n  tag_38\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2873:2995   */\ntag_80:\n    /* \"#utility.yul\":3021:3027   */\n  dup4\n    /* \"#utility.yul\":3004:3234   */\ntag_82:\n    /* \"#utility.yul\":3038:3044   */\n  dup2\n    /* \"#utility.yul\":3033:3036   */\n  dup2\n    /* \"#utility.yul\":3030:3045   */\n  lt\n    /* \"#utility.yul\":3004:3234   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3113:3116   */\n  dup1\n    /* \"#utility.yul\":3142:3189   */\n  tag_85\n    /* \"#utility.yul\":3185:3188   */\n  dup9\n    /* \"#utility.yul\":3173:3183   */\n  dup3\n    /* \"#utility.yul\":3142:3189   */\n  tag_41\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3137:3140   */\n  dup5\n    /* \"#utility.yul\":3130:3190   */\n  mstore\n    /* \"#utility.yul\":3219:3223   */\n  0x20\n    /* \"#utility.yul\":3214:3217   */\n  dup5\n    /* \"#utility.yul\":3210:3224   */\n  add\n    /* \"#utility.yul\":3203:3224   */\n  swap4\n  pop\n    /* \"#utility.yul\":3080:3234   */\n  pop\n    /* \"#utility.yul\":3064:3068   */\n  0x20\n    /* \"#utility.yul\":3059:3062   */\n  dup2\n    /* \"#utility.yul\":3055:3069   */\n  add\n    /* \"#utility.yul\":3048:3069   */\n  swap1\n  pop\n    /* \"#utility.yul\":3004:3234   */\n  jump(tag_82)\ntag_84:\n    /* \"#utility.yul\":3008:3029   */\n  pop\n    /* \"#utility.yul\":2623:3240   */\n  pop\n  pop\n    /* \"#utility.yul\":2511:3240   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3262:3645   */\ntag_43:\n    /* \"#utility.yul\":3343:3348   */\n  0x00\n    /* \"#utility.yul\":3392:3395   */\n  dup3\n    /* \"#utility.yul\":3385:3389   */\n  0x1f\n    /* \"#utility.yul\":3377:3383   */\n  dup4\n    /* \"#utility.yul\":3373:3390   */\n  add\n    /* \"#utility.yul\":3369:3396   */\n  slt\n    /* \"#utility.yul\":3359:3481   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3400:3479   */\n  tag_88\n  tag_32\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3359:3481   */\ntag_87:\n    /* \"#utility.yul\":3510:3516   */\n  dup2\n    /* \"#utility.yul\":3504:3517   */\n  mload\n    /* \"#utility.yul\":3535:3639   */\n  tag_89\n    /* \"#utility.yul\":3635:3638   */\n  dup5\n    /* \"#utility.yul\":3627:3633   */\n  dup3\n    /* \"#utility.yul\":3620:3624   */\n  0x20\n    /* \"#utility.yul\":3612:3618   */\n  dup7\n    /* \"#utility.yul\":3608:3625   */\n  add\n    /* \"#utility.yul\":3535:3639   */\n  tag_42\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3526:3639   */\n  swap2\n  pop\n    /* \"#utility.yul\":3349:3645   */\n  pop\n    /* \"#utility.yul\":3262:3645   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3651:4672   */\ntag_3:\n    /* \"#utility.yul\":3772:3778   */\n  0x00\n    /* \"#utility.yul\":3780:3786   */\n  dup1\n    /* \"#utility.yul\":3788:3794   */\n  0x00\n    /* \"#utility.yul\":3796:3802   */\n  dup1\n    /* \"#utility.yul\":3845:3848   */\n  0x80\n    /* \"#utility.yul\":3833:3842   */\n  dup6\n    /* \"#utility.yul\":3824:3831   */\n  dup8\n    /* \"#utility.yul\":3820:3843   */\n  sub\n    /* \"#utility.yul\":3816:3849   */\n  slt\n    /* \"#utility.yul\":3813:3933   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3852:3931   */\n  tag_92\n  tag_26\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3813:3933   */\ntag_91:\n    /* \"#utility.yul\":3972:3973   */\n  0x00\n    /* \"#utility.yul\":3997:4061   */\n  tag_93\n    /* \"#utility.yul\":4053:4060   */\n  dup8\n    /* \"#utility.yul\":4044:4050   */\n  dup3\n    /* \"#utility.yul\":4033:4042   */\n  dup9\n    /* \"#utility.yul\":4029:4051   */\n  add\n    /* \"#utility.yul\":3997:4061   */\n  tag_31\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3987:4061   */\n  swap5\n  pop\n    /* \"#utility.yul\":3943:4071   */\n  pop\n    /* \"#utility.yul\":4110:4112   */\n  0x20\n    /* \"#utility.yul\":4136:4200   */\n  tag_94\n    /* \"#utility.yul\":4192:4199   */\n  dup8\n    /* \"#utility.yul\":4183:4189   */\n  dup3\n    /* \"#utility.yul\":4172:4181   */\n  dup9\n    /* \"#utility.yul\":4168:4190   */\n  add\n    /* \"#utility.yul\":4136:4200   */\n  tag_31\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4126:4200   */\n  swap4\n  pop\n    /* \"#utility.yul\":4081:4210   */\n  pop\n    /* \"#utility.yul\":4249:4251   */\n  0x40\n    /* \"#utility.yul\":4275:4339   */\n  tag_95\n    /* \"#utility.yul\":4331:4338   */\n  dup8\n    /* \"#utility.yul\":4322:4328   */\n  dup3\n    /* \"#utility.yul\":4311:4320   */\n  dup9\n    /* \"#utility.yul\":4307:4329   */\n  add\n    /* \"#utility.yul\":4275:4339   */\n  tag_31\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4265:4339   */\n  swap3\n  pop\n    /* \"#utility.yul\":4220:4349   */\n  pop\n    /* \"#utility.yul\":4409:4411   */\n  0x60\n    /* \"#utility.yul\":4398:4407   */\n  dup6\n    /* \"#utility.yul\":4394:4412   */\n  add\n    /* \"#utility.yul\":4388:4413   */\n  mload\n    /* \"#utility.yul\":4440:4458   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4432:4438   */\n  dup2\n    /* \"#utility.yul\":4429:4459   */\n  gt\n    /* \"#utility.yul\":4426:4543   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4462:4541   */\n  tag_97\n  tag_27\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4426:4543   */\ntag_96:\n    /* \"#utility.yul\":4567:4655   */\n  tag_98\n    /* \"#utility.yul\":4647:4654   */\n  dup8\n    /* \"#utility.yul\":4638:4644   */\n  dup3\n    /* \"#utility.yul\":4627:4636   */\n  dup9\n    /* \"#utility.yul\":4623:4645   */\n  add\n    /* \"#utility.yul\":4567:4655   */\n  tag_43\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4557:4655   */\n  swap2\n  pop\n    /* \"#utility.yul\":4359:4665   */\n  pop\n    /* \"#utility.yul\":3651:4672   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4678:4796   */\ntag_44:\n    /* \"#utility.yul\":4765:4789   */\n  tag_100\n    /* \"#utility.yul\":4783:4788   */\n  dup2\n    /* \"#utility.yul\":4765:4789   */\n  tag_29\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4760:4763   */\n  dup3\n    /* \"#utility.yul\":4753:4790   */\n  mstore\n    /* \"#utility.yul\":4678:4796   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4802:5024   */\ntag_9:\n    /* \"#utility.yul\":4895:4899   */\n  0x00\n    /* \"#utility.yul\":4933:4935   */\n  0x20\n    /* \"#utility.yul\":4922:4931   */\n  dup3\n    /* \"#utility.yul\":4918:4936   */\n  add\n    /* \"#utility.yul\":4910:4936   */\n  swap1\n  pop\n    /* \"#utility.yul\":4946:5017   */\n  tag_102\n    /* \"#utility.yul\":5014:5015   */\n  0x00\n    /* \"#utility.yul\":5003:5012   */\n  dup4\n    /* \"#utility.yul\":4999:5016   */\n  add\n    /* \"#utility.yul\":4990:4996   */\n  dup5\n    /* \"#utility.yul\":4946:5017   */\n  tag_44\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4802:5024   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/periphery/Jackpot.sol\":343:2485  contract Jackpot is Ownable, IJackpot{... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/periphery/Jackpot.sol\":343:2485  contract Jackpot is Ownable, IJackpot{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xad26432e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xcaa648b4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x09a31d50\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1dd5605d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3013ce29\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4cbe5274\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/periphery/Jackpot.sol\":421:440  IMyNFT public myNFT */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Jackpot.sol\":449:481  uint32[] public collectedCardsID */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Jackpot.sol\":389:414  ERC20 public paymentToken */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Jackpot.sol\":1534:1663  function getCollectedCardsID() external view override returns (uint32[] memory cardsID){... */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Jackpot.sol\":837:1182  function claim() external override{... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/periphery/Jackpot.sol\":1369:1497  function setCollectedCardsID(uint32[] memory _cardsID) external override onlyOwner{... */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/periphery/Jackpot.sol\":1219:1332  function getTotalValue() external view override returns (uint256 value){... */\n    tag_11:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/periphery/Jackpot.sol\":421:440  IMyNFT public myNFT */\n    tag_15:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Jackpot.sol\":449:481  uint32[] public collectedCardsID */\n    tag_21:\n      0x03\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      0x04\n      mul\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Jackpot.sol\":389:414  ERC20 public paymentToken */\n    tag_25:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/periphery/Jackpot.sol\":1534:1663  function getCollectedCardsID() external view override returns (uint32[] memory cardsID){... */\n    tag_29:\n        /* \"contracts/periphery/Jackpot.sol\":1597:1620  uint32[] memory cardsID */\n      0x60\n        /* \"contracts/periphery/Jackpot.sol\":1639:1655  collectedCardsID */\n      0x03\n        /* \"contracts/periphery/Jackpot.sol\":1632:1655  return collectedCardsID */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x00\n      swap1\n    tag_56:\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x04\n      add\n      swap1\n      0x20\n      dup3\n      0x03\n      add\n      div\n      swap3\n      dup4\n      add\n      swap3\n      0x01\n      sub\n      dup3\n      mul\n      swap2\n      pop\n      dup1\n      dup5\n      gt\n      tag_56\n      jumpi\n      swap1\n      pop\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":1534:1663  function getCollectedCardsID() external view override returns (uint32[] memory cardsID){... */\n      swap1\n      jump\t// out\n        /* \"contracts/periphery/Jackpot.sol\":837:1182  function claim() external override{... */\n    tag_33:\n        /* \"contracts/periphery/Jackpot.sol\":882:896  address sender */\n      0x00\n        /* \"contracts/periphery/Jackpot.sol\":899:909  msg.sender */\n      caller\n        /* \"contracts/periphery/Jackpot.sol\":882:909  address sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":924:952  _checkCollectedCards(sender) */\n      tag_58\n        /* \"contracts/periphery/Jackpot.sol\":945:951  sender */\n      dup2\n        /* \"contracts/periphery/Jackpot.sol\":924:944  _checkCollectedCards */\n      tag_59\n        /* \"contracts/periphery/Jackpot.sol\":924:952  _checkCollectedCards(sender) */\n      jump\t// in\n    tag_58:\n        /* \"contracts/periphery/Jackpot.sol\":920:980  if(!_checkCollectedCards(sender)) revert NotCollectedCards() */\n      tag_60\n      jumpi\n        /* \"contracts/periphery/Jackpot.sol\":961:980  NotCollectedCards() */\n      mload(0x40)\n      0x7aa5b94c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/periphery/Jackpot.sol\":920:980  if(!_checkCollectedCards(sender)) revert NotCollectedCards() */\n    tag_60:\n        /* \"contracts/periphery/Jackpot.sol\":1014:1015  0 */\n      0x00\n        /* \"contracts/periphery/Jackpot.sol\":994:1010  _getTotalValue() */\n      tag_61\n        /* \"contracts/periphery/Jackpot.sol\":994:1008  _getTotalValue */\n      tag_62\n        /* \"contracts/periphery/Jackpot.sol\":994:1010  _getTotalValue() */\n      jump\t// in\n    tag_61:\n        /* \"contracts/periphery/Jackpot.sol\":994:1015  _getTotalValue() == 0 */\n      sub\n        /* \"contracts/periphery/Jackpot.sol\":991:1038  if(_getTotalValue() == 0) revert EmptyJackpot() */\n      tag_63\n      jumpi\n        /* \"contracts/periphery/Jackpot.sol\":1024:1038  EmptyJackpot() */\n      mload(0x40)\n      0x6e6681f600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/periphery/Jackpot.sol\":991:1038  if(_getTotalValue() == 0) revert EmptyJackpot() */\n    tag_63:\n        /* \"contracts/periphery/Jackpot.sol\":1049:1062  _burn(sender) */\n      tag_64\n        /* \"contracts/periphery/Jackpot.sol\":1055:1061  sender */\n      dup2\n        /* \"contracts/periphery/Jackpot.sol\":1049:1054  _burn */\n      tag_65\n        /* \"contracts/periphery/Jackpot.sol\":1049:1062  _burn(sender) */\n      jump\t// in\n    tag_64:\n        /* \"contracts/periphery/Jackpot.sol\":1073:1085  paymentToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Jackpot.sol\":1073:1094  paymentToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/periphery/Jackpot.sol\":1095:1101  sender */\n      dup3\n        /* \"contracts/periphery/Jackpot.sol\":1103:1119  _getTotalValue() */\n      tag_66\n        /* \"contracts/periphery/Jackpot.sol\":1103:1117  _getTotalValue */\n      tag_62\n        /* \"contracts/periphery/Jackpot.sol\":1103:1119  _getTotalValue() */\n      jump\t// in\n    tag_66:\n        /* \"contracts/periphery/Jackpot.sol\":1073:1120  paymentToken.transfer(sender, _getTotalValue()) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":1149:1155  sender */\n      dup1\n        /* \"contracts/periphery/Jackpot.sol\":1136:1174  JackpotClaim(sender, _getTotalValue()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x16f67fd92ffb20fb68612d68e9725fe41944a7be57a193cb98fa735dd6f5d948\n        /* \"contracts/periphery/Jackpot.sol\":1157:1173  _getTotalValue() */\n      tag_73\n        /* \"contracts/periphery/Jackpot.sol\":1157:1171  _getTotalValue */\n      tag_62\n        /* \"contracts/periphery/Jackpot.sol\":1157:1173  _getTotalValue() */\n      jump\t// in\n    tag_73:\n        /* \"contracts/periphery/Jackpot.sol\":1136:1174  JackpotClaim(sender, _getTotalValue()) */\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/periphery/Jackpot.sol\":871:1182  {... */\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":837:1182  function claim() external override{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/periphery/Jackpot.sol\":1369:1497  function setCollectedCardsID(uint32[] memory _cardsID) external override onlyOwner{... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_83:\n        /* \"contracts/periphery/Jackpot.sol\":1481:1489  _cardsID */\n      dup1\n        /* \"contracts/periphery/Jackpot.sol\":1462:1478  collectedCardsID */\n      0x03\n        /* \"contracts/periphery/Jackpot.sol\":1462:1489  collectedCardsID = _cardsID */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_85\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":1369:1497  function setCollectedCardsID(uint32[] memory _cardsID) external override onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Jackpot.sol\":1219:1332  function getTotalValue() external view override returns (uint256 value){... */\n    tag_45:\n        /* \"contracts/periphery/Jackpot.sol\":1276:1289  uint256 value */\n      0x00\n        /* \"contracts/periphery/Jackpot.sol\":1308:1324  _getTotalValue() */\n      tag_88\n        /* \"contracts/periphery/Jackpot.sol\":1308:1322  _getTotalValue */\n      tag_62\n        /* \"contracts/periphery/Jackpot.sol\":1308:1324  _getTotalValue() */\n      jump\t// in\n    tag_88:\n        /* \"contracts/periphery/Jackpot.sol\":1301:1324  return _getTotalValue() */\n      swap1\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":1219:1332  function getTotalValue() external view override returns (uint256 value){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_92\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Jackpot.sol\":1671:1958  function _checkCollectedCards(address _user) internal view returns (bool){... */\n    tag_59:\n        /* \"contracts/periphery/Jackpot.sol\":1739:1743  bool */\n      0x00\n        /* \"contracts/periphery/Jackpot.sol\":1759:1765  uint i */\n      dup1\n        /* \"contracts/periphery/Jackpot.sol\":1768:1769  0 */\n      0x00\n        /* \"contracts/periphery/Jackpot.sol\":1759:1769  uint i = 0 */\n      swap1\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":1755:1929  for(uint i = 0; i < collectedCardsID.length; i++){... */\n    tag_96:\n        /* \"contracts/periphery/Jackpot.sol\":1775:1791  collectedCardsID */\n      0x03\n        /* \"contracts/periphery/Jackpot.sol\":1775:1798  collectedCardsID.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":1771:1772  i */\n      dup2\n        /* \"contracts/periphery/Jackpot.sol\":1771:1798  i < collectedCardsID.length */\n      lt\n        /* \"contracts/periphery/Jackpot.sol\":1755:1929  for(uint i = 0; i < collectedCardsID.length; i++){... */\n      iszero\n      tag_97\n      jumpi\n        /* \"contracts/periphery/Jackpot.sol\":1869:1870  0 */\n      0x00\n        /* \"contracts/periphery/Jackpot.sol\":1822:1827  myNFT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Jackpot.sol\":1822:1837  myNFT.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfdd58e\n        /* \"contracts/periphery/Jackpot.sol\":1838:1843  _user */\n      dup6\n        /* \"contracts/periphery/Jackpot.sol\":1845:1861  collectedCardsID */\n      0x03\n        /* \"contracts/periphery/Jackpot.sol\":1862:1863  i */\n      dup6\n        /* \"contracts/periphery/Jackpot.sol\":1845:1864  collectedCardsID[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_99\n      jumpi\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n    tag_99:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      0x04\n      mul\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Jackpot.sol\":1822:1865  myNFT.balanceOf(_user, collectedCardsID[i]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"contracts/periphery/Jackpot.sol\":1822:1870  myNFT.balanceOf(_user, collectedCardsID[i]) == 0 */\n      sub\n        /* \"contracts/periphery/Jackpot.sol\":1819:1918  if(myNFT.balanceOf(_user, collectedCardsID[i]) == 0){... */\n      tag_109\n      jumpi\n        /* \"contracts/periphery/Jackpot.sol\":1897:1902  false */\n      0x00\n        /* \"contracts/periphery/Jackpot.sol\":1890:1902  return false */\n      swap2\n      pop\n      pop\n      jump(tag_95)\n        /* \"contracts/periphery/Jackpot.sol\":1819:1918  if(myNFT.balanceOf(_user, collectedCardsID[i]) == 0){... */\n    tag_109:\n        /* \"contracts/periphery/Jackpot.sol\":1800:1803  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":1755:1929  for(uint i = 0; i < collectedCardsID.length; i++){... */\n      jump(tag_96)\n    tag_97:\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":1946:1950  true */\n      0x01\n        /* \"contracts/periphery/Jackpot.sol\":1939:1950  return true */\n      swap1\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":1671:1958  function _checkCollectedCards(address _user) internal view returns (bool){... */\n    tag_95:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/periphery/Jackpot.sol\":2356:2482  function _getTotalValue() internal view returns (uint256 value){... */\n    tag_62:\n        /* \"contracts/periphery/Jackpot.sol\":2405:2418  uint256 value */\n      0x00\n        /* \"contracts/periphery/Jackpot.sol\":2437:2449  paymentToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Jackpot.sol\":2437:2459  paymentToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/periphery/Jackpot.sol\":2468:2472  this */\n      address\n        /* \"contracts/periphery/Jackpot.sol\":2437:2474  paymentToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_111:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_114:\n        /* \"contracts/periphery/Jackpot.sol\":2430:2474  return paymentToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":2356:2482  function _getTotalValue() internal view returns (uint256 value){... */\n      swap1\n      jump\t// out\n        /* \"contracts/periphery/Jackpot.sol\":1966:2350  function _burn(address _user) internal{... */\n    tag_65:\n        /* \"contracts/periphery/Jackpot.sol\":2015:2035  uint256[] memory ids */\n      0x00\n        /* \"contracts/periphery/Jackpot.sol\":2052:2068  collectedCardsID */\n      0x03\n        /* \"contracts/periphery/Jackpot.sol\":2052:2075  collectedCardsID.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":2038:2076  new uint256[](collectedCardsID.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_116\n      jumpi\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n    tag_116:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_119:\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":2015:2076  uint256[] memory ids = new uint256[](collectedCardsID.length) */\n      swap1\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":2087:2111  uint256[] memory amounts */\n      0x00\n        /* \"contracts/periphery/Jackpot.sol\":2128:2144  collectedCardsID */\n      0x03\n        /* \"contracts/periphery/Jackpot.sol\":2128:2151  collectedCardsID.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":2114:2152  new uint256[](collectedCardsID.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_120\n      jumpi\n      tag_121\n      tag_118\n      jump\t// in\n    tag_121:\n    tag_120:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_122\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_122:\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":2087:2152  uint256[] memory amounts = new uint256[](collectedCardsID.length) */\n      swap1\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":2167:2173  uint i */\n      0x00\n        /* \"contracts/periphery/Jackpot.sol\":2163:2296  for(uint i = 0; i < collectedCardsID.length; i++){... */\n    tag_123:\n        /* \"contracts/periphery/Jackpot.sol\":2183:2199  collectedCardsID */\n      0x03\n        /* \"contracts/periphery/Jackpot.sol\":2183:2206  collectedCardsID.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":2179:2180  i */\n      dup2\n        /* \"contracts/periphery/Jackpot.sol\":2179:2206  i < collectedCardsID.length */\n      lt\n        /* \"contracts/periphery/Jackpot.sol\":2163:2296  for(uint i = 0; i < collectedCardsID.length; i++){... */\n      iszero\n      tag_124\n      jumpi\n        /* \"contracts/periphery/Jackpot.sol\":2236:2252  collectedCardsID */\n      0x03\n        /* \"contracts/periphery/Jackpot.sol\":2253:2254  i */\n      dup2\n        /* \"contracts/periphery/Jackpot.sol\":2236:2255  collectedCardsID[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_126\n      jumpi\n      tag_127\n      tag_101\n      jump\t// in\n    tag_127:\n    tag_126:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      0x04\n      mul\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/periphery/Jackpot.sol\":2227:2255  ids[i] = collectedCardsID[i] */\n      0xffffffff\n      and\n        /* \"contracts/periphery/Jackpot.sol\":2227:2230  ids */\n      dup4\n        /* \"contracts/periphery/Jackpot.sol\":2231:2232  i */\n      dup3\n        /* \"contracts/periphery/Jackpot.sol\":2227:2233  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_129\n      jumpi\n      tag_130\n      tag_101\n      jump\t// in\n    tag_130:\n    tag_129:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/periphery/Jackpot.sol\":2227:2255  ids[i] = collectedCardsID[i] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":2283:2284  1 */\n      0x01\n        /* \"contracts/periphery/Jackpot.sol\":2270:2277  amounts */\n      dup3\n        /* \"contracts/periphery/Jackpot.sol\":2278:2279  i */\n      dup3\n        /* \"contracts/periphery/Jackpot.sol\":2270:2280  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_132\n      tag_101\n      jump\t// in\n    tag_132:\n    tag_131:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/periphery/Jackpot.sol\":2270:2284  amounts[i] = 1 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":2208:2211  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":2163:2296  for(uint i = 0; i < collectedCardsID.length; i++){... */\n      jump(tag_123)\n    tag_124:\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":2306:2311  myNFT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/periphery/Jackpot.sol\":2306:2321  myNFT.burnBatch */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6b20c454\n        /* \"contracts/periphery/Jackpot.sol\":2322:2327  _user */\n      dup5\n        /* \"contracts/periphery/Jackpot.sol\":2329:2332  ids */\n      dup5\n        /* \"contracts/periphery/Jackpot.sol\":2334:2341  amounts */\n      dup5\n        /* \"contracts/periphery/Jackpot.sol\":2306:2342  myNFT.burnBatch(_user, ids, amounts) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":2004:2350  {... */\n      pop\n      pop\n        /* \"contracts/periphery/Jackpot.sol\":1966:2350  function _burn(address _user) internal{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    tag_86:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      add\n      0x08\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_147\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n      0x00\n    tag_148:\n      dup4\n      dup3\n      gt\n      iszero\n      tag_149\n      jumpi\n      dup4\n      mload\n      dup4\n      dup3\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap3\n      0x20\n      add\n      swap3\n      0x04\n      add\n      0x20\n      dup2\n      0x03\n      add\n      div\n      swap3\n      dup4\n      add\n      swap3\n      0x01\n      sub\n      mul\n      jump(tag_148)\n    tag_149:\n      dup1\n      iszero\n      tag_150\n      jumpi\n      dup3\n      dup2\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x04\n      add\n      0x20\n      dup2\n      0x03\n      add\n      div\n      swap3\n      dup4\n      add\n      swap3\n      0x01\n      sub\n      mul\n      jump(tag_149)\n    tag_150:\n      pop\n    tag_147:\n      pop\n      swap1\n      pop\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      pop\n      swap1\n      jump\t// out\n    tag_152:\n    tag_153:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_153)\n    tag_154:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_155:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_156:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_157:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_210\n        /* \"#utility.yul\":306:340   */\n      tag_211\n        /* \"#utility.yul\":315:339   */\n      tag_212\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_155\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":306:340   */\n      tag_156\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":288:341   */\n      tag_155\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_158:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_214\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_157\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:626   */\n    tag_159:\n        /* \"#utility.yul\":550:559   */\n      0x00\n        /* \"#utility.yul\":583:620   */\n      tag_216\n        /* \"#utility.yul\":614:619   */\n      dup3\n        /* \"#utility.yul\":583:620   */\n      tag_158\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":570:620   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:793   */\n    tag_160:\n        /* \"#utility.yul\":734:786   */\n      tag_218\n        /* \"#utility.yul\":780:785   */\n      dup2\n        /* \"#utility.yul\":734:786   */\n      tag_159\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":729:732   */\n      dup3\n        /* \"#utility.yul\":722:787   */\n      mstore\n        /* \"#utility.yul\":632:793   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":799:1051   */\n    tag_17:\n        /* \"#utility.yul\":907:911   */\n      0x00\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup3\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":922:948   */\n      swap1\n      pop\n        /* \"#utility.yul\":958:1044   */\n      tag_220\n        /* \"#utility.yul\":1041:1042   */\n      0x00\n        /* \"#utility.yul\":1030:1039   */\n      dup4\n        /* \"#utility.yul\":1026:1043   */\n      add\n        /* \"#utility.yul\":1017:1023   */\n      dup5\n        /* \"#utility.yul\":958:1044   */\n      tag_160\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":799:1051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1057:1132   */\n    tag_161:\n        /* \"#utility.yul\":1090:1096   */\n      0x00\n        /* \"#utility.yul\":1123:1125   */\n      0x40\n        /* \"#utility.yul\":1117:1126   */\n      mload\n        /* \"#utility.yul\":1107:1126   */\n      swap1\n      pop\n        /* \"#utility.yul\":1057:1132   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1138:1255   */\n    tag_162:\n        /* \"#utility.yul\":1247:1248   */\n      0x00\n        /* \"#utility.yul\":1244:1245   */\n      dup1\n        /* \"#utility.yul\":1237:1249   */\n      revert\n        /* \"#utility.yul\":1261:1378   */\n    tag_163:\n        /* \"#utility.yul\":1370:1371   */\n      0x00\n        /* \"#utility.yul\":1367:1368   */\n      dup1\n        /* \"#utility.yul\":1360:1372   */\n      revert\n        /* \"#utility.yul\":1384:1461   */\n    tag_164:\n        /* \"#utility.yul\":1421:1428   */\n      0x00\n        /* \"#utility.yul\":1450:1455   */\n      dup2\n        /* \"#utility.yul\":1439:1455   */\n      swap1\n      pop\n        /* \"#utility.yul\":1384:1461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1467:1589   */\n    tag_165:\n        /* \"#utility.yul\":1540:1564   */\n      tag_226\n        /* \"#utility.yul\":1558:1563   */\n      dup2\n        /* \"#utility.yul\":1540:1564   */\n      tag_164\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1533:1538   */\n      dup2\n        /* \"#utility.yul\":1530:1565   */\n      eq\n        /* \"#utility.yul\":1520:1583   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":1579:1580   */\n      0x00\n        /* \"#utility.yul\":1576:1577   */\n      dup1\n        /* \"#utility.yul\":1569:1581   */\n      revert\n        /* \"#utility.yul\":1520:1583   */\n    tag_227:\n        /* \"#utility.yul\":1467:1589   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1595:1734   */\n    tag_166:\n        /* \"#utility.yul\":1641:1646   */\n      0x00\n        /* \"#utility.yul\":1679:1685   */\n      dup2\n        /* \"#utility.yul\":1666:1686   */\n      calldataload\n        /* \"#utility.yul\":1657:1686   */\n      swap1\n      pop\n        /* \"#utility.yul\":1695:1728   */\n      tag_229\n        /* \"#utility.yul\":1722:1727   */\n      dup2\n        /* \"#utility.yul\":1695:1728   */\n      tag_165\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1595:1734   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1740:2069   */\n    tag_20:\n        /* \"#utility.yul\":1799:1805   */\n      0x00\n        /* \"#utility.yul\":1848:1850   */\n      0x20\n        /* \"#utility.yul\":1836:1845   */\n      dup3\n        /* \"#utility.yul\":1827:1834   */\n      dup5\n        /* \"#utility.yul\":1823:1846   */\n      sub\n        /* \"#utility.yul\":1819:1851   */\n      slt\n        /* \"#utility.yul\":1816:1935   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":1854:1933   */\n      tag_232\n      tag_162\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1816:1935   */\n    tag_231:\n        /* \"#utility.yul\":1974:1975   */\n      0x00\n        /* \"#utility.yul\":1999:2052   */\n      tag_233\n        /* \"#utility.yul\":2044:2051   */\n      dup5\n        /* \"#utility.yul\":2035:2041   */\n      dup3\n        /* \"#utility.yul\":2024:2033   */\n      dup6\n        /* \"#utility.yul\":2020:2042   */\n      add\n        /* \"#utility.yul\":1999:2052   */\n      tag_166\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1989:2052   */\n      swap2\n      pop\n        /* \"#utility.yul\":1945:2062   */\n      pop\n        /* \"#utility.yul\":1740:2069   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2075:2168   */\n    tag_167:\n        /* \"#utility.yul\":2111:2118   */\n      0x00\n        /* \"#utility.yul\":2151:2161   */\n      0xffffffff\n        /* \"#utility.yul\":2144:2149   */\n      dup3\n        /* \"#utility.yul\":2140:2162   */\n      and\n        /* \"#utility.yul\":2129:2162   */\n      swap1\n      pop\n        /* \"#utility.yul\":2075:2168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2174:2289   */\n    tag_168:\n        /* \"#utility.yul\":2259:2282   */\n      tag_236\n        /* \"#utility.yul\":2276:2281   */\n      dup2\n        /* \"#utility.yul\":2259:2282   */\n      tag_167\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2254:2257   */\n      dup3\n        /* \"#utility.yul\":2247:2283   */\n      mstore\n        /* \"#utility.yul\":2174:2289   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2295:2513   */\n    tag_23:\n        /* \"#utility.yul\":2386:2390   */\n      0x00\n        /* \"#utility.yul\":2424:2426   */\n      0x20\n        /* \"#utility.yul\":2413:2422   */\n      dup3\n        /* \"#utility.yul\":2409:2427   */\n      add\n        /* \"#utility.yul\":2401:2427   */\n      swap1\n      pop\n        /* \"#utility.yul\":2437:2506   */\n      tag_238\n        /* \"#utility.yul\":2503:2504   */\n      0x00\n        /* \"#utility.yul\":2492:2501   */\n      dup4\n        /* \"#utility.yul\":2488:2505   */\n      add\n        /* \"#utility.yul\":2479:2485   */\n      dup5\n        /* \"#utility.yul\":2437:2506   */\n      tag_168\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2295:2513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2519:2658   */\n    tag_169:\n        /* \"#utility.yul\":2582:2591   */\n      0x00\n        /* \"#utility.yul\":2615:2652   */\n      tag_240\n        /* \"#utility.yul\":2646:2651   */\n      dup3\n        /* \"#utility.yul\":2615:2652   */\n      tag_158\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2602:2652   */\n      swap1\n      pop\n        /* \"#utility.yul\":2519:2658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2664:2821   */\n    tag_170:\n        /* \"#utility.yul\":2764:2814   */\n      tag_242\n        /* \"#utility.yul\":2808:2813   */\n      dup2\n        /* \"#utility.yul\":2764:2814   */\n      tag_169\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2759:2762   */\n      dup3\n        /* \"#utility.yul\":2752:2815   */\n      mstore\n        /* \"#utility.yul\":2664:2821   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2827:3075   */\n    tag_27:\n        /* \"#utility.yul\":2933:2937   */\n      0x00\n        /* \"#utility.yul\":2971:2973   */\n      0x20\n        /* \"#utility.yul\":2960:2969   */\n      dup3\n        /* \"#utility.yul\":2956:2974   */\n      add\n        /* \"#utility.yul\":2948:2974   */\n      swap1\n      pop\n        /* \"#utility.yul\":2984:3068   */\n      tag_244\n        /* \"#utility.yul\":3065:3066   */\n      0x00\n        /* \"#utility.yul\":3054:3063   */\n      dup4\n        /* \"#utility.yul\":3050:3067   */\n      add\n        /* \"#utility.yul\":3041:3047   */\n      dup5\n        /* \"#utility.yul\":2984:3068   */\n      tag_170\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2827:3075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3081:3194   */\n    tag_171:\n        /* \"#utility.yul\":3147:3153   */\n      0x00\n        /* \"#utility.yul\":3181:3186   */\n      dup2\n        /* \"#utility.yul\":3175:3187   */\n      mload\n        /* \"#utility.yul\":3165:3187   */\n      swap1\n      pop\n        /* \"#utility.yul\":3081:3194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3200:3383   */\n    tag_172:\n        /* \"#utility.yul\":3298:3309   */\n      0x00\n        /* \"#utility.yul\":3332:3338   */\n      dup3\n        /* \"#utility.yul\":3327:3330   */\n      dup3\n        /* \"#utility.yul\":3320:3339   */\n      mstore\n        /* \"#utility.yul\":3372:3376   */\n      0x20\n        /* \"#utility.yul\":3367:3370   */\n      dup3\n        /* \"#utility.yul\":3363:3377   */\n      add\n        /* \"#utility.yul\":3348:3377   */\n      swap1\n      pop\n        /* \"#utility.yul\":3200:3383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3389:3520   */\n    tag_173:\n        /* \"#utility.yul\":3455:3459   */\n      0x00\n        /* \"#utility.yul\":3478:3481   */\n      dup2\n        /* \"#utility.yul\":3470:3481   */\n      swap1\n      pop\n        /* \"#utility.yul\":3508:3512   */\n      0x20\n        /* \"#utility.yul\":3503:3506   */\n      dup3\n        /* \"#utility.yul\":3499:3513   */\n      add\n        /* \"#utility.yul\":3491:3513   */\n      swap1\n      pop\n        /* \"#utility.yul\":3389:3520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3526:3631   */\n    tag_174:\n        /* \"#utility.yul\":3601:3624   */\n      tag_249\n        /* \"#utility.yul\":3618:3623   */\n      dup2\n        /* \"#utility.yul\":3601:3624   */\n      tag_167\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3596:3599   */\n      dup3\n        /* \"#utility.yul\":3589:3625   */\n      mstore\n        /* \"#utility.yul\":3526:3631   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3637:3812   */\n    tag_175:\n        /* \"#utility.yul\":3704:3714   */\n      0x00\n        /* \"#utility.yul\":3725:3769   */\n      tag_251\n        /* \"#utility.yul\":3765:3768   */\n      dup4\n        /* \"#utility.yul\":3757:3763   */\n      dup4\n        /* \"#utility.yul\":3725:3769   */\n      tag_174\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3801:3805   */\n      0x20\n        /* \"#utility.yul\":3796:3799   */\n      dup4\n        /* \"#utility.yul\":3792:3806   */\n      add\n        /* \"#utility.yul\":3778:3806   */\n      swap1\n      pop\n        /* \"#utility.yul\":3637:3812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3818:3930   */\n    tag_176:\n        /* \"#utility.yul\":3887:3891   */\n      0x00\n        /* \"#utility.yul\":3919:3923   */\n      0x20\n        /* \"#utility.yul\":3914:3917   */\n      dup3\n        /* \"#utility.yul\":3910:3924   */\n      add\n        /* \"#utility.yul\":3902:3924   */\n      swap1\n      pop\n        /* \"#utility.yul\":3818:3930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3964:4688   */\n    tag_177:\n        /* \"#utility.yul\":4081:4084   */\n      0x00\n        /* \"#utility.yul\":4110:4163   */\n      tag_254\n        /* \"#utility.yul\":4157:4162   */\n      dup3\n        /* \"#utility.yul\":4110:4163   */\n      tag_171\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4179:4264   */\n      tag_255\n        /* \"#utility.yul\":4257:4263   */\n      dup2\n        /* \"#utility.yul\":4252:4255   */\n      dup6\n        /* \"#utility.yul\":4179:4264   */\n      tag_172\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":4172:4264   */\n      swap4\n      pop\n        /* \"#utility.yul\":4288:4343   */\n      tag_256\n        /* \"#utility.yul\":4337:4342   */\n      dup4\n        /* \"#utility.yul\":4288:4343   */\n      tag_173\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4366:4373   */\n      dup1\n        /* \"#utility.yul\":4397:4398   */\n      0x00\n        /* \"#utility.yul\":4382:4663   */\n    tag_257:\n        /* \"#utility.yul\":4407:4413   */\n      dup4\n        /* \"#utility.yul\":4404:4405   */\n      dup2\n        /* \"#utility.yul\":4401:4414   */\n      lt\n        /* \"#utility.yul\":4382:4663   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":4483:4489   */\n      dup2\n        /* \"#utility.yul\":4477:4490   */\n      mload\n        /* \"#utility.yul\":4510:4571   */\n      tag_260\n        /* \"#utility.yul\":4567:4570   */\n      dup9\n        /* \"#utility.yul\":4552:4565   */\n      dup3\n        /* \"#utility.yul\":4510:4571   */\n      tag_175\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4503:4571   */\n      swap8\n      pop\n        /* \"#utility.yul\":4594:4653   */\n      tag_261\n        /* \"#utility.yul\":4646:4652   */\n      dup4\n        /* \"#utility.yul\":4594:4653   */\n      tag_176\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4584:4653   */\n      swap3\n      pop\n        /* \"#utility.yul\":4442:4663   */\n      pop\n        /* \"#utility.yul\":4429:4430   */\n      0x01\n        /* \"#utility.yul\":4426:4427   */\n      dup2\n        /* \"#utility.yul\":4422:4431   */\n      add\n        /* \"#utility.yul\":4417:4431   */\n      swap1\n      pop\n        /* \"#utility.yul\":4382:4663   */\n      jump(tag_257)\n    tag_259:\n        /* \"#utility.yul\":4386:4400   */\n      pop\n        /* \"#utility.yul\":4679:4682   */\n      dup6\n        /* \"#utility.yul\":4672:4682   */\n      swap4\n      pop\n        /* \"#utility.yul\":4086:4688   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3964:4688   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4694:5063   */\n    tag_31:\n        /* \"#utility.yul\":4835:4839   */\n      0x00\n        /* \"#utility.yul\":4873:4875   */\n      0x20\n        /* \"#utility.yul\":4862:4871   */\n      dup3\n        /* \"#utility.yul\":4858:4876   */\n      add\n        /* \"#utility.yul\":4850:4876   */\n      swap1\n      pop\n        /* \"#utility.yul\":4922:4931   */\n      dup2\n        /* \"#utility.yul\":4916:4920   */\n      dup2\n        /* \"#utility.yul\":4912:4932   */\n      sub\n        /* \"#utility.yul\":4908:4909   */\n      0x00\n        /* \"#utility.yul\":4897:4906   */\n      dup4\n        /* \"#utility.yul\":4893:4910   */\n      add\n        /* \"#utility.yul\":4886:4933   */\n      mstore\n        /* \"#utility.yul\":4950:5056   */\n      tag_263\n        /* \"#utility.yul\":5051:5055   */\n      dup2\n        /* \"#utility.yul\":5042:5048   */\n      dup5\n        /* \"#utility.yul\":4950:5056   */\n      tag_177\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4942:5056   */\n      swap1\n      pop\n        /* \"#utility.yul\":4694:5063   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5069:5165   */\n    tag_178:\n        /* \"#utility.yul\":5106:5113   */\n      0x00\n        /* \"#utility.yul\":5135:5159   */\n      tag_265\n        /* \"#utility.yul\":5153:5158   */\n      dup3\n        /* \"#utility.yul\":5135:5159   */\n      tag_155\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":5124:5159   */\n      swap1\n      pop\n        /* \"#utility.yul\":5069:5165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5171:5289   */\n    tag_179:\n        /* \"#utility.yul\":5258:5282   */\n      tag_267\n        /* \"#utility.yul\":5276:5281   */\n      dup2\n        /* \"#utility.yul\":5258:5282   */\n      tag_178\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":5253:5256   */\n      dup3\n        /* \"#utility.yul\":5246:5283   */\n      mstore\n        /* \"#utility.yul\":5171:5289   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5295:5517   */\n    tag_39:\n        /* \"#utility.yul\":5388:5392   */\n      0x00\n        /* \"#utility.yul\":5426:5428   */\n      0x20\n        /* \"#utility.yul\":5415:5424   */\n      dup3\n        /* \"#utility.yul\":5411:5429   */\n      add\n        /* \"#utility.yul\":5403:5429   */\n      swap1\n      pop\n        /* \"#utility.yul\":5439:5510   */\n      tag_269\n        /* \"#utility.yul\":5507:5508   */\n      0x00\n        /* \"#utility.yul\":5496:5505   */\n      dup4\n        /* \"#utility.yul\":5492:5509   */\n      add\n        /* \"#utility.yul\":5483:5489   */\n      dup5\n        /* \"#utility.yul\":5439:5510   */\n      tag_179\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5295:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5640   */\n    tag_180:\n        /* \"#utility.yul\":5632:5633   */\n      0x00\n        /* \"#utility.yul\":5629:5630   */\n      dup1\n        /* \"#utility.yul\":5622:5634   */\n      revert\n        /* \"#utility.yul\":5646:5748   */\n    tag_181:\n        /* \"#utility.yul\":5687:5693   */\n      0x00\n        /* \"#utility.yul\":5738:5740   */\n      0x1f\n        /* \"#utility.yul\":5734:5741   */\n      not\n        /* \"#utility.yul\":5729:5731   */\n      0x1f\n        /* \"#utility.yul\":5722:5727   */\n      dup4\n        /* \"#utility.yul\":5718:5732   */\n      add\n        /* \"#utility.yul\":5714:5742   */\n      and\n        /* \"#utility.yul\":5704:5742   */\n      swap1\n      pop\n        /* \"#utility.yul\":5646:5748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5754:5934   */\n    tag_118:\n        /* \"#utility.yul\":5802:5879   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5799:5800   */\n      0x00\n        /* \"#utility.yul\":5792:5880   */\n      mstore\n        /* \"#utility.yul\":5899:5903   */\n      0x41\n        /* \"#utility.yul\":5896:5897   */\n      0x04\n        /* \"#utility.yul\":5889:5904   */\n      mstore\n        /* \"#utility.yul\":5923:5927   */\n      0x24\n        /* \"#utility.yul\":5920:5921   */\n      0x00\n        /* \"#utility.yul\":5913:5928   */\n      revert\n        /* \"#utility.yul\":5940:6221   */\n    tag_182:\n        /* \"#utility.yul\":6023:6050   */\n      tag_274\n        /* \"#utility.yul\":6045:6049   */\n      dup3\n        /* \"#utility.yul\":6023:6050   */\n      tag_181\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":6015:6021   */\n      dup2\n        /* \"#utility.yul\":6011:6051   */\n      add\n        /* \"#utility.yul\":6153:6159   */\n      dup2\n        /* \"#utility.yul\":6141:6151   */\n      dup2\n        /* \"#utility.yul\":6138:6160   */\n      lt\n        /* \"#utility.yul\":6117:6135   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6105:6115   */\n      dup3\n        /* \"#utility.yul\":6102:6136   */\n      gt\n        /* \"#utility.yul\":6099:6161   */\n      or\n        /* \"#utility.yul\":6096:6184   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":6164:6182   */\n      tag_276\n      tag_118\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6096:6184   */\n    tag_275:\n        /* \"#utility.yul\":6204:6214   */\n      dup1\n        /* \"#utility.yul\":6200:6202   */\n      0x40\n        /* \"#utility.yul\":6193:6215   */\n      mstore\n        /* \"#utility.yul\":5983:6221   */\n      pop\n        /* \"#utility.yul\":5940:6221   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6227:6356   */\n    tag_183:\n        /* \"#utility.yul\":6261:6267   */\n      0x00\n        /* \"#utility.yul\":6288:6308   */\n      tag_278\n      tag_161\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":6278:6308   */\n      swap1\n      pop\n        /* \"#utility.yul\":6317:6350   */\n      tag_279\n        /* \"#utility.yul\":6345:6349   */\n      dup3\n        /* \"#utility.yul\":6337:6343   */\n      dup3\n        /* \"#utility.yul\":6317:6350   */\n      tag_182\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":6227:6356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6362:6672   */\n    tag_184:\n        /* \"#utility.yul\":6438:6442   */\n      0x00\n        /* \"#utility.yul\":6528:6546   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6520:6526   */\n      dup3\n        /* \"#utility.yul\":6517:6547   */\n      gt\n        /* \"#utility.yul\":6514:6570   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":6550:6568   */\n      tag_282\n      tag_118\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6514:6570   */\n    tag_281:\n        /* \"#utility.yul\":6600:6604   */\n      0x20\n        /* \"#utility.yul\":6592:6598   */\n      dup3\n        /* \"#utility.yul\":6588:6605   */\n      mul\n        /* \"#utility.yul\":6580:6605   */\n      swap1\n      pop\n        /* \"#utility.yul\":6660:6664   */\n      0x20\n        /* \"#utility.yul\":6654:6658   */\n      dup2\n        /* \"#utility.yul\":6650:6665   */\n      add\n        /* \"#utility.yul\":6642:6665   */\n      swap1\n      pop\n        /* \"#utility.yul\":6362:6672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6678:6795   */\n    tag_185:\n        /* \"#utility.yul\":6787:6788   */\n      0x00\n        /* \"#utility.yul\":6784:6785   */\n      dup1\n        /* \"#utility.yul\":6777:6789   */\n      revert\n        /* \"#utility.yul\":6801:6921   */\n    tag_186:\n        /* \"#utility.yul\":6873:6896   */\n      tag_285\n        /* \"#utility.yul\":6890:6895   */\n      dup2\n        /* \"#utility.yul\":6873:6896   */\n      tag_167\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":6866:6871   */\n      dup2\n        /* \"#utility.yul\":6863:6897   */\n      eq\n        /* \"#utility.yul\":6853:6915   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":6911:6912   */\n      0x00\n        /* \"#utility.yul\":6908:6909   */\n      dup1\n        /* \"#utility.yul\":6901:6913   */\n      revert\n        /* \"#utility.yul\":6853:6915   */\n    tag_286:\n        /* \"#utility.yul\":6801:6921   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6927:7064   */\n    tag_187:\n        /* \"#utility.yul\":6972:6977   */\n      0x00\n        /* \"#utility.yul\":7010:7016   */\n      dup2\n        /* \"#utility.yul\":6997:7017   */\n      calldataload\n        /* \"#utility.yul\":6988:7017   */\n      swap1\n      pop\n        /* \"#utility.yul\":7026:7058   */\n      tag_288\n        /* \"#utility.yul\":7052:7057   */\n      dup2\n        /* \"#utility.yul\":7026:7058   */\n      tag_186\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":6927:7064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7086:7793   */\n    tag_188:\n        /* \"#utility.yul\":7181:7186   */\n      0x00\n        /* \"#utility.yul\":7206:7286   */\n      tag_290\n        /* \"#utility.yul\":7222:7285   */\n      tag_291\n        /* \"#utility.yul\":7278:7284   */\n      dup5\n        /* \"#utility.yul\":7222:7285   */\n      tag_184\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7206:7286   */\n      tag_183\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":7197:7286   */\n      swap1\n      pop\n        /* \"#utility.yul\":7306:7311   */\n      dup1\n        /* \"#utility.yul\":7335:7341   */\n      dup4\n        /* \"#utility.yul\":7328:7333   */\n      dup3\n        /* \"#utility.yul\":7321:7342   */\n      mstore\n        /* \"#utility.yul\":7369:7373   */\n      0x20\n        /* \"#utility.yul\":7362:7367   */\n      dup3\n        /* \"#utility.yul\":7358:7374   */\n      add\n        /* \"#utility.yul\":7351:7374   */\n      swap1\n      pop\n        /* \"#utility.yul\":7422:7426   */\n      0x20\n        /* \"#utility.yul\":7414:7420   */\n      dup5\n        /* \"#utility.yul\":7410:7427   */\n      mul\n        /* \"#utility.yul\":7402:7408   */\n      dup4\n        /* \"#utility.yul\":7398:7428   */\n      add\n        /* \"#utility.yul\":7451:7454   */\n      dup6\n        /* \"#utility.yul\":7443:7449   */\n      dup2\n        /* \"#utility.yul\":7440:7455   */\n      gt\n        /* \"#utility.yul\":7437:7559   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":7470:7549   */\n      tag_293\n      tag_185\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7437:7559   */\n    tag_292:\n        /* \"#utility.yul\":7585:7591   */\n      dup4\n        /* \"#utility.yul\":7568:7787   */\n    tag_294:\n        /* \"#utility.yul\":7602:7608   */\n      dup2\n        /* \"#utility.yul\":7597:7600   */\n      dup2\n        /* \"#utility.yul\":7594:7609   */\n      lt\n        /* \"#utility.yul\":7568:7787   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":7677:7680   */\n      dup1\n        /* \"#utility.yul\":7706:7742   */\n      tag_297\n        /* \"#utility.yul\":7738:7741   */\n      dup9\n        /* \"#utility.yul\":7726:7736   */\n      dup3\n        /* \"#utility.yul\":7706:7742   */\n      tag_187\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":7701:7704   */\n      dup5\n        /* \"#utility.yul\":7694:7743   */\n      mstore\n        /* \"#utility.yul\":7772:7776   */\n      0x20\n        /* \"#utility.yul\":7767:7770   */\n      dup5\n        /* \"#utility.yul\":7763:7777   */\n      add\n        /* \"#utility.yul\":7756:7777   */\n      swap4\n      pop\n        /* \"#utility.yul\":7644:7787   */\n      pop\n        /* \"#utility.yul\":7628:7632   */\n      0x20\n        /* \"#utility.yul\":7623:7626   */\n      dup2\n        /* \"#utility.yul\":7619:7633   */\n      add\n        /* \"#utility.yul\":7612:7633   */\n      swap1\n      pop\n        /* \"#utility.yul\":7568:7787   */\n      jump(tag_294)\n    tag_296:\n        /* \"#utility.yul\":7572:7593   */\n      pop\n        /* \"#utility.yul\":7187:7793   */\n      pop\n      pop\n        /* \"#utility.yul\":7086:7793   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7815:8183   */\n    tag_189:\n        /* \"#utility.yul\":7885:7890   */\n      0x00\n        /* \"#utility.yul\":7934:7937   */\n      dup3\n        /* \"#utility.yul\":7927:7931   */\n      0x1f\n        /* \"#utility.yul\":7919:7925   */\n      dup4\n        /* \"#utility.yul\":7915:7932   */\n      add\n        /* \"#utility.yul\":7911:7938   */\n      slt\n        /* \"#utility.yul\":7901:8023   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":7942:8021   */\n      tag_300\n      tag_180\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":7901:8023   */\n    tag_299:\n        /* \"#utility.yul\":8059:8065   */\n      dup2\n        /* \"#utility.yul\":8046:8066   */\n      calldataload\n        /* \"#utility.yul\":8084:8177   */\n      tag_301\n        /* \"#utility.yul\":8173:8176   */\n      dup5\n        /* \"#utility.yul\":8165:8171   */\n      dup3\n        /* \"#utility.yul\":8158:8162   */\n      0x20\n        /* \"#utility.yul\":8150:8156   */\n      dup7\n        /* \"#utility.yul\":8146:8163   */\n      add\n        /* \"#utility.yul\":8084:8177   */\n      tag_188\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":8075:8177   */\n      swap2\n      pop\n        /* \"#utility.yul\":7891:8183   */\n      pop\n        /* \"#utility.yul\":7815:8183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8189:8726   */\n    tag_42:\n        /* \"#utility.yul\":8272:8278   */\n      0x00\n        /* \"#utility.yul\":8321:8323   */\n      0x20\n        /* \"#utility.yul\":8309:8318   */\n      dup3\n        /* \"#utility.yul\":8300:8307   */\n      dup5\n        /* \"#utility.yul\":8296:8319   */\n      sub\n        /* \"#utility.yul\":8292:8324   */\n      slt\n        /* \"#utility.yul\":8289:8408   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":8327:8406   */\n      tag_304\n      tag_162\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":8289:8408   */\n    tag_303:\n        /* \"#utility.yul\":8475:8476   */\n      0x00\n        /* \"#utility.yul\":8464:8473   */\n      dup3\n        /* \"#utility.yul\":8460:8477   */\n      add\n        /* \"#utility.yul\":8447:8478   */\n      calldataload\n        /* \"#utility.yul\":8505:8523   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8497:8503   */\n      dup2\n        /* \"#utility.yul\":8494:8524   */\n      gt\n        /* \"#utility.yul\":8491:8608   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":8527:8606   */\n      tag_306\n      tag_163\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":8491:8608   */\n    tag_305:\n        /* \"#utility.yul\":8632:8709   */\n      tag_307\n        /* \"#utility.yul\":8701:8708   */\n      dup5\n        /* \"#utility.yul\":8692:8698   */\n      dup3\n        /* \"#utility.yul\":8681:8690   */\n      dup6\n        /* \"#utility.yul\":8677:8699   */\n      add\n        /* \"#utility.yul\":8632:8709   */\n      tag_189\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":8622:8709   */\n      swap2\n      pop\n        /* \"#utility.yul\":8418:8719   */\n      pop\n        /* \"#utility.yul\":8189:8726   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8732:8850   */\n    tag_190:\n        /* \"#utility.yul\":8819:8843   */\n      tag_309\n        /* \"#utility.yul\":8837:8842   */\n      dup2\n        /* \"#utility.yul\":8819:8843   */\n      tag_164\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":8814:8817   */\n      dup3\n        /* \"#utility.yul\":8807:8844   */\n      mstore\n        /* \"#utility.yul\":8732:8850   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8856:9078   */\n    tag_47:\n        /* \"#utility.yul\":8949:8953   */\n      0x00\n        /* \"#utility.yul\":8987:8989   */\n      0x20\n        /* \"#utility.yul\":8976:8985   */\n      dup3\n        /* \"#utility.yul\":8972:8990   */\n      add\n        /* \"#utility.yul\":8964:8990   */\n      swap1\n      pop\n        /* \"#utility.yul\":9000:9071   */\n      tag_311\n        /* \"#utility.yul\":9068:9069   */\n      0x00\n        /* \"#utility.yul\":9057:9066   */\n      dup4\n        /* \"#utility.yul\":9053:9070   */\n      add\n        /* \"#utility.yul\":9044:9050   */\n      dup5\n        /* \"#utility.yul\":9000:9071   */\n      tag_190\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":8856:9078   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9084:9206   */\n    tag_191:\n        /* \"#utility.yul\":9157:9181   */\n      tag_313\n        /* \"#utility.yul\":9175:9180   */\n      dup2\n        /* \"#utility.yul\":9157:9181   */\n      tag_178\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":9150:9155   */\n      dup2\n        /* \"#utility.yul\":9147:9182   */\n      eq\n        /* \"#utility.yul\":9137:9200   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":9196:9197   */\n      0x00\n        /* \"#utility.yul\":9193:9194   */\n      dup1\n        /* \"#utility.yul\":9186:9198   */\n      revert\n        /* \"#utility.yul\":9137:9200   */\n    tag_314:\n        /* \"#utility.yul\":9084:9206   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9212:9351   */\n    tag_192:\n        /* \"#utility.yul\":9258:9263   */\n      0x00\n        /* \"#utility.yul\":9296:9302   */\n      dup2\n        /* \"#utility.yul\":9283:9303   */\n      calldataload\n        /* \"#utility.yul\":9274:9303   */\n      swap1\n      pop\n        /* \"#utility.yul\":9312:9345   */\n      tag_316\n        /* \"#utility.yul\":9339:9344   */\n      dup2\n        /* \"#utility.yul\":9312:9345   */\n      tag_191\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":9212:9351   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9357:9686   */\n    tag_50:\n        /* \"#utility.yul\":9416:9422   */\n      0x00\n        /* \"#utility.yul\":9465:9467   */\n      0x20\n        /* \"#utility.yul\":9453:9462   */\n      dup3\n        /* \"#utility.yul\":9444:9451   */\n      dup5\n        /* \"#utility.yul\":9440:9463   */\n      sub\n        /* \"#utility.yul\":9436:9468   */\n      slt\n        /* \"#utility.yul\":9433:9552   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":9471:9550   */\n      tag_319\n      tag_162\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":9433:9552   */\n    tag_318:\n        /* \"#utility.yul\":9591:9592   */\n      0x00\n        /* \"#utility.yul\":9616:9669   */\n      tag_320\n        /* \"#utility.yul\":9661:9668   */\n      dup5\n        /* \"#utility.yul\":9652:9658   */\n      dup3\n        /* \"#utility.yul\":9641:9650   */\n      dup6\n        /* \"#utility.yul\":9637:9659   */\n      add\n        /* \"#utility.yul\":9616:9669   */\n      tag_192\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":9606:9669   */\n      swap2\n      pop\n        /* \"#utility.yul\":9562:9679   */\n      pop\n        /* \"#utility.yul\":9357:9686   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9692:10024   */\n    tag_68:\n        /* \"#utility.yul\":9813:9817   */\n      0x00\n        /* \"#utility.yul\":9851:9853   */\n      0x40\n        /* \"#utility.yul\":9840:9849   */\n      dup3\n        /* \"#utility.yul\":9836:9854   */\n      add\n        /* \"#utility.yul\":9828:9854   */\n      swap1\n      pop\n        /* \"#utility.yul\":9864:9935   */\n      tag_322\n        /* \"#utility.yul\":9932:9933   */\n      0x00\n        /* \"#utility.yul\":9921:9930   */\n      dup4\n        /* \"#utility.yul\":9917:9934   */\n      add\n        /* \"#utility.yul\":9908:9914   */\n      dup6\n        /* \"#utility.yul\":9864:9935   */\n      tag_179\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":9945:10017   */\n      tag_323\n        /* \"#utility.yul\":10013:10015   */\n      0x20\n        /* \"#utility.yul\":10002:10011   */\n      dup4\n        /* \"#utility.yul\":9998:10016   */\n      add\n        /* \"#utility.yul\":9989:9995   */\n      dup5\n        /* \"#utility.yul\":9945:10017   */\n      tag_190\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":9692:10024   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10030:10120   */\n    tag_193:\n        /* \"#utility.yul\":10064:10071   */\n      0x00\n        /* \"#utility.yul\":10107:10112   */\n      dup2\n        /* \"#utility.yul\":10100:10113   */\n      iszero\n        /* \"#utility.yul\":10093:10114   */\n      iszero\n        /* \"#utility.yul\":10082:10114   */\n      swap1\n      pop\n        /* \"#utility.yul\":10030:10120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10126:10242   */\n    tag_194:\n        /* \"#utility.yul\":10196:10217   */\n      tag_326\n        /* \"#utility.yul\":10211:10216   */\n      dup2\n        /* \"#utility.yul\":10196:10217   */\n      tag_193\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":10189:10194   */\n      dup2\n        /* \"#utility.yul\":10186:10218   */\n      eq\n        /* \"#utility.yul\":10176:10236   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":10232:10233   */\n      0x00\n        /* \"#utility.yul\":10229:10230   */\n      dup1\n        /* \"#utility.yul\":10222:10234   */\n      revert\n        /* \"#utility.yul\":10176:10236   */\n    tag_327:\n        /* \"#utility.yul\":10126:10242   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10248:10385   */\n    tag_195:\n        /* \"#utility.yul\":10302:10307   */\n      0x00\n        /* \"#utility.yul\":10333:10339   */\n      dup2\n        /* \"#utility.yul\":10327:10340   */\n      mload\n        /* \"#utility.yul\":10318:10340   */\n      swap1\n      pop\n        /* \"#utility.yul\":10349:10379   */\n      tag_329\n        /* \"#utility.yul\":10373:10378   */\n      dup2\n        /* \"#utility.yul\":10349:10379   */\n      tag_194\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":10248:10385   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10391:10736   */\n    tag_72:\n        /* \"#utility.yul\":10458:10464   */\n      0x00\n        /* \"#utility.yul\":10507:10509   */\n      0x20\n        /* \"#utility.yul\":10495:10504   */\n      dup3\n        /* \"#utility.yul\":10486:10493   */\n      dup5\n        /* \"#utility.yul\":10482:10505   */\n      sub\n        /* \"#utility.yul\":10478:10510   */\n      slt\n        /* \"#utility.yul\":10475:10594   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":10513:10592   */\n      tag_332\n      tag_162\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":10475:10594   */\n    tag_331:\n        /* \"#utility.yul\":10633:10634   */\n      0x00\n        /* \"#utility.yul\":10658:10719   */\n      tag_333\n        /* \"#utility.yul\":10711:10718   */\n      dup5\n        /* \"#utility.yul\":10702:10708   */\n      dup3\n        /* \"#utility.yul\":10691:10700   */\n      dup6\n        /* \"#utility.yul\":10687:10709   */\n      add\n        /* \"#utility.yul\":10658:10719   */\n      tag_195\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":10648:10719   */\n      swap2\n      pop\n        /* \"#utility.yul\":10604:10729   */\n      pop\n        /* \"#utility.yul\":10391:10736   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10742:10922   */\n    tag_101:\n        /* \"#utility.yul\":10790:10867   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10787:10788   */\n      0x00\n        /* \"#utility.yul\":10780:10868   */\n      mstore\n        /* \"#utility.yul\":10887:10891   */\n      0x32\n        /* \"#utility.yul\":10884:10885   */\n      0x04\n        /* \"#utility.yul\":10877:10892   */\n      mstore\n        /* \"#utility.yul\":10911:10915   */\n      0x24\n        /* \"#utility.yul\":10908:10909   */\n      0x00\n        /* \"#utility.yul\":10901:10916   */\n      revert\n        /* \"#utility.yul\":10928:11068   */\n    tag_196:\n        /* \"#utility.yul\":10977:10986   */\n      0x00\n        /* \"#utility.yul\":11010:11062   */\n      tag_336\n        /* \"#utility.yul\":11028:11061   */\n      tag_337\n        /* \"#utility.yul\":11037:11060   */\n      tag_338\n        /* \"#utility.yul\":11054:11059   */\n      dup5\n        /* \"#utility.yul\":11037:11060   */\n      tag_167\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":11028:11061   */\n      tag_156\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":11010:11062   */\n      tag_164\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":10997:11062   */\n      swap1\n      pop\n        /* \"#utility.yul\":10928:11068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11074:11203   */\n    tag_197:\n        /* \"#utility.yul\":11160:11196   */\n      tag_340\n        /* \"#utility.yul\":11190:11195   */\n      dup2\n        /* \"#utility.yul\":11160:11196   */\n      tag_196\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":11155:11158   */\n      dup3\n        /* \"#utility.yul\":11148:11197   */\n      mstore\n        /* \"#utility.yul\":11074:11203   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11209:11539   */\n    tag_104:\n        /* \"#utility.yul\":11329:11333   */\n      0x00\n        /* \"#utility.yul\":11367:11369   */\n      0x40\n        /* \"#utility.yul\":11356:11365   */\n      dup3\n        /* \"#utility.yul\":11352:11370   */\n      add\n        /* \"#utility.yul\":11344:11370   */\n      swap1\n      pop\n        /* \"#utility.yul\":11380:11451   */\n      tag_342\n        /* \"#utility.yul\":11448:11449   */\n      0x00\n        /* \"#utility.yul\":11437:11446   */\n      dup4\n        /* \"#utility.yul\":11433:11450   */\n      add\n        /* \"#utility.yul\":11424:11430   */\n      dup6\n        /* \"#utility.yul\":11380:11451   */\n      tag_179\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":11461:11532   */\n      tag_343\n        /* \"#utility.yul\":11528:11530   */\n      0x20\n        /* \"#utility.yul\":11517:11526   */\n      dup4\n        /* \"#utility.yul\":11513:11531   */\n      add\n        /* \"#utility.yul\":11504:11510   */\n      dup5\n        /* \"#utility.yul\":11461:11532   */\n      tag_197\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":11209:11539   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11545:11688   */\n    tag_198:\n        /* \"#utility.yul\":11602:11607   */\n      0x00\n        /* \"#utility.yul\":11633:11639   */\n      dup2\n        /* \"#utility.yul\":11627:11640   */\n      mload\n        /* \"#utility.yul\":11618:11640   */\n      swap1\n      pop\n        /* \"#utility.yul\":11649:11682   */\n      tag_345\n        /* \"#utility.yul\":11676:11681   */\n      dup2\n        /* \"#utility.yul\":11649:11682   */\n      tag_165\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":11545:11688   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11694:12045   */\n    tag_108:\n        /* \"#utility.yul\":11764:11770   */\n      0x00\n        /* \"#utility.yul\":11813:11815   */\n      0x20\n        /* \"#utility.yul\":11801:11810   */\n      dup3\n        /* \"#utility.yul\":11792:11799   */\n      dup5\n        /* \"#utility.yul\":11788:11811   */\n      sub\n        /* \"#utility.yul\":11784:11816   */\n      slt\n        /* \"#utility.yul\":11781:11900   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":11819:11898   */\n      tag_348\n      tag_162\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":11781:11900   */\n    tag_347:\n        /* \"#utility.yul\":11939:11940   */\n      0x00\n        /* \"#utility.yul\":11964:12028   */\n      tag_349\n        /* \"#utility.yul\":12020:12027   */\n      dup5\n        /* \"#utility.yul\":12011:12017   */\n      dup3\n        /* \"#utility.yul\":12000:12009   */\n      dup6\n        /* \"#utility.yul\":11996:12018   */\n      add\n        /* \"#utility.yul\":11964:12028   */\n      tag_198\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":11954:12028   */\n      swap2\n      pop\n        /* \"#utility.yul\":11910:12038   */\n      pop\n        /* \"#utility.yul\":11694:12045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12051:12165   */\n    tag_199:\n        /* \"#utility.yul\":12118:12124   */\n      0x00\n        /* \"#utility.yul\":12152:12157   */\n      dup2\n        /* \"#utility.yul\":12146:12158   */\n      mload\n        /* \"#utility.yul\":12136:12158   */\n      swap1\n      pop\n        /* \"#utility.yul\":12051:12165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12171:12355   */\n    tag_200:\n        /* \"#utility.yul\":12270:12281   */\n      0x00\n        /* \"#utility.yul\":12304:12310   */\n      dup3\n        /* \"#utility.yul\":12299:12302   */\n      dup3\n        /* \"#utility.yul\":12292:12311   */\n      mstore\n        /* \"#utility.yul\":12344:12348   */\n      0x20\n        /* \"#utility.yul\":12339:12342   */\n      dup3\n        /* \"#utility.yul\":12335:12349   */\n      add\n        /* \"#utility.yul\":12320:12349   */\n      swap1\n      pop\n        /* \"#utility.yul\":12171:12355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12361:12493   */\n    tag_201:\n        /* \"#utility.yul\":12428:12432   */\n      0x00\n        /* \"#utility.yul\":12451:12454   */\n      dup2\n        /* \"#utility.yul\":12443:12454   */\n      swap1\n      pop\n        /* \"#utility.yul\":12481:12485   */\n      0x20\n        /* \"#utility.yul\":12476:12479   */\n      dup3\n        /* \"#utility.yul\":12472:12486   */\n      add\n        /* \"#utility.yul\":12464:12486   */\n      swap1\n      pop\n        /* \"#utility.yul\":12361:12493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12499:12607   */\n    tag_202:\n        /* \"#utility.yul\":12576:12600   */\n      tag_354\n        /* \"#utility.yul\":12594:12599   */\n      dup2\n        /* \"#utility.yul\":12576:12600   */\n      tag_164\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":12571:12574   */\n      dup3\n        /* \"#utility.yul\":12564:12601   */\n      mstore\n        /* \"#utility.yul\":12499:12607   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12613:12792   */\n    tag_203:\n        /* \"#utility.yul\":12682:12692   */\n      0x00\n        /* \"#utility.yul\":12703:12749   */\n      tag_356\n        /* \"#utility.yul\":12745:12748   */\n      dup4\n        /* \"#utility.yul\":12737:12743   */\n      dup4\n        /* \"#utility.yul\":12703:12749   */\n      tag_202\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":12781:12785   */\n      0x20\n        /* \"#utility.yul\":12776:12779   */\n      dup4\n        /* \"#utility.yul\":12772:12786   */\n      add\n        /* \"#utility.yul\":12758:12786   */\n      swap1\n      pop\n        /* \"#utility.yul\":12613:12792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12798:12911   */\n    tag_204:\n        /* \"#utility.yul\":12868:12872   */\n      0x00\n        /* \"#utility.yul\":12900:12904   */\n      0x20\n        /* \"#utility.yul\":12895:12898   */\n      dup3\n        /* \"#utility.yul\":12891:12905   */\n      add\n        /* \"#utility.yul\":12883:12905   */\n      swap1\n      pop\n        /* \"#utility.yul\":12798:12911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12947:13679   */\n    tag_205:\n        /* \"#utility.yul\":13066:13069   */\n      0x00\n        /* \"#utility.yul\":13095:13149   */\n      tag_359\n        /* \"#utility.yul\":13143:13148   */\n      dup3\n        /* \"#utility.yul\":13095:13149   */\n      tag_199\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":13165:13251   */\n      tag_360\n        /* \"#utility.yul\":13244:13250   */\n      dup2\n        /* \"#utility.yul\":13239:13242   */\n      dup6\n        /* \"#utility.yul\":13165:13251   */\n      tag_200\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":13158:13251   */\n      swap4\n      pop\n        /* \"#utility.yul\":13275:13331   */\n      tag_361\n        /* \"#utility.yul\":13325:13330   */\n      dup4\n        /* \"#utility.yul\":13275:13331   */\n      tag_201\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":13354:13361   */\n      dup1\n        /* \"#utility.yul\":13385:13386   */\n      0x00\n        /* \"#utility.yul\":13370:13654   */\n    tag_362:\n        /* \"#utility.yul\":13395:13401   */\n      dup4\n        /* \"#utility.yul\":13392:13393   */\n      dup2\n        /* \"#utility.yul\":13389:13402   */\n      lt\n        /* \"#utility.yul\":13370:13654   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":13471:13477   */\n      dup2\n        /* \"#utility.yul\":13465:13478   */\n      mload\n        /* \"#utility.yul\":13498:13561   */\n      tag_365\n        /* \"#utility.yul\":13557:13560   */\n      dup9\n        /* \"#utility.yul\":13542:13555   */\n      dup3\n        /* \"#utility.yul\":13498:13561   */\n      tag_203\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":13491:13561   */\n      swap8\n      pop\n        /* \"#utility.yul\":13584:13644   */\n      tag_366\n        /* \"#utility.yul\":13637:13643   */\n      dup4\n        /* \"#utility.yul\":13584:13644   */\n      tag_204\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":13574:13644   */\n      swap3\n      pop\n        /* \"#utility.yul\":13430:13654   */\n      pop\n        /* \"#utility.yul\":13417:13418   */\n      0x01\n        /* \"#utility.yul\":13414:13415   */\n      dup2\n        /* \"#utility.yul\":13410:13419   */\n      add\n        /* \"#utility.yul\":13405:13419   */\n      swap1\n      pop\n        /* \"#utility.yul\":13370:13654   */\n      jump(tag_362)\n    tag_364:\n        /* \"#utility.yul\":13374:13388   */\n      pop\n        /* \"#utility.yul\":13670:13673   */\n      dup6\n        /* \"#utility.yul\":13663:13673   */\n      swap4\n      pop\n        /* \"#utility.yul\":13071:13679   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12947:13679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13685:14429   */\n    tag_134:\n        /* \"#utility.yul\":13934:13938   */\n      0x00\n        /* \"#utility.yul\":13972:13974   */\n      0x60\n        /* \"#utility.yul\":13961:13970   */\n      dup3\n        /* \"#utility.yul\":13957:13975   */\n      add\n        /* \"#utility.yul\":13949:13975   */\n      swap1\n      pop\n        /* \"#utility.yul\":13985:14056   */\n      tag_368\n        /* \"#utility.yul\":14053:14054   */\n      0x00\n        /* \"#utility.yul\":14042:14051   */\n      dup4\n        /* \"#utility.yul\":14038:14055   */\n      add\n        /* \"#utility.yul\":14029:14035   */\n      dup7\n        /* \"#utility.yul\":13985:14056   */\n      tag_179\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":14103:14112   */\n      dup2\n        /* \"#utility.yul\":14097:14101   */\n      dup2\n        /* \"#utility.yul\":14093:14113   */\n      sub\n        /* \"#utility.yul\":14088:14090   */\n      0x20\n        /* \"#utility.yul\":14077:14086   */\n      dup4\n        /* \"#utility.yul\":14073:14091   */\n      add\n        /* \"#utility.yul\":14066:14114   */\n      mstore\n        /* \"#utility.yul\":14131:14239   */\n      tag_369\n        /* \"#utility.yul\":14234:14238   */\n      dup2\n        /* \"#utility.yul\":14225:14231   */\n      dup6\n        /* \"#utility.yul\":14131:14239   */\n      tag_205\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":14123:14239   */\n      swap1\n      pop\n        /* \"#utility.yul\":14286:14295   */\n      dup2\n        /* \"#utility.yul\":14280:14284   */\n      dup2\n        /* \"#utility.yul\":14276:14296   */\n      sub\n        /* \"#utility.yul\":14271:14273   */\n      0x40\n        /* \"#utility.yul\":14260:14269   */\n      dup4\n        /* \"#utility.yul\":14256:14274   */\n      add\n        /* \"#utility.yul\":14249:14297   */\n      mstore\n        /* \"#utility.yul\":14314:14422   */\n      tag_370\n        /* \"#utility.yul\":14417:14421   */\n      dup2\n        /* \"#utility.yul\":14408:14414   */\n      dup5\n        /* \"#utility.yul\":14314:14422   */\n      tag_205\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":14306:14422   */\n      swap1\n      pop\n        /* \"#utility.yul\":13685:14429   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122093c8db5a370f729d359b51d08c76d18db6a2270258bcdb84bd7149149747604564736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1102": {
									"entryPoint": null,
									"id": 1102,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 356,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint32_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1158,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint32_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32_fromMemory": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_array$_t_uint32_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint32_$dyn_memory_ptr": {
									"entryPoint": 1041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 1093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1088,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5027:9",
										"nodeType": "YulBlock",
										"src": "0:5027:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "759:80:9",
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nativeSrc": "769:22:9",
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nativeSrc": "778:13:9",
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nativeSrc": "800:33:9",
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nativeSrc": "800:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:9",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:9",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:9",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nativeSrc": "934:28:9",
													"nodeType": "YulBlock",
													"src": "934:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:1:9",
																		"nodeType": "YulLiteral",
																		"src": "951:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:9",
																		"nodeType": "YulLiteral",
																		"src": "954:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "944:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:9"
																},
																"nativeSrc": "944:12:9",
																"nodeType": "YulFunctionCall",
																"src": "944:12:9"
															},
															"nativeSrc": "944:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "944:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "845:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:9"
											},
											{
												"body": {
													"nativeSrc": "1016:54:9",
													"nodeType": "YulBlock",
													"src": "1016:54:9",
													"statements": [
														{
															"nativeSrc": "1026:38:9",
															"nodeType": "YulAssignment",
															"src": "1026:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1044:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1044:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1051:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1040:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1040:3:9"
																		},
																		"nativeSrc": "1040:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1040:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1060:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1060:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1056:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1056:3:9"
																		},
																		"nativeSrc": "1056:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1056:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1036:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:9"
																},
																"nativeSrc": "1036:28:9",
																"nodeType": "YulFunctionCall",
																"src": "1036:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1026:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1026:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "968:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "999:5:9",
														"nodeType": "YulTypedName",
														"src": "999:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1009:6:9",
														"nodeType": "YulTypedName",
														"src": "1009:6:9",
														"type": ""
													}
												],
												"src": "968:102:9"
											},
											{
												"body": {
													"nativeSrc": "1104:152:9",
													"nodeType": "YulBlock",
													"src": "1104:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1121:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1121:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1124:77:9",
																		"nodeType": "YulLiteral",
																		"src": "1124:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1114:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:9"
																},
																"nativeSrc": "1114:88:9",
																"nodeType": "YulFunctionCall",
																"src": "1114:88:9"
															},
															"nativeSrc": "1114:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "1114:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1221:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1221:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1211:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:9"
																},
																"nativeSrc": "1211:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1211:15:9"
															},
															"nativeSrc": "1211:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1211:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1245:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1235:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1235:6:9"
																},
																"nativeSrc": "1235:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1235:15:9"
															},
															"nativeSrc": "1235:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1235:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1076:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1076:180:9"
											},
											{
												"body": {
													"nativeSrc": "1305:238:9",
													"nodeType": "YulBlock",
													"src": "1305:238:9",
													"statements": [
														{
															"nativeSrc": "1315:58:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1315:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1337:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1367:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1367:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1345:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "1345:21:9"
																		},
																		"nativeSrc": "1345:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1345:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1333:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1333:3:9"
																},
																"nativeSrc": "1333:40:9",
																"nodeType": "YulFunctionCall",
																"src": "1333:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1319:10:9",
																	"nodeType": "YulTypedName",
																	"src": "1319:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1484:22:9",
																"nodeType": "YulBlock",
																"src": "1484:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1486:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1486:16:9"
																			},
																			"nativeSrc": "1486:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1486:18:9"
																		},
																		"nativeSrc": "1486:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1486:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1427:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1427:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1439:18:9",
																				"nodeType": "YulLiteral",
																				"src": "1439:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1424:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1424:2:9"
																		},
																		"nativeSrc": "1424:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1424:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1463:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1463:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1475:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1475:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1460:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1460:2:9"
																		},
																		"nativeSrc": "1460:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1460:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1421:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1421:2:9"
																},
																"nativeSrc": "1421:62:9",
																"nodeType": "YulFunctionCall",
																"src": "1421:62:9"
															},
															"nativeSrc": "1418:88:9",
															"nodeType": "YulIf",
															"src": "1418:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1522:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1522:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1526:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1526:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1515:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1515:6:9"
																},
																"nativeSrc": "1515:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1515:22:9"
															},
															"nativeSrc": "1515:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "1515:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1262:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1291:6:9",
														"nodeType": "YulTypedName",
														"src": "1291:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1299:4:9",
														"nodeType": "YulTypedName",
														"src": "1299:4:9",
														"type": ""
													}
												],
												"src": "1262:281:9"
											},
											{
												"body": {
													"nativeSrc": "1590:88:9",
													"nodeType": "YulBlock",
													"src": "1590:88:9",
													"statements": [
														{
															"nativeSrc": "1600:30:9",
															"nodeType": "YulAssignment",
															"src": "1600:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1610:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1610:18:9"
																},
																"nativeSrc": "1610:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1610:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1600:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1600:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1659:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1659:6:9"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1667:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1667:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1639:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "1639:19:9"
																},
																"nativeSrc": "1639:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1639:33:9"
															},
															"nativeSrc": "1639:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1639:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1549:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1574:4:9",
														"nodeType": "YulTypedName",
														"src": "1574:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1583:6:9",
														"nodeType": "YulTypedName",
														"src": "1583:6:9",
														"type": ""
													}
												],
												"src": "1549:129:9"
											},
											{
												"body": {
													"nativeSrc": "1765:229:9",
													"nodeType": "YulBlock",
													"src": "1765:229:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1870:22:9",
																"nodeType": "YulBlock",
																"src": "1870:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1872:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1872:16:9"
																			},
																			"nativeSrc": "1872:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:18:9"
																		},
																		"nativeSrc": "1872:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1872:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1842:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1842:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1850:18:9",
																		"nodeType": "YulLiteral",
																		"src": "1850:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1839:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1839:2:9"
																},
																"nativeSrc": "1839:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1839:30:9"
															},
															"nativeSrc": "1836:56:9",
															"nodeType": "YulIf",
															"src": "1836:56:9"
														},
														{
															"nativeSrc": "1902:25:9",
															"nodeType": "YulAssignment",
															"src": "1902:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1914:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1914:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1922:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1922:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1910:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1910:3:9"
																},
																"nativeSrc": "1910:17:9",
																"nodeType": "YulFunctionCall",
																"src": "1910:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1902:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1902:4:9"
																}
															]
														},
														{
															"nativeSrc": "1964:23:9",
															"nodeType": "YulAssignment",
															"src": "1964:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1976:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1976:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1982:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1972:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1972:3:9"
																},
																"nativeSrc": "1972:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1972:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1964:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1964:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint32_$dyn_memory_ptr",
												"nativeSrc": "1684:310:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1749:6:9",
														"nodeType": "YulTypedName",
														"src": "1749:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1760:4:9",
														"nodeType": "YulTypedName",
														"src": "1760:4:9",
														"type": ""
													}
												],
												"src": "1684:310:9"
											},
											{
												"body": {
													"nativeSrc": "2089:28:9",
													"nodeType": "YulBlock",
													"src": "2089:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2106:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2106:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2109:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2109:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2099:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2099:6:9"
																},
																"nativeSrc": "2099:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2099:12:9"
															},
															"nativeSrc": "2099:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "2099:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "2000:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2000:117:9"
											},
											{
												"body": {
													"nativeSrc": "2167:49:9",
													"nodeType": "YulBlock",
													"src": "2167:49:9",
													"statements": [
														{
															"nativeSrc": "2177:33:9",
															"nodeType": "YulAssignment",
															"src": "2177:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2192:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2192:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2199:10:9",
																		"nodeType": "YulLiteral",
																		"src": "2199:10:9",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2188:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2188:3:9"
																},
																"nativeSrc": "2188:22:9",
																"nodeType": "YulFunctionCall",
																"src": "2188:22:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2177:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2177:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "2123:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2149:5:9",
														"nodeType": "YulTypedName",
														"src": "2149:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2159:7:9",
														"nodeType": "YulTypedName",
														"src": "2159:7:9",
														"type": ""
													}
												],
												"src": "2123:93:9"
											},
											{
												"body": {
													"nativeSrc": "2264:78:9",
													"nodeType": "YulBlock",
													"src": "2264:78:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2320:16:9",
																"nodeType": "YulBlock",
																"src": "2320:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2329:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2329:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2332:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2332:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2322:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2322:6:9"
																			},
																			"nativeSrc": "2322:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2322:12:9"
																		},
																		"nativeSrc": "2322:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2322:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2287:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2287:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2311:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2311:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nativeSrc": "2294:16:9",
																					"nodeType": "YulIdentifier",
																					"src": "2294:16:9"
																				},
																				"nativeSrc": "2294:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2294:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2284:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2284:2:9"
																		},
																		"nativeSrc": "2284:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2284:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2277:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2277:6:9"
																},
																"nativeSrc": "2277:42:9",
																"nodeType": "YulFunctionCall",
																"src": "2277:42:9"
															},
															"nativeSrc": "2274:62:9",
															"nodeType": "YulIf",
															"src": "2274:62:9"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nativeSrc": "2222:120:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2257:5:9",
														"nodeType": "YulTypedName",
														"src": "2257:5:9",
														"type": ""
													}
												],
												"src": "2222:120:9"
											},
											{
												"body": {
													"nativeSrc": "2410:79:9",
													"nodeType": "YulBlock",
													"src": "2410:79:9",
													"statements": [
														{
															"nativeSrc": "2420:22:9",
															"nodeType": "YulAssignment",
															"src": "2420:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2435:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2435:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2429:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2429:5:9"
																},
																"nativeSrc": "2429:13:9",
																"nodeType": "YulFunctionCall",
																"src": "2429:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2420:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2420:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2477:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2477:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nativeSrc": "2451:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "2451:25:9"
																},
																"nativeSrc": "2451:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2451:32:9"
															},
															"nativeSrc": "2451:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "2451:32:9"
														}
													]
												},
												"name": "abi_decode_t_uint32_fromMemory",
												"nativeSrc": "2348:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2388:6:9",
														"nodeType": "YulTypedName",
														"src": "2388:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2396:3:9",
														"nodeType": "YulTypedName",
														"src": "2396:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2404:5:9",
														"nodeType": "YulTypedName",
														"src": "2404:5:9",
														"type": ""
													}
												],
												"src": "2348:141:9"
											},
											{
												"body": {
													"nativeSrc": "2623:617:9",
													"nodeType": "YulBlock",
													"src": "2623:617:9",
													"statements": [
														{
															"nativeSrc": "2633:89:9",
															"nodeType": "YulAssignment",
															"src": "2633:89:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2714:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2714:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint32_$dyn_memory_ptr",
																			"nativeSrc": "2658:55:9",
																			"nodeType": "YulIdentifier",
																			"src": "2658:55:9"
																		},
																		"nativeSrc": "2658:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2658:63:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2642:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "2642:15:9"
																},
																"nativeSrc": "2642:80:9",
																"nodeType": "YulFunctionCall",
																"src": "2642:80:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2633:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2633:5:9"
																}
															]
														},
														{
															"nativeSrc": "2731:16:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2731:16:9",
															"value": {
																"name": "array",
																"nativeSrc": "2742:5:9",
																"nodeType": "YulIdentifier",
																"src": "2742:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2735:3:9",
																	"nodeType": "YulTypedName",
																	"src": "2735:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2764:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2764:5:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2771:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2771:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2757:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2757:6:9"
																},
																"nativeSrc": "2757:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2757:21:9"
															},
															"nativeSrc": "2757:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "2757:21:9"
														},
														{
															"nativeSrc": "2787:23:9",
															"nodeType": "YulAssignment",
															"src": "2787:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2798:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2798:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2805:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2805:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2794:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2794:3:9"
																},
																"nativeSrc": "2794:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2794:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2787:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2787:3:9"
																}
															]
														},
														{
															"nativeSrc": "2820:44:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2820:44:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2838:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2838:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2850:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2850:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2858:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2858:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2846:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2846:3:9"
																		},
																		"nativeSrc": "2846:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2846:17:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2834:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2834:3:9"
																},
																"nativeSrc": "2834:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2834:30:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2824:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2824:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2892:103:9",
																"nodeType": "YulBlock",
																"src": "2892:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2906:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2906:77:9"
																			},
																			"nativeSrc": "2906:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2906:79:9"
																		},
																		"nativeSrc": "2906:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2879:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2879:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2887:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2887:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2876:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2876:2:9"
																},
																"nativeSrc": "2876:15:9",
																"nodeType": "YulFunctionCall",
																"src": "2876:15:9"
															},
															"nativeSrc": "2873:122:9",
															"nodeType": "YulIf",
															"src": "2873:122:9"
														},
														{
															"body": {
																"nativeSrc": "3080:154:9",
																"nodeType": "YulBlock",
																"src": "3080:154:9",
																"statements": [
																	{
																		"nativeSrc": "3095:21:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3095:21:9",
																		"value": {
																			"name": "src",
																			"nativeSrc": "3113:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "3099:10:9",
																				"nodeType": "YulTypedName",
																				"src": "3099:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3137:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3137:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "3173:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "3173:10:9"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "3185:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3185:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint32_fromMemory",
																						"nativeSrc": "3142:30:9",
																						"nodeType": "YulIdentifier",
																						"src": "3142:30:9"
																					},
																					"nativeSrc": "3142:47:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3142:47:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3130:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3130:6:9"
																			},
																			"nativeSrc": "3130:60:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3130:60:9"
																		},
																		"nativeSrc": "3130:60:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3130:60:9"
																	},
																	{
																		"nativeSrc": "3203:21:9",
																		"nodeType": "YulAssignment",
																		"src": "3203:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3214:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3214:3:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3219:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3219:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3210:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3210:3:9"
																			},
																			"nativeSrc": "3210:14:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3210:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "3203:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3203:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3033:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3033:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3038:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3038:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3030:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3030:2:9"
																},
																"nativeSrc": "3030:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3030:15:9"
															},
															"nativeSrc": "3004:230:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3046:25:9",
																"nodeType": "YulBlock",
																"src": "3046:25:9",
																"statements": [
																	{
																		"nativeSrc": "3048:21:9",
																		"nodeType": "YulAssignment",
																		"src": "3048:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "3059:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3059:3:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3064:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3064:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3055:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3055:3:9"
																			},
																			"nativeSrc": "3055:14:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3055:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "3048:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3048:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3008:21:9",
																"nodeType": "YulBlock",
																"src": "3008:21:9",
																"statements": [
																	{
																		"nativeSrc": "3010:17:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3010:17:9",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "3021:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3021:6:9"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "3014:3:9",
																				"nodeType": "YulTypedName",
																				"src": "3014:3:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3004:230:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint32_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2511:729:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2593:6:9",
														"nodeType": "YulTypedName",
														"src": "2593:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2601:6:9",
														"nodeType": "YulTypedName",
														"src": "2601:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2609:3:9",
														"nodeType": "YulTypedName",
														"src": "2609:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2617:5:9",
														"nodeType": "YulTypedName",
														"src": "2617:5:9",
														"type": ""
													}
												],
												"src": "2511:729:9"
											},
											{
												"body": {
													"nativeSrc": "3349:296:9",
													"nodeType": "YulBlock",
													"src": "3349:296:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3398:83:9",
																"nodeType": "YulBlock",
																"src": "3398:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3400:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3400:77:9"
																			},
																			"nativeSrc": "3400:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3400:79:9"
																		},
																		"nativeSrc": "3400:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3400:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3377:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3377:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3385:4:9",
																						"nodeType": "YulLiteral",
																						"src": "3385:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3373:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3373:3:9"
																				},
																				"nativeSrc": "3373:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3373:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3392:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3392:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3369:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3369:3:9"
																		},
																		"nativeSrc": "3369:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3369:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3362:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3362:6:9"
																},
																"nativeSrc": "3362:35:9",
																"nodeType": "YulFunctionCall",
																"src": "3362:35:9"
															},
															"nativeSrc": "3359:122:9",
															"nodeType": "YulIf",
															"src": "3359:122:9"
														},
														{
															"nativeSrc": "3490:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3490:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3510:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3510:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3504:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3504:5:9"
																},
																"nativeSrc": "3504:13:9",
																"nodeType": "YulFunctionCall",
																"src": "3504:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3494:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3494:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3526:113:9",
															"nodeType": "YulAssignment",
															"src": "3526:113:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3612:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3612:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3620:4:9",
																				"nodeType": "YulLiteral",
																				"src": "3620:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3608:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3608:3:9"
																		},
																		"nativeSrc": "3608:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3608:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3627:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3627:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3635:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3635:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint32_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "3535:72:9",
																	"nodeType": "YulIdentifier",
																	"src": "3535:72:9"
																},
																"nativeSrc": "3535:104:9",
																"nodeType": "YulFunctionCall",
																"src": "3535:104:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3526:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3526:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint32_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "3262:383:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3327:6:9",
														"nodeType": "YulTypedName",
														"src": "3327:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3335:3:9",
														"nodeType": "YulTypedName",
														"src": "3335:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3343:5:9",
														"nodeType": "YulTypedName",
														"src": "3343:5:9",
														"type": ""
													}
												],
												"src": "3262:383:9"
											},
											{
												"body": {
													"nativeSrc": "3803:869:9",
													"nodeType": "YulBlock",
													"src": "3803:869:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3850:83:9",
																"nodeType": "YulBlock",
																"src": "3850:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3852:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3852:77:9"
																			},
																			"nativeSrc": "3852:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3852:79:9"
																		},
																		"nativeSrc": "3852:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3852:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3824:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3824:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3833:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3833:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3820:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3820:3:9"
																		},
																		"nativeSrc": "3820:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3820:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3845:3:9",
																		"nodeType": "YulLiteral",
																		"src": "3845:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3816:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3816:3:9"
																},
																"nativeSrc": "3816:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3816:33:9"
															},
															"nativeSrc": "3813:120:9",
															"nodeType": "YulIf",
															"src": "3813:120:9"
														},
														{
															"nativeSrc": "3943:128:9",
															"nodeType": "YulBlock",
															"src": "3943:128:9",
															"statements": [
																{
																	"nativeSrc": "3958:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3958:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3972:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3972:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3962:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3962:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3987:74:9",
																	"nodeType": "YulAssignment",
																	"src": "3987:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4033:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4033:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4044:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4044:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4029:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4029:3:9"
																				},
																				"nativeSrc": "4029:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4029:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4053:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4053:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3997:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "3997:31:9"
																		},
																		"nativeSrc": "3997:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3997:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3987:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3987:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4081:129:9",
															"nodeType": "YulBlock",
															"src": "4081:129:9",
															"statements": [
																{
																	"nativeSrc": "4096:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4096:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4110:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4110:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4100:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4100:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4126:74:9",
																	"nodeType": "YulAssignment",
																	"src": "4126:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4172:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4172:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4183:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4183:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4168:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4168:3:9"
																				},
																				"nativeSrc": "4168:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4168:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4192:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4192:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4136:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "4136:31:9"
																		},
																		"nativeSrc": "4136:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4136:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4126:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4126:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4220:129:9",
															"nodeType": "YulBlock",
															"src": "4220:129:9",
															"statements": [
																{
																	"nativeSrc": "4235:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4235:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4249:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4249:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4239:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4239:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4265:74:9",
																	"nodeType": "YulAssignment",
																	"src": "4265:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4311:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4311:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4322:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4322:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4307:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4307:3:9"
																				},
																				"nativeSrc": "4307:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4307:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4331:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4331:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4275:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "4275:31:9"
																		},
																		"nativeSrc": "4275:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4275:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4265:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4265:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4359:306:9",
															"nodeType": "YulBlock",
															"src": "4359:306:9",
															"statements": [
																{
																	"nativeSrc": "4374:39:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4374:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4398:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4398:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4409:2:9",
																						"nodeType": "YulLiteral",
																						"src": "4409:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4394:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4394:3:9"
																				},
																				"nativeSrc": "4394:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4394:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4388:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4388:5:9"
																		},
																		"nativeSrc": "4388:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4388:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4378:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4378:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4460:83:9",
																		"nodeType": "YulBlock",
																		"src": "4460:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4462:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "4462:77:9"
																					},
																					"nativeSrc": "4462:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4462:79:9"
																				},
																				"nativeSrc": "4462:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "4462:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4432:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4432:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4440:18:9",
																				"nodeType": "YulLiteral",
																				"src": "4440:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4429:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4429:2:9"
																		},
																		"nativeSrc": "4429:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4429:30:9"
																	},
																	"nativeSrc": "4426:117:9",
																	"nodeType": "YulIf",
																	"src": "4426:117:9"
																},
																{
																	"nativeSrc": "4557:98:9",
																	"nodeType": "YulAssignment",
																	"src": "4557:98:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4627:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4627:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4638:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4638:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4623:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4623:3:9"
																				},
																				"nativeSrc": "4623:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4623:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4647:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4647:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint32_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "4567:55:9",
																			"nodeType": "YulIdentifier",
																			"src": "4567:55:9"
																		},
																		"nativeSrc": "4567:88:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4567:88:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4557:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4557:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_array$_t_uint32_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "3651:1021:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3749:9:9",
														"nodeType": "YulTypedName",
														"src": "3749:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3760:7:9",
														"nodeType": "YulTypedName",
														"src": "3760:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3772:6:9",
														"nodeType": "YulTypedName",
														"src": "3772:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3780:6:9",
														"nodeType": "YulTypedName",
														"src": "3780:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3788:6:9",
														"nodeType": "YulTypedName",
														"src": "3788:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3796:6:9",
														"nodeType": "YulTypedName",
														"src": "3796:6:9",
														"type": ""
													}
												],
												"src": "3651:1021:9"
											},
											{
												"body": {
													"nativeSrc": "4743:53:9",
													"nodeType": "YulBlock",
													"src": "4743:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4760:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4760:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4783:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4783:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4765:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "4765:17:9"
																		},
																		"nativeSrc": "4765:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4765:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4753:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4753:6:9"
																},
																"nativeSrc": "4753:37:9",
																"nodeType": "YulFunctionCall",
																"src": "4753:37:9"
															},
															"nativeSrc": "4753:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "4753:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4678:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4731:5:9",
														"nodeType": "YulTypedName",
														"src": "4731:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4738:3:9",
														"nodeType": "YulTypedName",
														"src": "4738:3:9",
														"type": ""
													}
												],
												"src": "4678:118:9"
											},
											{
												"body": {
													"nativeSrc": "4900:124:9",
													"nodeType": "YulBlock",
													"src": "4900:124:9",
													"statements": [
														{
															"nativeSrc": "4910:26:9",
															"nodeType": "YulAssignment",
															"src": "4910:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4922:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4922:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4933:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4933:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4918:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4918:3:9"
																},
																"nativeSrc": "4918:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4918:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4910:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4910:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4990:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4990:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5003:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5003:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5014:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5014:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4999:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:9"
																		},
																		"nativeSrc": "4999:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4999:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4946:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "4946:43:9"
																},
																"nativeSrc": "4946:71:9",
																"nodeType": "YulFunctionCall",
																"src": "4946:71:9"
															},
															"nativeSrc": "4946:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "4946:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4802:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4872:9:9",
														"nodeType": "YulTypedName",
														"src": "4872:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4884:6:9",
														"nodeType": "YulTypedName",
														"src": "4884:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4895:4:9",
														"nodeType": "YulTypedName",
														"src": "4895:4:9",
														"type": ""
													}
												],
												"src": "4802:222:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    // uint32[]\n    function abi_decode_available_length_t_array$_t_uint32_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint32_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint32[]\n    function abi_decode_t_array$_t_uint32_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint32_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_array$_t_uint32_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint32_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620018723803806200187283398181016040528101906200003791906200052d565b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a49190620005cf565b60405180910390fd5b620000be816200016460201b60201c565b5082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600390805190602001906200015992919062000228565b5050505050620005ec565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805482825590600052602060002090600701600890048101928215620002cc5791602002820160005b838211156200029857835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030262000252565b8015620002ca5782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000298565b505b509050620002db9190620002df565b5090565b5b80821115620002fa576000816000905550600101620002e0565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200033f8262000312565b9050919050565b620003518162000332565b81146200035d57600080fd5b50565b600081519050620003718162000346565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003c7826200037c565b810181811067ffffffffffffffff82111715620003e957620003e86200038d565b5b80604052505050565b6000620003fe620002fe565b90506200040c8282620003bc565b919050565b600067ffffffffffffffff8211156200042f576200042e6200038d565b5b602082029050602081019050919050565b600080fd5b600063ffffffff82169050919050565b620004608162000445565b81146200046c57600080fd5b50565b600081519050620004808162000455565b92915050565b60006200049d620004978462000411565b620003f2565b90508083825260208201905060208402830185811115620004c357620004c262000440565b5b835b81811015620004f05780620004db88826200046f565b845260208401935050602081019050620004c5565b5050509392505050565b600082601f83011262000512576200051162000377565b5b81516200052484826020860162000486565b91505092915050565b600080600080608085870312156200054a576200054962000308565b5b60006200055a8782880162000360565b94505060206200056d8782880162000360565b9350506040620005808782880162000360565b925050606085015167ffffffffffffffff811115620005a457620005a36200030d565b5b620005b287828801620004fa565b91505092959194509250565b620005c98162000332565b82525050565b6000602082019050620005e66000830184620005be565b92915050565b61127680620005fc6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063715018a611610066578063715018a6146101375780638da5cb5b14610141578063ad26432e1461015f578063caa648b41461017b578063f2fde38b146101995761009e565b806309a31d50146100a35780631dd5605d146100c15780633013ce29146100f15780634cbe52741461010f5780634e71d92d1461012d575b600080fd5b6100ab6101b5565b6040516100b89190610b6f565b60405180910390f35b6100db60048036038101906100d69190610bd4565b6101db565b6040516100e89190610c20565b60405180910390f35b6100f9610215565b6040516101069190610c5c565b60405180910390f35b61011761023b565b6040516101249190610d35565b60405180910390f35b6101356102bf565b005b61013f61044d565b005b610149610461565b6040516101569190610d78565b60405180910390f35b61017960048036038101906101749190610f18565b61048a565b005b6101836104ac565b6040516101909190610f70565b60405180910390f35b6101b360048036038101906101ae9190610fb7565b6104bb565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106101eb57600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060038054806020026020016040519081016040528092919081815260200182805480156102b557602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116102785790505b5050505050905090565b60003390506102cd81610541565b610303576040517f7aa5b94c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061030d610655565b03610344576040517f6e6681f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61034d816106f8565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82610394610655565b6040518363ffffffff1660e01b81526004016103b1929190610fe4565b6020604051808303816000875af11580156103d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f49190611045565b508073ffffffffffffffffffffffffffffffffffffffff167f16f67fd92ffb20fb68612d68e9725fe41944a7be57a193cb98fa735dd6f5d948610435610655565b6040516104429190610f70565b60405180910390a250565b6104556108d0565b61045f6000610957565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104926108d0565b80600390805190602001906104a8929190610a23565b5050565b60006104b6610655565b905090565b6104c36108d0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105355760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161052c9190610d78565b60405180910390fd5b61053e81610957565b50565b600080600090505b60038054905081101561064a576000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e85600385815481106105aa576105a9611072565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff166040518363ffffffff1660e01b81526004016105ed9291906110d2565b602060405180830381865afa15801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190611110565b0361063d576000915050610650565b8080600101915050610549565b50600190505b919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106b29190610d78565b602060405180830381865afa1580156106cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f39190611110565b905090565b600060038054905067ffffffffffffffff81111561071957610718610da9565b5b6040519080825280602002602001820160405280156107475781602001602082028036833780820191505090505b509050600060038054905067ffffffffffffffff81111561076b5761076a610da9565b5b6040519080825280602002602001820160405280156107995781602001602082028036833780820191505090505b50905060005b60038054905081101561083957600381815481106107c0576107bf611072565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff168382815181106107ff576107fe611072565b5b60200260200101818152505060018282815181106108205761081f611072565b5b602002602001018181525050808060010191505061079f565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636b20c4548484846040518463ffffffff1660e01b8152600401610899939291906111fb565b600060405180830381600087803b1580156108b357600080fd5b505af11580156108c7573d6000803e3d6000fd5b50505050505050565b6108d8610a1b565b73ffffffffffffffffffffffffffffffffffffffff166108f6610461565b73ffffffffffffffffffffffffffffffffffffffff161461095557610919610a1b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161094c9190610d78565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b82805482825590600052602060002090600701600890048101928215610ac25791602002820160005b83821115610a9057835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302610a4c565b8015610ac05782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610a90565b505b509050610acf9190610ad3565b5090565b5b80821115610aec576000816000905550600101610ad4565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b35610b30610b2b84610af0565b610b10565b610af0565b9050919050565b6000610b4782610b1a565b9050919050565b6000610b5982610b3c565b9050919050565b610b6981610b4e565b82525050565b6000602082019050610b846000830184610b60565b92915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610bb181610b9e565b8114610bbc57600080fd5b50565b600081359050610bce81610ba8565b92915050565b600060208284031215610bea57610be9610b94565b5b6000610bf884828501610bbf565b91505092915050565b600063ffffffff82169050919050565b610c1a81610c01565b82525050565b6000602082019050610c356000830184610c11565b92915050565b6000610c4682610b3c565b9050919050565b610c5681610c3b565b82525050565b6000602082019050610c716000830184610c4d565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610cac81610c01565b82525050565b6000610cbe8383610ca3565b60208301905092915050565b6000602082019050919050565b6000610ce282610c77565b610cec8185610c82565b9350610cf783610c93565b8060005b83811015610d28578151610d0f8882610cb2565b9750610d1a83610cca565b925050600181019050610cfb565b5085935050505092915050565b60006020820190508181036000830152610d4f8184610cd7565b905092915050565b6000610d6282610af0565b9050919050565b610d7281610d57565b82525050565b6000602082019050610d8d6000830184610d69565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610de182610d98565b810181811067ffffffffffffffff82111715610e0057610dff610da9565b5b80604052505050565b6000610e13610b8a565b9050610e1f8282610dd8565b919050565b600067ffffffffffffffff821115610e3f57610e3e610da9565b5b602082029050602081019050919050565b600080fd5b610e5e81610c01565b8114610e6957600080fd5b50565b600081359050610e7b81610e55565b92915050565b6000610e94610e8f84610e24565b610e09565b90508083825260208201905060208402830185811115610eb757610eb6610e50565b5b835b81811015610ee05780610ecc8882610e6c565b845260208401935050602081019050610eb9565b5050509392505050565b600082601f830112610eff57610efe610d93565b5b8135610f0f848260208601610e81565b91505092915050565b600060208284031215610f2e57610f2d610b94565b5b600082013567ffffffffffffffff811115610f4c57610f4b610b99565b5b610f5884828501610eea565b91505092915050565b610f6a81610b9e565b82525050565b6000602082019050610f856000830184610f61565b92915050565b610f9481610d57565b8114610f9f57600080fd5b50565b600081359050610fb181610f8b565b92915050565b600060208284031215610fcd57610fcc610b94565b5b6000610fdb84828501610fa2565b91505092915050565b6000604082019050610ff96000830185610d69565b6110066020830184610f61565b9392505050565b60008115159050919050565b6110228161100d565b811461102d57600080fd5b50565b60008151905061103f81611019565b92915050565b60006020828403121561105b5761105a610b94565b5b600061106984828501611030565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006110bc6110b76110b284610c01565b610b10565b610b9e565b9050919050565b6110cc816110a1565b82525050565b60006040820190506110e76000830185610d69565b6110f460208301846110c3565b9392505050565b60008151905061110a81610ba8565b92915050565b60006020828403121561112657611125610b94565b5b6000611134848285016110fb565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61117281610b9e565b82525050565b60006111848383611169565b60208301905092915050565b6000602082019050919050565b60006111a88261113d565b6111b28185611148565b93506111bd83611159565b8060005b838110156111ee5781516111d58882611178565b97506111e083611190565b9250506001810190506111c1565b5085935050505092915050565b60006060820190506112106000830186610d69565b8181036020830152611222818561119d565b90508181036040830152611236818461119d565b905094935050505056fea264697066735822122093c8db5a370f729d359b51d08c76d18db6a2270258bcdb84bd7149149747604564736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1872 CODESIZE SUB DUP1 PUSH3 0x1872 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x52D JUMP JUMPDEST DUP4 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0x164 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x159 SWAP3 SWAP2 SWAP1 PUSH3 0x228 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x5EC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 ADD PUSH1 0x8 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x2CC JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x298 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x252 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x2CA JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH3 0x298 JUMP JUMPDEST POP JUMPDEST POP SWAP1 POP PUSH3 0x2DB SWAP2 SWAP1 PUSH3 0x2DF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2FA JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2E0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x33F DUP3 PUSH3 0x312 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x351 DUP2 PUSH3 0x332 JUMP JUMPDEST DUP2 EQ PUSH3 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x371 DUP2 PUSH3 0x346 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x3C7 DUP3 PUSH3 0x37C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x3E9 JUMPI PUSH3 0x3E8 PUSH3 0x38D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3FE PUSH3 0x2FE JUMP JUMPDEST SWAP1 POP PUSH3 0x40C DUP3 DUP3 PUSH3 0x3BC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x42F JUMPI PUSH3 0x42E PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x460 DUP2 PUSH3 0x445 JUMP JUMPDEST DUP2 EQ PUSH3 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x480 DUP2 PUSH3 0x455 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49D PUSH3 0x497 DUP5 PUSH3 0x411 JUMP JUMPDEST PUSH3 0x3F2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x4C3 JUMPI PUSH3 0x4C2 PUSH3 0x440 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4F0 JUMPI DUP1 PUSH3 0x4DB DUP9 DUP3 PUSH3 0x46F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4C5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x512 JUMPI PUSH3 0x511 PUSH3 0x377 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x524 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x486 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x54A JUMPI PUSH3 0x549 PUSH3 0x308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x55A DUP8 DUP3 DUP9 ADD PUSH3 0x360 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x56D DUP8 DUP3 DUP9 ADD PUSH3 0x360 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x580 DUP8 DUP3 DUP9 ADD PUSH3 0x360 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5A4 JUMPI PUSH3 0x5A3 PUSH3 0x30D JUMP JUMPDEST JUMPDEST PUSH3 0x5B2 DUP8 DUP3 DUP9 ADD PUSH3 0x4FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH3 0x5C9 DUP2 PUSH3 0x332 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x5BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1276 DUP1 PUSH3 0x5FC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xAD26432E EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xCAA648B4 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x199 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x9A31D50 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x1DD5605D EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x3013CE29 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x4CBE5274 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x12D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xB6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x135 PUSH2 0x2BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x149 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x278 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x2CD DUP2 PUSH2 0x541 JUMP JUMPDEST PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7AA5B94C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30D PUSH2 0x655 JUMP JUMPDEST SUB PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6E6681F600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x34D DUP2 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 PUSH2 0x394 PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B1 SWAP3 SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x1045 JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x16F67FD92FFB20FB68612D68E9725FE41944A7BE57A193CB98FA735DD6F5D948 PUSH2 0x435 PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x455 PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0x45F PUSH1 0x0 PUSH2 0x957 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x492 PUSH2 0x8D0 JUMP JUMPDEST DUP1 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x4A8 SWAP3 SWAP2 SWAP1 PUSH2 0xA23 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B6 PUSH2 0x655 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x535 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52C SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x53E DUP2 PUSH2 0x957 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E DUP6 PUSH1 0x3 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x5AA JUMPI PUSH2 0x5A9 PUSH2 0x1072 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5ED SWAP3 SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1110 JUMP JUMPDEST SUB PUSH2 0x63D JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x650 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x549 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x1110 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x719 JUMPI PUSH2 0x718 PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x747 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x76B JUMPI PUSH2 0x76A PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x799 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x839 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7C0 JUMPI PUSH2 0x7BF PUSH2 0x1072 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7FF JUMPI PUSH2 0x7FE PUSH2 0x1072 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x820 JUMPI PUSH2 0x81F PUSH2 0x1072 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x79F JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6B20C454 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x899 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8D8 PUSH2 0xA1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8F6 PUSH2 0x461 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x955 JUMPI PUSH2 0x919 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94C SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 ADD PUSH1 0x8 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xAC2 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0xA90 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0xA4C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAC0 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0xA90 JUMP JUMPDEST POP JUMPDEST POP SWAP1 POP PUSH2 0xACF SWAP2 SWAP1 PUSH2 0xAD3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xAEC JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xAD4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB35 PUSH2 0xB30 PUSH2 0xB2B DUP5 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB47 DUP3 PUSH2 0xB1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB59 DUP3 PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB69 DUP2 PUSH2 0xB4E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB84 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB1 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP2 EQ PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCE DUP2 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBEA JUMPI PUSH2 0xBE9 PUSH2 0xB94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF8 DUP5 DUP3 DUP6 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1A DUP2 PUSH2 0xC01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC35 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC46 DUP3 PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC56 DUP2 PUSH2 0xC3B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC71 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCAC DUP2 PUSH2 0xC01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP4 DUP4 PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE2 DUP3 PUSH2 0xC77 JUMP JUMPDEST PUSH2 0xCEC DUP2 DUP6 PUSH2 0xC82 JUMP JUMPDEST SWAP4 POP PUSH2 0xCF7 DUP4 PUSH2 0xC93 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD28 JUMPI DUP2 MLOAD PUSH2 0xD0F DUP9 DUP3 PUSH2 0xCB2 JUMP JUMPDEST SWAP8 POP PUSH2 0xD1A DUP4 PUSH2 0xCCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xCFB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD4F DUP2 DUP5 PUSH2 0xCD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD62 DUP3 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD72 DUP2 PUSH2 0xD57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD8D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xDE1 DUP3 PUSH2 0xD98 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xE00 JUMPI PUSH2 0xDFF PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE13 PUSH2 0xB8A JUMP JUMPDEST SWAP1 POP PUSH2 0xE1F DUP3 DUP3 PUSH2 0xDD8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE3F JUMPI PUSH2 0xE3E PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5E DUP2 PUSH2 0xC01 JUMP JUMPDEST DUP2 EQ PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE7B DUP2 PUSH2 0xE55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE94 PUSH2 0xE8F DUP5 PUSH2 0xE24 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xEB7 JUMPI PUSH2 0xEB6 PUSH2 0xE50 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEE0 JUMPI DUP1 PUSH2 0xECC DUP9 DUP3 PUSH2 0xE6C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEFF JUMPI PUSH2 0xEFE PUSH2 0xD93 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF0F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2E JUMPI PUSH2 0xF2D PUSH2 0xB94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF4C JUMPI PUSH2 0xF4B PUSH2 0xB99 JUMP JUMPDEST JUMPDEST PUSH2 0xF58 DUP5 DUP3 DUP6 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF6A DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF94 DUP2 PUSH2 0xD57 JUMP JUMPDEST DUP2 EQ PUSH2 0xF9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB1 DUP2 PUSH2 0xF8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFCD JUMPI PUSH2 0xFCC PUSH2 0xB94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFDB DUP5 DUP3 DUP6 ADD PUSH2 0xFA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFF9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x1006 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1022 DUP2 PUSH2 0x100D JUMP JUMPDEST DUP2 EQ PUSH2 0x102D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x103F DUP2 PUSH2 0x1019 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105B JUMPI PUSH2 0x105A PUSH2 0xB94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1069 DUP5 DUP3 DUP6 ADD PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10BC PUSH2 0x10B7 PUSH2 0x10B2 DUP5 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CC DUP2 PUSH2 0x10A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10E7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x10F4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10C3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x110A DUP2 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1126 JUMPI PUSH2 0x1125 PUSH2 0xB94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1134 DUP5 DUP3 DUP6 ADD PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1172 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1184 DUP4 DUP4 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A8 DUP3 PUSH2 0x113D JUMP JUMPDEST PUSH2 0x11B2 DUP2 DUP6 PUSH2 0x1148 JUMP JUMPDEST SWAP4 POP PUSH2 0x11BD DUP4 PUSH2 0x1159 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11EE JUMPI DUP2 MLOAD PUSH2 0x11D5 DUP9 DUP3 PUSH2 0x1178 JUMP JUMPDEST SWAP8 POP PUSH2 0x11E0 DUP4 PUSH2 0x1190 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x11C1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1210 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD69 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1222 DUP2 DUP6 PUSH2 0x119D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1236 DUP2 DUP5 PUSH2 0x119D JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xC8 0xDB GAS CALLDATACOPY 0xF PUSH19 0x9D359B51D08C76D18DB6A2270258BCDB84BD71 0x49 EQ SWAP8 SELFBALANCE PUSH1 0x45 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "343:2142:8:-:0;;;490:308;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;650:13;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;696:13:8::1;675:12;;:35;;;;;;;;;;;;;;;;;;736:6;721:5;;:22;;;;;;;;;;;;;;;;;;773:17;754:16;:36;;;;;;;;;;;;:::i;:::-;;490:308:::0;;;;343:2142;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;343:2142:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:102;1009:6;1060:2;1056:7;1051:2;1044:5;1040:14;1036:28;1026:38;;968:102;;;:::o;1076:180::-;1124:77;1121:1;1114:88;1221:4;1218:1;1211:15;1245:4;1242:1;1235:15;1262:281;1345:27;1367:4;1345:27;:::i;:::-;1337:6;1333:40;1475:6;1463:10;1460:22;1439:18;1427:10;1424:34;1421:62;1418:88;;;1486:18;;:::i;:::-;1418:88;1526:10;1522:2;1515:22;1305:238;1262:281;;:::o;1549:129::-;1583:6;1610:20;;:::i;:::-;1600:30;;1639:33;1667:4;1659:6;1639:33;:::i;:::-;1549:129;;;:::o;1684:310::-;1760:4;1850:18;1842:6;1839:30;1836:56;;;1872:18;;:::i;:::-;1836:56;1922:4;1914:6;1910:17;1902:25;;1982:4;1976;1972:15;1964:23;;1684:310;;;:::o;2000:117::-;2109:1;2106;2099:12;2123:93;2159:7;2199:10;2192:5;2188:22;2177:33;;2123:93;;;:::o;2222:120::-;2294:23;2311:5;2294:23;:::i;:::-;2287:5;2284:34;2274:62;;2332:1;2329;2322:12;2274:62;2222:120;:::o;2348:141::-;2404:5;2435:6;2429:13;2420:22;;2451:32;2477:5;2451:32;:::i;:::-;2348:141;;;;:::o;2511:729::-;2617:5;2642:80;2658:63;2714:6;2658:63;:::i;:::-;2642:80;:::i;:::-;2633:89;;2742:5;2771:6;2764:5;2757:21;2805:4;2798:5;2794:16;2787:23;;2858:4;2850:6;2846:17;2838:6;2834:30;2887:3;2879:6;2876:15;2873:122;;;2906:79;;:::i;:::-;2873:122;3021:6;3004:230;3038:6;3033:3;3030:15;3004:230;;;3113:3;3142:47;3185:3;3173:10;3142:47;:::i;:::-;3137:3;3130:60;3219:4;3214:3;3210:14;3203:21;;3080:154;3064:4;3059:3;3055:14;3048:21;;3004:230;;;3008:21;2623:617;;2511:729;;;;;:::o;3262:383::-;3343:5;3392:3;3385:4;3377:6;3373:17;3369:27;3359:122;;3400:79;;:::i;:::-;3359:122;3510:6;3504:13;3535:104;3635:3;3627:6;3620:4;3612:6;3608:17;3535:104;:::i;:::-;3526:113;;3349:296;3262:383;;;;:::o;3651:1021::-;3772:6;3780;3788;3796;3845:3;3833:9;3824:7;3820:23;3816:33;3813:120;;;3852:79;;:::i;:::-;3813:120;3972:1;3997:64;4053:7;4044:6;4033:9;4029:22;3997:64;:::i;:::-;3987:74;;3943:128;4110:2;4136:64;4192:7;4183:6;4172:9;4168:22;4136:64;:::i;:::-;4126:74;;4081:129;4249:2;4275:64;4331:7;4322:6;4311:9;4307:22;4275:64;:::i;:::-;4265:74;;4220:129;4409:2;4398:9;4394:18;4388:25;4440:18;4432:6;4429:30;4426:117;;;4462:79;;:::i;:::-;4426:117;4567:88;4647:7;4638:6;4627:9;4623:22;4567:88;:::i;:::-;4557:98;;4359:306;3651:1021;;;;;;;:::o;4678:118::-;4765:24;4783:5;4765:24;:::i;:::-;4760:3;4753:37;4678:118;;:::o;4802:222::-;4895:4;4933:2;4922:9;4918:18;4910:26;;4946:71;5014:1;5003:9;4999:17;4990:6;4946:71;:::i;:::-;4802:222;;;;:::o;343:2142:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_burn_1281": {
									"entryPoint": 1784,
									"id": 1281,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkCollectedCards_1216": {
									"entryPoint": 1345,
									"id": 1216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_checkOwner_84": {
									"entryPoint": 2256,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTotalValue_1295": {
									"entryPoint": 1621,
									"id": 1295,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_915": {
									"entryPoint": 2587,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2391,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claim_1146": {
									"entryPoint": 703,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@collectedCardsID_1070": {
									"entryPoint": 475,
									"id": 1070,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCollectedCardsID_1180": {
									"entryPoint": 571,
									"id": 1180,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalValue_1156": {
									"entryPoint": 1196,
									"id": 1156,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@myNFT_1067": {
									"entryPoint": 437,
									"id": 1067,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1121,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paymentToken_1064": {
									"entryPoint": 533,
									"id": 1064,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1101,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setCollectedCardsID_1170": {
									"entryPoint": 1162,
									"id": 1170,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1211,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint32_$dyn_memory_ptr": {
									"entryPoint": 3713,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint32_$dyn_memory_ptr": {
									"entryPoint": 3818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 3692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint32_$dyn_memory_ptr": {
									"entryPoint": 3864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint32_to_t_uint32": {
									"entryPoint": 3250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint32_$dyn_memory_ptr_to_t_array$_t_uint32_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack": {
									"entryPoint": 3149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IMyNFT_$1048_to_t_address_fromStack": {
									"entryPoint": 2912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint256_fromStack": {
									"entryPoint": 4291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32": {
									"entryPoint": 3235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 3089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4068,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint32__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4306,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint32_$dyn_memory_ptr__to_t_array$_t_uint32_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$799__to_t_address__fromStack_reversed": {
									"entryPoint": 3164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IMyNFT_$1048__to_t_address__fromStack_reversed": {
									"entryPoint": 2927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": 3104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2954,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint32_$dyn_memory_ptr": {
									"entryPoint": 3620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint32_$dyn_memory_ptr": {
									"entryPoint": 3219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint32_$dyn_memory_ptr": {
									"entryPoint": 3191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint32_$dyn_memory_ptr": {
									"entryPoint": 3274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint32_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 3073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$799_to_t_address": {
									"entryPoint": 3131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IMyNFT_$1048_to_t_address": {
									"entryPoint": 2894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint32_to_t_uint256": {
									"entryPoint": 4257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 4210,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3497,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3475,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3664,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2969,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2964,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 3669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14432:9",
										"nodeType": "YulBlock",
										"src": "0:14432:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:9",
													"nodeType": "YulBlock",
													"src": "52:81:9",
													"statements": [
														{
															"nativeSrc": "62:65:9",
															"nodeType": "YulAssignment",
															"src": "62:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:9",
																		"nodeType": "YulLiteral",
																		"src": "84:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:9"
																},
																"nativeSrc": "73:54:9",
																"nodeType": "YulFunctionCall",
																"src": "73:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:9",
														"nodeType": "YulTypedName",
														"src": "34:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:9",
														"nodeType": "YulTypedName",
														"src": "44:7:9",
														"type": ""
													}
												],
												"src": "7:126:9"
											},
											{
												"body": {
													"nativeSrc": "171:28:9",
													"nodeType": "YulBlock",
													"src": "171:28:9",
													"statements": [
														{
															"nativeSrc": "181:12:9",
															"nodeType": "YulAssignment",
															"src": "181:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:9",
																"nodeType": "YulIdentifier",
																"src": "188:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:9",
														"nodeType": "YulTypedName",
														"src": "157:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:9",
														"nodeType": "YulTypedName",
														"src": "167:3:9",
														"type": ""
													}
												],
												"src": "139:60:9"
											},
											{
												"body": {
													"nativeSrc": "265:82:9",
													"nodeType": "YulBlock",
													"src": "265:82:9",
													"statements": [
														{
															"nativeSrc": "275:66:9",
															"nodeType": "YulAssignment",
															"src": "275:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:9"
																				},
																				"nativeSrc": "315:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:9"
																		},
																		"nativeSrc": "306:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:9"
																},
																"nativeSrc": "288:53:9",
																"nodeType": "YulFunctionCall",
																"src": "288:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:9",
														"nodeType": "YulTypedName",
														"src": "245:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:9",
														"nodeType": "YulTypedName",
														"src": "255:9:9",
														"type": ""
													}
												],
												"src": "205:142:9"
											},
											{
												"body": {
													"nativeSrc": "413:66:9",
													"nodeType": "YulBlock",
													"src": "413:66:9",
													"statements": [
														{
															"nativeSrc": "423:50:9",
															"nodeType": "YulAssignment",
															"src": "423:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:9"
																},
																"nativeSrc": "436:37:9",
																"nodeType": "YulFunctionCall",
																"src": "436:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:9",
														"nodeType": "YulTypedName",
														"src": "393:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:9",
														"nodeType": "YulTypedName",
														"src": "403:9:9",
														"type": ""
													}
												],
												"src": "353:126:9"
											},
											{
												"body": {
													"nativeSrc": "560:66:9",
													"nodeType": "YulBlock",
													"src": "560:66:9",
													"statements": [
														{
															"nativeSrc": "570:50:9",
															"nodeType": "YulAssignment",
															"src": "570:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "614:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "614:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "583:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "583:30:9"
																},
																"nativeSrc": "583:37:9",
																"nodeType": "YulFunctionCall",
																"src": "583:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "570:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "570:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IMyNFT_$1048_to_t_address",
												"nativeSrc": "485:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "540:5:9",
														"nodeType": "YulTypedName",
														"src": "540:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "550:9:9",
														"nodeType": "YulTypedName",
														"src": "550:9:9",
														"type": ""
													}
												],
												"src": "485:141:9"
											},
											{
												"body": {
													"nativeSrc": "712:81:9",
													"nodeType": "YulBlock",
													"src": "712:81:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "729:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "729:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "780:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "780:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IMyNFT_$1048_to_t_address",
																			"nativeSrc": "734:45:9",
																			"nodeType": "YulIdentifier",
																			"src": "734:45:9"
																		},
																		"nativeSrc": "734:52:9",
																		"nodeType": "YulFunctionCall",
																		"src": "734:52:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "722:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "722:6:9"
																},
																"nativeSrc": "722:65:9",
																"nodeType": "YulFunctionCall",
																"src": "722:65:9"
															},
															"nativeSrc": "722:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "722:65:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IMyNFT_$1048_to_t_address_fromStack",
												"nativeSrc": "632:161:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "700:5:9",
														"nodeType": "YulTypedName",
														"src": "700:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "707:3:9",
														"nodeType": "YulTypedName",
														"src": "707:3:9",
														"type": ""
													}
												],
												"src": "632:161:9"
											},
											{
												"body": {
													"nativeSrc": "912:139:9",
													"nodeType": "YulBlock",
													"src": "912:139:9",
													"statements": [
														{
															"nativeSrc": "922:26:9",
															"nodeType": "YulAssignment",
															"src": "922:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "934:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "934:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "945:2:9",
																		"nodeType": "YulLiteral",
																		"src": "945:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "930:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "930:3:9"
																},
																"nativeSrc": "930:18:9",
																"nodeType": "YulFunctionCall",
																"src": "930:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "922:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "922:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1017:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1017:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1030:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1030:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1041:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1041:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1026:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1026:3:9"
																		},
																		"nativeSrc": "1026:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1026:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IMyNFT_$1048_to_t_address_fromStack",
																	"nativeSrc": "958:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "958:58:9"
																},
																"nativeSrc": "958:86:9",
																"nodeType": "YulFunctionCall",
																"src": "958:86:9"
															},
															"nativeSrc": "958:86:9",
															"nodeType": "YulExpressionStatement",
															"src": "958:86:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IMyNFT_$1048__to_t_address__fromStack_reversed",
												"nativeSrc": "799:252:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "884:9:9",
														"nodeType": "YulTypedName",
														"src": "884:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "896:6:9",
														"nodeType": "YulTypedName",
														"src": "896:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "907:4:9",
														"nodeType": "YulTypedName",
														"src": "907:4:9",
														"type": ""
													}
												],
												"src": "799:252:9"
											},
											{
												"body": {
													"nativeSrc": "1097:35:9",
													"nodeType": "YulBlock",
													"src": "1097:35:9",
													"statements": [
														{
															"nativeSrc": "1107:19:9",
															"nodeType": "YulAssignment",
															"src": "1107:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1123:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1123:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1117:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1117:5:9"
																},
																"nativeSrc": "1117:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1117:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1107:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1107:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1057:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1090:6:9",
														"nodeType": "YulTypedName",
														"src": "1090:6:9",
														"type": ""
													}
												],
												"src": "1057:75:9"
											},
											{
												"body": {
													"nativeSrc": "1227:28:9",
													"nodeType": "YulBlock",
													"src": "1227:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1244:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1247:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1247:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1237:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:9"
																},
																"nativeSrc": "1237:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1237:12:9"
															},
															"nativeSrc": "1237:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1237:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1138:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1138:117:9"
											},
											{
												"body": {
													"nativeSrc": "1350:28:9",
													"nodeType": "YulBlock",
													"src": "1350:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1367:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1367:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1370:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1370:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1360:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:9"
																},
																"nativeSrc": "1360:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1360:12:9"
															},
															"nativeSrc": "1360:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1360:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1261:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1261:117:9"
											},
											{
												"body": {
													"nativeSrc": "1429:32:9",
													"nodeType": "YulBlock",
													"src": "1429:32:9",
													"statements": [
														{
															"nativeSrc": "1439:16:9",
															"nodeType": "YulAssignment",
															"src": "1439:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "1450:5:9",
																"nodeType": "YulIdentifier",
																"src": "1450:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1439:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1439:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1384:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:9",
														"nodeType": "YulTypedName",
														"src": "1411:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1421:7:9",
														"nodeType": "YulTypedName",
														"src": "1421:7:9",
														"type": ""
													}
												],
												"src": "1384:77:9"
											},
											{
												"body": {
													"nativeSrc": "1510:79:9",
													"nodeType": "YulBlock",
													"src": "1510:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1567:16:9",
																"nodeType": "YulBlock",
																"src": "1567:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1576:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1576:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1579:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1579:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1569:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1569:6:9"
																			},
																			"nativeSrc": "1569:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1569:12:9"
																		},
																		"nativeSrc": "1569:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1569:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1533:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1533:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1558:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1558:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1540:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1540:17:9"
																				},
																				"nativeSrc": "1540:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1540:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1530:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1530:2:9"
																		},
																		"nativeSrc": "1530:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1530:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1523:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1523:6:9"
																},
																"nativeSrc": "1523:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1523:43:9"
															},
															"nativeSrc": "1520:63:9",
															"nodeType": "YulIf",
															"src": "1520:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1467:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1503:5:9",
														"nodeType": "YulTypedName",
														"src": "1503:5:9",
														"type": ""
													}
												],
												"src": "1467:122:9"
											},
											{
												"body": {
													"nativeSrc": "1647:87:9",
													"nodeType": "YulBlock",
													"src": "1647:87:9",
													"statements": [
														{
															"nativeSrc": "1657:29:9",
															"nodeType": "YulAssignment",
															"src": "1657:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1679:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1679:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1666:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1666:12:9"
																},
																"nativeSrc": "1666:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1666:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1657:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1657:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1722:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1722:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1695:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "1695:26:9"
																},
																"nativeSrc": "1695:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1695:33:9"
															},
															"nativeSrc": "1695:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1695:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1595:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1625:6:9",
														"nodeType": "YulTypedName",
														"src": "1625:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1633:3:9",
														"nodeType": "YulTypedName",
														"src": "1633:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1641:5:9",
														"nodeType": "YulTypedName",
														"src": "1641:5:9",
														"type": ""
													}
												],
												"src": "1595:139:9"
											},
											{
												"body": {
													"nativeSrc": "1806:263:9",
													"nodeType": "YulBlock",
													"src": "1806:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:83:9",
																"nodeType": "YulBlock",
																"src": "1852:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1854:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1854:77:9"
																			},
																			"nativeSrc": "1854:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:79:9"
																		},
																		"nativeSrc": "1854:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1827:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1827:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1836:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1836:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1823:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1823:3:9"
																		},
																		"nativeSrc": "1823:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1823:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1848:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1819:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1819:3:9"
																},
																"nativeSrc": "1819:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1819:32:9"
															},
															"nativeSrc": "1816:119:9",
															"nodeType": "YulIf",
															"src": "1816:119:9"
														},
														{
															"nativeSrc": "1945:117:9",
															"nodeType": "YulBlock",
															"src": "1945:117:9",
															"statements": [
																{
																	"nativeSrc": "1960:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1960:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1974:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1974:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1964:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1964:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1989:63:9",
																	"nodeType": "YulAssignment",
																	"src": "1989:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2024:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2024:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2035:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2035:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2020:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2020:3:9"
																				},
																				"nativeSrc": "2020:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2020:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2044:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2044:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1999:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "1999:20:9"
																		},
																		"nativeSrc": "1999:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1999:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1989:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1989:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1740:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1776:9:9",
														"nodeType": "YulTypedName",
														"src": "1776:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1787:7:9",
														"nodeType": "YulTypedName",
														"src": "1787:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1799:6:9",
														"nodeType": "YulTypedName",
														"src": "1799:6:9",
														"type": ""
													}
												],
												"src": "1740:329:9"
											},
											{
												"body": {
													"nativeSrc": "2119:49:9",
													"nodeType": "YulBlock",
													"src": "2119:49:9",
													"statements": [
														{
															"nativeSrc": "2129:33:9",
															"nodeType": "YulAssignment",
															"src": "2129:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2144:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2144:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2151:10:9",
																		"nodeType": "YulLiteral",
																		"src": "2151:10:9",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2140:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2140:3:9"
																},
																"nativeSrc": "2140:22:9",
																"nodeType": "YulFunctionCall",
																"src": "2140:22:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2129:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2129:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "2075:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2101:5:9",
														"nodeType": "YulTypedName",
														"src": "2101:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2111:7:9",
														"nodeType": "YulTypedName",
														"src": "2111:7:9",
														"type": ""
													}
												],
												"src": "2075:93:9"
											},
											{
												"body": {
													"nativeSrc": "2237:52:9",
													"nodeType": "YulBlock",
													"src": "2237:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2254:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2254:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2276:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2276:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nativeSrc": "2259:16:9",
																			"nodeType": "YulIdentifier",
																			"src": "2259:16:9"
																		},
																		"nativeSrc": "2259:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2259:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2247:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:9"
																},
																"nativeSrc": "2247:36:9",
																"nodeType": "YulFunctionCall",
																"src": "2247:36:9"
															},
															"nativeSrc": "2247:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "2247:36:9"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nativeSrc": "2174:115:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2225:5:9",
														"nodeType": "YulTypedName",
														"src": "2225:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2232:3:9",
														"nodeType": "YulTypedName",
														"src": "2232:3:9",
														"type": ""
													}
												],
												"src": "2174:115:9"
											},
											{
												"body": {
													"nativeSrc": "2391:122:9",
													"nodeType": "YulBlock",
													"src": "2391:122:9",
													"statements": [
														{
															"nativeSrc": "2401:26:9",
															"nodeType": "YulAssignment",
															"src": "2401:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2413:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2413:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2424:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2424:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2409:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2409:3:9"
																},
																"nativeSrc": "2409:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2409:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2401:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2401:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2479:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2479:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2492:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2492:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2503:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2503:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2488:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2488:3:9"
																		},
																		"nativeSrc": "2488:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2488:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nativeSrc": "2437:41:9",
																	"nodeType": "YulIdentifier",
																	"src": "2437:41:9"
																},
																"nativeSrc": "2437:69:9",
																"nodeType": "YulFunctionCall",
																"src": "2437:69:9"
															},
															"nativeSrc": "2437:69:9",
															"nodeType": "YulExpressionStatement",
															"src": "2437:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nativeSrc": "2295:218:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2363:9:9",
														"nodeType": "YulTypedName",
														"src": "2363:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2375:6:9",
														"nodeType": "YulTypedName",
														"src": "2375:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2386:4:9",
														"nodeType": "YulTypedName",
														"src": "2386:4:9",
														"type": ""
													}
												],
												"src": "2295:218:9"
											},
											{
												"body": {
													"nativeSrc": "2592:66:9",
													"nodeType": "YulBlock",
													"src": "2592:66:9",
													"statements": [
														{
															"nativeSrc": "2602:50:9",
															"nodeType": "YulAssignment",
															"src": "2602:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2646:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2646:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2615:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "2615:30:9"
																},
																"nativeSrc": "2615:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2615:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2602:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2602:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$799_to_t_address",
												"nativeSrc": "2519:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2572:5:9",
														"nodeType": "YulTypedName",
														"src": "2572:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2582:9:9",
														"nodeType": "YulTypedName",
														"src": "2582:9:9",
														"type": ""
													}
												],
												"src": "2519:139:9"
											},
											{
												"body": {
													"nativeSrc": "2742:79:9",
													"nodeType": "YulBlock",
													"src": "2742:79:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2759:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2759:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2808:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2808:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$799_to_t_address",
																			"nativeSrc": "2764:43:9",
																			"nodeType": "YulIdentifier",
																			"src": "2764:43:9"
																		},
																		"nativeSrc": "2764:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:50:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2752:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2752:6:9"
																},
																"nativeSrc": "2752:63:9",
																"nodeType": "YulFunctionCall",
																"src": "2752:63:9"
															},
															"nativeSrc": "2752:63:9",
															"nodeType": "YulExpressionStatement",
															"src": "2752:63:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack",
												"nativeSrc": "2664:157:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2730:5:9",
														"nodeType": "YulTypedName",
														"src": "2730:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2737:3:9",
														"nodeType": "YulTypedName",
														"src": "2737:3:9",
														"type": ""
													}
												],
												"src": "2664:157:9"
											},
											{
												"body": {
													"nativeSrc": "2938:137:9",
													"nodeType": "YulBlock",
													"src": "2938:137:9",
													"statements": [
														{
															"nativeSrc": "2948:26:9",
															"nodeType": "YulAssignment",
															"src": "2948:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2960:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2960:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2971:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2971:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2956:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2956:3:9"
																},
																"nativeSrc": "2956:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2956:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2948:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2948:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3041:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3041:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3054:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3054:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3065:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3065:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3050:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3050:3:9"
																		},
																		"nativeSrc": "3050:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack",
																	"nativeSrc": "2984:56:9",
																	"nodeType": "YulIdentifier",
																	"src": "2984:56:9"
																},
																"nativeSrc": "2984:84:9",
																"nodeType": "YulFunctionCall",
																"src": "2984:84:9"
															},
															"nativeSrc": "2984:84:9",
															"nodeType": "YulExpressionStatement",
															"src": "2984:84:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$799__to_t_address__fromStack_reversed",
												"nativeSrc": "2827:248:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2910:9:9",
														"nodeType": "YulTypedName",
														"src": "2910:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2922:6:9",
														"nodeType": "YulTypedName",
														"src": "2922:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2933:4:9",
														"nodeType": "YulTypedName",
														"src": "2933:4:9",
														"type": ""
													}
												],
												"src": "2827:248:9"
											},
											{
												"body": {
													"nativeSrc": "3154:40:9",
													"nodeType": "YulBlock",
													"src": "3154:40:9",
													"statements": [
														{
															"nativeSrc": "3165:22:9",
															"nodeType": "YulAssignment",
															"src": "3165:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3181:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3181:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3175:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3175:5:9"
																},
																"nativeSrc": "3175:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3175:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3165:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint32_$dyn_memory_ptr",
												"nativeSrc": "3081:113:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3137:5:9",
														"nodeType": "YulTypedName",
														"src": "3137:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3147:6:9",
														"nodeType": "YulTypedName",
														"src": "3147:6:9",
														"type": ""
													}
												],
												"src": "3081:113:9"
											},
											{
												"body": {
													"nativeSrc": "3310:73:9",
													"nodeType": "YulBlock",
													"src": "3310:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3327:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3327:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3332:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3332:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3320:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3320:6:9"
																},
																"nativeSrc": "3320:19:9",
																"nodeType": "YulFunctionCall",
																"src": "3320:19:9"
															},
															"nativeSrc": "3320:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "3320:19:9"
														},
														{
															"nativeSrc": "3348:29:9",
															"nodeType": "YulAssignment",
															"src": "3348:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3367:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3367:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3372:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3372:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3363:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3363:3:9"
																},
																"nativeSrc": "3363:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3363:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3348:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "3348:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint32_$dyn_memory_ptr_fromStack",
												"nativeSrc": "3200:183:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3282:3:9",
														"nodeType": "YulTypedName",
														"src": "3282:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3287:6:9",
														"nodeType": "YulTypedName",
														"src": "3287:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3298:11:9",
														"nodeType": "YulTypedName",
														"src": "3298:11:9",
														"type": ""
													}
												],
												"src": "3200:183:9"
											},
											{
												"body": {
													"nativeSrc": "3460:60:9",
													"nodeType": "YulBlock",
													"src": "3460:60:9",
													"statements": [
														{
															"nativeSrc": "3470:11:9",
															"nodeType": "YulAssignment",
															"src": "3470:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "3478:3:9",
																"nodeType": "YulIdentifier",
																"src": "3478:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3470:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3470:4:9"
																}
															]
														},
														{
															"nativeSrc": "3491:22:9",
															"nodeType": "YulAssignment",
															"src": "3491:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3503:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3503:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3508:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3508:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3499:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3499:3:9"
																},
																"nativeSrc": "3499:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3499:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3491:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3491:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint32_$dyn_memory_ptr",
												"nativeSrc": "3389:131:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3447:3:9",
														"nodeType": "YulTypedName",
														"src": "3447:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3455:4:9",
														"nodeType": "YulTypedName",
														"src": "3455:4:9",
														"type": ""
													}
												],
												"src": "3389:131:9"
											},
											{
												"body": {
													"nativeSrc": "3579:52:9",
													"nodeType": "YulBlock",
													"src": "3579:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3596:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3596:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3618:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3618:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nativeSrc": "3601:16:9",
																			"nodeType": "YulIdentifier",
																			"src": "3601:16:9"
																		},
																		"nativeSrc": "3601:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3601:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3589:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:9"
																},
																"nativeSrc": "3589:36:9",
																"nodeType": "YulFunctionCall",
																"src": "3589:36:9"
															},
															"nativeSrc": "3589:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "3589:36:9"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32",
												"nativeSrc": "3526:105:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3567:5:9",
														"nodeType": "YulTypedName",
														"src": "3567:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3574:3:9",
														"nodeType": "YulTypedName",
														"src": "3574:3:9",
														"type": ""
													}
												],
												"src": "3526:105:9"
											},
											{
												"body": {
													"nativeSrc": "3715:97:9",
													"nodeType": "YulBlock",
													"src": "3715:97:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3757:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3757:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3765:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3765:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32",
																	"nativeSrc": "3725:31:9",
																	"nodeType": "YulIdentifier",
																	"src": "3725:31:9"
																},
																"nativeSrc": "3725:44:9",
																"nodeType": "YulFunctionCall",
																"src": "3725:44:9"
															},
															"nativeSrc": "3725:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "3725:44:9"
														},
														{
															"nativeSrc": "3778:28:9",
															"nodeType": "YulAssignment",
															"src": "3778:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3796:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3796:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3801:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3801:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3792:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3792:3:9"
																},
																"nativeSrc": "3792:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3792:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "3778:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "3778:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint32_to_t_uint32",
												"nativeSrc": "3637:175:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "3688:6:9",
														"nodeType": "YulTypedName",
														"src": "3688:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3696:3:9",
														"nodeType": "YulTypedName",
														"src": "3696:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "3704:10:9",
														"nodeType": "YulTypedName",
														"src": "3704:10:9",
														"type": ""
													}
												],
												"src": "3637:175:9"
											},
											{
												"body": {
													"nativeSrc": "3892:38:9",
													"nodeType": "YulBlock",
													"src": "3892:38:9",
													"statements": [
														{
															"nativeSrc": "3902:22:9",
															"nodeType": "YulAssignment",
															"src": "3902:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3914:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3914:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3919:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3919:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3910:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3910:3:9"
																},
																"nativeSrc": "3910:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3910:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "3902:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3902:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint32_$dyn_memory_ptr",
												"nativeSrc": "3818:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3879:3:9",
														"nodeType": "YulTypedName",
														"src": "3879:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "3887:4:9",
														"nodeType": "YulTypedName",
														"src": "3887:4:9",
														"type": ""
													}
												],
												"src": "3818:112:9"
											},
											{
												"body": {
													"nativeSrc": "4086:602:9",
													"nodeType": "YulBlock",
													"src": "4086:602:9",
													"statements": [
														{
															"nativeSrc": "4096:67:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4096:67:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4157:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4157:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint32_$dyn_memory_ptr",
																	"nativeSrc": "4110:46:9",
																	"nodeType": "YulIdentifier",
																	"src": "4110:46:9"
																},
																"nativeSrc": "4110:53:9",
																"nodeType": "YulFunctionCall",
																"src": "4110:53:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4100:6:9",
																	"nodeType": "YulTypedName",
																	"src": "4100:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4172:92:9",
															"nodeType": "YulAssignment",
															"src": "4172:92:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4252:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4252:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4257:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4257:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint32_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4179:72:9",
																	"nodeType": "YulIdentifier",
																	"src": "4179:72:9"
																},
																"nativeSrc": "4179:85:9",
																"nodeType": "YulFunctionCall",
																"src": "4179:85:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4172:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4172:3:9"
																}
															]
														},
														{
															"nativeSrc": "4273:70:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4273:70:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4337:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4337:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint32_$dyn_memory_ptr",
																	"nativeSrc": "4288:48:9",
																	"nodeType": "YulIdentifier",
																	"src": "4288:48:9"
																},
																"nativeSrc": "4288:55:9",
																"nodeType": "YulFunctionCall",
																"src": "4288:55:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "4277:7:9",
																	"nodeType": "YulTypedName",
																	"src": "4277:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4352:21:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4352:21:9",
															"value": {
																"name": "baseRef",
																"nativeSrc": "4366:7:9",
																"nodeType": "YulIdentifier",
																"src": "4366:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4356:6:9",
																	"nodeType": "YulTypedName",
																	"src": "4356:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4442:221:9",
																"nodeType": "YulBlock",
																"src": "4442:221:9",
																"statements": [
																	{
																		"nativeSrc": "4456:34:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4456:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4483:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "4483:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4477:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4477:5:9"
																			},
																			"nativeSrc": "4477:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4477:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "4460:13:9",
																				"nodeType": "YulTypedName",
																				"src": "4460:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4503:68:9",
																		"nodeType": "YulAssignment",
																		"src": "4503:68:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "4552:13:9",
																					"nodeType": "YulIdentifier",
																					"src": "4552:13:9"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "4567:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4567:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint32_to_t_uint32",
																				"nativeSrc": "4510:41:9",
																				"nodeType": "YulIdentifier",
																				"src": "4510:41:9"
																			},
																			"nativeSrc": "4510:61:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4510:61:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "4503:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4503:3:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4584:69:9",
																		"nodeType": "YulAssignment",
																		"src": "4584:69:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4646:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "4646:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint32_$dyn_memory_ptr",
																				"nativeSrc": "4594:51:9",
																				"nodeType": "YulIdentifier",
																				"src": "4594:51:9"
																			},
																			"nativeSrc": "4594:59:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4594:59:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "4584:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4584:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4404:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4404:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4407:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4407:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4401:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4401:2:9"
																},
																"nativeSrc": "4401:13:9",
																"nodeType": "YulFunctionCall",
																"src": "4401:13:9"
															},
															"nativeSrc": "4382:281:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4415:18:9",
																"nodeType": "YulBlock",
																"src": "4415:18:9",
																"statements": [
																	{
																		"nativeSrc": "4417:14:9",
																		"nodeType": "YulAssignment",
																		"src": "4417:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4426:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "4426:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4429:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4429:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4422:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4422:3:9"
																			},
																			"nativeSrc": "4422:9:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4422:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4417:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "4417:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4386:14:9",
																"nodeType": "YulBlock",
																"src": "4386:14:9",
																"statements": [
																	{
																		"nativeSrc": "4388:10:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4388:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4397:1:9",
																			"nodeType": "YulLiteral",
																			"src": "4397:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "4392:1:9",
																				"nodeType": "YulTypedName",
																				"src": "4392:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4382:281:9"
														},
														{
															"nativeSrc": "4672:10:9",
															"nodeType": "YulAssignment",
															"src": "4672:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "4679:3:9",
																"nodeType": "YulIdentifier",
																"src": "4679:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4672:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4672:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint32_$dyn_memory_ptr_to_t_array$_t_uint32_$dyn_memory_ptr_fromStack",
												"nativeSrc": "3964:724:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4065:5:9",
														"nodeType": "YulTypedName",
														"src": "4065:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4072:3:9",
														"nodeType": "YulTypedName",
														"src": "4072:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4081:3:9",
														"nodeType": "YulTypedName",
														"src": "4081:3:9",
														"type": ""
													}
												],
												"src": "3964:724:9"
											},
											{
												"body": {
													"nativeSrc": "4840:223:9",
													"nodeType": "YulBlock",
													"src": "4840:223:9",
													"statements": [
														{
															"nativeSrc": "4850:26:9",
															"nodeType": "YulAssignment",
															"src": "4850:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4862:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4862:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4873:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4873:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4858:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4858:3:9"
																},
																"nativeSrc": "4858:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4858:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4850:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4850:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4897:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4897:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4908:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4908:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4893:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4893:3:9"
																		},
																		"nativeSrc": "4893:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4893:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4916:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4916:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4922:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4922:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4912:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4912:3:9"
																		},
																		"nativeSrc": "4912:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4912:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4886:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4886:6:9"
																},
																"nativeSrc": "4886:47:9",
																"nodeType": "YulFunctionCall",
																"src": "4886:47:9"
															},
															"nativeSrc": "4886:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "4886:47:9"
														},
														{
															"nativeSrc": "4942:114:9",
															"nodeType": "YulAssignment",
															"src": "4942:114:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5042:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5042:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5051:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5051:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint32_$dyn_memory_ptr_to_t_array$_t_uint32_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4950:91:9",
																	"nodeType": "YulIdentifier",
																	"src": "4950:91:9"
																},
																"nativeSrc": "4950:106:9",
																"nodeType": "YulFunctionCall",
																"src": "4950:106:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4942:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint32_$dyn_memory_ptr__to_t_array$_t_uint32_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "4694:369:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4812:9:9",
														"nodeType": "YulTypedName",
														"src": "4812:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4824:6:9",
														"nodeType": "YulTypedName",
														"src": "4824:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4835:4:9",
														"nodeType": "YulTypedName",
														"src": "4835:4:9",
														"type": ""
													}
												],
												"src": "4694:369:9"
											},
											{
												"body": {
													"nativeSrc": "5114:51:9",
													"nodeType": "YulBlock",
													"src": "5114:51:9",
													"statements": [
														{
															"nativeSrc": "5124:35:9",
															"nodeType": "YulAssignment",
															"src": "5124:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5153:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5153:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5135:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "5135:17:9"
																},
																"nativeSrc": "5135:24:9",
																"nodeType": "YulFunctionCall",
																"src": "5135:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5124:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5124:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5069:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5096:5:9",
														"nodeType": "YulTypedName",
														"src": "5096:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5106:7:9",
														"nodeType": "YulTypedName",
														"src": "5106:7:9",
														"type": ""
													}
												],
												"src": "5069:96:9"
											},
											{
												"body": {
													"nativeSrc": "5236:53:9",
													"nodeType": "YulBlock",
													"src": "5236:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5253:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5253:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5276:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5276:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5258:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5258:17:9"
																		},
																		"nativeSrc": "5258:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5258:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5246:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5246:6:9"
																},
																"nativeSrc": "5246:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5246:37:9"
															},
															"nativeSrc": "5246:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5246:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5171:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5224:5:9",
														"nodeType": "YulTypedName",
														"src": "5224:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5231:3:9",
														"nodeType": "YulTypedName",
														"src": "5231:3:9",
														"type": ""
													}
												],
												"src": "5171:118:9"
											},
											{
												"body": {
													"nativeSrc": "5393:124:9",
													"nodeType": "YulBlock",
													"src": "5393:124:9",
													"statements": [
														{
															"nativeSrc": "5403:26:9",
															"nodeType": "YulAssignment",
															"src": "5403:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5415:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5415:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5426:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5426:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5411:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5411:3:9"
																},
																"nativeSrc": "5411:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5411:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5403:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5403:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5483:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5483:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5496:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5507:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5507:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5492:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:9"
																		},
																		"nativeSrc": "5492:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5492:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5439:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5439:43:9"
																},
																"nativeSrc": "5439:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5439:71:9"
															},
															"nativeSrc": "5439:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5439:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5295:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5365:9:9",
														"nodeType": "YulTypedName",
														"src": "5365:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5377:6:9",
														"nodeType": "YulTypedName",
														"src": "5377:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5388:4:9",
														"nodeType": "YulTypedName",
														"src": "5388:4:9",
														"type": ""
													}
												],
												"src": "5295:222:9"
											},
											{
												"body": {
													"nativeSrc": "5612:28:9",
													"nodeType": "YulBlock",
													"src": "5612:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5629:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5629:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5632:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5632:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5622:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5622:6:9"
																},
																"nativeSrc": "5622:12:9",
																"nodeType": "YulFunctionCall",
																"src": "5622:12:9"
															},
															"nativeSrc": "5622:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "5622:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5523:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "5523:117:9"
											},
											{
												"body": {
													"nativeSrc": "5694:54:9",
													"nodeType": "YulBlock",
													"src": "5694:54:9",
													"statements": [
														{
															"nativeSrc": "5704:38:9",
															"nodeType": "YulAssignment",
															"src": "5704:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5722:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5722:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5729:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5729:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5718:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5718:3:9"
																		},
																		"nativeSrc": "5718:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5718:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5738:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5738:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5734:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5734:3:9"
																		},
																		"nativeSrc": "5734:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5734:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5714:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5714:3:9"
																},
																"nativeSrc": "5714:28:9",
																"nodeType": "YulFunctionCall",
																"src": "5714:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5704:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5704:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "5646:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5677:5:9",
														"nodeType": "YulTypedName",
														"src": "5677:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5687:6:9",
														"nodeType": "YulTypedName",
														"src": "5687:6:9",
														"type": ""
													}
												],
												"src": "5646:102:9"
											},
											{
												"body": {
													"nativeSrc": "5782:152:9",
													"nodeType": "YulBlock",
													"src": "5782:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5799:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5799:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5802:77:9",
																		"nodeType": "YulLiteral",
																		"src": "5802:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5792:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5792:6:9"
																},
																"nativeSrc": "5792:88:9",
																"nodeType": "YulFunctionCall",
																"src": "5792:88:9"
															},
															"nativeSrc": "5792:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "5792:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5896:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5896:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5899:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5899:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5889:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5889:6:9"
																},
																"nativeSrc": "5889:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5889:15:9"
															},
															"nativeSrc": "5889:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5889:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5920:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5920:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5923:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5923:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5913:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5913:6:9"
																},
																"nativeSrc": "5913:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5913:15:9"
															},
															"nativeSrc": "5913:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5913:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5754:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "5754:180:9"
											},
											{
												"body": {
													"nativeSrc": "5983:238:9",
													"nodeType": "YulBlock",
													"src": "5983:238:9",
													"statements": [
														{
															"nativeSrc": "5993:58:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5993:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6015:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6015:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6045:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6045:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6023:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "6023:21:9"
																		},
																		"nativeSrc": "6023:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6023:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6011:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6011:3:9"
																},
																"nativeSrc": "6011:40:9",
																"nodeType": "YulFunctionCall",
																"src": "6011:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5997:10:9",
																	"nodeType": "YulTypedName",
																	"src": "5997:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6162:22:9",
																"nodeType": "YulBlock",
																"src": "6162:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6164:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6164:16:9"
																			},
																			"nativeSrc": "6164:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6164:18:9"
																		},
																		"nativeSrc": "6164:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6164:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6105:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "6105:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6117:18:9",
																				"nodeType": "YulLiteral",
																				"src": "6117:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6102:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6102:2:9"
																		},
																		"nativeSrc": "6102:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6102:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6141:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "6141:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6153:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6153:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6138:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6138:2:9"
																		},
																		"nativeSrc": "6138:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6138:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6099:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6099:2:9"
																},
																"nativeSrc": "6099:62:9",
																"nodeType": "YulFunctionCall",
																"src": "6099:62:9"
															},
															"nativeSrc": "6096:88:9",
															"nodeType": "YulIf",
															"src": "6096:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6200:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6200:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6204:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "6204:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6193:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6193:6:9"
																},
																"nativeSrc": "6193:22:9",
																"nodeType": "YulFunctionCall",
																"src": "6193:22:9"
															},
															"nativeSrc": "6193:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "6193:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5940:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5969:6:9",
														"nodeType": "YulTypedName",
														"src": "5969:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5977:4:9",
														"nodeType": "YulTypedName",
														"src": "5977:4:9",
														"type": ""
													}
												],
												"src": "5940:281:9"
											},
											{
												"body": {
													"nativeSrc": "6268:88:9",
													"nodeType": "YulBlock",
													"src": "6268:88:9",
													"statements": [
														{
															"nativeSrc": "6278:30:9",
															"nodeType": "YulAssignment",
															"src": "6278:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6288:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "6288:18:9"
																},
																"nativeSrc": "6288:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6288:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6278:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6337:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6337:6:9"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6345:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6345:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6317:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "6317:19:9"
																},
																"nativeSrc": "6317:33:9",
																"nodeType": "YulFunctionCall",
																"src": "6317:33:9"
															},
															"nativeSrc": "6317:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "6317:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6227:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6252:4:9",
														"nodeType": "YulTypedName",
														"src": "6252:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6261:6:9",
														"nodeType": "YulTypedName",
														"src": "6261:6:9",
														"type": ""
													}
												],
												"src": "6227:129:9"
											},
											{
												"body": {
													"nativeSrc": "6443:229:9",
													"nodeType": "YulBlock",
													"src": "6443:229:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6548:22:9",
																"nodeType": "YulBlock",
																"src": "6548:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6550:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6550:16:9"
																			},
																			"nativeSrc": "6550:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6550:18:9"
																		},
																		"nativeSrc": "6550:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6550:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6520:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6520:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6528:18:9",
																		"nodeType": "YulLiteral",
																		"src": "6528:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6517:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6517:2:9"
																},
																"nativeSrc": "6517:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6517:30:9"
															},
															"nativeSrc": "6514:56:9",
															"nodeType": "YulIf",
															"src": "6514:56:9"
														},
														{
															"nativeSrc": "6580:25:9",
															"nodeType": "YulAssignment",
															"src": "6580:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6592:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6592:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6600:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6600:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6588:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6588:3:9"
																},
																"nativeSrc": "6588:17:9",
																"nodeType": "YulFunctionCall",
																"src": "6588:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6580:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6580:4:9"
																}
															]
														},
														{
															"nativeSrc": "6642:23:9",
															"nodeType": "YulAssignment",
															"src": "6642:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6654:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6654:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6660:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6660:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6650:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6650:3:9"
																},
																"nativeSrc": "6650:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6650:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6642:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6642:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint32_$dyn_memory_ptr",
												"nativeSrc": "6362:310:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6427:6:9",
														"nodeType": "YulTypedName",
														"src": "6427:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6438:4:9",
														"nodeType": "YulTypedName",
														"src": "6438:4:9",
														"type": ""
													}
												],
												"src": "6362:310:9"
											},
											{
												"body": {
													"nativeSrc": "6767:28:9",
													"nodeType": "YulBlock",
													"src": "6767:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6784:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6784:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6787:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6787:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6777:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6777:6:9"
																},
																"nativeSrc": "6777:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6777:12:9"
															},
															"nativeSrc": "6777:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "6777:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "6678:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6678:117:9"
											},
											{
												"body": {
													"nativeSrc": "6843:78:9",
													"nodeType": "YulBlock",
													"src": "6843:78:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6899:16:9",
																"nodeType": "YulBlock",
																"src": "6899:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6908:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6908:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6911:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6911:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6901:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6901:6:9"
																			},
																			"nativeSrc": "6901:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6901:12:9"
																		},
																		"nativeSrc": "6901:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6901:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6866:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6866:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6890:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6890:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nativeSrc": "6873:16:9",
																					"nodeType": "YulIdentifier",
																					"src": "6873:16:9"
																				},
																				"nativeSrc": "6873:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6873:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6863:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6863:2:9"
																		},
																		"nativeSrc": "6863:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6863:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6856:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6856:6:9"
																},
																"nativeSrc": "6856:42:9",
																"nodeType": "YulFunctionCall",
																"src": "6856:42:9"
															},
															"nativeSrc": "6853:62:9",
															"nodeType": "YulIf",
															"src": "6853:62:9"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nativeSrc": "6801:120:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6836:5:9",
														"nodeType": "YulTypedName",
														"src": "6836:5:9",
														"type": ""
													}
												],
												"src": "6801:120:9"
											},
											{
												"body": {
													"nativeSrc": "6978:86:9",
													"nodeType": "YulBlock",
													"src": "6978:86:9",
													"statements": [
														{
															"nativeSrc": "6988:29:9",
															"nodeType": "YulAssignment",
															"src": "6988:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7010:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7010:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6997:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "6997:12:9"
																},
																"nativeSrc": "6997:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6997:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6988:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6988:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7052:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7052:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nativeSrc": "7026:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "7026:25:9"
																},
																"nativeSrc": "7026:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7026:32:9"
															},
															"nativeSrc": "7026:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "7026:32:9"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nativeSrc": "6927:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6956:6:9",
														"nodeType": "YulTypedName",
														"src": "6956:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6964:3:9",
														"nodeType": "YulTypedName",
														"src": "6964:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6972:5:9",
														"nodeType": "YulTypedName",
														"src": "6972:5:9",
														"type": ""
													}
												],
												"src": "6927:137:9"
											},
											{
												"body": {
													"nativeSrc": "7187:606:9",
													"nodeType": "YulBlock",
													"src": "7187:606:9",
													"statements": [
														{
															"nativeSrc": "7197:89:9",
															"nodeType": "YulAssignment",
															"src": "7197:89:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7278:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7278:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint32_$dyn_memory_ptr",
																			"nativeSrc": "7222:55:9",
																			"nodeType": "YulIdentifier",
																			"src": "7222:55:9"
																		},
																		"nativeSrc": "7222:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7222:63:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7206:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "7206:15:9"
																},
																"nativeSrc": "7206:80:9",
																"nodeType": "YulFunctionCall",
																"src": "7206:80:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7197:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7197:5:9"
																}
															]
														},
														{
															"nativeSrc": "7295:16:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7295:16:9",
															"value": {
																"name": "array",
																"nativeSrc": "7306:5:9",
																"nodeType": "YulIdentifier",
																"src": "7306:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7299:3:9",
																	"nodeType": "YulTypedName",
																	"src": "7299:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7328:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7328:5:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7335:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7335:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7321:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7321:6:9"
																},
																"nativeSrc": "7321:21:9",
																"nodeType": "YulFunctionCall",
																"src": "7321:21:9"
															},
															"nativeSrc": "7321:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "7321:21:9"
														},
														{
															"nativeSrc": "7351:23:9",
															"nodeType": "YulAssignment",
															"src": "7351:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7362:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7362:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7369:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7369:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7358:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7358:3:9"
																},
																"nativeSrc": "7358:16:9",
																"nodeType": "YulFunctionCall",
																"src": "7358:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "7351:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7351:3:9"
																}
															]
														},
														{
															"nativeSrc": "7384:44:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7384:44:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7402:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7402:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7414:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7414:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7422:4:9",
																				"nodeType": "YulLiteral",
																				"src": "7422:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7410:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7410:3:9"
																		},
																		"nativeSrc": "7410:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7410:17:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7398:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7398:3:9"
																},
																"nativeSrc": "7398:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7398:30:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "7388:6:9",
																	"nodeType": "YulTypedName",
																	"src": "7388:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7456:103:9",
																"nodeType": "YulBlock",
																"src": "7456:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "7470:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7470:77:9"
																			},
																			"nativeSrc": "7470:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7470:79:9"
																		},
																		"nativeSrc": "7470:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7443:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7443:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7451:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7451:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7440:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7440:2:9"
																},
																"nativeSrc": "7440:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7440:15:9"
															},
															"nativeSrc": "7437:122:9",
															"nodeType": "YulIf",
															"src": "7437:122:9"
														},
														{
															"body": {
																"nativeSrc": "7644:143:9",
																"nodeType": "YulBlock",
																"src": "7644:143:9",
																"statements": [
																	{
																		"nativeSrc": "7659:21:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7659:21:9",
																		"value": {
																			"name": "src",
																			"nativeSrc": "7677:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7677:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "7663:10:9",
																				"nodeType": "YulTypedName",
																				"src": "7663:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7701:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7701:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "7726:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "7726:10:9"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "7738:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "7738:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint32",
																						"nativeSrc": "7706:19:9",
																						"nodeType": "YulIdentifier",
																						"src": "7706:19:9"
																					},
																					"nativeSrc": "7706:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7706:36:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7694:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7694:6:9"
																			},
																			"nativeSrc": "7694:49:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7694:49:9"
																		},
																		"nativeSrc": "7694:49:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7694:49:9"
																	},
																	{
																		"nativeSrc": "7756:21:9",
																		"nodeType": "YulAssignment",
																		"src": "7756:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7767:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7767:3:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7772:4:9",
																					"nodeType": "YulLiteral",
																					"src": "7772:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7763:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7763:3:9"
																			},
																			"nativeSrc": "7763:14:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7763:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "7756:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7756:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7597:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7597:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7602:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7602:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7594:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7594:2:9"
																},
																"nativeSrc": "7594:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7594:15:9"
															},
															"nativeSrc": "7568:219:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7610:25:9",
																"nodeType": "YulBlock",
																"src": "7610:25:9",
																"statements": [
																	{
																		"nativeSrc": "7612:21:9",
																		"nodeType": "YulAssignment",
																		"src": "7612:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7623:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7623:3:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7628:4:9",
																					"nodeType": "YulLiteral",
																					"src": "7628:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7619:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7619:3:9"
																			},
																			"nativeSrc": "7619:14:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7619:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "7612:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7612:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7572:21:9",
																"nodeType": "YulBlock",
																"src": "7572:21:9",
																"statements": [
																	{
																		"nativeSrc": "7574:17:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7574:17:9",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "7585:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7585:6:9"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "7578:3:9",
																				"nodeType": "YulTypedName",
																				"src": "7578:3:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7568:219:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint32_$dyn_memory_ptr",
												"nativeSrc": "7086:707:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7157:6:9",
														"nodeType": "YulTypedName",
														"src": "7157:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7165:6:9",
														"nodeType": "YulTypedName",
														"src": "7165:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7173:3:9",
														"nodeType": "YulTypedName",
														"src": "7173:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7181:5:9",
														"nodeType": "YulTypedName",
														"src": "7181:5:9",
														"type": ""
													}
												],
												"src": "7086:707:9"
											},
											{
												"body": {
													"nativeSrc": "7891:292:9",
													"nodeType": "YulBlock",
													"src": "7891:292:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7940:83:9",
																"nodeType": "YulBlock",
																"src": "7940:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7942:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7942:77:9"
																			},
																			"nativeSrc": "7942:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7942:79:9"
																		},
																		"nativeSrc": "7942:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7942:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7919:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7919:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7927:4:9",
																						"nodeType": "YulLiteral",
																						"src": "7927:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7915:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7915:3:9"
																				},
																				"nativeSrc": "7915:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7915:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7934:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7934:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7911:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7911:3:9"
																		},
																		"nativeSrc": "7911:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7911:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7904:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7904:6:9"
																},
																"nativeSrc": "7904:35:9",
																"nodeType": "YulFunctionCall",
																"src": "7904:35:9"
															},
															"nativeSrc": "7901:122:9",
															"nodeType": "YulIf",
															"src": "7901:122:9"
														},
														{
															"nativeSrc": "8032:34:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8032:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8059:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8059:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8046:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "8046:12:9"
																},
																"nativeSrc": "8046:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8046:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8036:6:9",
																	"nodeType": "YulTypedName",
																	"src": "8036:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8075:102:9",
															"nodeType": "YulAssignment",
															"src": "8075:102:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8150:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8150:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8158:4:9",
																				"nodeType": "YulLiteral",
																				"src": "8158:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8146:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8146:3:9"
																		},
																		"nativeSrc": "8146:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8146:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8165:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8165:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8173:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8173:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint32_$dyn_memory_ptr",
																	"nativeSrc": "8084:61:9",
																	"nodeType": "YulIdentifier",
																	"src": "8084:61:9"
																},
																"nativeSrc": "8084:93:9",
																"nodeType": "YulFunctionCall",
																"src": "8084:93:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8075:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "8075:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint32_$dyn_memory_ptr",
												"nativeSrc": "7815:368:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7869:6:9",
														"nodeType": "YulTypedName",
														"src": "7869:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7877:3:9",
														"nodeType": "YulTypedName",
														"src": "7877:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7885:5:9",
														"nodeType": "YulTypedName",
														"src": "7885:5:9",
														"type": ""
													}
												],
												"src": "7815:368:9"
											},
											{
												"body": {
													"nativeSrc": "8279:447:9",
													"nodeType": "YulBlock",
													"src": "8279:447:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8325:83:9",
																"nodeType": "YulBlock",
																"src": "8325:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8327:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8327:77:9"
																			},
																			"nativeSrc": "8327:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8327:79:9"
																		},
																		"nativeSrc": "8327:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8327:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8300:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8300:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8309:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8309:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8296:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8296:3:9"
																		},
																		"nativeSrc": "8296:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8296:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8321:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8321:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8292:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8292:3:9"
																},
																"nativeSrc": "8292:32:9",
																"nodeType": "YulFunctionCall",
																"src": "8292:32:9"
															},
															"nativeSrc": "8289:119:9",
															"nodeType": "YulIf",
															"src": "8289:119:9"
														},
														{
															"nativeSrc": "8418:301:9",
															"nodeType": "YulBlock",
															"src": "8418:301:9",
															"statements": [
																{
																	"nativeSrc": "8433:45:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8433:45:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8464:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8464:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8475:1:9",
																						"nodeType": "YulLiteral",
																						"src": "8475:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8460:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8460:3:9"
																				},
																				"nativeSrc": "8460:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8460:17:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8447:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "8447:12:9"
																		},
																		"nativeSrc": "8447:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8447:31:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8437:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8437:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8525:83:9",
																		"nodeType": "YulBlock",
																		"src": "8525:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8527:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "8527:77:9"
																					},
																					"nativeSrc": "8527:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8527:79:9"
																				},
																				"nativeSrc": "8527:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "8527:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8497:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8497:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8505:18:9",
																				"nodeType": "YulLiteral",
																				"src": "8505:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8494:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "8494:2:9"
																		},
																		"nativeSrc": "8494:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8494:30:9"
																	},
																	"nativeSrc": "8491:117:9",
																	"nodeType": "YulIf",
																	"src": "8491:117:9"
																},
																{
																	"nativeSrc": "8622:87:9",
																	"nodeType": "YulAssignment",
																	"src": "8622:87:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8681:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8681:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8692:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8692:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8677:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8677:3:9"
																				},
																				"nativeSrc": "8677:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8677:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8701:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8701:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint32_$dyn_memory_ptr",
																			"nativeSrc": "8632:44:9",
																			"nodeType": "YulIdentifier",
																			"src": "8632:44:9"
																		},
																		"nativeSrc": "8632:77:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8632:77:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8622:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8622:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint32_$dyn_memory_ptr",
												"nativeSrc": "8189:537:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8249:9:9",
														"nodeType": "YulTypedName",
														"src": "8249:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8260:7:9",
														"nodeType": "YulTypedName",
														"src": "8260:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8272:6:9",
														"nodeType": "YulTypedName",
														"src": "8272:6:9",
														"type": ""
													}
												],
												"src": "8189:537:9"
											},
											{
												"body": {
													"nativeSrc": "8797:53:9",
													"nodeType": "YulBlock",
													"src": "8797:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8814:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8814:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8837:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8837:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8819:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "8819:17:9"
																		},
																		"nativeSrc": "8819:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8819:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8807:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8807:6:9"
																},
																"nativeSrc": "8807:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8807:37:9"
															},
															"nativeSrc": "8807:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "8807:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8732:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8785:5:9",
														"nodeType": "YulTypedName",
														"src": "8785:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8792:3:9",
														"nodeType": "YulTypedName",
														"src": "8792:3:9",
														"type": ""
													}
												],
												"src": "8732:118:9"
											},
											{
												"body": {
													"nativeSrc": "8954:124:9",
													"nodeType": "YulBlock",
													"src": "8954:124:9",
													"statements": [
														{
															"nativeSrc": "8964:26:9",
															"nodeType": "YulAssignment",
															"src": "8964:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8976:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8976:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8987:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8987:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8972:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8972:3:9"
																},
																"nativeSrc": "8972:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8972:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8964:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8964:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9044:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9044:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9057:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9057:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9068:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9068:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9053:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9053:3:9"
																		},
																		"nativeSrc": "9053:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9053:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9000:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9000:43:9"
																},
																"nativeSrc": "9000:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9000:71:9"
															},
															"nativeSrc": "9000:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "9000:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8856:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8926:9:9",
														"nodeType": "YulTypedName",
														"src": "8926:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8938:6:9",
														"nodeType": "YulTypedName",
														"src": "8938:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8949:4:9",
														"nodeType": "YulTypedName",
														"src": "8949:4:9",
														"type": ""
													}
												],
												"src": "8856:222:9"
											},
											{
												"body": {
													"nativeSrc": "9127:79:9",
													"nodeType": "YulBlock",
													"src": "9127:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "9184:16:9",
																"nodeType": "YulBlock",
																"src": "9184:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9193:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9193:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9196:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9196:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9186:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9186:6:9"
																			},
																			"nativeSrc": "9186:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9186:12:9"
																		},
																		"nativeSrc": "9186:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9186:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9150:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9150:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9175:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9175:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "9157:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "9157:17:9"
																				},
																				"nativeSrc": "9157:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9157:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9147:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9147:2:9"
																		},
																		"nativeSrc": "9147:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9147:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9140:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9140:6:9"
																},
																"nativeSrc": "9140:43:9",
																"nodeType": "YulFunctionCall",
																"src": "9140:43:9"
															},
															"nativeSrc": "9137:63:9",
															"nodeType": "YulIf",
															"src": "9137:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "9084:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9120:5:9",
														"nodeType": "YulTypedName",
														"src": "9120:5:9",
														"type": ""
													}
												],
												"src": "9084:122:9"
											},
											{
												"body": {
													"nativeSrc": "9264:87:9",
													"nodeType": "YulBlock",
													"src": "9264:87:9",
													"statements": [
														{
															"nativeSrc": "9274:29:9",
															"nodeType": "YulAssignment",
															"src": "9274:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9296:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9296:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9283:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "9283:12:9"
																},
																"nativeSrc": "9283:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9283:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9274:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9274:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9339:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9339:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "9312:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "9312:26:9"
																},
																"nativeSrc": "9312:33:9",
																"nodeType": "YulFunctionCall",
																"src": "9312:33:9"
															},
															"nativeSrc": "9312:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "9312:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "9212:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9242:6:9",
														"nodeType": "YulTypedName",
														"src": "9242:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9250:3:9",
														"nodeType": "YulTypedName",
														"src": "9250:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9258:5:9",
														"nodeType": "YulTypedName",
														"src": "9258:5:9",
														"type": ""
													}
												],
												"src": "9212:139:9"
											},
											{
												"body": {
													"nativeSrc": "9423:263:9",
													"nodeType": "YulBlock",
													"src": "9423:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "9469:83:9",
																"nodeType": "YulBlock",
																"src": "9469:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9471:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "9471:77:9"
																			},
																			"nativeSrc": "9471:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9471:79:9"
																		},
																		"nativeSrc": "9471:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9471:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9444:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9444:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9453:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9453:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9440:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9440:3:9"
																		},
																		"nativeSrc": "9440:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9440:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9465:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9465:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9436:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9436:3:9"
																},
																"nativeSrc": "9436:32:9",
																"nodeType": "YulFunctionCall",
																"src": "9436:32:9"
															},
															"nativeSrc": "9433:119:9",
															"nodeType": "YulIf",
															"src": "9433:119:9"
														},
														{
															"nativeSrc": "9562:117:9",
															"nodeType": "YulBlock",
															"src": "9562:117:9",
															"statements": [
																{
																	"nativeSrc": "9577:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9577:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9591:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9591:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9581:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9581:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9606:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9606:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9641:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9641:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9652:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9652:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9637:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9637:3:9"
																				},
																				"nativeSrc": "9637:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9637:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9661:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9661:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9616:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9616:20:9"
																		},
																		"nativeSrc": "9616:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9616:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9606:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9606:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9357:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9393:9:9",
														"nodeType": "YulTypedName",
														"src": "9393:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9404:7:9",
														"nodeType": "YulTypedName",
														"src": "9404:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9416:6:9",
														"nodeType": "YulTypedName",
														"src": "9416:6:9",
														"type": ""
													}
												],
												"src": "9357:329:9"
											},
											{
												"body": {
													"nativeSrc": "9818:206:9",
													"nodeType": "YulBlock",
													"src": "9818:206:9",
													"statements": [
														{
															"nativeSrc": "9828:26:9",
															"nodeType": "YulAssignment",
															"src": "9828:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9840:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9840:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9851:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9851:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9836:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9836:3:9"
																},
																"nativeSrc": "9836:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9836:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9828:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9828:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9908:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9908:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9921:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9921:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9932:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9932:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9917:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9917:3:9"
																		},
																		"nativeSrc": "9917:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9917:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9864:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9864:43:9"
																},
																"nativeSrc": "9864:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9864:71:9"
															},
															"nativeSrc": "9864:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "9864:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9989:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9989:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10002:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10002:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10013:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10013:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9998:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9998:3:9"
																		},
																		"nativeSrc": "9998:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9998:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9945:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9945:43:9"
																},
																"nativeSrc": "9945:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9945:72:9"
															},
															"nativeSrc": "9945:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9945:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9692:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9782:9:9",
														"nodeType": "YulTypedName",
														"src": "9782:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9794:6:9",
														"nodeType": "YulTypedName",
														"src": "9794:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9802:6:9",
														"nodeType": "YulTypedName",
														"src": "9802:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9813:4:9",
														"nodeType": "YulTypedName",
														"src": "9813:4:9",
														"type": ""
													}
												],
												"src": "9692:332:9"
											},
											{
												"body": {
													"nativeSrc": "10072:48:9",
													"nodeType": "YulBlock",
													"src": "10072:48:9",
													"statements": [
														{
															"nativeSrc": "10082:32:9",
															"nodeType": "YulAssignment",
															"src": "10082:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10107:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "10107:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "10100:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "10100:6:9"
																		},
																		"nativeSrc": "10100:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10100:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10093:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10093:6:9"
																},
																"nativeSrc": "10093:21:9",
																"nodeType": "YulFunctionCall",
																"src": "10093:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10082:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "10082:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "10030:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10054:5:9",
														"nodeType": "YulTypedName",
														"src": "10054:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10064:7:9",
														"nodeType": "YulTypedName",
														"src": "10064:7:9",
														"type": ""
													}
												],
												"src": "10030:90:9"
											},
											{
												"body": {
													"nativeSrc": "10166:76:9",
													"nodeType": "YulBlock",
													"src": "10166:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "10220:16:9",
																"nodeType": "YulBlock",
																"src": "10220:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10229:1:9",
																					"nodeType": "YulLiteral",
																					"src": "10229:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10232:1:9",
																					"nodeType": "YulLiteral",
																					"src": "10232:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10222:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10222:6:9"
																			},
																			"nativeSrc": "10222:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10222:12:9"
																		},
																		"nativeSrc": "10222:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10222:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10189:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "10189:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10211:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "10211:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "10196:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "10196:14:9"
																				},
																				"nativeSrc": "10196:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10196:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10186:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "10186:2:9"
																		},
																		"nativeSrc": "10186:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10186:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10179:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10179:6:9"
																},
																"nativeSrc": "10179:40:9",
																"nodeType": "YulFunctionCall",
																"src": "10179:40:9"
															},
															"nativeSrc": "10176:60:9",
															"nodeType": "YulIf",
															"src": "10176:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "10126:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10159:5:9",
														"nodeType": "YulTypedName",
														"src": "10159:5:9",
														"type": ""
													}
												],
												"src": "10126:116:9"
											},
											{
												"body": {
													"nativeSrc": "10308:77:9",
													"nodeType": "YulBlock",
													"src": "10308:77:9",
													"statements": [
														{
															"nativeSrc": "10318:22:9",
															"nodeType": "YulAssignment",
															"src": "10318:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10333:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10333:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10327:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10327:5:9"
																},
																"nativeSrc": "10327:13:9",
																"nodeType": "YulFunctionCall",
																"src": "10327:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10318:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10318:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10373:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10373:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10349:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "10349:23:9"
																},
																"nativeSrc": "10349:30:9",
																"nodeType": "YulFunctionCall",
																"src": "10349:30:9"
															},
															"nativeSrc": "10349:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "10349:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "10248:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10286:6:9",
														"nodeType": "YulTypedName",
														"src": "10286:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10294:3:9",
														"nodeType": "YulTypedName",
														"src": "10294:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10302:5:9",
														"nodeType": "YulTypedName",
														"src": "10302:5:9",
														"type": ""
													}
												],
												"src": "10248:137:9"
											},
											{
												"body": {
													"nativeSrc": "10465:271:9",
													"nodeType": "YulBlock",
													"src": "10465:271:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "10511:83:9",
																"nodeType": "YulBlock",
																"src": "10511:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10513:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "10513:77:9"
																			},
																			"nativeSrc": "10513:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10513:79:9"
																		},
																		"nativeSrc": "10513:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10513:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10486:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10486:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10495:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10495:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10482:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10482:3:9"
																		},
																		"nativeSrc": "10482:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10482:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10507:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10507:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10478:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10478:3:9"
																},
																"nativeSrc": "10478:32:9",
																"nodeType": "YulFunctionCall",
																"src": "10478:32:9"
															},
															"nativeSrc": "10475:119:9",
															"nodeType": "YulIf",
															"src": "10475:119:9"
														},
														{
															"nativeSrc": "10604:125:9",
															"nodeType": "YulBlock",
															"src": "10604:125:9",
															"statements": [
																{
																	"nativeSrc": "10619:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10619:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10633:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10633:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10623:6:9",
																			"nodeType": "YulTypedName",
																			"src": "10623:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10648:71:9",
																	"nodeType": "YulAssignment",
																	"src": "10648:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10691:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "10691:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10702:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "10702:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10687:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "10687:3:9"
																				},
																				"nativeSrc": "10687:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10687:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10711:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10711:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "10658:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "10658:28:9"
																		},
																		"nativeSrc": "10658:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10658:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10648:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "10648:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10391:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10435:9:9",
														"nodeType": "YulTypedName",
														"src": "10435:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10446:7:9",
														"nodeType": "YulTypedName",
														"src": "10446:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10458:6:9",
														"nodeType": "YulTypedName",
														"src": "10458:6:9",
														"type": ""
													}
												],
												"src": "10391:345:9"
											},
											{
												"body": {
													"nativeSrc": "10770:152:9",
													"nodeType": "YulBlock",
													"src": "10770:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10787:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10787:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10790:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10790:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10780:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10780:6:9"
																},
																"nativeSrc": "10780:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10780:88:9"
															},
															"nativeSrc": "10780:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10780:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10884:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10884:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10887:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10887:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10877:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10877:6:9"
																},
																"nativeSrc": "10877:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10877:15:9"
															},
															"nativeSrc": "10877:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10877:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10908:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10908:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10911:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10911:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10901:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10901:6:9"
																},
																"nativeSrc": "10901:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10901:15:9"
															},
															"nativeSrc": "10901:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10901:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10742:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "10742:180:9"
											},
											{
												"body": {
													"nativeSrc": "10987:81:9",
													"nodeType": "YulBlock",
													"src": "10987:81:9",
													"statements": [
														{
															"nativeSrc": "10997:65:9",
															"nodeType": "YulAssignment",
															"src": "10997:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11054:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "11054:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nativeSrc": "11037:16:9",
																					"nodeType": "YulIdentifier",
																					"src": "11037:16:9"
																				},
																				"nativeSrc": "11037:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11037:23:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "11028:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "11028:8:9"
																		},
																		"nativeSrc": "11028:33:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11028:33:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11010:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11010:17:9"
																},
																"nativeSrc": "11010:52:9",
																"nodeType": "YulFunctionCall",
																"src": "11010:52:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10997:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "10997:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint32_to_t_uint256",
												"nativeSrc": "10928:140:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10967:5:9",
														"nodeType": "YulTypedName",
														"src": "10967:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10977:9:9",
														"nodeType": "YulTypedName",
														"src": "10977:9:9",
														"type": ""
													}
												],
												"src": "10928:140:9"
											},
											{
												"body": {
													"nativeSrc": "11138:65:9",
													"nodeType": "YulBlock",
													"src": "11138:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11155:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11155:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11190:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "11190:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_uint32_to_t_uint256",
																			"nativeSrc": "11160:29:9",
																			"nodeType": "YulIdentifier",
																			"src": "11160:29:9"
																		},
																		"nativeSrc": "11160:36:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11160:36:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11148:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11148:6:9"
																},
																"nativeSrc": "11148:49:9",
																"nodeType": "YulFunctionCall",
																"src": "11148:49:9"
															},
															"nativeSrc": "11148:49:9",
															"nodeType": "YulExpressionStatement",
															"src": "11148:49:9"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint256_fromStack",
												"nativeSrc": "11074:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11126:5:9",
														"nodeType": "YulTypedName",
														"src": "11126:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11133:3:9",
														"nodeType": "YulTypedName",
														"src": "11133:3:9",
														"type": ""
													}
												],
												"src": "11074:129:9"
											},
											{
												"body": {
													"nativeSrc": "11334:205:9",
													"nodeType": "YulBlock",
													"src": "11334:205:9",
													"statements": [
														{
															"nativeSrc": "11344:26:9",
															"nodeType": "YulAssignment",
															"src": "11344:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11356:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11356:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11367:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11367:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11352:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11352:3:9"
																},
																"nativeSrc": "11352:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11352:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11344:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11344:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11424:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11424:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11437:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11437:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11448:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11448:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11433:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11433:3:9"
																		},
																		"nativeSrc": "11433:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11433:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11380:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11380:43:9"
																},
																"nativeSrc": "11380:71:9",
																"nodeType": "YulFunctionCall",
																"src": "11380:71:9"
															},
															"nativeSrc": "11380:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "11380:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11504:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11504:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11517:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11517:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11528:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11528:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11513:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11513:3:9"
																		},
																		"nativeSrc": "11513:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11513:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint256_fromStack",
																	"nativeSrc": "11461:42:9",
																	"nodeType": "YulIdentifier",
																	"src": "11461:42:9"
																},
																"nativeSrc": "11461:71:9",
																"nodeType": "YulFunctionCall",
																"src": "11461:71:9"
															},
															"nativeSrc": "11461:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "11461:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint32__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11209:330:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11298:9:9",
														"nodeType": "YulTypedName",
														"src": "11298:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11310:6:9",
														"nodeType": "YulTypedName",
														"src": "11310:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11318:6:9",
														"nodeType": "YulTypedName",
														"src": "11318:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11329:4:9",
														"nodeType": "YulTypedName",
														"src": "11329:4:9",
														"type": ""
													}
												],
												"src": "11209:330:9"
											},
											{
												"body": {
													"nativeSrc": "11608:80:9",
													"nodeType": "YulBlock",
													"src": "11608:80:9",
													"statements": [
														{
															"nativeSrc": "11618:22:9",
															"nodeType": "YulAssignment",
															"src": "11618:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11633:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11633:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11627:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11627:5:9"
																},
																"nativeSrc": "11627:13:9",
																"nodeType": "YulFunctionCall",
																"src": "11627:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11618:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11618:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11676:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11676:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "11649:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "11649:26:9"
																},
																"nativeSrc": "11649:33:9",
																"nodeType": "YulFunctionCall",
																"src": "11649:33:9"
															},
															"nativeSrc": "11649:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "11649:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "11545:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11586:6:9",
														"nodeType": "YulTypedName",
														"src": "11586:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11594:3:9",
														"nodeType": "YulTypedName",
														"src": "11594:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11602:5:9",
														"nodeType": "YulTypedName",
														"src": "11602:5:9",
														"type": ""
													}
												],
												"src": "11545:143:9"
											},
											{
												"body": {
													"nativeSrc": "11771:274:9",
													"nodeType": "YulBlock",
													"src": "11771:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "11817:83:9",
																"nodeType": "YulBlock",
																"src": "11817:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11819:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "11819:77:9"
																			},
																			"nativeSrc": "11819:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11819:79:9"
																		},
																		"nativeSrc": "11819:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11819:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11792:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "11792:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11801:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11801:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11788:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11788:3:9"
																		},
																		"nativeSrc": "11788:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11788:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11813:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11813:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11784:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11784:3:9"
																},
																"nativeSrc": "11784:32:9",
																"nodeType": "YulFunctionCall",
																"src": "11784:32:9"
															},
															"nativeSrc": "11781:119:9",
															"nodeType": "YulIf",
															"src": "11781:119:9"
														},
														{
															"nativeSrc": "11910:128:9",
															"nodeType": "YulBlock",
															"src": "11910:128:9",
															"statements": [
																{
																	"nativeSrc": "11925:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11925:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11939:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11939:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11929:6:9",
																			"nodeType": "YulTypedName",
																			"src": "11929:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11954:74:9",
																	"nodeType": "YulAssignment",
																	"src": "11954:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12000:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "12000:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12011:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "12011:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11996:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "11996:3:9"
																				},
																				"nativeSrc": "11996:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11996:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12020:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "12020:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "11964:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "11964:31:9"
																		},
																		"nativeSrc": "11964:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11964:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11954:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "11954:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "11694:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11741:9:9",
														"nodeType": "YulTypedName",
														"src": "11741:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11752:7:9",
														"nodeType": "YulTypedName",
														"src": "11752:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11764:6:9",
														"nodeType": "YulTypedName",
														"src": "11764:6:9",
														"type": ""
													}
												],
												"src": "11694:351:9"
											},
											{
												"body": {
													"nativeSrc": "12125:40:9",
													"nodeType": "YulBlock",
													"src": "12125:40:9",
													"statements": [
														{
															"nativeSrc": "12136:22:9",
															"nodeType": "YulAssignment",
															"src": "12136:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12152:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12152:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12146:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12146:5:9"
																},
																"nativeSrc": "12146:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12146:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12136:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12136:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "12051:114:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12108:5:9",
														"nodeType": "YulTypedName",
														"src": "12108:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12118:6:9",
														"nodeType": "YulTypedName",
														"src": "12118:6:9",
														"type": ""
													}
												],
												"src": "12051:114:9"
											},
											{
												"body": {
													"nativeSrc": "12282:73:9",
													"nodeType": "YulBlock",
													"src": "12282:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12299:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12299:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12304:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12304:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12292:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12292:6:9"
																},
																"nativeSrc": "12292:19:9",
																"nodeType": "YulFunctionCall",
																"src": "12292:19:9"
															},
															"nativeSrc": "12292:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "12292:19:9"
														},
														{
															"nativeSrc": "12320:29:9",
															"nodeType": "YulAssignment",
															"src": "12320:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12339:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12339:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12344:4:9",
																		"nodeType": "YulLiteral",
																		"src": "12344:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12335:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12335:3:9"
																},
																"nativeSrc": "12335:14:9",
																"nodeType": "YulFunctionCall",
																"src": "12335:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12320:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "12320:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "12171:184:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12254:3:9",
														"nodeType": "YulTypedName",
														"src": "12254:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12259:6:9",
														"nodeType": "YulTypedName",
														"src": "12259:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12270:11:9",
														"nodeType": "YulTypedName",
														"src": "12270:11:9",
														"type": ""
													}
												],
												"src": "12171:184:9"
											},
											{
												"body": {
													"nativeSrc": "12433:60:9",
													"nodeType": "YulBlock",
													"src": "12433:60:9",
													"statements": [
														{
															"nativeSrc": "12443:11:9",
															"nodeType": "YulAssignment",
															"src": "12443:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "12451:3:9",
																"nodeType": "YulIdentifier",
																"src": "12451:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12443:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12443:4:9"
																}
															]
														},
														{
															"nativeSrc": "12464:22:9",
															"nodeType": "YulAssignment",
															"src": "12464:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "12476:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12476:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12481:4:9",
																		"nodeType": "YulLiteral",
																		"src": "12481:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12472:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12472:3:9"
																},
																"nativeSrc": "12472:14:9",
																"nodeType": "YulFunctionCall",
																"src": "12472:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12464:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12464:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "12361:132:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12420:3:9",
														"nodeType": "YulTypedName",
														"src": "12420:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "12428:4:9",
														"nodeType": "YulTypedName",
														"src": "12428:4:9",
														"type": ""
													}
												],
												"src": "12361:132:9"
											},
											{
												"body": {
													"nativeSrc": "12554:53:9",
													"nodeType": "YulBlock",
													"src": "12554:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12571:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12571:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12594:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12594:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12576:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "12576:17:9"
																		},
																		"nativeSrc": "12576:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12576:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12564:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12564:6:9"
																},
																"nativeSrc": "12564:37:9",
																"nodeType": "YulFunctionCall",
																"src": "12564:37:9"
															},
															"nativeSrc": "12564:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "12564:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "12499:108:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12542:5:9",
														"nodeType": "YulTypedName",
														"src": "12542:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12549:3:9",
														"nodeType": "YulTypedName",
														"src": "12549:3:9",
														"type": ""
													}
												],
												"src": "12499:108:9"
											},
											{
												"body": {
													"nativeSrc": "12693:99:9",
													"nodeType": "YulBlock",
													"src": "12693:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12737:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12737:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12745:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12745:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "12703:33:9",
																	"nodeType": "YulIdentifier",
																	"src": "12703:33:9"
																},
																"nativeSrc": "12703:46:9",
																"nodeType": "YulFunctionCall",
																"src": "12703:46:9"
															},
															"nativeSrc": "12703:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "12703:46:9"
														},
														{
															"nativeSrc": "12758:28:9",
															"nodeType": "YulAssignment",
															"src": "12758:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12776:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12776:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12781:4:9",
																		"nodeType": "YulLiteral",
																		"src": "12781:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12772:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12772:3:9"
																},
																"nativeSrc": "12772:14:9",
																"nodeType": "YulFunctionCall",
																"src": "12772:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "12758:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "12758:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "12613:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "12666:6:9",
														"nodeType": "YulTypedName",
														"src": "12666:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12674:3:9",
														"nodeType": "YulTypedName",
														"src": "12674:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "12682:10:9",
														"nodeType": "YulTypedName",
														"src": "12682:10:9",
														"type": ""
													}
												],
												"src": "12613:179:9"
											},
											{
												"body": {
													"nativeSrc": "12873:38:9",
													"nodeType": "YulBlock",
													"src": "12873:38:9",
													"statements": [
														{
															"nativeSrc": "12883:22:9",
															"nodeType": "YulAssignment",
															"src": "12883:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "12895:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12895:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12900:4:9",
																		"nodeType": "YulLiteral",
																		"src": "12900:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12891:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12891:3:9"
																},
																"nativeSrc": "12891:14:9",
																"nodeType": "YulFunctionCall",
																"src": "12891:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "12883:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12883:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "12798:113:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12860:3:9",
														"nodeType": "YulTypedName",
														"src": "12860:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "12868:4:9",
														"nodeType": "YulTypedName",
														"src": "12868:4:9",
														"type": ""
													}
												],
												"src": "12798:113:9"
											},
											{
												"body": {
													"nativeSrc": "13071:608:9",
													"nodeType": "YulBlock",
													"src": "13071:608:9",
													"statements": [
														{
															"nativeSrc": "13081:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "13081:68:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13143:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "13143:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "13095:47:9",
																	"nodeType": "YulIdentifier",
																	"src": "13095:47:9"
																},
																"nativeSrc": "13095:54:9",
																"nodeType": "YulFunctionCall",
																"src": "13095:54:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13085:6:9",
																	"nodeType": "YulTypedName",
																	"src": "13085:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13158:93:9",
															"nodeType": "YulAssignment",
															"src": "13158:93:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13239:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13239:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13244:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13244:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "13165:73:9",
																	"nodeType": "YulIdentifier",
																	"src": "13165:73:9"
																},
																"nativeSrc": "13165:86:9",
																"nodeType": "YulFunctionCall",
																"src": "13165:86:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13158:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13158:3:9"
																}
															]
														},
														{
															"nativeSrc": "13260:71:9",
															"nodeType": "YulVariableDeclaration",
															"src": "13260:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13325:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "13325:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "13275:49:9",
																	"nodeType": "YulIdentifier",
																	"src": "13275:49:9"
																},
																"nativeSrc": "13275:56:9",
																"nodeType": "YulFunctionCall",
																"src": "13275:56:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "13264:7:9",
																	"nodeType": "YulTypedName",
																	"src": "13264:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13340:21:9",
															"nodeType": "YulVariableDeclaration",
															"src": "13340:21:9",
															"value": {
																"name": "baseRef",
																"nativeSrc": "13354:7:9",
																"nodeType": "YulIdentifier",
																"src": "13354:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "13344:6:9",
																	"nodeType": "YulTypedName",
																	"src": "13344:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13430:224:9",
																"nodeType": "YulBlock",
																"src": "13430:224:9",
																"statements": [
																	{
																		"nativeSrc": "13444:34:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13444:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "13471:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "13471:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "13465:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "13465:5:9"
																			},
																			"nativeSrc": "13465:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13465:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "13448:13:9",
																				"nodeType": "YulTypedName",
																				"src": "13448:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "13491:70:9",
																		"nodeType": "YulAssignment",
																		"src": "13491:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "13542:13:9",
																					"nodeType": "YulIdentifier",
																					"src": "13542:13:9"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "13557:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "13557:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "13498:43:9",
																				"nodeType": "YulIdentifier",
																				"src": "13498:43:9"
																			},
																			"nativeSrc": "13498:63:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13498:63:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "13491:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "13491:3:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "13574:70:9",
																		"nodeType": "YulAssignment",
																		"src": "13574:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "13637:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "13637:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "13584:52:9",
																				"nodeType": "YulIdentifier",
																				"src": "13584:52:9"
																			},
																			"nativeSrc": "13584:60:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13584:60:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "13574:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13574:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "13392:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13392:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13395:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13395:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13389:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "13389:2:9"
																},
																"nativeSrc": "13389:13:9",
																"nodeType": "YulFunctionCall",
																"src": "13389:13:9"
															},
															"nativeSrc": "13370:284:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13403:18:9",
																"nodeType": "YulBlock",
																"src": "13403:18:9",
																"statements": [
																	{
																		"nativeSrc": "13405:14:9",
																		"nodeType": "YulAssignment",
																		"src": "13405:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "13414:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "13414:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13417:1:9",
																					"nodeType": "YulLiteral",
																					"src": "13417:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13410:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "13410:3:9"
																			},
																			"nativeSrc": "13410:9:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13410:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "13405:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "13405:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13374:14:9",
																"nodeType": "YulBlock",
																"src": "13374:14:9",
																"statements": [
																	{
																		"nativeSrc": "13376:10:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13376:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "13385:1:9",
																			"nodeType": "YulLiteral",
																			"src": "13385:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "13380:1:9",
																				"nodeType": "YulTypedName",
																				"src": "13380:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13370:284:9"
														},
														{
															"nativeSrc": "13663:10:9",
															"nodeType": "YulAssignment",
															"src": "13663:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "13670:3:9",
																"nodeType": "YulIdentifier",
																"src": "13670:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13663:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13663:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "12947:732:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13050:5:9",
														"nodeType": "YulTypedName",
														"src": "13050:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13057:3:9",
														"nodeType": "YulTypedName",
														"src": "13057:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13066:3:9",
														"nodeType": "YulTypedName",
														"src": "13066:3:9",
														"type": ""
													}
												],
												"src": "12947:732:9"
											},
											{
												"body": {
													"nativeSrc": "13939:490:9",
													"nodeType": "YulBlock",
													"src": "13939:490:9",
													"statements": [
														{
															"nativeSrc": "13949:26:9",
															"nodeType": "YulAssignment",
															"src": "13949:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13961:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13961:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13972:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13972:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13957:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13957:3:9"
																},
																"nativeSrc": "13957:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13957:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13949:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13949:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14029:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14029:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14042:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14042:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14053:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14053:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14038:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14038:3:9"
																		},
																		"nativeSrc": "14038:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14038:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13985:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13985:43:9"
																},
																"nativeSrc": "13985:71:9",
																"nodeType": "YulFunctionCall",
																"src": "13985:71:9"
															},
															"nativeSrc": "13985:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "13985:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14077:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14077:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14088:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14088:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14073:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14073:3:9"
																		},
																		"nativeSrc": "14073:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14073:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14097:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14097:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14103:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14103:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14093:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14093:3:9"
																		},
																		"nativeSrc": "14093:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14093:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14066:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14066:6:9"
																},
																"nativeSrc": "14066:48:9",
																"nodeType": "YulFunctionCall",
																"src": "14066:48:9"
															},
															"nativeSrc": "14066:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "14066:48:9"
														},
														{
															"nativeSrc": "14123:116:9",
															"nodeType": "YulAssignment",
															"src": "14123:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14225:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14225:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14234:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14234:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14131:93:9",
																	"nodeType": "YulIdentifier",
																	"src": "14131:93:9"
																},
																"nativeSrc": "14131:108:9",
																"nodeType": "YulFunctionCall",
																"src": "14131:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14123:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14123:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14260:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14260:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14271:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14271:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14256:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14256:3:9"
																		},
																		"nativeSrc": "14256:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14256:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14280:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14280:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14286:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14286:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14276:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14276:3:9"
																		},
																		"nativeSrc": "14276:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14276:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14249:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14249:6:9"
																},
																"nativeSrc": "14249:48:9",
																"nodeType": "YulFunctionCall",
																"src": "14249:48:9"
															},
															"nativeSrc": "14249:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "14249:48:9"
														},
														{
															"nativeSrc": "14306:116:9",
															"nodeType": "YulAssignment",
															"src": "14306:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14408:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14408:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14417:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14417:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14314:93:9",
																	"nodeType": "YulIdentifier",
																	"src": "14314:93:9"
																},
																"nativeSrc": "14314:108:9",
																"nodeType": "YulFunctionCall",
																"src": "14314:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14306:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14306:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "13685:744:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13895:9:9",
														"nodeType": "YulTypedName",
														"src": "13895:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13907:6:9",
														"nodeType": "YulTypedName",
														"src": "13907:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13915:6:9",
														"nodeType": "YulTypedName",
														"src": "13915:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13923:6:9",
														"nodeType": "YulTypedName",
														"src": "13923:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13934:4:9",
														"nodeType": "YulTypedName",
														"src": "13934:4:9",
														"type": ""
													}
												],
												"src": "13685:744:9"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IMyNFT_$1048_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IMyNFT_$1048_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IMyNFT_$1048_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IMyNFT_$1048__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IMyNFT_$1048_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ERC20_$799_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$799_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$799__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_uint32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint32_to_t_uint32(value0, pos) -> updatedPos {\n        abi_encode_t_uint32_to_t_uint32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint32[] -> uint32[]\n    function abi_encode_t_array$_t_uint32_$dyn_memory_ptr_to_t_array$_t_uint32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint32_to_t_uint32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint32_$dyn_memory_ptr__to_t_array$_t_uint32_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint32_$dyn_memory_ptr_to_t_array$_t_uint32_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    // uint32[]\n    function abi_decode_available_length_t_array$_t_uint32_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint32(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint32[]\n    function abi_decode_t_array$_t_uint32_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint32_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint32_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function convert_t_uint32_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint32(value)))\n    }\n\n    function abi_encode_t_uint32_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint32_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint32__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c8063715018a611610066578063715018a6146101375780638da5cb5b14610141578063ad26432e1461015f578063caa648b41461017b578063f2fde38b146101995761009e565b806309a31d50146100a35780631dd5605d146100c15780633013ce29146100f15780634cbe52741461010f5780634e71d92d1461012d575b600080fd5b6100ab6101b5565b6040516100b89190610b6f565b60405180910390f35b6100db60048036038101906100d69190610bd4565b6101db565b6040516100e89190610c20565b60405180910390f35b6100f9610215565b6040516101069190610c5c565b60405180910390f35b61011761023b565b6040516101249190610d35565b60405180910390f35b6101356102bf565b005b61013f61044d565b005b610149610461565b6040516101569190610d78565b60405180910390f35b61017960048036038101906101749190610f18565b61048a565b005b6101836104ac565b6040516101909190610f70565b60405180910390f35b6101b360048036038101906101ae9190610fb7565b6104bb565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106101eb57600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060038054806020026020016040519081016040528092919081815260200182805480156102b557602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116102785790505b5050505050905090565b60003390506102cd81610541565b610303576040517f7aa5b94c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061030d610655565b03610344576040517f6e6681f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61034d816106f8565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82610394610655565b6040518363ffffffff1660e01b81526004016103b1929190610fe4565b6020604051808303816000875af11580156103d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f49190611045565b508073ffffffffffffffffffffffffffffffffffffffff167f16f67fd92ffb20fb68612d68e9725fe41944a7be57a193cb98fa735dd6f5d948610435610655565b6040516104429190610f70565b60405180910390a250565b6104556108d0565b61045f6000610957565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104926108d0565b80600390805190602001906104a8929190610a23565b5050565b60006104b6610655565b905090565b6104c36108d0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105355760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161052c9190610d78565b60405180910390fd5b61053e81610957565b50565b600080600090505b60038054905081101561064a576000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e85600385815481106105aa576105a9611072565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff166040518363ffffffff1660e01b81526004016105ed9291906110d2565b602060405180830381865afa15801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190611110565b0361063d576000915050610650565b8080600101915050610549565b50600190505b919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106b29190610d78565b602060405180830381865afa1580156106cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f39190611110565b905090565b600060038054905067ffffffffffffffff81111561071957610718610da9565b5b6040519080825280602002602001820160405280156107475781602001602082028036833780820191505090505b509050600060038054905067ffffffffffffffff81111561076b5761076a610da9565b5b6040519080825280602002602001820160405280156107995781602001602082028036833780820191505090505b50905060005b60038054905081101561083957600381815481106107c0576107bf611072565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff168382815181106107ff576107fe611072565b5b60200260200101818152505060018282815181106108205761081f611072565b5b602002602001018181525050808060010191505061079f565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636b20c4548484846040518463ffffffff1660e01b8152600401610899939291906111fb565b600060405180830381600087803b1580156108b357600080fd5b505af11580156108c7573d6000803e3d6000fd5b50505050505050565b6108d8610a1b565b73ffffffffffffffffffffffffffffffffffffffff166108f6610461565b73ffffffffffffffffffffffffffffffffffffffff161461095557610919610a1b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161094c9190610d78565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b82805482825590600052602060002090600701600890048101928215610ac25791602002820160005b83821115610a9057835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302610a4c565b8015610ac05782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610a90565b505b509050610acf9190610ad3565b5090565b5b80821115610aec576000816000905550600101610ad4565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b35610b30610b2b84610af0565b610b10565b610af0565b9050919050565b6000610b4782610b1a565b9050919050565b6000610b5982610b3c565b9050919050565b610b6981610b4e565b82525050565b6000602082019050610b846000830184610b60565b92915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610bb181610b9e565b8114610bbc57600080fd5b50565b600081359050610bce81610ba8565b92915050565b600060208284031215610bea57610be9610b94565b5b6000610bf884828501610bbf565b91505092915050565b600063ffffffff82169050919050565b610c1a81610c01565b82525050565b6000602082019050610c356000830184610c11565b92915050565b6000610c4682610b3c565b9050919050565b610c5681610c3b565b82525050565b6000602082019050610c716000830184610c4d565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610cac81610c01565b82525050565b6000610cbe8383610ca3565b60208301905092915050565b6000602082019050919050565b6000610ce282610c77565b610cec8185610c82565b9350610cf783610c93565b8060005b83811015610d28578151610d0f8882610cb2565b9750610d1a83610cca565b925050600181019050610cfb565b5085935050505092915050565b60006020820190508181036000830152610d4f8184610cd7565b905092915050565b6000610d6282610af0565b9050919050565b610d7281610d57565b82525050565b6000602082019050610d8d6000830184610d69565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610de182610d98565b810181811067ffffffffffffffff82111715610e0057610dff610da9565b5b80604052505050565b6000610e13610b8a565b9050610e1f8282610dd8565b919050565b600067ffffffffffffffff821115610e3f57610e3e610da9565b5b602082029050602081019050919050565b600080fd5b610e5e81610c01565b8114610e6957600080fd5b50565b600081359050610e7b81610e55565b92915050565b6000610e94610e8f84610e24565b610e09565b90508083825260208201905060208402830185811115610eb757610eb6610e50565b5b835b81811015610ee05780610ecc8882610e6c565b845260208401935050602081019050610eb9565b5050509392505050565b600082601f830112610eff57610efe610d93565b5b8135610f0f848260208601610e81565b91505092915050565b600060208284031215610f2e57610f2d610b94565b5b600082013567ffffffffffffffff811115610f4c57610f4b610b99565b5b610f5884828501610eea565b91505092915050565b610f6a81610b9e565b82525050565b6000602082019050610f856000830184610f61565b92915050565b610f9481610d57565b8114610f9f57600080fd5b50565b600081359050610fb181610f8b565b92915050565b600060208284031215610fcd57610fcc610b94565b5b6000610fdb84828501610fa2565b91505092915050565b6000604082019050610ff96000830185610d69565b6110066020830184610f61565b9392505050565b60008115159050919050565b6110228161100d565b811461102d57600080fd5b50565b60008151905061103f81611019565b92915050565b60006020828403121561105b5761105a610b94565b5b600061106984828501611030565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006110bc6110b76110b284610c01565b610b10565b610b9e565b9050919050565b6110cc816110a1565b82525050565b60006040820190506110e76000830185610d69565b6110f460208301846110c3565b9392505050565b60008151905061110a81610ba8565b92915050565b60006020828403121561112657611125610b94565b5b6000611134848285016110fb565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61117281610b9e565b82525050565b60006111848383611169565b60208301905092915050565b6000602082019050919050565b60006111a88261113d565b6111b28185611148565b93506111bd83611159565b8060005b838110156111ee5781516111d58882611178565b97506111e083611190565b9250506001810190506111c1565b5085935050505092915050565b60006060820190506112106000830186610d69565b8181036020830152611222818561119d565b90508181036040830152611236818461119d565b905094935050505056fea264697066735822122093c8db5a370f729d359b51d08c76d18db6a2270258bcdb84bd7149149747604564736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xAD26432E EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xCAA648B4 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x199 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x9A31D50 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x1DD5605D EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x3013CE29 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x4CBE5274 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x12D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xB6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x135 PUSH2 0x2BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x149 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x278 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x2CD DUP2 PUSH2 0x541 JUMP JUMPDEST PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7AA5B94C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30D PUSH2 0x655 JUMP JUMPDEST SUB PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6E6681F600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x34D DUP2 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 PUSH2 0x394 PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B1 SWAP3 SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x1045 JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x16F67FD92FFB20FB68612D68E9725FE41944A7BE57A193CB98FA735DD6F5D948 PUSH2 0x435 PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x455 PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0x45F PUSH1 0x0 PUSH2 0x957 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x492 PUSH2 0x8D0 JUMP JUMPDEST DUP1 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x4A8 SWAP3 SWAP2 SWAP1 PUSH2 0xA23 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B6 PUSH2 0x655 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x535 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52C SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x53E DUP2 PUSH2 0x957 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E DUP6 PUSH1 0x3 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x5AA JUMPI PUSH2 0x5A9 PUSH2 0x1072 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5ED SWAP3 SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1110 JUMP JUMPDEST SUB PUSH2 0x63D JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x650 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x549 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x1110 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x719 JUMPI PUSH2 0x718 PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x747 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x76B JUMPI PUSH2 0x76A PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x799 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x839 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7C0 JUMPI PUSH2 0x7BF PUSH2 0x1072 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7FF JUMPI PUSH2 0x7FE PUSH2 0x1072 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x820 JUMPI PUSH2 0x81F PUSH2 0x1072 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x79F JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6B20C454 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x899 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8D8 PUSH2 0xA1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8F6 PUSH2 0x461 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x955 JUMPI PUSH2 0x919 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94C SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 ADD PUSH1 0x8 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xAC2 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0xA90 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0xA4C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAC0 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0xA90 JUMP JUMPDEST POP JUMPDEST POP SWAP1 POP PUSH2 0xACF SWAP2 SWAP1 PUSH2 0xAD3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xAEC JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xAD4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB35 PUSH2 0xB30 PUSH2 0xB2B DUP5 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB47 DUP3 PUSH2 0xB1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB59 DUP3 PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB69 DUP2 PUSH2 0xB4E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB84 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB1 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP2 EQ PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCE DUP2 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBEA JUMPI PUSH2 0xBE9 PUSH2 0xB94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF8 DUP5 DUP3 DUP6 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1A DUP2 PUSH2 0xC01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC35 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC46 DUP3 PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC56 DUP2 PUSH2 0xC3B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC71 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCAC DUP2 PUSH2 0xC01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP4 DUP4 PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE2 DUP3 PUSH2 0xC77 JUMP JUMPDEST PUSH2 0xCEC DUP2 DUP6 PUSH2 0xC82 JUMP JUMPDEST SWAP4 POP PUSH2 0xCF7 DUP4 PUSH2 0xC93 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD28 JUMPI DUP2 MLOAD PUSH2 0xD0F DUP9 DUP3 PUSH2 0xCB2 JUMP JUMPDEST SWAP8 POP PUSH2 0xD1A DUP4 PUSH2 0xCCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xCFB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD4F DUP2 DUP5 PUSH2 0xCD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD62 DUP3 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD72 DUP2 PUSH2 0xD57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD8D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xDE1 DUP3 PUSH2 0xD98 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xE00 JUMPI PUSH2 0xDFF PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE13 PUSH2 0xB8A JUMP JUMPDEST SWAP1 POP PUSH2 0xE1F DUP3 DUP3 PUSH2 0xDD8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE3F JUMPI PUSH2 0xE3E PUSH2 0xDA9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5E DUP2 PUSH2 0xC01 JUMP JUMPDEST DUP2 EQ PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE7B DUP2 PUSH2 0xE55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE94 PUSH2 0xE8F DUP5 PUSH2 0xE24 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xEB7 JUMPI PUSH2 0xEB6 PUSH2 0xE50 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEE0 JUMPI DUP1 PUSH2 0xECC DUP9 DUP3 PUSH2 0xE6C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEFF JUMPI PUSH2 0xEFE PUSH2 0xD93 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF0F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2E JUMPI PUSH2 0xF2D PUSH2 0xB94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF4C JUMPI PUSH2 0xF4B PUSH2 0xB99 JUMP JUMPDEST JUMPDEST PUSH2 0xF58 DUP5 DUP3 DUP6 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF6A DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF94 DUP2 PUSH2 0xD57 JUMP JUMPDEST DUP2 EQ PUSH2 0xF9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB1 DUP2 PUSH2 0xF8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFCD JUMPI PUSH2 0xFCC PUSH2 0xB94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFDB DUP5 DUP3 DUP6 ADD PUSH2 0xFA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFF9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x1006 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1022 DUP2 PUSH2 0x100D JUMP JUMPDEST DUP2 EQ PUSH2 0x102D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x103F DUP2 PUSH2 0x1019 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105B JUMPI PUSH2 0x105A PUSH2 0xB94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1069 DUP5 DUP3 DUP6 ADD PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10BC PUSH2 0x10B7 PUSH2 0x10B2 DUP5 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CC DUP2 PUSH2 0x10A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10E7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x10F4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10C3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x110A DUP2 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1126 JUMPI PUSH2 0x1125 PUSH2 0xB94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1134 DUP5 DUP3 DUP6 ADD PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1172 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1184 DUP4 DUP4 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A8 DUP3 PUSH2 0x113D JUMP JUMPDEST PUSH2 0x11B2 DUP2 DUP6 PUSH2 0x1148 JUMP JUMPDEST SWAP4 POP PUSH2 0x11BD DUP4 PUSH2 0x1159 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11EE JUMPI DUP2 MLOAD PUSH2 0x11D5 DUP9 DUP3 PUSH2 0x1178 JUMP JUMPDEST SWAP8 POP PUSH2 0x11E0 DUP4 PUSH2 0x1190 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x11C1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1210 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD69 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1222 DUP2 DUP6 PUSH2 0x119D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1236 DUP2 DUP5 PUSH2 0x119D JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xC8 0xDB GAS CALLDATACOPY 0xF PUSH19 0x9D359B51D08C76D18DB6A2270258BCDB84BD71 0x49 EQ SWAP8 SELFBALANCE PUSH1 0x45 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "343:2142:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;421:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;449:32;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;389:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1534:129;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;837:345;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1369:128:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1219:113;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;421:19:8;;;;;;;;;;;;;:::o;449:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;389:25::-;;;;;;;;;;;;;:::o;1534:129::-;1597:23;1639:16;1632:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1534:129;:::o;837:345::-;882:14;899:10;882:27;;924:28;945:6;924:20;:28::i;:::-;920:60;;961:19;;;;;;;;;;;;;;920:60;1014:1;994:16;:14;:16::i;:::-;:21;991:47;;1024:14;;;;;;;;;;;;;;991:47;1049:13;1055:6;1049:5;:13::i;:::-;1073:12;;;;;;;;;;;:21;;;1095:6;1103:16;:14;:16::i;:::-;1073:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1149:6;1136:38;;;1157:16;:14;:16::i;:::-;1136:38;;;;;;:::i;:::-;;;;;;;;871:311;837:345::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1369:128:8:-;1531:13:0;:11;:13::i;:::-;1481:8:8::1;1462:16;:27;;;;;;;;;;;;:::i;:::-;;1369:128:::0;:::o;1219:113::-;1276:13;1308:16;:14;:16::i;:::-;1301:23;;1219:113;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1671:287:8:-;1739:4;1759:6;1768:1;1759:10;;1755:174;1775:16;:23;;;;1771:1;:27;1755:174;;;1869:1;1822:5;;;;;;;;;;;:15;;;1838:5;1845:16;1862:1;1845:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1822:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;1819:99;;1897:5;1890:12;;;;;1819:99;1800:3;;;;;;;1755:174;;;;1946:4;1939:11;;1671:287;;;;:::o;2356:126::-;2405:13;2437:12;;;;;;;;;;;:22;;;2468:4;2437:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2430:44;;2356:126;:::o;1966:384::-;2015:20;2052:16;:23;;;;2038:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2015:61;;2087:24;2128:16;:23;;;;2114:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2087:65;;2167:6;2163:133;2183:16;:23;;;;2179:1;:27;2163:133;;;2236:16;2253:1;2236:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2227:28;;:3;2231:1;2227:6;;;;;;;;:::i;:::-;;;;;;;:28;;;;;2283:1;2270:7;2278:1;2270:10;;;;;;;;:::i;:::-;;;;;;;:14;;;;;2208:3;;;;;;;2163:133;;;;2306:5;;;;;;;;;;;:15;;;2322:5;2329:3;2334:7;2306:36;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2004:346;;1966:384;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:126:9:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:141::-;550:9;583:37;614:5;583:37;:::i;:::-;570:50;;485:141;;;:::o;632:161::-;734:52;780:5;734:52;:::i;:::-;729:3;722:65;632:161;;:::o;799:252::-;907:4;945:2;934:9;930:18;922:26;;958:86;1041:1;1030:9;1026:17;1017:6;958:86;:::i;:::-;799:252;;;;:::o;1057:75::-;1090:6;1123:2;1117:9;1107:19;;1057:75;:::o;1138:117::-;1247:1;1244;1237:12;1261:117;1370:1;1367;1360:12;1384:77;1421:7;1450:5;1439:16;;1384:77;;;:::o;1467:122::-;1540:24;1558:5;1540:24;:::i;:::-;1533:5;1530:35;1520:63;;1579:1;1576;1569:12;1520:63;1467:122;:::o;1595:139::-;1641:5;1679:6;1666:20;1657:29;;1695:33;1722:5;1695:33;:::i;:::-;1595:139;;;;:::o;1740:329::-;1799:6;1848:2;1836:9;1827:7;1823:23;1819:32;1816:119;;;1854:79;;:::i;:::-;1816:119;1974:1;1999:53;2044:7;2035:6;2024:9;2020:22;1999:53;:::i;:::-;1989:63;;1945:117;1740:329;;;;:::o;2075:93::-;2111:7;2151:10;2144:5;2140:22;2129:33;;2075:93;;;:::o;2174:115::-;2259:23;2276:5;2259:23;:::i;:::-;2254:3;2247:36;2174:115;;:::o;2295:218::-;2386:4;2424:2;2413:9;2409:18;2401:26;;2437:69;2503:1;2492:9;2488:17;2479:6;2437:69;:::i;:::-;2295:218;;;;:::o;2519:139::-;2582:9;2615:37;2646:5;2615:37;:::i;:::-;2602:50;;2519:139;;;:::o;2664:157::-;2764:50;2808:5;2764:50;:::i;:::-;2759:3;2752:63;2664:157;;:::o;2827:248::-;2933:4;2971:2;2960:9;2956:18;2948:26;;2984:84;3065:1;3054:9;3050:17;3041:6;2984:84;:::i;:::-;2827:248;;;;:::o;3081:113::-;3147:6;3181:5;3175:12;3165:22;;3081:113;;;:::o;3200:183::-;3298:11;3332:6;3327:3;3320:19;3372:4;3367:3;3363:14;3348:29;;3200:183;;;;:::o;3389:131::-;3455:4;3478:3;3470:11;;3508:4;3503:3;3499:14;3491:22;;3389:131;;;:::o;3526:105::-;3601:23;3618:5;3601:23;:::i;:::-;3596:3;3589:36;3526:105;;:::o;3637:175::-;3704:10;3725:44;3765:3;3757:6;3725:44;:::i;:::-;3801:4;3796:3;3792:14;3778:28;;3637:175;;;;:::o;3818:112::-;3887:4;3919;3914:3;3910:14;3902:22;;3818:112;;;:::o;3964:724::-;4081:3;4110:53;4157:5;4110:53;:::i;:::-;4179:85;4257:6;4252:3;4179:85;:::i;:::-;4172:92;;4288:55;4337:5;4288:55;:::i;:::-;4366:7;4397:1;4382:281;4407:6;4404:1;4401:13;4382:281;;;4483:6;4477:13;4510:61;4567:3;4552:13;4510:61;:::i;:::-;4503:68;;4594:59;4646:6;4594:59;:::i;:::-;4584:69;;4442:221;4429:1;4426;4422:9;4417:14;;4382:281;;;4386:14;4679:3;4672:10;;4086:602;;;3964:724;;;;:::o;4694:369::-;4835:4;4873:2;4862:9;4858:18;4850:26;;4922:9;4916:4;4912:20;4908:1;4897:9;4893:17;4886:47;4950:106;5051:4;5042:6;4950:106;:::i;:::-;4942:114;;4694:369;;;;:::o;5069:96::-;5106:7;5135:24;5153:5;5135:24;:::i;:::-;5124:35;;5069:96;;;:::o;5171:118::-;5258:24;5276:5;5258:24;:::i;:::-;5253:3;5246:37;5171:118;;:::o;5295:222::-;5388:4;5426:2;5415:9;5411:18;5403:26;;5439:71;5507:1;5496:9;5492:17;5483:6;5439:71;:::i;:::-;5295:222;;;;:::o;5523:117::-;5632:1;5629;5622:12;5646:102;5687:6;5738:2;5734:7;5729:2;5722:5;5718:14;5714:28;5704:38;;5646:102;;;:::o;5754:180::-;5802:77;5799:1;5792:88;5899:4;5896:1;5889:15;5923:4;5920:1;5913:15;5940:281;6023:27;6045:4;6023:27;:::i;:::-;6015:6;6011:40;6153:6;6141:10;6138:22;6117:18;6105:10;6102:34;6099:62;6096:88;;;6164:18;;:::i;:::-;6096:88;6204:10;6200:2;6193:22;5983:238;5940:281;;:::o;6227:129::-;6261:6;6288:20;;:::i;:::-;6278:30;;6317:33;6345:4;6337:6;6317:33;:::i;:::-;6227:129;;;:::o;6362:310::-;6438:4;6528:18;6520:6;6517:30;6514:56;;;6550:18;;:::i;:::-;6514:56;6600:4;6592:6;6588:17;6580:25;;6660:4;6654;6650:15;6642:23;;6362:310;;;:::o;6678:117::-;6787:1;6784;6777:12;6801:120;6873:23;6890:5;6873:23;:::i;:::-;6866:5;6863:34;6853:62;;6911:1;6908;6901:12;6853:62;6801:120;:::o;6927:137::-;6972:5;7010:6;6997:20;6988:29;;7026:32;7052:5;7026:32;:::i;:::-;6927:137;;;;:::o;7086:707::-;7181:5;7206:80;7222:63;7278:6;7222:63;:::i;:::-;7206:80;:::i;:::-;7197:89;;7306:5;7335:6;7328:5;7321:21;7369:4;7362:5;7358:16;7351:23;;7422:4;7414:6;7410:17;7402:6;7398:30;7451:3;7443:6;7440:15;7437:122;;;7470:79;;:::i;:::-;7437:122;7585:6;7568:219;7602:6;7597:3;7594:15;7568:219;;;7677:3;7706:36;7738:3;7726:10;7706:36;:::i;:::-;7701:3;7694:49;7772:4;7767:3;7763:14;7756:21;;7644:143;7628:4;7623:3;7619:14;7612:21;;7568:219;;;7572:21;7187:606;;7086:707;;;;;:::o;7815:368::-;7885:5;7934:3;7927:4;7919:6;7915:17;7911:27;7901:122;;7942:79;;:::i;:::-;7901:122;8059:6;8046:20;8084:93;8173:3;8165:6;8158:4;8150:6;8146:17;8084:93;:::i;:::-;8075:102;;7891:292;7815:368;;;;:::o;8189:537::-;8272:6;8321:2;8309:9;8300:7;8296:23;8292:32;8289:119;;;8327:79;;:::i;:::-;8289:119;8475:1;8464:9;8460:17;8447:31;8505:18;8497:6;8494:30;8491:117;;;8527:79;;:::i;:::-;8491:117;8632:77;8701:7;8692:6;8681:9;8677:22;8632:77;:::i;:::-;8622:87;;8418:301;8189:537;;;;:::o;8732:118::-;8819:24;8837:5;8819:24;:::i;:::-;8814:3;8807:37;8732:118;;:::o;8856:222::-;8949:4;8987:2;8976:9;8972:18;8964:26;;9000:71;9068:1;9057:9;9053:17;9044:6;9000:71;:::i;:::-;8856:222;;;;:::o;9084:122::-;9157:24;9175:5;9157:24;:::i;:::-;9150:5;9147:35;9137:63;;9196:1;9193;9186:12;9137:63;9084:122;:::o;9212:139::-;9258:5;9296:6;9283:20;9274:29;;9312:33;9339:5;9312:33;:::i;:::-;9212:139;;;;:::o;9357:329::-;9416:6;9465:2;9453:9;9444:7;9440:23;9436:32;9433:119;;;9471:79;;:::i;:::-;9433:119;9591:1;9616:53;9661:7;9652:6;9641:9;9637:22;9616:53;:::i;:::-;9606:63;;9562:117;9357:329;;;;:::o;9692:332::-;9813:4;9851:2;9840:9;9836:18;9828:26;;9864:71;9932:1;9921:9;9917:17;9908:6;9864:71;:::i;:::-;9945:72;10013:2;10002:9;9998:18;9989:6;9945:72;:::i;:::-;9692:332;;;;;:::o;10030:90::-;10064:7;10107:5;10100:13;10093:21;10082:32;;10030:90;;;:::o;10126:116::-;10196:21;10211:5;10196:21;:::i;:::-;10189:5;10186:32;10176:60;;10232:1;10229;10222:12;10176:60;10126:116;:::o;10248:137::-;10302:5;10333:6;10327:13;10318:22;;10349:30;10373:5;10349:30;:::i;:::-;10248:137;;;;:::o;10391:345::-;10458:6;10507:2;10495:9;10486:7;10482:23;10478:32;10475:119;;;10513:79;;:::i;:::-;10475:119;10633:1;10658:61;10711:7;10702:6;10691:9;10687:22;10658:61;:::i;:::-;10648:71;;10604:125;10391:345;;;;:::o;10742:180::-;10790:77;10787:1;10780:88;10887:4;10884:1;10877:15;10911:4;10908:1;10901:15;10928:140;10977:9;11010:52;11028:33;11037:23;11054:5;11037:23;:::i;:::-;11028:33;:::i;:::-;11010:52;:::i;:::-;10997:65;;10928:140;;;:::o;11074:129::-;11160:36;11190:5;11160:36;:::i;:::-;11155:3;11148:49;11074:129;;:::o;11209:330::-;11329:4;11367:2;11356:9;11352:18;11344:26;;11380:71;11448:1;11437:9;11433:17;11424:6;11380:71;:::i;:::-;11461;11528:2;11517:9;11513:18;11504:6;11461:71;:::i;:::-;11209:330;;;;;:::o;11545:143::-;11602:5;11633:6;11627:13;11618:22;;11649:33;11676:5;11649:33;:::i;:::-;11545:143;;;;:::o;11694:351::-;11764:6;11813:2;11801:9;11792:7;11788:23;11784:32;11781:119;;;11819:79;;:::i;:::-;11781:119;11939:1;11964:64;12020:7;12011:6;12000:9;11996:22;11964:64;:::i;:::-;11954:74;;11910:128;11694:351;;;;:::o;12051:114::-;12118:6;12152:5;12146:12;12136:22;;12051:114;;;:::o;12171:184::-;12270:11;12304:6;12299:3;12292:19;12344:4;12339:3;12335:14;12320:29;;12171:184;;;;:::o;12361:132::-;12428:4;12451:3;12443:11;;12481:4;12476:3;12472:14;12464:22;;12361:132;;;:::o;12499:108::-;12576:24;12594:5;12576:24;:::i;:::-;12571:3;12564:37;12499:108;;:::o;12613:179::-;12682:10;12703:46;12745:3;12737:6;12703:46;:::i;:::-;12781:4;12776:3;12772:14;12758:28;;12613:179;;;;:::o;12798:113::-;12868:4;12900;12895:3;12891:14;12883:22;;12798:113;;;:::o;12947:732::-;13066:3;13095:54;13143:5;13095:54;:::i;:::-;13165:86;13244:6;13239:3;13165:86;:::i;:::-;13158:93;;13275:56;13325:5;13275:56;:::i;:::-;13354:7;13385:1;13370:284;13395:6;13392:1;13389:13;13370:284;;;13471:6;13465:13;13498:63;13557:3;13542:13;13498:63;:::i;:::-;13491:70;;13584:60;13637:6;13584:60;:::i;:::-;13574:70;;13430:224;13417:1;13414;13410:9;13405:14;;13370:284;;;13374:14;13670:3;13663:10;;13071:608;;;12947:732;;;;:::o;13685:744::-;13934:4;13972:2;13961:9;13957:18;13949:26;;13985:71;14053:1;14042:9;14038:17;14029:6;13985:71;:::i;:::-;14103:9;14097:4;14093:20;14088:2;14077:9;14073:18;14066:48;14131:108;14234:4;14225:6;14131:108;:::i;:::-;14123:116;;14286:9;14280:4;14276:20;14271:2;14260:9;14256:18;14249:48;14314:108;14417:4;14408:6;14314:108;:::i;:::-;14306:116;;13685:744;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "945200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claim()": "infinite",
								"collectedCardsID(uint256)": "6572",
								"getCollectedCardsID()": "infinite",
								"getTotalValue()": "infinite",
								"myNFT()": "infinite",
								"owner()": "2544",
								"paymentToken()": "infinite",
								"renounceOwnership()": "infinite",
								"setCollectedCardsID(uint32[])": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_burn(address)": "infinite",
								"_checkCollectedCards(address)": "infinite",
								"_getTotalValue()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 490,
									"end": 798,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 798,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 490,
									"end": 798,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 490,
									"end": 798,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 490,
									"end": 798,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 490,
									"end": 798,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 490,
									"end": 798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 490,
									"end": 798,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 650,
									"end": 663,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 696,
									"end": 709,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 675,
									"end": 687,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 675,
									"end": 687,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 675,
									"end": 710,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 736,
									"end": 742,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 721,
									"end": 726,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 721,
									"end": 726,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 773,
									"end": 790,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 754,
									"end": 770,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 754,
									"end": 790,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 754,
									"end": 790,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 754,
									"end": 790,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 754,
									"end": 790,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 754,
									"end": 790,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 754,
									"end": 790,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 754,
									"end": 790,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 754,
									"end": 790,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 754,
									"end": 790,
									"modifierDepth": 1,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 754,
									"end": 790,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 754,
									"end": 790,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 754,
									"end": 790,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 754,
									"end": 790,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 754,
									"end": 790,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 754,
									"end": 790,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 754,
									"end": 790,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 490,
									"end": 798,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFF"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFF"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFF"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 343,
									"end": 2485,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1009,
									"end": 1015,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1060,
									"end": 1062,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1056,
									"end": 1063,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1051,
									"end": 1053,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1049,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1040,
									"end": 1054,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1064,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1026,
									"end": 1064,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1026,
									"end": 1064,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 968,
									"end": 1070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1076,
									"end": 1256,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1076,
									"end": 1256,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1124,
									"end": 1201,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1121,
									"end": 1122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1114,
									"end": 1202,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1221,
									"end": 1225,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1218,
									"end": 1219,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1211,
									"end": 1226,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1249,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1242,
									"end": 1243,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 1250,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1367,
									"end": 1371,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1345,
									"end": 1372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1343,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1333,
									"end": 1373,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1475,
									"end": 1481,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1463,
									"end": 1473,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1460,
									"end": 1482,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1457,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1427,
									"end": 1437,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1458,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1421,
									"end": 1483,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1486,
									"end": 1504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1526,
									"end": 1536,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1522,
									"end": 1524,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1515,
									"end": 1537,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1543,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1262,
									"end": 1543,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1583,
									"end": 1589,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1610,
									"end": 1630,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1600,
									"end": 1630,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1600,
									"end": 1630,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1667,
									"end": 1671,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1659,
									"end": 1665,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1639,
									"end": 1672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1549,
									"end": 1678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1684,
									"end": 1994,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1684,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1760,
									"end": 1764,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1850,
									"end": 1868,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1842,
									"end": 1848,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1839,
									"end": 1869,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1836,
									"end": 1892,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1836,
									"end": 1892,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 1836,
									"end": 1892,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1872,
									"end": 1890,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 1872,
									"end": 1890,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1872,
									"end": 1890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1872,
									"end": 1890,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 1872,
									"end": 1890,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1836,
									"end": 1892,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 1836,
									"end": 1892,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1922,
									"end": 1926,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1914,
									"end": 1920,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1910,
									"end": 1927,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1902,
									"end": 1927,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1902,
									"end": 1927,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1982,
									"end": 1986,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 1980,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1972,
									"end": 1987,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 1987,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 1987,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1684,
									"end": 1994,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1684,
									"end": 1994,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1684,
									"end": 1994,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1684,
									"end": 1994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2000,
									"end": 2117,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 2000,
									"end": 2117,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2109,
									"end": 2110,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2106,
									"end": 2107,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2099,
									"end": 2111,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2123,
									"end": 2216,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 2123,
									"end": 2216,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2159,
									"end": 2166,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2199,
									"end": 2209,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2192,
									"end": 2197,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2188,
									"end": 2210,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2177,
									"end": 2210,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2177,
									"end": 2210,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2123,
									"end": 2216,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2123,
									"end": 2216,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2123,
									"end": 2216,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2123,
									"end": 2216,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2222,
									"end": 2342,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2222,
									"end": 2342,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2294,
									"end": 2317,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2311,
									"end": 2316,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2294,
									"end": 2317,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 2294,
									"end": 2317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2294,
									"end": 2317,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2294,
									"end": 2317,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2287,
									"end": 2292,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2284,
									"end": 2318,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2274,
									"end": 2336,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2274,
									"end": 2336,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2329,
									"end": 2330,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2322,
									"end": 2334,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2274,
									"end": 2336,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2274,
									"end": 2336,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2222,
									"end": 2342,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2222,
									"end": 2342,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2348,
									"end": 2489,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 2348,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2404,
									"end": 2409,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2435,
									"end": 2441,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2442,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2420,
									"end": 2442,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2420,
									"end": 2442,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2451,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2477,
									"end": 2482,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2451,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2451,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2451,
									"end": 2483,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2451,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2348,
									"end": 2489,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2348,
									"end": 2489,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2348,
									"end": 2489,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2348,
									"end": 2489,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2348,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2511,
									"end": 3240,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 2511,
									"end": 3240,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2617,
									"end": 2622,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2642,
									"end": 2722,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2658,
									"end": 2721,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 2714,
									"end": 2720,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2658,
									"end": 2721,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 2658,
									"end": 2721,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2658,
									"end": 2721,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 2658,
									"end": 2721,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2722,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 2642,
									"end": 2722,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2722,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2642,
									"end": 2722,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2633,
									"end": 2722,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2633,
									"end": 2722,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2742,
									"end": 2747,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2771,
									"end": 2777,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2764,
									"end": 2769,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2757,
									"end": 2778,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2805,
									"end": 2809,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2798,
									"end": 2803,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2794,
									"end": 2810,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2787,
									"end": 2810,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2787,
									"end": 2810,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2858,
									"end": 2862,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2850,
									"end": 2856,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2846,
									"end": 2863,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2838,
									"end": 2844,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2834,
									"end": 2864,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2887,
									"end": 2890,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2879,
									"end": 2885,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2876,
									"end": 2891,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2873,
									"end": 2995,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2873,
									"end": 2995,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2873,
									"end": 2995,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2906,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 2906,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 2906,
									"end": 2985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2906,
									"end": 2985,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 2906,
									"end": 2985,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2873,
									"end": 2995,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2873,
									"end": 2995,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3021,
									"end": 3027,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3004,
									"end": 3234,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3004,
									"end": 3234,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3038,
									"end": 3044,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3033,
									"end": 3036,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3030,
									"end": 3045,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3004,
									"end": 3234,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3004,
									"end": 3234,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 3004,
									"end": 3234,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3113,
									"end": 3116,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3142,
									"end": 3189,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 3185,
									"end": 3188,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 3173,
									"end": 3183,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3142,
									"end": 3189,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 3142,
									"end": 3189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3142,
									"end": 3189,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 3142,
									"end": 3189,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3140,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3130,
									"end": 3190,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3219,
									"end": 3223,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3214,
									"end": 3217,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3210,
									"end": 3224,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3203,
									"end": 3224,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3203,
									"end": 3224,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3080,
									"end": 3234,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3064,
									"end": 3068,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3059,
									"end": 3062,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3055,
									"end": 3069,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3048,
									"end": 3069,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3048,
									"end": 3069,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3004,
									"end": 3234,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3004,
									"end": 3234,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3004,
									"end": 3234,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 3004,
									"end": 3234,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3008,
									"end": 3029,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2623,
									"end": 3240,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2623,
									"end": 3240,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2511,
									"end": 3240,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2511,
									"end": 3240,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2511,
									"end": 3240,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2511,
									"end": 3240,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2511,
									"end": 3240,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2511,
									"end": 3240,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3262,
									"end": 3645,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 3262,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3343,
									"end": 3348,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3392,
									"end": 3395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3385,
									"end": 3389,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3377,
									"end": 3383,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3373,
									"end": 3390,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3369,
									"end": 3396,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 3359,
									"end": 3481,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 3400,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 3400,
									"end": 3479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3479,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 3400,
									"end": 3479,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3481,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 3359,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3510,
									"end": 3516,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3504,
									"end": 3517,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3535,
									"end": 3639,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 3635,
									"end": 3638,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3627,
									"end": 3633,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3620,
									"end": 3624,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3612,
									"end": 3618,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3608,
									"end": 3625,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3535,
									"end": 3639,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 3535,
									"end": 3639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3535,
									"end": 3639,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 3535,
									"end": 3639,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3526,
									"end": 3639,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3526,
									"end": 3639,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3349,
									"end": 3645,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3262,
									"end": 3645,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3262,
									"end": 3645,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3262,
									"end": 3645,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3262,
									"end": 3645,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3262,
									"end": 3645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 4672,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3651,
									"end": 4672,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3772,
									"end": 3778,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3780,
									"end": 3786,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3788,
									"end": 3794,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3796,
									"end": 3802,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3845,
									"end": 3848,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3833,
									"end": 3842,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3824,
									"end": 3831,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3820,
									"end": 3843,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3816,
									"end": 3849,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 3813,
									"end": 3933,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3813,
									"end": 3933,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 3813,
									"end": 3933,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3852,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 3852,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 3852,
									"end": 3931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3852,
									"end": 3931,
									"name": "tag",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 3852,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3813,
									"end": 3933,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 3813,
									"end": 3933,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3972,
									"end": 3973,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3997,
									"end": 4061,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 4053,
									"end": 4060,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4033,
									"end": 4042,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4029,
									"end": 4051,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3997,
									"end": 4061,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 3997,
									"end": 4061,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3997,
									"end": 4061,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 3997,
									"end": 4061,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3987,
									"end": 4061,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3987,
									"end": 4061,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4071,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4110,
									"end": 4112,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4136,
									"end": 4200,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 4192,
									"end": 4199,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4183,
									"end": 4189,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4172,
									"end": 4181,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4168,
									"end": 4190,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4136,
									"end": 4200,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 4136,
									"end": 4200,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4136,
									"end": 4200,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 4136,
									"end": 4200,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4200,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4200,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4081,
									"end": 4210,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4249,
									"end": 4251,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4275,
									"end": 4339,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 4331,
									"end": 4338,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4322,
									"end": 4328,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4311,
									"end": 4320,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4307,
									"end": 4329,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4275,
									"end": 4339,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 4275,
									"end": 4339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4275,
									"end": 4339,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 4275,
									"end": 4339,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4265,
									"end": 4339,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4265,
									"end": 4339,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4220,
									"end": 4349,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4409,
									"end": 4411,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 4398,
									"end": 4407,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4394,
									"end": 4412,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4388,
									"end": 4413,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4440,
									"end": 4458,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4432,
									"end": 4438,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4429,
									"end": 4459,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4426,
									"end": 4543,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4426,
									"end": 4543,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 4426,
									"end": 4543,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4462,
									"end": 4541,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 4462,
									"end": 4541,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 4462,
									"end": 4541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4462,
									"end": 4541,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 4462,
									"end": 4541,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4426,
									"end": 4543,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 4426,
									"end": 4543,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4567,
									"end": 4655,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 4647,
									"end": 4654,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4638,
									"end": 4644,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4627,
									"end": 4636,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4623,
									"end": 4645,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4567,
									"end": 4655,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 4567,
									"end": 4655,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4567,
									"end": 4655,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 4567,
									"end": 4655,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4557,
									"end": 4655,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4557,
									"end": 4655,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4359,
									"end": 4665,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 4672,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 4672,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 4672,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 4672,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 4672,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 4672,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 4672,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 4672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4678,
									"end": 4796,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4678,
									"end": 4796,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4765,
									"end": 4789,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 4783,
									"end": 4788,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4765,
									"end": 4789,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 4765,
									"end": 4789,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4765,
									"end": 4789,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 4765,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4760,
									"end": 4763,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4753,
									"end": 4790,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4678,
									"end": 4796,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4678,
									"end": 4796,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4678,
									"end": 4796,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4802,
									"end": 5024,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 4802,
									"end": 5024,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4895,
									"end": 4899,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4933,
									"end": 4935,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4922,
									"end": 4931,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4918,
									"end": 4936,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4910,
									"end": 4936,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4910,
									"end": 4936,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4946,
									"end": 5017,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 5014,
									"end": 5015,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4999,
									"end": 5016,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4990,
									"end": 4996,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4946,
									"end": 5017,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4946,
									"end": 5017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4946,
									"end": 5017,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 4946,
									"end": 5017,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4802,
									"end": 5024,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4802,
									"end": 5024,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4802,
									"end": 5024,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4802,
									"end": 5024,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4802,
									"end": 5024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 2485,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093c8db5a370f729d359b51d08c76d18db6a2270258bcdb84bd7149149747604564736f6c63430008170033",
									".code": [
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "AD26432E"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "CAA648B4"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "9A31D50"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "1DD5605D"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "3013CE29"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "4CBE5274"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "4E71D92D"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 343,
											"end": 2485,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 421,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 421,
											"end": 440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 421,
											"end": 440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 440,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 421,
											"end": 440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 421,
											"end": 440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 421,
											"end": 440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 440,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 449,
											"end": 481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 449,
											"end": 481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 449,
											"end": 481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 389,
											"end": 414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 389,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 389,
											"end": 414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 389,
											"end": 414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 414,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 389,
											"end": 414,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 389,
											"end": 414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 389,
											"end": 414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 414,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1534,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1534,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 837,
											"end": 1182,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 837,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 837,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 837,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 837,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 837,
											"end": 1182,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 837,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 837,
											"end": 1182,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1369,
											"end": 1497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1369,
											"end": 1497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1219,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1219,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 440,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 421,
											"end": 440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 440,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 421,
											"end": 440,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 421,
											"end": 440,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 421,
											"end": 440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 449,
											"end": 481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 389,
											"end": 414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 389,
											"end": 414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 389,
											"end": 414,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 389,
											"end": 414,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 389,
											"end": 414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1620,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1639,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 837,
											"end": 1182,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 837,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 882,
											"end": 896,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 909,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 882,
											"end": 909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 882,
											"end": 909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 945,
											"end": 951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 924,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 924,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 952,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 924,
											"end": 952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 920,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 920,
											"end": 980,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 961,
											"end": 980,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 961,
											"end": 980,
											"name": "PUSH",
											"source": 8,
											"value": "7AA5B94C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 961,
											"end": 980,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 961,
											"end": 980,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 961,
											"end": 980,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 961,
											"end": 980,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 980,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 961,
											"end": 980,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 961,
											"end": 980,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 980,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 920,
											"end": 980,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 920,
											"end": 980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1015,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 994,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 994,
											"end": 1010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 994,
											"end": 1010,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 994,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 994,
											"end": 1015,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 991,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 991,
											"end": 1038,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1024,
											"end": 1038,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1038,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1024,
											"end": 1038,
											"name": "PUSH",
											"source": 8,
											"value": "6E6681F600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1024,
											"end": 1038,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1024,
											"end": 1038,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1024,
											"end": 1038,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1024,
											"end": 1038,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1024,
											"end": 1038,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1038,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1024,
											"end": 1038,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1024,
											"end": 1038,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1024,
											"end": 1038,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1024,
											"end": 1038,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1024,
											"end": 1038,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 991,
											"end": 1038,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 991,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1055,
											"end": 1061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1049,
											"end": 1062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1062,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1049,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1085,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1073,
											"end": 1085,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1085,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1085,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1073,
											"end": 1085,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1085,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1085,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1073,
											"end": 1085,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1094,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1073,
											"end": 1094,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1094,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1103,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1103,
											"end": 1119,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1103,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1073,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1073,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1155,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "PUSH",
											"source": 8,
											"value": "16F67FD92FFB20FB68612D68E9725FE41944A7BE57A193CB98FA735DD6F5D948"
										},
										{
											"begin": 1157,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1157,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1157,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1173,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1157,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1136,
											"end": 1174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1174,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 871,
											"end": 1182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 837,
											"end": 1182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1489,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1462,
											"end": 1489,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1489,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1489,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1489,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1489,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1489,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1489,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1462,
											"end": 1489,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1489,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1489,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1489,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1462,
											"end": 1489,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1489,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1462,
											"end": 1489,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1489,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1308,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1308,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1324,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1308,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1324,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1958,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1671,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1743,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1768,
											"end": 1769,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1929,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1755,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1775,
											"end": 1791,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1775,
											"end": 1798,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1775,
											"end": 1798,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1775,
											"end": 1798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1775,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 1772,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 1798,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1929,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1755,
											"end": 1929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1870,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1837,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1822,
											"end": 1837,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1837,
											"name": "PUSH",
											"source": 8,
											"value": "FDD58E"
										},
										{
											"begin": 1838,
											"end": 1843,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1845,
											"end": 1864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1864,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1822,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1822,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1822,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1870,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1819,
											"end": 1918,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1897,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1902,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1890,
											"end": 1902,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 1918,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1819,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 1803,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 1803,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1800,
											"end": 1803,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 1803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 1803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 1803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1755,
											"end": 1929,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1929,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1755,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1929,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 1950,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1939,
											"end": 1950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1958,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1671,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1958,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2482,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2356,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2405,
											"end": 2418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2459,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2437,
											"end": 2459,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2459,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 2468,
											"end": 2472,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2437,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2437,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2474,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2482,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1966,
											"end": 2350,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1966,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2035,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2068,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2038,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2111,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2144,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2128,
											"end": 2151,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2128,
											"end": 2151,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2128,
											"end": 2151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2128,
											"end": 2151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2114,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2296,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2163,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2199,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2183,
											"end": 2206,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2206,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2206,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2206,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2163,
											"end": 2296,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2163,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2163,
											"end": 2296,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2252,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2253,
											"end": 2254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2236,
											"end": 2255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2236,
											"end": 2255,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2255,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2255,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2230,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2231,
											"end": 2232,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2227,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2283,
											"end": 2284,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2270,
											"end": 2277,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2279,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2270,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2284,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2284,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2284,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2211,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2211,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2211,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2208,
											"end": 2211,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2211,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2163,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2163,
											"end": 2296,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2163,
											"end": 2296,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2163,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2163,
											"end": 2296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2321,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2306,
											"end": 2321,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2321,
											"name": "PUSH",
											"source": 8,
											"value": "6B20C454"
										},
										{
											"begin": 2322,
											"end": 2327,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2332,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2306,
											"end": 2342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2306,
											"end": 2342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2004,
											"end": 2350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2004,
											"end": 2350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1966,
											"end": 2350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1966,
											"end": 2350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "86"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "147"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "148"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "149"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "148"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "149"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "150"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "149"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "150"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "147"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "153"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "154"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "153"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "154"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 485,
											"end": 626,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 485,
											"end": 626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 550,
											"end": 559,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 614,
											"end": 619,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 583,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 583,
											"end": 620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 583,
											"end": 620,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 583,
											"end": 620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 570,
											"end": 620,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 570,
											"end": 620,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 485,
											"end": 626,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 485,
											"end": 626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 485,
											"end": 626,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 485,
											"end": 626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 632,
											"end": 793,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 632,
											"end": 793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 734,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 780,
											"end": 785,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 734,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 734,
											"end": 786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 734,
											"end": 786,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 734,
											"end": 786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 729,
											"end": 732,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 722,
											"end": 787,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 632,
											"end": 793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 632,
											"end": 793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 632,
											"end": 793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 907,
											"end": 911,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 922,
											"end": 948,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 922,
											"end": 948,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 958,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 1041,
											"end": 1042,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1039,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1043,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 958,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 958,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 958,
											"end": 1044,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 958,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 799,
											"end": 1051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 1132,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1057,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1096,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1125,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1126,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1107,
											"end": 1126,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1107,
											"end": 1126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 1132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 1132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1255,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1138,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1248,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1261,
											"end": 1378,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1261,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1360,
											"end": 1372,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1461,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1384,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1421,
											"end": 1428,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1439,
											"end": 1455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1439,
											"end": 1455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1461,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1589,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1467,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1540,
											"end": 1564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1564,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1540,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1533,
											"end": 1538,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1565,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1520,
											"end": 1583,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1580,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1581,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1583,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1520,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1734,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1595,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 1646,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 1686,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1695,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1695,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1695,
											"end": 1728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1695,
											"end": 1728,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1695,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1734,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1734,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1740,
											"end": 2069,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1740,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1850,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1827,
											"end": 1834,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1823,
											"end": 1846,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1935,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1816,
											"end": 1935,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1854,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1854,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1933,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1854,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1935,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1816,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2044,
											"end": 2051,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2033,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2020,
											"end": 2042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1999,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 1999,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2062,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1740,
											"end": 2069,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1740,
											"end": 2069,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1740,
											"end": 2069,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1740,
											"end": 2069,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1740,
											"end": 2069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2168,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2075,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2111,
											"end": 2118,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2161,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2144,
											"end": 2149,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2129,
											"end": 2162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2129,
											"end": 2162,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2168,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2168,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2168,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2174,
											"end": 2289,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2174,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2276,
											"end": 2281,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2259,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2282,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2259,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2254,
											"end": 2257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2247,
											"end": 2283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2174,
											"end": 2289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2174,
											"end": 2289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2174,
											"end": 2289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2295,
											"end": 2513,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2295,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2386,
											"end": 2390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2413,
											"end": 2422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2437,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 2503,
											"end": 2504,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2501,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2505,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2479,
											"end": 2485,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2437,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2437,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2437,
											"end": 2506,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 2437,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2295,
											"end": 2513,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2295,
											"end": 2513,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2295,
											"end": 2513,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2295,
											"end": 2513,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2295,
											"end": 2513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2519,
											"end": 2658,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 2519,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2582,
											"end": 2591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2646,
											"end": 2651,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2615,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2615,
											"end": 2652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2615,
											"end": 2652,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2615,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2519,
											"end": 2658,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2519,
											"end": 2658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2519,
											"end": 2658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2519,
											"end": 2658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2664,
											"end": 2821,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 2664,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2764,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2808,
											"end": 2813,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2764,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 2764,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2764,
											"end": 2814,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2764,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2664,
											"end": 2821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2664,
											"end": 2821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2664,
											"end": 2821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 3075,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2827,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2937,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 2973,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2960,
											"end": 2969,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2956,
											"end": 2974,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2948,
											"end": 2974,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2948,
											"end": 2974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2984,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3065,
											"end": 3066,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3050,
											"end": 3067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3047,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2984,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 2984,
											"end": 3068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2984,
											"end": 3068,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 2984,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 3075,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 3075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 3075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 3075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 3075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3081,
											"end": 3194,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3081,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3153,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3181,
											"end": 3186,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3165,
											"end": 3187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3165,
											"end": 3187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3081,
											"end": 3194,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3081,
											"end": 3194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3081,
											"end": 3194,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3081,
											"end": 3194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3200,
											"end": 3383,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3200,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3309,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3327,
											"end": 3330,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3339,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3376,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3367,
											"end": 3370,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3363,
											"end": 3377,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3377,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3200,
											"end": 3383,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3200,
											"end": 3383,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3200,
											"end": 3383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3200,
											"end": 3383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3200,
											"end": 3383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3520,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 3389,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3459,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3508,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3513,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3491,
											"end": 3513,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3491,
											"end": 3513,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3526,
											"end": 3631,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3526,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3618,
											"end": 3623,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3601,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3624,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3601,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3599,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3625,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3526,
											"end": 3631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3526,
											"end": 3631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3526,
											"end": 3631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3812,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3637,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3704,
											"end": 3714,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 3765,
											"end": 3768,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3757,
											"end": 3763,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3725,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3725,
											"end": 3769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3725,
											"end": 3769,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 3725,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3805,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3799,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3792,
											"end": 3806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3812,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3812,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3818,
											"end": 3930,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 3818,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 3923,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3914,
											"end": 3917,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3924,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3902,
											"end": 3924,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3902,
											"end": 3924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3818,
											"end": 3930,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3818,
											"end": 3930,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3818,
											"end": 3930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3818,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 4688,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3964,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4081,
											"end": 4084,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 4157,
											"end": 4162,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4110,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 4110,
											"end": 4163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4110,
											"end": 4163,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 4110,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4179,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 4257,
											"end": 4263,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4255,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4179,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 4179,
											"end": 4264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4179,
											"end": 4264,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 4179,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4264,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4288,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 4337,
											"end": 4342,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4288,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 4288,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4288,
											"end": 4343,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 4288,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4397,
											"end": 4398,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4663,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 4382,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 4413,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4404,
											"end": 4405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4414,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4663,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 4382,
											"end": 4663,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4477,
											"end": 4490,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4552,
											"end": 4565,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 4510,
											"end": 4571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4571,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 4510,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4571,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 4646,
											"end": 4652,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 4594,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4653,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 4594,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4584,
											"end": 4653,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4584,
											"end": 4653,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4442,
											"end": 4663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4429,
											"end": 4430,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4426,
											"end": 4427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4422,
											"end": 4431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 4382,
											"end": 4663,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4663,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 4382,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4386,
											"end": 4400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4679,
											"end": 4682,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4682,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4682,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4086,
											"end": 4688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4086,
											"end": 4688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4086,
											"end": 4688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 4688,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 4688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 4688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 4688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 5063,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 4694,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4835,
											"end": 4839,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4875,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4871,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 4931,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4912,
											"end": 4932,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4906,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4886,
											"end": 4933,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 5051,
											"end": 5055,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5042,
											"end": 5048,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 4950,
											"end": 5056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 5056,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 4950,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4942,
											"end": 5056,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4942,
											"end": 5056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 5063,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 5063,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 5063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 5063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 5063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5069,
											"end": 5165,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5069,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 5153,
											"end": 5158,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5135,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 5135,
											"end": 5159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5135,
											"end": 5159,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 5135,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5069,
											"end": 5165,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5069,
											"end": 5165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5069,
											"end": 5165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5069,
											"end": 5165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5289,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 5171,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5258,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 5276,
											"end": 5281,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5258,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5258,
											"end": 5282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5258,
											"end": 5282,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 5258,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5253,
											"end": 5256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5246,
											"end": 5283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5295,
											"end": 5517,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 5295,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5388,
											"end": 5392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5426,
											"end": 5428,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5411,
											"end": 5429,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5439,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5507,
											"end": 5508,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5496,
											"end": 5505,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5439,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 5439,
											"end": 5510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5439,
											"end": 5510,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5439,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5295,
											"end": 5517,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5295,
											"end": 5517,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5295,
											"end": 5517,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5295,
											"end": 5517,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5295,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5640,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 5523,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5632,
											"end": 5633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5629,
											"end": 5630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5622,
											"end": 5634,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5646,
											"end": 5748,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 5646,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5687,
											"end": 5693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5740,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5734,
											"end": 5741,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5729,
											"end": 5731,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5722,
											"end": 5727,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5718,
											"end": 5732,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5742,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5704,
											"end": 5742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5704,
											"end": 5742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5646,
											"end": 5748,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5646,
											"end": 5748,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5646,
											"end": 5748,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5646,
											"end": 5748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5934,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 5754,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5802,
											"end": 5879,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5799,
											"end": 5800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5792,
											"end": 5880,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5903,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 5896,
											"end": 5897,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5889,
											"end": 5904,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 5927,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5920,
											"end": 5921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5928,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 6221,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 5940,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 6045,
											"end": 6049,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 6023,
											"end": 6050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6015,
											"end": 6021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6011,
											"end": 6051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6153,
											"end": 6159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6151,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6138,
											"end": 6160,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6135,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6105,
											"end": 6115,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6102,
											"end": 6136,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6099,
											"end": 6161,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6096,
											"end": 6184,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6096,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 6096,
											"end": 6184,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 6164,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 6164,
											"end": 6182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6182,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 6164,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6096,
											"end": 6184,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 6096,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6214,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6202,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 6221,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 6221,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 6221,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 6221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6227,
											"end": 6356,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 6227,
											"end": 6356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6261,
											"end": 6267,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 6288,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 6288,
											"end": 6308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6288,
											"end": 6308,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 6288,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6278,
											"end": 6308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6278,
											"end": 6308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 6345,
											"end": 6349,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6337,
											"end": 6343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 6317,
											"end": 6350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6350,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 6317,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6227,
											"end": 6356,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6227,
											"end": 6356,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6227,
											"end": 6356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6227,
											"end": 6356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6362,
											"end": 6672,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 6362,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6442,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6528,
											"end": 6546,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6520,
											"end": 6526,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6517,
											"end": 6547,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6514,
											"end": 6570,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6514,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 6514,
											"end": 6570,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6550,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6550,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 6550,
											"end": 6568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6550,
											"end": 6568,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6550,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6514,
											"end": 6570,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 6514,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6600,
											"end": 6604,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6592,
											"end": 6598,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6588,
											"end": 6605,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6580,
											"end": 6605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6580,
											"end": 6605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6660,
											"end": 6664,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6654,
											"end": 6658,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6650,
											"end": 6665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6362,
											"end": 6672,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6362,
											"end": 6672,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6362,
											"end": 6672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6362,
											"end": 6672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6678,
											"end": 6795,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 6678,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6788,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6785,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6777,
											"end": 6789,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6801,
											"end": 6921,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 6801,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6890,
											"end": 6895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 6873,
											"end": 6896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6896,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6873,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6863,
											"end": 6897,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6853,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 6853,
											"end": 6915,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6911,
											"end": 6912,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6901,
											"end": 6913,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6853,
											"end": 6915,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 6853,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6801,
											"end": 6921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6801,
											"end": 6921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6927,
											"end": 7064,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 6927,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6972,
											"end": 6977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7010,
											"end": 7016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7017,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7017,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7026,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 7052,
											"end": 7057,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7026,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 7026,
											"end": 7058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7026,
											"end": 7058,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 7026,
											"end": 7058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6927,
											"end": 7064,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6927,
											"end": 7064,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6927,
											"end": 7064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6927,
											"end": 7064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6927,
											"end": 7064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7793,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 7086,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7181,
											"end": 7186,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 7222,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 7278,
											"end": 7284,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7222,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 7222,
											"end": 7285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7222,
											"end": 7285,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 7222,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7206,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 7206,
											"end": 7286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7206,
											"end": 7286,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 7206,
											"end": 7286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7197,
											"end": 7286,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7197,
											"end": 7286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7335,
											"end": 7341,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7333,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7321,
											"end": 7342,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7369,
											"end": 7373,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7362,
											"end": 7367,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7351,
											"end": 7374,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7351,
											"end": 7374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7422,
											"end": 7426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7414,
											"end": 7420,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7410,
											"end": 7427,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7398,
											"end": 7428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7451,
											"end": 7454,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7443,
											"end": 7449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7440,
											"end": 7455,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7437,
											"end": 7559,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7437,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 7437,
											"end": 7559,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 7470,
											"end": 7549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7437,
											"end": 7559,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 7437,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7591,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7787,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 7568,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7602,
											"end": 7608,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7597,
											"end": 7600,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7594,
											"end": 7609,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7787,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 7568,
											"end": 7787,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7706,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 7738,
											"end": 7741,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7706,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 7706,
											"end": 7742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7706,
											"end": 7742,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 7706,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7701,
											"end": 7704,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7694,
											"end": 7743,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7772,
											"end": 7776,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7767,
											"end": 7770,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7763,
											"end": 7777,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 7777,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 7777,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 7787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7628,
											"end": 7632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7623,
											"end": 7626,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7619,
											"end": 7633,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7612,
											"end": 7633,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7612,
											"end": 7633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 7568,
											"end": 7787,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7787,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 7568,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7572,
											"end": 7593,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7187,
											"end": 7793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7187,
											"end": 7793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7793,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7793,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7815,
											"end": 8183,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 7815,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7885,
											"end": 7890,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7934,
											"end": 7937,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7931,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 7919,
											"end": 7925,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7915,
											"end": 7932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7911,
											"end": 7938,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7901,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 7901,
											"end": 8023,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7942,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 7942,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 7942,
											"end": 8021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7942,
											"end": 8021,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 7942,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7901,
											"end": 8023,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 7901,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8059,
											"end": 8065,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8046,
											"end": 8066,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 8173,
											"end": 8176,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8165,
											"end": 8171,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8158,
											"end": 8162,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8150,
											"end": 8156,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8146,
											"end": 8163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 8084,
											"end": 8177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8177,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 8084,
											"end": 8177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8075,
											"end": 8177,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8075,
											"end": 8177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7891,
											"end": 8183,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7815,
											"end": 8183,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7815,
											"end": 8183,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7815,
											"end": 8183,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7815,
											"end": 8183,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7815,
											"end": 8183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8726,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 8189,
											"end": 8726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8272,
											"end": 8278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8323,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8300,
											"end": 8307,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8296,
											"end": 8319,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8292,
											"end": 8324,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8408,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 8289,
											"end": 8408,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8327,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 8327,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 8327,
											"end": 8406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8327,
											"end": 8406,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 8327,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8408,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 8289,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8475,
											"end": 8476,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8473,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8460,
											"end": 8477,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8478,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8505,
											"end": 8523,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8497,
											"end": 8503,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8494,
											"end": 8524,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8491,
											"end": 8608,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8491,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 8491,
											"end": 8608,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8527,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 8527,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 8527,
											"end": 8606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8527,
											"end": 8606,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 8527,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8491,
											"end": 8608,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 8491,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8632,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 8701,
											"end": 8708,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8692,
											"end": 8698,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8681,
											"end": 8690,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8677,
											"end": 8699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8632,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 8632,
											"end": 8709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8632,
											"end": 8709,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 8632,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8622,
											"end": 8709,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8622,
											"end": 8709,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8418,
											"end": 8719,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8726,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8726,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8732,
											"end": 8850,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 8732,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 8837,
											"end": 8842,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 8819,
											"end": 8843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8843,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 8819,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8814,
											"end": 8817,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8807,
											"end": 8844,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8732,
											"end": 8850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8732,
											"end": 8850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8732,
											"end": 8850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8856,
											"end": 9078,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 8856,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8949,
											"end": 8953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8987,
											"end": 8989,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8976,
											"end": 8985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8972,
											"end": 8990,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8964,
											"end": 8990,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8964,
											"end": 8990,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9000,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 9068,
											"end": 9069,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9057,
											"end": 9066,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9044,
											"end": 9050,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9000,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 9000,
											"end": 9071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9000,
											"end": 9071,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 9000,
											"end": 9071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8856,
											"end": 9078,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8856,
											"end": 9078,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8856,
											"end": 9078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8856,
											"end": 9078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8856,
											"end": 9078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9084,
											"end": 9206,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 9084,
											"end": 9206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 9175,
											"end": 9180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 9157,
											"end": 9181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9181,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 9157,
											"end": 9181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9150,
											"end": 9155,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9147,
											"end": 9182,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9137,
											"end": 9200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 9137,
											"end": 9200,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9197,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9193,
											"end": 9194,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9186,
											"end": 9198,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9137,
											"end": 9200,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 9137,
											"end": 9200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9084,
											"end": 9206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9084,
											"end": 9206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9212,
											"end": 9351,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 9212,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9296,
											"end": 9302,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9283,
											"end": 9303,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9274,
											"end": 9303,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9274,
											"end": 9303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9312,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 9339,
											"end": 9344,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9312,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 9312,
											"end": 9345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9312,
											"end": 9345,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 9312,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9212,
											"end": 9351,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9212,
											"end": 9351,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9212,
											"end": 9351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9212,
											"end": 9351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9212,
											"end": 9351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9686,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 9357,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 9422,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9465,
											"end": 9467,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9453,
											"end": 9462,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9444,
											"end": 9451,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9440,
											"end": 9463,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9468,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9433,
											"end": 9552,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9433,
											"end": 9552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 9433,
											"end": 9552,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9471,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 9471,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 9471,
											"end": 9550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9471,
											"end": 9550,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 9471,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9433,
											"end": 9552,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 9433,
											"end": 9552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9591,
											"end": 9592,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9616,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 9661,
											"end": 9668,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9652,
											"end": 9658,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9650,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9637,
											"end": 9659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9616,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 9616,
											"end": 9669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9616,
											"end": 9669,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 9616,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9606,
											"end": 9669,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9606,
											"end": 9669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9562,
											"end": 9679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9686,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9686,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9692,
											"end": 10024,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 9692,
											"end": 10024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9817,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9851,
											"end": 9853,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9828,
											"end": 9854,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9828,
											"end": 9854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9864,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 9932,
											"end": 9933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9921,
											"end": 9930,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9917,
											"end": 9934,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9908,
											"end": 9914,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9864,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 9864,
											"end": 9935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9864,
											"end": 9935,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 9864,
											"end": 9935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9945,
											"end": 10017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 10013,
											"end": 10015,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10002,
											"end": 10011,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9998,
											"end": 10016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9989,
											"end": 9995,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9945,
											"end": 10017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 9945,
											"end": 10017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9945,
											"end": 10017,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 9945,
											"end": 10017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9692,
											"end": 10024,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9692,
											"end": 10024,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9692,
											"end": 10024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9692,
											"end": 10024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9692,
											"end": 10024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9692,
											"end": 10024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10030,
											"end": 10120,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 10030,
											"end": 10120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10107,
											"end": 10112,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10100,
											"end": 10113,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10093,
											"end": 10114,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10030,
											"end": 10120,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10030,
											"end": 10120,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10030,
											"end": 10120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10030,
											"end": 10120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10126,
											"end": 10242,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 10126,
											"end": 10242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10196,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 10211,
											"end": 10216,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10196,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 10196,
											"end": 10217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10196,
											"end": 10217,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 10196,
											"end": 10217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10189,
											"end": 10194,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10218,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 10176,
											"end": 10236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 10176,
											"end": 10236,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10232,
											"end": 10233,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10229,
											"end": 10230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10222,
											"end": 10234,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10176,
											"end": 10236,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 10176,
											"end": 10236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10126,
											"end": 10242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10126,
											"end": 10242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10248,
											"end": 10385,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 10248,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10302,
											"end": 10307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10333,
											"end": 10339,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10327,
											"end": 10340,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10318,
											"end": 10340,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10318,
											"end": 10340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10349,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 10373,
											"end": 10378,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10349,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 10349,
											"end": 10379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10349,
											"end": 10379,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 10349,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10248,
											"end": 10385,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10248,
											"end": 10385,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10248,
											"end": 10385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10248,
											"end": 10385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10248,
											"end": 10385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10391,
											"end": 10736,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 10391,
											"end": 10736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10458,
											"end": 10464,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10507,
											"end": 10509,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10495,
											"end": 10504,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10486,
											"end": 10493,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10482,
											"end": 10505,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10478,
											"end": 10510,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 10475,
											"end": 10594,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10475,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 10475,
											"end": 10594,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10513,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 10513,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 10513,
											"end": 10592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10513,
											"end": 10592,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 10513,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10475,
											"end": 10594,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 10475,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10633,
											"end": 10634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10658,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 10711,
											"end": 10718,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10702,
											"end": 10708,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10691,
											"end": 10700,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10687,
											"end": 10709,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10658,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 10658,
											"end": 10719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10658,
											"end": 10719,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 10658,
											"end": 10719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10648,
											"end": 10719,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10648,
											"end": 10719,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10604,
											"end": 10729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10391,
											"end": 10736,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10391,
											"end": 10736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10391,
											"end": 10736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10391,
											"end": 10736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10391,
											"end": 10736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10742,
											"end": 10922,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 10742,
											"end": 10922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10790,
											"end": 10867,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10787,
											"end": 10788,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10780,
											"end": 10868,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10887,
											"end": 10891,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 10884,
											"end": 10885,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10877,
											"end": 10892,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10911,
											"end": 10915,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10908,
											"end": 10909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10901,
											"end": 10916,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10928,
											"end": 11068,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 10928,
											"end": 11068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10977,
											"end": 10986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11010,
											"end": 11062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 11037,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 11054,
											"end": 11059,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11037,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 11037,
											"end": 11060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11037,
											"end": 11060,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 11037,
											"end": 11060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 11028,
											"end": 11061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11010,
											"end": 11062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 11010,
											"end": 11062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11010,
											"end": 11062,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 11010,
											"end": 11062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10997,
											"end": 11062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10997,
											"end": 11062,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10928,
											"end": 11068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10928,
											"end": 11068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10928,
											"end": 11068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10928,
											"end": 11068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11203,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 11074,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11160,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 11190,
											"end": 11195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11160,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 11160,
											"end": 11196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11160,
											"end": 11196,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 11160,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 11158,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11148,
											"end": 11197,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11074,
											"end": 11203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11209,
											"end": 11539,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 11209,
											"end": 11539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11329,
											"end": 11333,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11367,
											"end": 11369,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11370,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11344,
											"end": 11370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11344,
											"end": 11370,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11380,
											"end": 11451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 11448,
											"end": 11449,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11437,
											"end": 11446,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 11450,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11424,
											"end": 11430,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11380,
											"end": 11451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 11380,
											"end": 11451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11380,
											"end": 11451,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 11380,
											"end": 11451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11461,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 11528,
											"end": 11530,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11517,
											"end": 11526,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11513,
											"end": 11531,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11504,
											"end": 11510,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11461,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 11461,
											"end": 11532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11461,
											"end": 11532,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 11461,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11209,
											"end": 11539,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11209,
											"end": 11539,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11209,
											"end": 11539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11209,
											"end": 11539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11209,
											"end": 11539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11209,
											"end": 11539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11545,
											"end": 11688,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 11545,
											"end": 11688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11602,
											"end": 11607,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11633,
											"end": 11639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11640,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11618,
											"end": 11640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11618,
											"end": 11640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 11682,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 11676,
											"end": 11681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 11682,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 11649,
											"end": 11682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 11682,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 11649,
											"end": 11682,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11545,
											"end": 11688,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11545,
											"end": 11688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11545,
											"end": 11688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11545,
											"end": 11688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11545,
											"end": 11688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 12045,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 11694,
											"end": 12045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11764,
											"end": 11770,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11813,
											"end": 11815,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11801,
											"end": 11810,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11792,
											"end": 11799,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11788,
											"end": 11811,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11784,
											"end": 11816,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 11781,
											"end": 11900,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11781,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 11781,
											"end": 11900,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11819,
											"end": 11898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 11819,
											"end": 11898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 11819,
											"end": 11898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11819,
											"end": 11898,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 11819,
											"end": 11898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11781,
											"end": 11900,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 11781,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11939,
											"end": 11940,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11964,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 12020,
											"end": 12027,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12011,
											"end": 12017,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12000,
											"end": 12009,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11996,
											"end": 12018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11964,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 11964,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11964,
											"end": 12028,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 11964,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11954,
											"end": 12028,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11954,
											"end": 12028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11910,
											"end": 12038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 12045,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 12045,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 12045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 12045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 12045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12165,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 12051,
											"end": 12165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12152,
											"end": 12157,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12146,
											"end": 12158,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12136,
											"end": 12158,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12136,
											"end": 12158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12165,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12355,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 12171,
											"end": 12355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12270,
											"end": 12281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12304,
											"end": 12310,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12299,
											"end": 12302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12292,
											"end": 12311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12344,
											"end": 12348,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12339,
											"end": 12342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12335,
											"end": 12349,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12320,
											"end": 12349,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12320,
											"end": 12349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12355,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12355,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12361,
											"end": 12493,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 12361,
											"end": 12493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12428,
											"end": 12432,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12451,
											"end": 12454,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12485,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12476,
											"end": 12479,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12472,
											"end": 12486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12464,
											"end": 12486,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12464,
											"end": 12486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12361,
											"end": 12493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12361,
											"end": 12493,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12361,
											"end": 12493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12361,
											"end": 12493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12499,
											"end": 12607,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 12499,
											"end": 12607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 12594,
											"end": 12599,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 12576,
											"end": 12600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12600,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 12576,
											"end": 12600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12564,
											"end": 12601,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12499,
											"end": 12607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12499,
											"end": 12607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12499,
											"end": 12607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12613,
											"end": 12792,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 12613,
											"end": 12792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12682,
											"end": 12692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12703,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 12745,
											"end": 12748,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12737,
											"end": 12743,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12703,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 12703,
											"end": 12749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12703,
											"end": 12749,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 12703,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12781,
											"end": 12785,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12776,
											"end": 12779,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12758,
											"end": 12786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12758,
											"end": 12786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12613,
											"end": 12792,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12613,
											"end": 12792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12613,
											"end": 12792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12613,
											"end": 12792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12613,
											"end": 12792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12798,
											"end": 12911,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 12798,
											"end": 12911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12868,
											"end": 12872,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12900,
											"end": 12904,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12895,
											"end": 12898,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12891,
											"end": 12905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12883,
											"end": 12905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12883,
											"end": 12905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12798,
											"end": 12911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12798,
											"end": 12911,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12798,
											"end": 12911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12798,
											"end": 12911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12947,
											"end": 13679,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 12947,
											"end": 13679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13066,
											"end": 13069,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13095,
											"end": 13149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 13143,
											"end": 13148,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 13095,
											"end": 13149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13149,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 13095,
											"end": 13149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13165,
											"end": 13251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 13244,
											"end": 13250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13239,
											"end": 13242,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13165,
											"end": 13251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 13165,
											"end": 13251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13165,
											"end": 13251,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 13165,
											"end": 13251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13251,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13275,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 13325,
											"end": 13330,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13275,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 13275,
											"end": 13331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13275,
											"end": 13331,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 13275,
											"end": 13331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13354,
											"end": 13361,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13385,
											"end": 13386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13370,
											"end": 13654,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 13370,
											"end": 13654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13395,
											"end": 13401,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13392,
											"end": 13393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13389,
											"end": 13402,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13370,
											"end": 13654,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13370,
											"end": 13654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 13370,
											"end": 13654,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13471,
											"end": 13477,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13465,
											"end": 13478,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13498,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 13557,
											"end": 13560,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 13542,
											"end": 13555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13498,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 13498,
											"end": 13561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13498,
											"end": 13561,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 13498,
											"end": 13561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13491,
											"end": 13561,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 13491,
											"end": 13561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 13637,
											"end": 13643,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 13584,
											"end": 13644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13644,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 13584,
											"end": 13644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13644,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13430,
											"end": 13654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13417,
											"end": 13418,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13414,
											"end": 13415,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13410,
											"end": 13419,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13405,
											"end": 13419,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13405,
											"end": 13419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13370,
											"end": 13654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 13370,
											"end": 13654,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13370,
											"end": 13654,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 13370,
											"end": 13654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13670,
											"end": 13673,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13663,
											"end": 13673,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13663,
											"end": 13673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13071,
											"end": 13679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13071,
											"end": 13679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13071,
											"end": 13679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12947,
											"end": 13679,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12947,
											"end": 13679,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12947,
											"end": 13679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12947,
											"end": 13679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12947,
											"end": 13679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13685,
											"end": 14429,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 13685,
											"end": 14429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13934,
											"end": 13938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13972,
											"end": 13974,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13961,
											"end": 13970,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13957,
											"end": 13975,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13949,
											"end": 13975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13949,
											"end": 13975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13985,
											"end": 14056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 14053,
											"end": 14054,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14042,
											"end": 14051,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14038,
											"end": 14055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14029,
											"end": 14035,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13985,
											"end": 14056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 13985,
											"end": 14056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13985,
											"end": 14056,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 13985,
											"end": 14056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14103,
											"end": 14112,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14097,
											"end": 14101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14093,
											"end": 14113,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14088,
											"end": 14090,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14077,
											"end": 14086,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14073,
											"end": 14091,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14066,
											"end": 14114,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 14234,
											"end": 14238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14225,
											"end": 14231,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 14131,
											"end": 14239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 14131,
											"end": 14239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14123,
											"end": 14239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14123,
											"end": 14239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14286,
											"end": 14295,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14280,
											"end": 14284,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14276,
											"end": 14296,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14271,
											"end": 14273,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14260,
											"end": 14269,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14256,
											"end": 14274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14249,
											"end": 14297,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14314,
											"end": 14422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 14417,
											"end": 14421,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14408,
											"end": 14414,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14314,
											"end": 14422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 14314,
											"end": 14422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14314,
											"end": 14422,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 14314,
											"end": 14422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14306,
											"end": 14422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14306,
											"end": 14422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13685,
											"end": 14429,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 13685,
											"end": 14429,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13685,
											"end": 14429,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13685,
											"end": 14429,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13685,
											"end": 14429,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13685,
											"end": 14429,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13685,
											"end": 14429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/interfaces/IJackpot.sol",
								"contracts/interfaces/IMyNFT.sol",
								"contracts/periphery/Jackpot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claim()": "4e71d92d",
							"collectedCardsID(uint256)": "1dd5605d",
							"getCollectedCardsID()": "4cbe5274",
							"getTotalValue()": "caa648b4",
							"myNFT()": "09a31d50",
							"owner()": "8da5cb5b",
							"paymentToken()": "3013ce29",
							"renounceOwnership()": "715018a6",
							"setCollectedCardsID(uint32[])": "ad26432e",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_paymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_myNFT\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"_collectedCardsID\",\"type\":\"uint32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EmptyJackpot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCollectedCards\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"JackpotClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"collectedCardsID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollectedCardsID\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"cardsID\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myNFT\",\"outputs\":[{\"internalType\":\"contract IMyNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"_cardsID\",\"type\":\"uint32[]\"}],\"name\":\"setCollectedCardsID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SeekersAlliance\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setCollectedCardsID(uint32[])\":{\"params\":{\"_cardsID\":\"The cards ID\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim()\":{\"notice\":\"Try to claim the value from this jackpot if the sender has the right to claim\"},\"getCollectedCardsID()\":{\"notice\":\"Get the cards ID which needed to be collected to claim the jackpot\"},\"getTotalValue()\":{\"notice\":\"Return the tatol value of the jackpot\"},\"setCollectedCardsID(uint32[])\":{\"notice\":\"Set the cards ID which needed to be collected to claim the jackpotOnly the admin role can call this function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/Jackpot.sol\":\"Jackpot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/interfaces/IJackpot.sol\":{\"keccak256\":\"0x76d2a0c9f983f92455a6d66ac3dc9352422255be1c39874bf87d185a246f60d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280378da08094972cd6e3a06549bf81e4f86f124d0ea1bc747ee6a8b2be14cf6\",\"dweb:/ipfs/QmWXHbB4jGL98MMn52U77oL7d7hExkBadKhNeiEk3Cztzr\"]},\"contracts/interfaces/IMyNFT.sol\":{\"keccak256\":\"0xc5ffe118e5bdf6e13d43420dbc32d8ef5d287af9e7637c74b398aac13b5fc251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b30a43196405a2e875aa092af569478ca3ebd65b2a6d67218a3343344957cc9\",\"dweb:/ipfs/Qmb3X6pQoErQuMJvTGN62bKLC7ay2YXY7iiFfmbvJNZsbn\"]},\"contracts/periphery/Jackpot.sol\":{\"keccak256\":\"0xcc0f40cc6931b25dcc918fb6562d72cbff43edda418cc85bc86fd74721a54e0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b12a447ae762743d8d667d8f0201eb41cd6e659c83c19ead4e8ab53fe8b62a8\",\"dweb:/ipfs/QmZBNhoWCSknuW4REU4qdbNeWSeHn2E31teXjKg17v5h9K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/periphery/Jackpot.sol:Jackpot",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1064,
								"contract": "contracts/periphery/Jackpot.sol:Jackpot",
								"label": "paymentToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ERC20)799"
							},
							{
								"astId": 1067,
								"contract": "contracts/periphery/Jackpot.sol:Jackpot",
								"label": "myNFT",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IMyNFT)1048"
							},
							{
								"astId": 1070,
								"contract": "contracts/periphery/Jackpot.sol:Jackpot",
								"label": "collectedCardsID",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_uint32)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint32)dyn_storage": {
								"base": "t_uint32",
								"encoding": "dynamic_array",
								"label": "uint32[]",
								"numberOfBytes": "32"
							},
							"t_contract(ERC20)799": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IMyNFT)1048": {
								"encoding": "inplace",
								"label": "contract IMyNFT",
								"numberOfBytes": "20"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claim()": {
								"notice": "Try to claim the value from this jackpot if the sender has the right to claim"
							},
							"getCollectedCardsID()": {
								"notice": "Get the cards ID which needed to be collected to claim the jackpot"
							},
							"getTotalValue()": {
								"notice": "Return the tatol value of the jackpot"
							},
							"setCollectedCardsID(uint32[])": {
								"notice": "Set the cards ID which needed to be collected to claim the jackpotOnly the admin role can call this function"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/interfaces/IJackpot.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IJackpot.sol",
					"exportedSymbols": {
						"IJackpot": [
							977
						]
					},
					"id": 978,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IJackpot",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 936,
								"nodeType": "StructuredDocumentation",
								"src": "64:43:6",
								"text": " @title Interface of Fomo3d.sol"
							},
							"fullyImplemented": false,
							"id": 977,
							"linearizedBaseContracts": [
								977
							],
							"name": "IJackpot",
							"nameLocation": "123:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "16f67fd92ffb20fb68612d68e9725fe41944a7be57a193cb98fa735dd6f5d948",
									"id": 942,
									"name": "JackpotClaim",
									"nameLocation": "160:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "189:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "173:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "203:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "195:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "195:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:37:6"
									},
									"src": "154:56:6"
								},
								{
									"errorSelector": "e6c4247b",
									"id": 944,
									"name": "InvalidAddress",
									"nameLocation": "243:14:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "257:2:6"
									},
									"src": "237:23:6"
								},
								{
									"errorSelector": "aa7feadc",
									"id": 946,
									"name": "InvalidValue",
									"nameLocation": "272:12:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "284:2:6"
									},
									"src": "266:21:6"
								},
								{
									"errorSelector": "2c5211c6",
									"id": 948,
									"name": "InvalidAmount",
									"nameLocation": "299:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "312:2:6"
									},
									"src": "293:22:6"
								},
								{
									"errorSelector": "6e6681f6",
									"id": 950,
									"name": "EmptyJackpot",
									"nameLocation": "327:12:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "339:2:6"
									},
									"src": "321:21:6"
								},
								{
									"errorSelector": "7aa5b94c",
									"id": 952,
									"name": "NotCollectedCards",
									"nameLocation": "354:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:2:6"
									},
									"src": "348:26:6"
								},
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "716:106:6",
										"text": " @notice Try to claim the value from this jackpot if the sender has the right to claim"
									},
									"functionSelector": "4e71d92d",
									"id": 956,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "837:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:6"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "853:0:6"
									},
									"scope": 977,
									"src": "828:26:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "862:66:6",
										"text": " @notice Return the tatol value of the jackpot"
									},
									"functionSelector": "caa648b4",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalValue",
									"nameLocation": "943:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "956:2:6"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "990:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "982:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:15:6"
									},
									"scope": 977,
									"src": "934:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "1005:191:6",
										"text": " @notice Set the cards ID which needed to be collected to claim the jackpot\n @notice Only the admin role can call this function\n @param _cardsID The cards ID"
									},
									"functionSelector": "ad26432e",
									"id": 969,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCollectedCardsID",
									"nameLocation": "1211:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "_cardsID",
												"nameLocation": "1247:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1231:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 964,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1231:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 965,
													"nodeType": "ArrayTypeName",
													"src": "1231:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1230:26:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1265:0:6"
									},
									"scope": 977,
									"src": "1202:64:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "1274:95:6",
										"text": " @notice Get the cards ID which needed to be collected to claim the jackpot"
									},
									"functionSelector": "4cbe5274",
									"id": 976,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCollectedCardsID",
									"nameLocation": "1384:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1403:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "cardsID",
												"nameLocation": "1445:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1429:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 972,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1429:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 973,
													"nodeType": "ArrayTypeName",
													"src": "1429:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:25:6"
									},
									"scope": 977,
									"src": "1375:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 978,
							"src": "113:1348:6",
							"usedErrors": [
								944,
								946,
								948,
								950,
								952
							],
							"usedEvents": [
								942
							]
						}
					],
					"src": "33:1430:6"
				},
				"id": 6
			},
			"contracts/interfaces/IMyNFT.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMyNFT.sol",
					"exportedSymbols": {
						"IMyNFT": [
							1048
						]
					},
					"id": 1049,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 979,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMyNFT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1048,
							"linearizedBaseContracts": [
								1048
							],
							"name": "IMyNFT",
							"nameLocation": "72:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "731133e9",
									"id": 990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "95:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "108:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "100:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "100:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "126:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "118:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "118:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "139:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "131:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "131:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "161:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "148:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "148:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "99:67:7"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:0:7"
									},
									"scope": 1048,
									"src": "86:90:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f7fdffa",
									"id": 1003,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintBatch",
									"nameLocation": "191:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "209:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "201:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "201:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "235:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "218:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 993,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "218:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 994,
													"nodeType": "ArrayTypeName",
													"src": "218:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "257:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "240:25:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 996,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "240:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 997,
													"nodeType": "ArrayTypeName",
													"src": "240:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "279:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "266:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 999,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "266:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "200:84:7"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:0:7"
									},
									"scope": 1048,
									"src": "182:112:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bd85b039",
									"id": 1010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "309:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "329:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "321:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "320:12:7"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "355:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "354:9:7"
									},
									"scope": 1048,
									"src": "300:64:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "379:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:7"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "415:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:9:7"
									},
									"scope": 1048,
									"src": "370:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30176e13",
									"id": 1020,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setBaseTokenURI",
									"nameLocation": "439:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "newBaseTokenURI",
												"nameLocation": "471:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "455:31:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1016,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "455:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:33:7"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:0:7"
									},
									"scope": 1048,
									"src": "430:67:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0e89341c",
									"id": 1027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "512:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "524:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "516:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "515:17:7"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "556:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1024,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "556:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:15:7"
									},
									"scope": 1048,
									"src": "503:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "00fdd58e",
									"id": 1036,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "586:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "604:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "596:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "621:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "613:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:29:7"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "648:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:9:7"
									},
									"scope": 1048,
									"src": "577:80:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6b20c454",
									"id": 1047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnBatch",
									"nameLocation": "672:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "690:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "682:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "716:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "699:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1039,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "699:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1040,
													"nodeType": "ArrayTypeName",
													"src": "699:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "738:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "721:24:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1042,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "721:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1043,
													"nodeType": "ArrayTypeName",
													"src": "721:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "681:65:7"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "755:0:7"
									},
									"scope": 1048,
									"src": "663:93:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1049,
							"src": "62:699:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:728:7"
				},
				"id": 7
			},
			"contracts/periphery/Jackpot.sol": {
				"ast": {
					"absolutePath": "contracts/periphery/Jackpot.sol",
					"exportedSymbols": {
						"ERC20": [
							799
						],
						"IJackpot": [
							977
						],
						"IMyNFT": [
							1048
						],
						"Jackpot": [
							1296
						],
						"Ownable": [
							147
						]
					},
					"id": 1297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1050,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1052,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1297,
							"sourceUnit": 800,
							"src": "62:68:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1051,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "70:5:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1297,
							"sourceUnit": 148,
							"src": "132:67:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1053,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "140:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IMyNFT.sol",
							"file": "../interfaces/IMyNFT.sol",
							"id": 1055,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1297,
							"sourceUnit": 1049,
							"src": "201:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IJackpot.sol",
							"file": "../interfaces/IJackpot.sol",
							"id": 1056,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1297,
							"sourceUnit": 978,
							"src": "237:36:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1058,
										"name": "Ownable",
										"nameLocations": [
											"363:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "363:7:8"
									},
									"id": 1059,
									"nodeType": "InheritanceSpecifier",
									"src": "363:7:8"
								},
								{
									"baseName": {
										"id": 1060,
										"name": "IJackpot",
										"nameLocations": [
											"372:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 977,
										"src": "372:8:8"
									},
									"id": 1061,
									"nodeType": "InheritanceSpecifier",
									"src": "372:8:8"
								}
							],
							"canonicalName": "Jackpot",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1057,
								"nodeType": "StructuredDocumentation",
								"src": "277:61:8",
								"text": " @title \n @author SeekersAlliance\n @notice"
							},
							"fullyImplemented": true,
							"id": 1296,
							"linearizedBaseContracts": [
								1296,
								977,
								147,
								933
							],
							"name": "Jackpot",
							"nameLocation": "352:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3013ce29",
									"id": 1064,
									"mutability": "mutable",
									"name": "paymentToken",
									"nameLocation": "402:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1296,
									"src": "389:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$799",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 1063,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1062,
											"name": "ERC20",
											"nameLocations": [
												"389:5:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 799,
											"src": "389:5:8"
										},
										"referencedDeclaration": 799,
										"src": "389:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$799",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "09a31d50",
									"id": 1067,
									"mutability": "mutable",
									"name": "myNFT",
									"nameLocation": "435:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1296,
									"src": "421:19:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMyNFT_$1048",
										"typeString": "contract IMyNFT"
									},
									"typeName": {
										"id": 1066,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1065,
											"name": "IMyNFT",
											"nameLocations": [
												"421:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1048,
											"src": "421:6:8"
										},
										"referencedDeclaration": 1048,
										"src": "421:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMyNFT_$1048",
											"typeString": "contract IMyNFT"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1dd5605d",
									"id": 1070,
									"mutability": "mutable",
									"name": "collectedCardsID",
									"nameLocation": "465:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1296,
									"src": "449:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint32_$dyn_storage",
										"typeString": "uint32[]"
									},
									"typeName": {
										"baseType": {
											"id": 1068,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "449:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										},
										"id": 1069,
										"nodeType": "ArrayTypeName",
										"src": "449:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
											"typeString": "uint32[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "664:134:8",
										"statements": [
											{
												"expression": {
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1085,
														"name": "paymentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "675:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1087,
																"name": "_paymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "696:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1086,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "690:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$799_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "690:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"src": "675:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$799",
														"typeString": "contract ERC20"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "675:35:8"
											},
											{
												"expression": {
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1091,
														"name": "myNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "721:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMyNFT_$1048",
															"typeString": "contract IMyNFT"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1093,
																"name": "_myNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1076,
																"src": "736:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1092,
															"name": "IMyNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "729:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IMyNFT_$1048_$",
																"typeString": "type(contract IMyNFT)"
															}
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "729:14:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMyNFT_$1048",
															"typeString": "contract IMyNFT"
														}
													},
													"src": "721:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMyNFT_$1048",
														"typeString": "contract IMyNFT"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "721:22:8"
											},
											{
												"expression": {
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1097,
														"name": "collectedCardsID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "754:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_storage",
															"typeString": "uint32[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1098,
														"name": "_collectedCardsID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "773:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
															"typeString": "uint32[] memory"
														}
													},
													"src": "754:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage",
														"typeString": "uint32[] storage ref"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "754:36:8"
											}
										]
									},
									"id": 1102,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1082,
													"name": "_initialAdmin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1072,
													"src": "650:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1083,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1081,
												"name": "Ownable",
												"nameLocations": [
													"642:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "642:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "642:22:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "_initialAdmin",
												"nameLocation": "520:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "512:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "_paymentToken",
												"nameLocation": "552:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "544:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "_myNFT",
												"nameLocation": "584:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "576:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "_collectedCardsID",
												"nameLocation": "617:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "601:33:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1077,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "601:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1078,
													"nodeType": "ArrayTypeName",
													"src": "601:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:140:8"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "664:0:8"
									},
									"scope": 1296,
									"src": "490:308:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										956
									],
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "871:311:8",
										"statements": [
											{
												"assignments": [
													1107
												],
												"declarations": [
													{
														"constant": false,
														"id": 1107,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "890:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1145,
														"src": "882:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1106,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "882:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"expression": {
														"id": 1108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "899:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "903:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "899:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "882:27:8"
											},
											{
												"condition": {
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "923:29:8",
													"subExpression": {
														"arguments": [
															{
																"id": 1112,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "945:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1111,
															"name": "_checkCollectedCards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "924:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "924:28:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1118,
												"nodeType": "IfStatement",
												"src": "920:60:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1115,
															"name": "NotCollectedCards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "961:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "961:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1117,
													"nodeType": "RevertStatement",
													"src": "954:26:8"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1119,
															"name": "_getTotalValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "994:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "994:16:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1014:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "994:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1126,
												"nodeType": "IfStatement",
												"src": "991:47:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1123,
															"name": "EmptyJackpot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "1024:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1024:14:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1125,
													"nodeType": "RevertStatement",
													"src": "1017:21:8"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1128,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "1055:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1127,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "1049:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "1049:13:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1134,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "1095:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1135,
																"name": "_getTotalValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "1103:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1103:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1131,
															"name": "paymentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "1073:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$799",
																"typeString": "contract ERC20"
															}
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1086:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "1073:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1073:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "1073:47:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1140,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "1149:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1141,
																"name": "_getTotalValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "1157:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1157:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1139,
														"name": "JackpotClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "1136:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1136:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "EmitStatement",
												"src": "1131:43:8"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "846:5:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1104,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "863:8:8"
									},
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "851:2:8"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "871:0:8"
									},
									"scope": 1296,
									"src": "837:345:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										962
									],
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "1290:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1152,
														"name": "_getTotalValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "1308:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1154,
												"nodeType": "Return",
												"src": "1301:23:8"
											}
										]
									},
									"functionSelector": "caa648b4",
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalValue",
									"nameLocation": "1228:13:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1258:8:8"
									},
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1241:2:8"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1284:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1276:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:15:8"
									},
									"scope": 1296,
									"src": "1219:113:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										969
									],
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "1451:46:8",
										"statements": [
											{
												"expression": {
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1165,
														"name": "collectedCardsID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "1462:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_storage",
															"typeString": "uint32[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1166,
														"name": "_cardsID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "1481:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
															"typeString": "uint32[] memory"
														}
													},
													"src": "1462:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage",
														"typeString": "uint32[] storage ref"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "1462:27:8"
											}
										]
									},
									"functionSelector": "ad26432e",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1163,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1162,
												"name": "onlyOwner",
												"nameLocations": [
													"1442:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1442:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1442:9:8"
										}
									],
									"name": "setCollectedCardsID",
									"nameLocation": "1378:19:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1161,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1433:8:8"
									},
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "_cardsID",
												"nameLocation": "1414:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "1398:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1157,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1398:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1158,
													"nodeType": "ArrayTypeName",
													"src": "1398:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1397:26:8"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1451:0:8"
									},
									"scope": 1296,
									"src": "1369:128:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										976
									],
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "1621:42:8",
										"statements": [
											{
												"expression": {
													"id": 1177,
													"name": "collectedCardsID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1070,
													"src": "1639:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage",
														"typeString": "uint32[] storage ref"
													}
												},
												"functionReturnParameters": 1176,
												"id": 1178,
												"nodeType": "Return",
												"src": "1632:23:8"
											}
										]
									},
									"functionSelector": "4cbe5274",
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCollectedCardsID",
									"nameLocation": "1543:19:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1172,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1579:8:8"
									},
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1562:2:8"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "cardsID",
												"nameLocation": "1613:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "1597:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1173,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1597:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1174,
													"nodeType": "ArrayTypeName",
													"src": "1597:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:25:8"
									},
									"scope": 1296,
									"src": "1534:129:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "1744:214:8",
										"statements": [
											{
												"body": {
													"id": 1211,
													"nodeType": "Block",
													"src": "1804:125:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1200,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1182,
																			"src": "1838:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 1201,
																				"name": "collectedCardsID",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1070,
																				"src": "1845:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint32_$dyn_storage",
																					"typeString": "uint32[] storage ref"
																				}
																			},
																			"id": 1203,
																			"indexExpression": {
																				"id": 1202,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1188,
																				"src": "1862:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1845:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		],
																		"expression": {
																			"id": 1198,
																			"name": "myNFT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "1822:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IMyNFT_$1048",
																				"typeString": "contract IMyNFT"
																			}
																		},
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1828:9:8",
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1036,
																		"src": "1822:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view external returns (uint256)"
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1822:43:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1869:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1822:48:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1210,
															"nodeType": "IfStatement",
															"src": "1819:99:8",
															"trueBody": {
																"id": 1209,
																"nodeType": "Block",
																"src": "1871:47:8",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1897:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 1186,
																		"id": 1208,
																		"nodeType": "Return",
																		"src": "1890:12:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1191,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "1771:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1192,
															"name": "collectedCardsID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "1775:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_storage",
																"typeString": "uint32[] storage ref"
															}
														},
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1792:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1775:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1771:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1212,
												"initializationExpression": {
													"assignments": [
														1188
													],
													"declarations": [
														{
															"constant": false,
															"id": 1188,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1764:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1212,
															"src": "1759:6:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1187,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1759:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1190,
													"initialValue": {
														"hexValue": "30",
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1768:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1759:10:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1800:3:8",
														"subExpression": {
															"id": 1195,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "1800:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1197,
													"nodeType": "ExpressionStatement",
													"src": "1800:3:8"
												},
												"nodeType": "ForStatement",
												"src": "1755:174:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1946:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1186,
												"id": 1214,
												"nodeType": "Return",
												"src": "1939:11:8"
											}
										]
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkCollectedCards",
									"nameLocation": "1680:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "1709:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "1701:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1701:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:15:8"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "1739:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1739:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:6:8"
									},
									"scope": 1296,
									"src": "1671:287:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "2004:346:8",
										"statements": [
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "2032:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 1280,
														"src": "2015:20:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1223,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1224,
															"nodeType": "ArrayTypeName",
															"src": "2015:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1232,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1229,
																"name": "collectedCardsID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "2052:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint32_$dyn_storage",
																	"typeString": "uint32[] storage ref"
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2069:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2052:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2038:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1226,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2042:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1227,
															"nodeType": "ArrayTypeName",
															"src": "2042:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2038:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2015:61:8"
											},
											{
												"assignments": [
													1237
												],
												"declarations": [
													{
														"constant": false,
														"id": 1237,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "2104:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1280,
														"src": "2087:24:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1235,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2087:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1236,
															"nodeType": "ArrayTypeName",
															"src": "2087:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1241,
																"name": "collectedCardsID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "2128:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint32_$dyn_storage",
																	"typeString": "uint32[] storage ref"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2145:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2128:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2114:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1238,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2118:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1239,
															"nodeType": "ArrayTypeName",
															"src": "2118:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2114:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2087:65:8"
											},
											{
												"body": {
													"id": 1270,
													"nodeType": "Block",
													"src": "2212:84:8",
													"statements": [
														{
															"expression": {
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1256,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "2227:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1258,
																	"indexExpression": {
																		"id": 1257,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1246,
																		"src": "2231:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2227:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1259,
																		"name": "collectedCardsID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1070,
																		"src": "2236:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint32_$dyn_storage",
																			"typeString": "uint32[] storage ref"
																		}
																	},
																	"id": 1261,
																	"indexExpression": {
																		"id": 1260,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1246,
																		"src": "2253:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2236:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "2227:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1263,
															"nodeType": "ExpressionStatement",
															"src": "2227:28:8"
														},
														{
															"expression": {
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1264,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "2270:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1266,
																	"indexExpression": {
																		"id": 1265,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1246,
																		"src": "2278:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2270:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2270:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1269,
															"nodeType": "ExpressionStatement",
															"src": "2270:14:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1249,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "2179:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1250,
															"name": "collectedCardsID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "2183:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_storage",
																"typeString": "uint32[] storage ref"
															}
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2200:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2183:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2179:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1271,
												"initializationExpression": {
													"assignments": [
														1246
													],
													"declarations": [
														{
															"constant": false,
															"id": 1246,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2172:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1271,
															"src": "2167:6:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1245,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2167:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1248,
													"initialValue": {
														"hexValue": "30",
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2176:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2167:10:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2208:3:8",
														"subExpression": {
															"id": 1253,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "2208:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1255,
													"nodeType": "ExpressionStatement",
													"src": "2208:3:8"
												},
												"nodeType": "ForStatement",
												"src": "2163:133:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1275,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "2322:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1276,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "2329:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1277,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "2334:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 1272,
															"name": "myNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2306:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMyNFT_$1048",
																"typeString": "contract IMyNFT"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2312:9:8",
														"memberName": "burnBatch",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1047,
														"src": "2306:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory) external"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2306:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "2306:36:8"
											}
										]
									},
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "1975:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "1989:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1981:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1981:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1980:15:8"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2004:0:8"
									},
									"scope": 1296,
									"src": "1966:384:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "2419:63:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1290,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2468:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Jackpot_$1296",
																		"typeString": "contract Jackpot"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Jackpot_$1296",
																		"typeString": "contract Jackpot"
																	}
																],
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2460:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1288,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2460:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2460:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1286,
															"name": "paymentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "2437:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$799",
																"typeString": "contract ERC20"
															}
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2450:9:8",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 385,
														"src": "2437:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2437:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1285,
												"id": 1293,
												"nodeType": "Return",
												"src": "2430:44:8"
											}
										]
									},
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTotalValue",
									"nameLocation": "2365:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2379:2:8"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2413:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2405:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2405:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2404:15:8"
									},
									"scope": 1296,
									"src": "2356:126:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1297,
							"src": "343:2142:8",
							"usedErrors": [
								13,
								18,
								944,
								946,
								948,
								950,
								952
							],
							"usedEvents": [
								24,
								942
							]
						}
					],
					"src": "33:2452:8"
				},
				"id": 8
			}
		}
	}
}