{
	"compiler": {
		"version": "0.8.23+commit.f704f362"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_initialAdmin",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_register",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_nftContract",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AccessControlBadConfirmation",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "neededRole",
						"type": "bytes32"
					}
				],
				"name": "AccessControlUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"name": "DrawableNotEnough",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"name": "DrawingPoolExisted",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"name": "DrwaingPoolNotExist",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "EmptyIDs",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "HasRoleAlready",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "InvalidIndex",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "LengthNotMatch",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NoPendingRequest",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "RequestAlreadyFulfilled",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "RequestNotExist",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "RequestNotFulfilled",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "TokenExisted",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "TokenNotExist",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"name": "UnitPoolExisted",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"name": "UnitPoolNotExist",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroAmount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "requester",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					}
				],
				"name": "RequestCompleted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "randomWords",
						"type": "uint256[]"
					}
				],
				"name": "RequestFulfilled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_requester",
						"type": "address"
					}
				],
				"name": "RequestSent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "previousAdminRole",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "newAdminRole",
						"type": "bytes32"
					}
				],
				"name": "RoleAdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleRevoked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "drawingPoolID",
						"type": "uint32"
					}
				],
				"name": "SetDrawingPool",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint32[]",
						"name": "maxAmounts",
						"type": "uint32[]"
					}
				],
				"name": "SetTokenMaxAmount",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					}
				],
				"name": "SetTokenPool",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "unitPoolID",
						"type": "uint32"
					}
				],
				"name": "SetUnitPool",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DEFAULT_ADMIN_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MANAGER_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"name": "drawingPoolsInfo",
				"outputs": [
					{
						"internalType": "bool",
						"name": "enable",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "execRequestBatch",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "existedDrawing",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "existedUnit",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_requestId",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "_randomWords",
						"type": "uint256[]"
					}
				],
				"name": "fulfillRandomWords",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getExistedDrawingPool",
				"outputs": [
					{
						"internalType": "uint32[]",
						"name": "drawingPools",
						"type": "uint32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getExistedUnitPool",
				"outputs": [
					{
						"internalType": "uint32[]",
						"name": "unitPools",
						"type": "uint32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLastRequestId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_poolID",
						"type": "uint32"
					}
				],
				"name": "getPoolInfo",
				"outputs": [
					{
						"internalType": "uint32[]",
						"name": "unitPools",
						"type": "uint32[]"
					},
					{
						"internalType": "uint32[]",
						"name": "probs",
						"type": "uint32[]"
					},
					{
						"internalType": "uint32[]",
						"name": "accumulatedProbs",
						"type": "uint32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_requestId",
						"type": "uint256"
					}
				],
				"name": "getRequestInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "exists",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "fulfilled",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "completed",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "requestSender",
								"type": "address"
							},
							{
								"internalType": "uint32[]",
								"name": "poolsID",
								"type": "uint32[]"
							},
							{
								"internalType": "uint32[]",
								"name": "amounts",
								"type": "uint32[]"
							},
							{
								"internalType": "uint256[]",
								"name": "randomWords",
								"type": "uint256[]"
							}
						],
						"internalType": "struct IHierarchicalDrawing.RequestInfo",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getReuqestQueue",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "queue",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					}
				],
				"name": "getRoleAdmin",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "getTokenInfo",
				"outputs": [
					{
						"internalType": "bool",
						"name": "existed",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "maxAmount",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "remaining",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTokenMaxAmounts",
				"outputs": [
					{
						"internalType": "uint32[]",
						"name": "",
						"type": "uint32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTokenPoolInfo",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTokenRemainings",
				"outputs": [
					{
						"internalType": "uint32[]",
						"name": "",
						"type": "uint32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_unitID",
						"type": "uint32"
					}
				],
				"name": "getUnitPoolInfo",
				"outputs": [
					{
						"internalType": "uint32[]",
						"name": "probs",
						"type": "uint32[]"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "nums",
								"type": "uint256"
							},
							{
								"internalType": "uint256[]",
								"name": "result",
								"type": "uint256[]"
							}
						],
						"internalType": "struct PackedArray.PackedArray32",
						"name": "tree",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "grantRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "hasRole",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "ids",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "maxAmounts",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nftContract",
				"outputs": [
					{
						"internalType": "contract IMyNFT",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pendingRequestNum",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "pending",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "register",
				"outputs": [
					{
						"internalType": "contract Register",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "remainings",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "callerConfirmation",
						"type": "address"
					}
				],
				"name": "renounceRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "requestNonce",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "requestsInfo",
				"outputs": [
					{
						"internalType": "bool",
						"name": "exists",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "fulfilled",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "completed",
						"type": "bool"
					},
					{
						"internalType": "address",
						"name": "requestSender",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "requestsQueue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "revokeRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "uint32[]",
						"name": "_poolsID",
						"type": "uint32[]"
					},
					{
						"internalType": "uint32[]",
						"name": "_drawAmounts",
						"type": "uint32[]"
					}
				],
				"name": "sendRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_poolID",
						"type": "uint32"
					},
					{
						"internalType": "uint32[]",
						"name": "_unitIDs",
						"type": "uint32[]"
					},
					{
						"internalType": "uint32[]",
						"name": "_probs",
						"type": "uint32[]"
					}
				],
				"name": "setDrawingPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32[]",
						"name": "_maxAmounts",
						"type": "uint32[]"
					}
				],
				"name": "setTokenMaxAmount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_ids",
						"type": "uint256[]"
					}
				],
				"name": "setTokenPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_unitID",
						"type": "uint32"
					},
					{
						"internalType": "uint32[]",
						"name": "_probs",
						"type": "uint32[]"
					}
				],
				"name": "setUnitPool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"name": "unitPoolsInfo",
				"outputs": [
					{
						"internalType": "bool",
						"name": "enable",
						"type": "bool"
					},
					{
						"internalType": "uint8",
						"name": "treeHeight",
						"type": "uint8"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "nums",
								"type": "uint256"
							},
							{
								"internalType": "uint256[]",
								"name": "result",
								"type": "uint256[]"
							}
						],
						"internalType": "struct PackedArray.PackedArray32",
						"name": "tree",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "SeekersAlliance",
			"errors": {
				"AccessControlBadConfirmation()": [
					{
						"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
					}
				],
				"AccessControlUnauthorizedAccount(address,bytes32)": [
					{
						"details": "The `account` is missing a role."
					}
				]
			},
			"events": {
				"RoleAdminChanged(bytes32,bytes32,bytes32)": {
					"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
				},
				"RoleGranted(bytes32,address,address)": {
					"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
				},
				"RoleRevoked(bytes32,address,address)": {
					"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
				}
			},
			"kind": "dev",
			"methods": {
				"getRoleAdmin(bytes32)": {
					"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
				},
				"grantRole(bytes32,address)": {
					"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
				},
				"hasRole(bytes32,address)": {
					"details": "Returns `true` if `account` has been granted `role`."
				},
				"renounceRole(bytes32,address)": {
					"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
				},
				"revokeRole(bytes32,address)": {
					"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
				},
				"sendRequest(address,uint32[],uint32[])": {
					"details": "player can call this function to request the draw.",
					"params": {
						"_drawAmounts": "array of the draw amount ",
						"_poolsID": "array of drawing pool IDs"
					}
				},
				"setDrawingPool(uint32,uint32[],uint32[])": {
					"params": {
						"_poolID": "drawing pool ID",
						"_probs": "array of probabilites corresponding to unit pools",
						"_unitIDs": "array of the unit pool IDs"
					}
				},
				"setTokenMaxAmount(uint32[])": {
					"details": "If the amount sets as 2**32-1, it means there is no limit on the quantity, max amount will be 2**256-1.",
					"params": {
						"_maxAmounts": "max amount of token ID"
					}
				},
				"setTokenPool(uint256[])": {
					"details": "Token IDs should not be duplicated.",
					"params": {
						"_ids": "array of token ID"
					}
				},
				"setUnitPool(uint32,uint32[])": {
					"details": "if some tokens should not draw from this unit pool, just set the probability as 0.",
					"params": {
						"_probs": "array of probabilites corresponding to token IDs",
						"_unitID": "uint pool ID"
					}
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				}
			},
			"title": "Hierarchical drawing pools",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getTokenPoolInfo()": {
					"notice": "get user drawable amount"
				},
				"sendRequest(address,uint32[],uint32[])": {
					"notice": "send request"
				},
				"setDrawingPool(uint32,uint32[],uint32[])": {
					"notice": "set drawing poolOnly manager role can call this function"
				},
				"setTokenMaxAmount(uint32[])": {
					"notice": "set token max amountOnly manager role can call this function"
				},
				"setTokenPool(uint256[])": {
					"notice": "set token poolOnly manager role can call this function"
				},
				"setUnitPool(uint32,uint32[])": {
					"notice": "set unit poolOnly manager role can call this function"
				}
			},
			"notice": "This smart contract mitigates the problem of pull rates being dependent on the NFT supply counts,allowing for more freedom in game design while increasing long-term viability.Here we introduce a flexible hierarchical drawing pools architecture built upon the ERC-1155 standard,the game developers can customize pool probabilities according to their game use casesand launch updates and new releases while maintaining constant and fair pull rates.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/HierarchicalDrawing.sol": "HierarchicalDrawing"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/AccessControl.sol": {
			"keccak256": "0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308",
			"license": "MIT",
			"urls": [
				"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80",
				"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z"
			]
		},
		"@openzeppelin/contracts/access/IAccessControl.sol": {
			"keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
			"license": "MIT",
			"urls": [
				"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
				"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
			"license": "MIT",
			"urls": [
				"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
				"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
			"license": "MIT",
			"urls": [
				"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
				"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
			]
		},
		"contracts/HierarchicalDrawing.sol": {
			"keccak256": "0xcf6a1d91df5b9ca0ce91ecf0d36d58d2687fb90a5db0515ca644a1ce08733d66",
			"license": "MIT",
			"urls": [
				"bzz-raw://4a18e4c3528796ec9ba7c33e295372761b15323eadc89e88d154443844cc6fb7",
				"dweb:/ipfs/Qmek7NERQnf5QJYh2tMtHxmQwr7mMH21PbLwr2ALmj7czD"
			]
		},
		"contracts/interfaces/IHierarchicalDrawing.sol": {
			"keccak256": "0x305e4bd9753e34c9296c0f13b45afbd40d793c30f5bcb5b6abdcda1bb748c38c",
			"license": "MIT",
			"urls": [
				"bzz-raw://546f81a34e810eea4a3d80e0e640c8fa81c4b3a2b2d66aae17c292a26e7454fc",
				"dweb:/ipfs/Qmc2SziYqHV4YsWGWZ3KkYKu8qCutXoNBUb1WsRm5pYrup"
			]
		},
		"contracts/interfaces/IMyNFT.sol": {
			"keccak256": "0xc5ffe118e5bdf6e13d43420dbc32d8ef5d287af9e7637c74b398aac13b5fc251",
			"license": "MIT",
			"urls": [
				"bzz-raw://6b30a43196405a2e875aa092af569478ca3ebd65b2a6d67218a3343344957cc9",
				"dweb:/ipfs/Qmb3X6pQoErQuMJvTGN62bKLC7ay2YXY7iiFfmbvJNZsbn"
			]
		},
		"contracts/interfaces/IVRFManager.sol": {
			"keccak256": "0x37cda41be2c2003af70203ac615d3eca517d468d143f4de6f385b8d66d10f8be",
			"license": "MIT",
			"urls": [
				"bzz-raw://8625bfce9c7b8c77a3421de660488ba5083435ff3545c914beae99e8034f1e3d",
				"dweb:/ipfs/QmYHhpkb8qwxZaqEH1AxXM5nZu6UNdWQFKAtxWsixji6mC"
			]
		},
		"contracts/libraries/PackedArray.sol": {
			"keccak256": "0x6efabbb6ace5c0269dcc0cf276ddf1c9f54b311dacc42fb1e9d1f8bc5d883445",
			"license": "MIT",
			"urls": [
				"bzz-raw://aef39a2e4ffce7326d00b8b0478e1b79f1791b51156ea1a4207f04f017347440",
				"dweb:/ipfs/QmNmv3nhLqJbZA9oaMvcf2xP18Rws9mKvvPgq4cAyfBcLN"
			]
		},
		"contracts/libraries/Sorting.sol": {
			"keccak256": "0xe7e22ce1e887cd9ffde4dab0775bd03595261d5ec1942511a2f60f42cf188968",
			"license": "MIT",
			"urls": [
				"bzz-raw://11d063e3b0b510b432e34e7c44bcaffd0855e4d0a9e52783987c951c3400ce19",
				"dweb:/ipfs/QmRc3LpAmQGyJ9si9fC5Xc48Lm5DmhMtwwpwutMMvFPzru"
			]
		},
		"contracts/periphery/Register.sol": {
			"keccak256": "0xc5acce36f5a5a4f525f0e0f7f969d7b3d06d8aea06a2c6a8fdb13445ddcf2871",
			"license": "MIT",
			"urls": [
				"bzz-raw://921d2d569fac5c7f4b15fa6b5b5776449cca15990eaa08daead6025eb20235e1",
				"dweb:/ipfs/Qmb1LcTFiEXfXUQ2WgPkgiYbPnZXwUa9g3JZc3nMVnzSUx"
			]
		}
	},
	"version": 1
}